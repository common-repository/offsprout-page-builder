webpackJsonp([0],{

/***/ 101:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var HelpButton = function (_Component) {
    _inherits(HelpButton, _Component);

    function HelpButton() {
        _classCallCheck(this, HelpButton);

        return _possibleConstructorReturn(this, (HelpButton.__proto__ || Object.getPrototypeOf(HelpButton)).apply(this, arguments));
    }

    _createClass(HelpButton, [{
        key: "render",
        value: function render() {
            return _react2.default.createElement(
                "a",
                { href: "http://pagebuilder.helpscoutdocs.com/", target: "_blank", className: "ocb-circle-ui-btn ocb-save-remove-element offsprout-font" },
                "?"
            );
        }
    }]);

    return HelpButton;
}(_react.Component);

exports.default = HelpButton;

/***/ }),

/***/ 102:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactRedux = __webpack_require__(5);

var _redux = __webpack_require__(7);

var _index = __webpack_require__(8);

var _reactDraggable = __webpack_require__(58);

var _reactDraggable2 = _interopRequireDefault(_reactDraggable);

var _combokeys = __webpack_require__(33);

var _combokeys2 = _interopRequireDefault(_combokeys);

var _settings_helpers = __webpack_require__(2);

var _settings_helpers2 = _interopRequireDefault(_settings_helpers);

var _default_standard = __webpack_require__(16);

var _default_standard2 = _interopRequireDefault(_default_standard);

var _api_helpers = __webpack_require__(6);

var _api_helpers2 = _interopRequireDefault(_api_helpers);

var _tutorials = __webpack_require__(105);

var _tutorials2 = _interopRequireDefault(_tutorials);

var _site_options_render = __webpack_require__(24);

var _site_options_render2 = _interopRequireDefault(_site_options_render);

var _skins_render = __webpack_require__(34);

var _skins_render2 = _interopRequireDefault(_skins_render);

var _app_overlay = __webpack_require__(13);

var _app_overlay2 = _interopRequireDefault(_app_overlay);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ModuleSelector = function (_Component) {
    _inherits(ModuleSelector, _Component);

    function ModuleSelector(props) {
        _classCallCheck(this, ModuleSelector);

        //Check to see if the user can add any module type. If not, don't even show the modules tab
        var _this = _possibleConstructorReturn(this, (ModuleSelector.__proto__ || Object.getPrototypeOf(ModuleSelector)).call(this, props));

        var moduleTypesRendered = [];
        var moduleTypes = _settings_helpers2.default.getModuleRegistry();

        moduleTypes.map(function (type, index) {
            var moduleName = type.name;
            var moduleType = type.type;

            if (OCBGlobalSettings.permissions['add_module_' + moduleType] != undefined && OCBGlobalSettings.permissions['add_module_' + moduleType] == false) {
                return null;
            }

            moduleTypesRendered.push(moduleType);
        });

        _this.state = {
            active: moduleTypesRendered.length ? 'new' : OCBGlobalSettings.permissions.use_object_templates ? 'template' : OCBGlobalSettings.permissions.use_globals ? 'global' : '',
            modulesActive: '',
            moduleSearch: '',
            templateFilter: '',
            templateShow: [],
            templateIndex: null,
            deleteTemplate: null,
            apiRequestKey: '',
            left: 0,
            top: 0,
            adding: false,
            moduleIcon: null,
            currentHover: '',
            showModuleDrag: false,
            globalCSS: null,
            templatesLoaded: false,
            switchTemplateTheme: false,
            moduleTypesRendered: moduleTypesRendered
        };

        _this.moveTimer = false;
        _this.refreshTimer = false;

        _this.startMoveFunction = _this.startMoveFunction.bind(_this);
        return _this;
    }

    _createClass(ModuleSelector, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            this.bubbleIframeMouseMove();

            this.combokeys = new _combokeys2.default(document.documentElement);
            this.combokeysIframe = new _combokeys2.default(document.getElementById('ocb-workspace-iframe').contentWindow);

            //Allows bindGlobal, which makes this work inside of textareas
            __webpack_require__(19)(this.combokeys);
            __webpack_require__(19)(this.combokeysIframe);

            this.combokeys.bind('a', this.openShortcut.bind(this)).bind('t', this.openTemplatesShortcut.bind(this)).bind('g', this.openGlobalsShortcut.bind(this)).bindGlobal(['esc', 'escape'], this.closeShortcut.bind(this));
            this.combokeysIframe.bind('a', this.openShortcut.bind(this)).bind('t', this.openTemplatesShortcut.bind(this)).bind('g', this.openGlobalsShortcut.bind(this)).bindGlobal(['esc', 'escape'], this.closeShortcut.bind(this));
        }

        /**
         * Want to make sure that we remove the event listener when it unmounts,
         * otherwise, the listener gets added to window multiple times and causes multiple setState updates
         */

    }, {
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {
            this.combokeys.detach();
            this.combokeysIframe.detach();
        }
    }, {
        key: 'openShortcut',
        value: function openShortcut() {
            if (!this.state.modulesActive && this.props.appState.overlay == null) {
                this.changeActive();
            }
        }
    }, {
        key: 'openTemplatesShortcut',
        value: function openTemplatesShortcut() {
            if (!this.state.modulesActive && this.props.appState.overlay == null) {
                this.activateTemplates('template');
            }
        }
    }, {
        key: 'openGlobalsShortcut',
        value: function openGlobalsShortcut() {
            if (!this.state.modulesActive && this.props.appState.overlay == null) {
                this.activateTemplates('global');
            }
        }
    }, {
        key: 'closeShortcut',
        value: function closeShortcut() {
            if (this.state.modulesActive) {
                this.changeActive();
            }
        }

        /**
         * Because the workspace is in an iFrame, we have to make the mousemove and mouseup events bubble up from the iframe into the top app
         *
         * https://stackoverflow.com/questions/5645485/detect-mousemove-when-over-an-iframe
         */

    }, {
        key: 'bubbleIframeMouseMove',
        value: function bubbleIframeMouseMove() {
            var iframe = document.getElementById("ocb-workspace-iframe");

            // Save any previous onmousemove handler
            var existingOnMouseMove = iframe.contentWindow.onmousemove;

            // Attach a new onmousemove listener
            iframe.contentWindow.onmousemove = function (e) {

                // Fire any existing onmousemove listener
                if (existingOnMouseMove) existingOnMouseMove(e);

                var boundingClientRect = iframe.getBoundingClientRect();

                var evt = new CustomEvent('mousemove', { bubbles: true, cancellable: false });

                evt.clientX = e.clientX + boundingClientRect.left;
                evt.clientY = e.clientY + boundingClientRect.top;

                iframe.dispatchEvent(evt);
            };

            // Save any previous onmouseup handler
            var existingOnMouseUp = iframe.contentWindow.onmouseup;

            // Attach a new onmousemove listener
            iframe.contentWindow.onmouseup = function (e) {

                // Fire any existing onmousemove listener
                if (existingOnMouseUp) existingOnMouseUp(e);

                var evt = new CustomEvent('mouseup', { bubbles: true, cancellable: false });

                iframe.dispatchEvent(evt);
            };
        }
    }, {
        key: 'changeActive',
        value: function changeActive() {
            var _this2 = this;

            if (this.state.modulesActive == 'active') {
                this.setState({ modulesActive: '', active: this.state.moduleTypesRendered.length ? 'new' : 'template', templateShow: [], moduleSearch: '', templateFilter: '', templatesLoaded: false });
                jQuery('body').removeClass('ocb-freeze-scroll');
            } else {
                this.setState({ modulesActive: 'active' });
                jQuery('body').addClass('ocb-freeze-scroll');
            }
            //Make sure there's time for the state change so we're focusing on display:block, not display:none
            setTimeout(function () {
                _this2.refs.module_filter.focus();
            }, 200);
        }
    }, {
        key: 'changeWhichActive',
        value: function changeWhichActive(which) {
            var _this3 = this;

            this.setState({ active: which, apiRequestKey: '' });
            setTimeout(function () {
                _this3.refs.module_filter.focus();
            }, 200);
        }
    }, {
        key: 'activateTemplates',
        value: function activateTemplates(which) {
            var _this4 = this;

            if (this.state.modulesActive != 'active') {
                this.setState({ modulesActive: 'active', active: which, apiRequestKey: '' });
                jQuery('body').addClass('ocb-freeze-scroll');
                setTimeout(function () {
                    _this4.refs.module_filter.focus();
                }, 200);
            }
        }
    }, {
        key: 'searchModules',
        value: function searchModules(event) {
            this.setState({ moduleSearch: event.target.value });
        }
    }, {
        key: 'startMoveFunction',
        value: function startMoveFunction(e) {
            var _this5 = this;

            var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

            //used to determine if someone is clicking instead of dragging. If they're clicking, show the drag tutorial
            this.moveTimer = true;
            setTimeout(function () {
                return _this5.moveTimer = false;
            }, 200);
            var objectShell = {
                type: 'module',
                id: 'mod' + (Date.now().toString(36) + Math.random().toString(36).substr(2, 9)).toLowerCase(),
                moduleType: type,
                containsItems: _settings_helpers2.default.getModuleRegistryProp(type, 'containsItems'),
                gettingAdded: true,
                standard: {
                    linked: (0, _default_standard2.default)().default
                },
                settings: {
                    linked: _settings_helpers2.default.getModuleRegistryProp(type, 'default').default
                }
            };
            jQuery('body').removeClass('ocb-freeze-scroll');
            this.setState({ adding: true, modulesActive: 'active adding', moduleIcon: jQuery(e.target).closest('.ocb-module-icon') });
            this.props.treeProps.move.moveStart();
            this.props.treeProps.move.moveFrom(objectShell);
        }
    }, {
        key: 'startTemplateMoveFunction',
        value: function startTemplateMoveFunction(e, template, index, global) {
            var newTemplate = JSON.parse(JSON.stringify(template.meta.ocb_tree_content));
            newTemplate.gettingAdded = true;
            newTemplate.template = global == 'yes' ? 'global' : 'template';
            newTemplate.templateId = template.meta.ocb_id;
            newTemplate.containsItems = newTemplate.items != undefined && newTemplate.items.length > 0 ? true : false;
            var idStart = 'mod';
            if (newTemplate.type == 'row') {
                idStart = 'row';
            }
            if (newTemplate.type == 'column') {
                idStart = 'col';
            }

            //if it's a global, don't replace the IDs. If it's not a global, replace the IDs
            if (newTemplate.template != 'global') {
                //Only want template unique for globals
                newTemplate.id = idStart + (Date.now().toString(36) + Math.random().toString(36).substr(2, 9)).toLowerCase();
                delete newTemplate.templateUnique;
            }

            jQuery('body').removeClass('ocb-freeze-scroll');
            this.setState({ adding: true, modulesActive: 'active adding', moduleIcon: jQuery(template.post_content), templateIndex: index });
            this.props.treeProps.move.moveStart();
            this.props.treeProps.move.moveFrom(newTemplate);
        }
    }, {
        key: 'stopMoveFunction',
        value: function stopMoveFunction(e) {
            var _this6 = this;

            var showModuleDrag = false;
            if (this.moveTimer) {
                showModuleDrag = true;
            }
            setTimeout(function () {
                _this6.setState({
                    showModuleDrag: showModuleDrag,
                    adding: false,
                    modulesActive: '',
                    moduleIcon: null,
                    apiRequestKey: '',
                    active: 'new'
                });
            }, 500);
            window.ocbReInitializePlugins();
            this.props.treeProps.move.moveStop();
        }
    }, {
        key: 'stopTemplateMoveFunction',
        value: function stopTemplateMoveFunction(e) {
            var _this7 = this;

            setTimeout(function () {
                _this7.setState({
                    adding: false,
                    modulesActive: '',
                    moduleIcon: null,
                    templateIndex: null,
                    apiRequestKey: '',
                    active: 'new'
                });
            }, 500);
            window.ocbReInitializePlugins();
            this.props.treeProps.move.moveStop();
        }
    }, {
        key: 'maybeDeleteTemplate',
        value: function maybeDeleteTemplate(theTemplate) {
            var message = 'This cannot be undone!';

            if (theTemplate.taxonomies.ocb_template_global == 'yes') {
                message = 'Deleting a Global will break any instances where it is used across your site. This cannot be undone!';
            }

            var r = confirm(message);

            if (r == true) {
                this.deleteTemplate(theTemplate);
            } else {
                this.setState({ deleteTemplate: null });
            }
        }
    }, {
        key: 'deleteTemplate',
        value: function deleteTemplate(theTemplate) {
            _api_helpers2.default.doRequest('deleteCustom', { post_id: theTemplate.ID });
            var templates = this.state.templateShow;
            templates = templates.filter(function (template) {
                return template.ID != theTemplate.ID;
            });
            this.setState({ templateShow: templates, deleteTemplate: null });
        }
    }, {
        key: 'renderNew',
        value: function renderNew(moduleTypes) {
            var _this8 = this;

            jQuery('.ocb-admin-button-load').find('.fa-spinner').remove();
            return moduleTypes.map(function (type, index) {
                var moduleName = type.name;
                var moduleType = type.type;

                if (OCBGlobalSettings.permissions['add_module_' + moduleType] != undefined && OCBGlobalSettings.permissions['add_module_' + moduleType] == false) {
                    return null;
                }

                if (type.requiredPlugin != undefined && Object.values(OCBGlobalSettings.activePlugins).indexOf(type.requiredPlugin) == -1) {
                    return null;
                }

                /*if( type.tier != undefined ){
                    if( type.tier == 2 && ! OCBGlobalSettings.permissions.add_tier_2_modules ){
                        return null
                    }
                    if( type.tier == 3 && ! OCBGlobalSettings.permissions.add_tier_3_modules ){
                        return null
                    }
                }*/

                if (type.required_post_type != undefined) {
                    if (_typeof(type.required_post_type) == 'object') {
                        if (!type.required_post_type.includes(OCBGlobalSettings.postType)) return null;
                    } else {
                        if (OCBGlobalSettings.postType != type.required_post_type) return null;
                    }
                }

                var moduleHover = _this8.state.currentHover == moduleType ? 'ocb-module-icon-hover' : _this8.state.currentHover ? 'ocb-module-selector-fade-opacity' : '';

                return _react2.default.createElement(
                    _reactDraggable2.default,
                    {
                        key: index,
                        position: { x: _this8.state.left, y: _this8.state.top },
                        onStart: function onStart(e) {
                            return _this8.startMoveFunction(e, moduleType);
                        },
                        onStop: _this8.stopMoveFunction.bind(_this8) },
                    _react2.default.createElement(
                        'div',
                        { className: 'ocb-module-icon ' + moduleHover,
                            onMouseEnter: function onMouseEnter() {
                                return _this8.setState({ currentHover: moduleType });
                            },
                            onMouseLeave: function onMouseLeave() {
                                return _this8.setState({ currentHover: '' });
                            } },
                        _react2.default.createElement(
                            'span',
                            { className: 'ocb-module-icon-wrap' },
                            _react2.default.createElement(
                                'span',
                                { className: 'd-block ocb-tooltip-wrap', href: '#' },
                                _react2.default.createElement(
                                    'span',
                                    { className: window.OffsproutEffect + ' ocb-tooltip ocb-tooltip-top' },
                                    'Drag to Place'
                                ),
                                _react2.default.createElement('span', { className: 'd-block ocb-module-icon-icon', dangerouslySetInnerHTML: { __html: type.icon } }),
                                _react2.default.createElement(
                                    'span',
                                    { className: 'd-block ocb-module-icon-name' },
                                    moduleName
                                )
                            )
                        )
                    )
                );
            });
        }
    }, {
        key: 'templateHasRequirements',
        value: function templateHasRequirements(template) {
            var hasRequirements = false;
            var theRequirements = [];
            var requirements = null;

            if (template.meta != undefined && template.meta.ocb_template_requirements != undefined && template.meta.ocb_template_requirements.length) {
                template.meta.ocb_template_requirements.forEach(function (requirement) {
                    var requiredPermission = requirement.permission != undefined ? requirement.permission : 'has_pro';

                    if (OCBGlobalSettings.permissions[requiredPermission] != undefined && !OCBGlobalSettings.permissions[requiredPermission]) {
                        hasRequirements = true;
                        theRequirements = theRequirements.concat(requirement);
                    }
                });
            }

            if (hasRequirements) {
                requirements = theRequirements.map(function (requirement, index) {
                    return _react2.default.createElement(
                        'a',
                        { key: index, className: 'ocb-template-item-requirement', href: requirement.url, target: '_blank' },
                        requirement.name
                    );
                });
                requirements = _react2.default.createElement(
                    'span',
                    { className: 'ocb-template-item-requirements' },
                    'Requires: ',
                    requirements
                );
            }

            return { hasRequirements: hasRequirements, requirements: requirements };
        }
    }, {
        key: 'getTemplates',
        value: function getTemplates() {
            var _this9 = this;

            var templateCache = parent.OffsproutCache.template_cache_object;

            //Get templates in chunks unless max template_memory is set
            if (templateCache == undefined) {

                _settings_helpers2.default.getAllTemplatesSkins('template').then(function (result) {
                    _this9.setState({ templateShow: result[0], templatesLoaded: true });

                    //Update site skins
                    if (result[1] != undefined && Object.keys(result[1]).length) {
                        //Prepend the name of the skins with the name of the template
                        var renamedSkins = _settings_helpers2.default.getRenamedTemplateSkins(result[1]);
                        _this9.props.importSkins(result[1]);
                    }

                    jQuery('.ocb-admin-button-load').find('.fa-spinner').remove();
                }).catch(function (error) {
                    console.log('Could not get templates', error);
                    _this9.unableToGetTemplates();
                    jQuery('.ocb-admin-button-load').find('.fa-spinner').remove();
                });
            } else {

                this.setState({ templateShow: templateCache });
                jQuery('.ocb-admin-button-load').find('.fa-spinner').remove();
            }
        }

        /**
         * Get templates in batches rather than all at once to use less memory
         *
         * Because of the way this is implemented it is possible that it could retrieve a mix of cached and fresh remote templates
         * SettingsHelpers.getTemplateChunks knows whether it's getting cached templates, but doesn't pass that info back to this function
         * And it's this function that keeps telling SettingsHelpers to get stuff
         *
         * @param location
         * @param number
         * @param chunk
         */
        /*getTemplateChunks( location = 0, number = 20, chunk = 1 ){
             let offset = ( chunk - 1 ) * number;
            let templates = SettingsHelpers.getTemplateChunks( 'template', location, { number, offset, chunk });
             if( templates != false ) {
                 templates.then((response) => {
                     //If there are templates add them to the templates in state and then keep trying to retrieve more
                    if ( response.length && chunk < 20 ) {
                         let newTemplates = this.state.templateShow.concat(response);
                         parent.OffsproutCache.template_cache_object = newTemplates;
                         this.setState({templateShow: newTemplates, templatesLoaded: true});
                         if( response.length != number ){
                            location++;
                             //If we're going to the next location, make sure to reset chunk to 1
                            chunk = 1;
                        } else {
                            chunk++;
                        }
                         this.getTemplateChunks(location, number, chunk);
                     //If there are no templates, go to the next location up to location 3, which does not exist
                    } else {
                         if (location < 3) {
                            this.getTemplateChunks(( location + 1 ), number, 1);
                        }
                     }
                 }).catch((error) => {
                     //If there was an error or are no templates, go to the next location up to location 3, which does not exist
                    if (location < 3) {
                        this.getTemplateChunks(( location + 1 ), number, 1);
                    } else {
                        jQuery('.ocb-admin-button-load').find('.fa-spinner').remove();
                    }
                 })
             } else {
                jQuery('.ocb-admin-button-load').find('.fa-spinner').remove();
            }
             window.ocbReInitializePlugins( true );
            window.ocbInitLazy( true );
         }*/

    }, {
        key: 'unableToGetTemplates',
        value: function unableToGetTemplates() {
            var _this10 = this;

            var overlay = _react2.default.createElement(_app_overlay2.default, {
                title: 'Error',
                icon: 'warning',
                stacked: '1',
                content: 'Unable to retrieve any templates. You may have to decrease your memory settings in Site Settings.',
                overlayStyle: 'small',
                options: [{
                    classes: '',
                    onClick: function onClick() {
                        return _this10.props.updateAppState('overlay', null);
                    },
                    text: 'Okay'
                }]
            });
            this.props.updateAppState('overlay', overlay);
        }
    }, {
        key: 'renderTemplates',
        value: function renderTemplates(moduleTypes) {
            var _this11 = this;

            var global = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'no';

            moduleTypes.unshift({ name: 'MODULE', type: 'module', labelType: 'object' });
            moduleTypes.unshift({ name: 'COLUMN', type: 'column', labelType: 'object' });
            moduleTypes.unshift({ name: 'ROW', type: 'row', labelType: 'object' });
            moduleTypes.unshift({ name: 'ALL', type: '', labelType: 'object' });

            var filters = null;
            var showTemplates = null;

            //console.log('renderTemplates', this.state);

            /*let payloadOptions = {
                type: this.state.templateFilter == 'row' || this.state.templateFilter == 'column' ? this.state.templateFilter : ( this.state.templateFilter ? 'module' : '' ),
                moduleType: this.state.templateFilter != 'row' && this.state.templateFilter != 'column' && this.state.templateFilter != 'module' ? this.state.templateFilter : '',
                global: global
            };
             const apiRequestKey = payloadOptions.type + payloadOptions.moduleType + payloadOptions.global;*/

            if (!this.state.templatesLoaded && (!this.state.templateShow || !this.state.templateShow.length)) {
                /*const templates = OAPI.doRequest('getCustom', {
                    post_type: 'ocb_template',
                    withMeta: [
                        'ocb_tree_content',
                        'ocb_object_css',
                        'ocb_id'
                    ],
                    withTaxonomies: [
                        'ocb_template_global',
                        'ocb_template_type',
                        'ocb_template_module_type',
                        'ocb_template_folder'
                    ]
                });*/

                this.getTemplates();
            } else {
                var uniqueFolders = this.state.templateShow.reduce(function (accumulator, current) {
                    if (current.taxonomies.ocb_template_global != global) {
                        return accumulator;
                    }

                    var folder = current.taxonomies != undefined && current.taxonomies.ocb_template_folder != undefined ? current.taxonomies.ocb_template_folder : 'No Folder';

                    if (!accumulator.includes(folder)) {
                        accumulator.push(folder);
                    }

                    return accumulator;
                }, []);
                filters = uniqueFolders.map(function (type, index) {
                    var active = _this11.state.templateFilter == type ? 'active' : '';

                    return _react2.default.createElement(
                        'div',
                        { key: index, className: 'ocb-module-filter ' + active, onClick: function onClick() {
                                return _this11.setState({ templateFilter: type });
                            } },
                        type
                    );
                });
            }

            //Get a bunch of templates and then filter the templates here, rather than through the API
            var numTemplates = 0;
            var templatesToShow = this.state.templateShow.filter(function (template) {
                if (template.taxonomies.ocb_template_global != global) {
                    return false;
                }

                //filter templates through search
                if (_this11.state.moduleSearch && !template.post_title.toLowerCase().includes(_this11.state.moduleSearch.toLowerCase())) {
                    return false;
                }

                if (_this11.state.templateFilter) {
                    if (template.taxonomies != undefined && template.taxonomies.ocb_template_folder != undefined && _this11.state.templateFilter != template.taxonomies.ocb_template_folder || (template.taxonomies == undefined || template.taxonomies.ocb_template_folder == undefined) && _this11.state.templateFilter != 'No Folder') {
                        return false;
                    }

                    return true;
                } else {
                    //If the filter isn't set, show the first 5
                    if (numTemplates < 5) {
                        numTemplates++;
                        return true;
                    }
                }

                return false;
            });

            window.ocbInitializePlugins();
            window.ocbInitLazy(true);

            if (templatesToShow.length) {
                showTemplates = templatesToShow.map(function (template, index) {
                    var theModuleType = null;
                    var activeTemplate = '';

                    if (template.meta.ocb_tree_content != undefined && template.meta.ocb_tree_content.moduleType != undefined) {
                        theModuleType = _react2.default.createElement(
                            'span',
                            { className: 'badge badge-pill badge-default ml-2' },
                            template.meta.ocb_tree_content.moduleType.replace('_', ' ')
                        );
                    }

                    if (_this11.state.templateIndex === index) {
                        activeTemplate = 'active';
                    }

                    if (template.meta.ocb_tree_content.template == 'global') {
                        template.meta.ocb_tree_content.templateUnique = template.meta.ocb_tree_content.type + (Date.now().toString(36) + Math.random().toString(36).substr(2, 9)).toLowerCase();
                    }

                    var width = 'ocb-width-full';

                    if (template.meta.ocb_tree_content.type == 'row') {
                        width = 'ocb-width-full';
                    }

                    var deleteButton = null;

                    if (OCBGlobalSettings.permissions.delete_templates && template.remote_template != true) {
                        deleteButton = _react2.default.createElement(
                            'div',
                            { className: 'ocb-template-option-icon ocb-template-option-delete ml-auto', onClick: function onClick() {
                                    return _this11.maybeDeleteTemplate(template);
                                } },
                            _react2.default.createElement('i', { className: 'fa fa-trash' })
                        );
                    }

                    var idPiece = template.meta.ocb_tree_content.type + '-' + template.meta.ocb_tree_content.id;
                    //let idFull = `global-${idPiece}`;
                    var idFull = '' + idPiece;

                    //because the CSS contains [id] > .ocb-module-inner and this is displayed as global-[id] > div > .ocb-module-inner
                    //let css = template.meta.ocb_object_css.replaceAll(idPiece, idFull);
                    //css = css.replaceAll(`${idFull} > `, `${idFull} > div > `);

                    //make sure that the CSS of one template does not affect the CSS of another template with the same object IDs by prepending with item index class
                    var css = template.meta.ocb_object_css.replace(/#[a-z0-9-]{7,}/g, function (a) {
                        return '.ocb-template-option-' + index + ' ' + a;
                    });
                    css = css.replaceAll(idFull + ' > ', idFull + ' > div > ');

                    var extraObjectClass = '';
                    var treeObject = template.meta.ocb_tree_content;

                    //refer to the Object Component to see what classes should be added to the top level div (ocb-row, ocb-column, ocb-module)
                    //console.log('treeObject', treeObject);
                    switch (treeObject.type) {
                        case 'row':
                            if (treeObject.standard != undefined && treeObject.standard.linked != undefined && treeObject.standard.linked.row_display_type != undefined && treeObject.standard.linked.row_display_type.choice != undefined) {
                                if (treeObject.standard.linked.row_display_type.choice == 'hero') {
                                    extraObjectClass += ' ocb-row-hero';
                                }
                                if (treeObject.standard.linked.constrain_background != undefined && treeObject.standard.linked.constrain_background.yes) {
                                    extraObjectClass += ' ocb-constrained-background';
                                }
                            }
                            break;
                        case 'column':
                            if (treeObject.verticalAlign != undefined) {
                                extraObjectClass += ' ocb-column-vertical-' + treeObject.verticalAlign;
                            }
                            break;
                        case 'module':
                            break;
                    }

                    if (treeObject.skinId) {
                        extraObjectClass += ' ' + treeObject.skinId;
                    }

                    //See if there are requirements and if there are, if they're met
                    var requirements = _this11.templateHasRequirements(template);
                    var theRequirement = null;
                    var moveTemplate = _react2.default.createElement('div', { className: 'ocb-template-option-move' });

                    if (requirements.hasRequirements) {
                        moveTemplate = _react2.default.createElement('div', { className: 'ocb-template-option-cancel' });
                    }

                    //This is the actual template
                    var templateOption = _react2.default.createElement(
                        'div',
                        { className: 'ocb-template-option-item' },
                        _react2.default.createElement(
                            'div',
                            {
                                id: idFull,
                                className: 'ocb-object ocb-' + template.meta.ocb_tree_content.type },
                            _react2.default.createElement('div', { className: 'ocb-' + template.meta.ocb_tree_content.type + ' ' + extraObjectClass, dangerouslySetInnerHTML: { __html: template.post_content_shortcode } }),
                            moveTemplate
                        )
                    );

                    if (requirements.hasRequirements) {
                        theRequirement = requirements.requirements;
                    } else {
                        //if requirements are met, make it draggable so that it can be added
                        templateOption = _react2.default.createElement(
                            _reactDraggable2.default,
                            {
                                handle: '.ocb-template-option-move',
                                position: { x: _this11.state.left, y: _this11.state.top },
                                onStart: function onStart(e) {
                                    return _this11.startTemplateMoveFunction(e, template, index, global);
                                },
                                onStop: _this11.stopTemplateMoveFunction.bind(_this11)
                            },
                            templateOption
                        );
                    }

                    return _react2.default.createElement(
                        'div',
                        { key: index, className: 'ocb-template-option ocb-template-option-' + index + ' ' + width + ' ' + activeTemplate },
                        _react2.default.createElement(
                            'div',
                            { className: 'ocb-template-option-controls offsprout-font d-flex align-items-center justify-content-center' },
                            _react2.default.createElement(
                                'div',
                                { className: 'ocb-template-option-title' },
                                _react2.default.createElement(
                                    'strong',
                                    null,
                                    template.post_title
                                ),
                                _react2.default.createElement(
                                    'span',
                                    { className: 'badge badge-pill badge-default ml-2' },
                                    template.meta.ocb_tree_content.type
                                ),
                                theModuleType,
                                theRequirement
                            ),
                            deleteButton
                        ),
                        _react2.default.createElement(
                            'div',
                            { className: 'ocb-template-option-inner' },
                            _react2.default.createElement('style', { dangerouslySetInnerHTML: { __html: css } }),
                            _react2.default.createElement(
                                'div',
                                { className: 'ocb-template-option-item-wrap d-flex align-items-center' },
                                templateOption
                            )
                        )
                    );
                });
            } else {
                if (this.state.templatesLoaded) {
                    showTemplates = _react2.default.createElement(
                        'div',
                        { className: 'p-4 white-color' },
                        'There are no templates to show'
                    );
                } else {
                    showTemplates = _react2.default.createElement(
                        'div',
                        { className: 'p-4 white-color' },
                        'Searching for templates...'
                    );
                }
            }

            var changeTheme = null;

            if (global == 'no' && OCBGlobalSettings.remoteTemplates[0] != undefined && OCBGlobalSettings.remoteTemplates[0].includes('t.offsprout.com')) {
                changeTheme = _react2.default.createElement(
                    'div',
                    { className: 'ocb-module-theme', onClick: function onClick() {
                            return _this11.openThemes();
                        } },
                    'Change Template Theme'
                );
            }

            return _react2.default.createElement(
                'div',
                { className: 'ocb-module-selector-row' },
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-module-selector-screen-sidenav offsprout-font' },
                    changeTheme,
                    filters
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-module-selector-screen-selector' },
                    showTemplates
                )
            );
        }
    }, {
        key: 'openThemes',
        value: function openThemes() {
            var overlayOptions = [{
                classes: 'ocb-danger',
                onClick: this.backToTemplates.bind(this),
                text: 'Cancel'
            }];

            var message = 'Choose the theme to use';

            var overlay = _react2.default.createElement(_app_overlay2.default, {
                title: message,
                overlayStyle: 'theme',
                config: { cancelFunction: this.backToTemplates.bind(this) },
                options: overlayOptions,
                useFunction: null
            });
            this.setState({ switchTemplateTheme: true });
            this.props.updateAppState('overlay', overlay);
        }
    }, {
        key: 'backToTemplates',
        value: function backToTemplates() {
            delete parent.OffsproutCache.template_cache_object;
            this.setState({ switchTemplateTheme: false, templatesLoaded: false, templateShow: [] });
        }
    }, {
        key: 'renderGlobals',
        value: function renderGlobals(moduleTypes) {
            jQuery('.ocb-admin-button-load').find('.fa-spinner').remove();
            return this.renderTemplates(moduleTypes, 'yes');
        }
    }, {
        key: 'componentDidUpdate',
        value: function componentDidUpdate(prevProps, prevState) {
            var _this12 = this;

            if (this.state.showModuleDrag) {
                setTimeout(function () {
                    return _this12.setState({ showModuleDrag: false });
                }, 1000);
            }

            //Remove the theme overlay after backToTemplates()
            if (this.state.switchTemplateTheme != prevState.switchTemplateTheme && !this.state.switchTemplateTheme) {
                this.props.updateAppState('overlay', null);
            }
        }
    }, {
        key: 'render',
        value: function render() {
            var _this13 = this;

            if (this.state.switchTemplateTheme) return null;

            var moduleTypes = _settings_helpers2.default.getModuleRegistry();

            moduleTypes = moduleTypes.filter(function (type) {
                if (type.name.toLowerCase().includes(_this13.state.moduleSearch.toLowerCase()) || _this13.state.moduleSearch == false) {
                    return type;
                }
            });

            var modulesWrapClass = 'ocb-module-selector-group ' + this.state.modulesActive;
            var modulesButtonClass = 'ocb-module-selector-btn ' + this.state.modulesActive;
            var blanketClassName = 'ocb-ui-blanket ' + this.state.modulesActive;

            var newActive = this.state.active == 'new' ? 'active' : '';
            var templateActive = this.state.active == 'template' ? 'active' : '';
            var globalActive = this.state.active == 'global' ? 'active' : '';
            var pageTemplateActive = this.state.active == 'pageTemplate' ? 'active' : '';
            var selector = null;

            if (this.state.active == 'new') {
                selector = _react2.default.createElement(
                    'div',
                    { className: 'ocb-module-selector-screen ocb-module-selector-new' },
                    this.renderNew(moduleTypes)
                );
            } else if (this.state.active == 'template') {
                selector = _react2.default.createElement(
                    'div',
                    { className: 'ocb-module-selector-screen ocb-module-selector-template' },
                    this.renderTemplates(moduleTypes)
                );
            } else if (this.state.active == 'global') {
                selector = _react2.default.createElement(
                    'div',
                    { className: 'ocb-module-selector-screen ocb-module-selector-global' },
                    this.renderGlobals(moduleTypes)
                );
            }

            var keyboardIcon = _react2.default.createElement('i', { className: 'fa fa-keyboard-o' });
            var plusTooltip = _react2.default.createElement(
                'span',
                { className: window.OffsproutEffect + ' ocb-tooltip ocb-tooltip-top' },
                'Click to Add (A)'
            );

            var tutorials = null;
            if (this.state.modulesActive == 'active') {
                plusTooltip = null;
                tutorials = _react2.default.createElement(_tutorials2.default, { tutorials: ['add_modules_drag', 'add_modules_column'] });
            }

            if (this.state.showModuleDrag) {
                tutorials = _react2.default.createElement(_tutorials2.default, { tutorials: ['add_modules_drag'], force: true });
            }

            var templatesTab = null;
            var globalsTab = null;
            var pageTemplatesTab = null;
            var modulesTab = null;

            if (this.state.moduleTypesRendered.length) {
                modulesTab = _react2.default.createElement(
                    'div',
                    { className: 'ocb-module-selector-tab ocb-module-selector-new-button ' + newActive,
                        onClick: function onClick() {
                            return _this13.changeWhichActive('new');
                        } },
                    'Add New Module (A)'
                );
            }
            if (OCBGlobalSettings.permissions.use_object_templates) {
                templatesTab = _react2.default.createElement(
                    'div',
                    { className: 'ocb-module-selector-tab ocb-module-selector-template-button ocb-admin-button-load ' + templateActive,
                        onClick: function onClick() {
                            return _this13.changeWhichActive('template');
                        } },
                    'Add Template (T)'
                );
            }
            if (OCBGlobalSettings.permissions.use_globals) {
                globalsTab = _react2.default.createElement(
                    'div',
                    { className: 'ocb-module-selector-tab ocb-module-selector-global-button ' + globalActive,
                        onClick: function onClick() {
                            return _this13.changeWhichActive('global');
                        } },
                    'Add Global (G)'
                );
            }
            var screenFade = '';

            if (this.state.currentHover) {
                screenFade = 'ocb-module-selector-fade-opacity';
            }

            if (this.state.active != 'new') {
                window.ocbReInitializePlugins(true);
                window.ocbInitLazy(true);
            }

            //Need SiteOptionsRender and SkinsRender because this is created outside of the iframe, where the CSS for those exists
            return _react2.default.createElement(
                'div',
                { className: modulesWrapClass },
                _react2.default.createElement(_site_options_render2.default, null),
                _react2.default.createElement(_skins_render2.default, { templatePreview: '1' }),
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-module-selector-tab-nav offsprout-font' },
                    modulesTab,
                    templatesTab,
                    globalsTab
                ),
                selector,
                _react2.default.createElement(
                    'span',
                    { href: '#', className: 'ocb-tooltip-wrap ' + modulesButtonClass, onClick: this.changeActive.bind(this) },
                    plusTooltip,
                    '+'
                ),
                _react2.default.createElement('div', { className: 'ocb-ui-blanket ' + screenFade }),
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-ui-search offsprout-font' },
                    _react2.default.createElement('input', { ref: 'module_filter', placeholder: 'Search...', type: 'text', className: 'ocb-ui-search-input', onChange: this.searchModules.bind(this) })
                ),
                this.state.deleteTemplate,
                tutorials
            );
        }
    }]);

    return ModuleSelector;
}(_react.Component);

function mapDispatchToProps(dispatch) {
    return (0, _redux.bindActionCreators)({ updateAppState: _index.updateAppState, importSkins: _index.importSkins }, dispatch);
}

function mapStateToProps(state) {
    //will show up as props inside of App
    return {
        workspaceState: state.workspaceState,
        appState: state.appState,
        menuState: state.menuState,
        moveState: state.moveState,
        inlineEditState: state.inlineEditState,
        templateGlobals: state.templateGlobals
    };
}

exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(ModuleSelector);

/***/ }),

/***/ 103:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _app_overlay = __webpack_require__(13);

var _app_overlay2 = _interopRequireDefault(_app_overlay);

var _combokeys = __webpack_require__(33);

var _combokeys2 = _interopRequireDefault(_combokeys);

var _settings_helpers = __webpack_require__(2);

var _settings_helpers2 = _interopRequireDefault(_settings_helpers);

var _reactRedux = __webpack_require__(5);

var _api_helpers = __webpack_require__(6);

var _api_helpers2 = _interopRequireDefault(_api_helpers);

var _index = __webpack_require__(8);

var _redux = __webpack_require__(7);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * Shows a save template dialog using AppOverlay
 */
var SaveTemplate = function (_Component) {
    _inherits(SaveTemplate, _Component);

    function SaveTemplate(props) {
        _classCallCheck(this, SaveTemplate);

        var _this = _possibleConstructorReturn(this, (SaveTemplate.__proto__ || Object.getPrototypeOf(SaveTemplate)).call(this, props));

        _this.state = {
            templates: [],
            templateFolder: '',
            templateFolders: [],
            templateFolderInput: 'select',
            templateTheme: '',
            templateThemes: [],
            templateThemeInput: 'select',
            templateIndustry: '',
            templateIndustries: [],
            templateIndustryInput: 'select',
            templateName: '',
            templateNameInput: 'new',
            templateObject: false,
            templateGlobal: 0
        };
        return _this;
    }

    _createClass(SaveTemplate, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _this2 = this;

            var postType = this.props.type == 'tree' ? 'ocb_tree_template' : 'ocb_template';

            //Get the templates
            var templates = _api_helpers2.default.doRequest('getCustom', {
                post_type: postType,
                withTaxonomies: ['ocb_template_folder', 'ocb_template_global', 'ocb_template_industry', 'ocb_template_theme'],
                pluck: ['post_title', 'taxonomies', 'ID']
            });

            templates.then(function (results, error) {
                //console.log('gettemplates', results);
                var templateFolders = results.reduce(function (accumulator, currentValue) {
                    var folder = currentValue.taxonomies != undefined && currentValue.taxonomies.ocb_template_folder != undefined ? currentValue.taxonomies.ocb_template_folder : 'No Folder';

                    if (!accumulator.includes(folder)) {
                        accumulator.push(folder);
                    }

                    return accumulator;
                }, []);

                var templateIndustries = results.reduce(function (accumulator, currentValue) {
                    var industry = currentValue.taxonomies != undefined && currentValue.taxonomies.ocb_template_industry != undefined ? currentValue.taxonomies.ocb_template_industry : 'Generic';

                    if (!accumulator.includes(industry)) {
                        accumulator.push(industry);
                    }

                    return accumulator;
                }, []);

                var templateThemes = results.reduce(function (accumulator, currentValue) {
                    var theme = currentValue.taxonomies != undefined && currentValue.taxonomies.ocb_template_theme != undefined ? currentValue.taxonomies.ocb_template_theme : 'Generic';

                    if (!accumulator.includes(theme)) {
                        accumulator.push(theme);
                    }

                    return accumulator;
                }, []);

                //console.log('templates', {templates: results, templateFolders: templateFolders});

                _this2.setState({ templates: results, templateFolders: templateFolders, templateIndustries: templateIndustries, templateThemes: templateThemes });
            });

            this.keyboardShortcuts();

            //Show the save prompt without the folders and existing names first
            this.saveTemplatePrompt();
        }

        /**
         * Removes the overlay and notifies the parent that the save is done
         */

    }, {
        key: 'notifyTreeSaveDone',
        value: function notifyTreeSaveDone() {
            var _this3 = this;

            this.props.updateAppState('overlay', null);

            //make sure we wait until overlay state is updated
            setTimeout(function () {
                _this3.props.done();
            }, 100);
        }
    }, {
        key: 'cancelSave',
        value: function cancelSave() {
            this.notifyTreeSaveDone();
        }
    }, {
        key: 'doSave',
        value: function doSave() {
            switch (this.props.type) {
                case 'object':
                    this.doSaveTemplate();
                    break;
                case 'tree':
                    this.doSaveTreeTemplate();
                    break;
            }

            delete parent.OffsproutCache.template_cache_object;
        }

        /*doSaveTemplate(){
            let title = this.state.templateName ? this.state.templateName : 'Untitled';
            let folder = this.state.templateFolder ? this.state.templateFolder : 'No Folder';
            let templateGlobal = this.state.templateGlobal == 1 ? 'global' : 'template';
            let theme = this.state.templateTheme ? this.state.templateTheme : 'Generic';
            let industry = this.state.templateIndustry ? this.state.templateIndustry : 'Generic';
            //console.log('saving template', { title, folder, templateGlobal });
             //Make sure the object in the tree is updated with global/template
            this.props.updateObjectProperty(this.props.templateObject, {template: templateGlobal});
             //Make sure the object being saved as a template/global has the right designation
            let objectCopy = JSON.parse(JSON.stringify(this.props.templateObject));
            objectCopy.template = templateGlobal;
             /!*let theTemplate = SettingsHelpers.saveTemplate( objectCopy, title, this.state.templateGlobal, folder );
            theTemplate.then((result) => {
                this.props.updateObjectProperty( objectCopy, { templateId: result.customId } );
                this.notifyTreeSaveDone();
            });*!/
             //Get HTML
            const content = jQuery(`#${objectCopy.type}-${objectCopy.id}`).clone();
             //Get CSS
            let css = SettingsHelpers.getPageCSS(content);
             //Strip HTML
            let html = SettingsHelpers.cleanHTML(content);
             let type = objectCopy.type;
            let moduleType = objectCopy.moduleType != undefined ? objectCopy.moduleType : false;
            let moduleGlobal = this.state.templateGlobal != 'no' && this.state.templateGlobal != false ? 'yes' : 'no';
            let requirements = SettingsHelpers.getModuleTypeRequirements( objectCopy );
             //Delete the template cache global
            parent.OffsproutSiteSettings.template_cache_object = false;
             //Save the template
            let theTemplate;
             console.log('savetemplate', this.state.templateNameInput, {
                post_type: 'ocb_template',
                title: title,
                content: html,
                status: 'publish',
                meta: {
                    ocb_tree_content: objectCopy,
                    ocb_object_css: css,
                    ocb_template_requirements: requirements
                },
                taxonomies: {
                    ocb_template_type: type,
                    ocb_template_module_type: moduleType,
                    ocb_template_global: moduleGlobal,
                    ocb_template_folder: folder,
                    ocb_template_theme: theme,
                    ocb_template_industry: industry
                }
            });
             if( this.state.templateNameInput == 'new' ) {
                theTemplate = OAPI.doRequest('createCustom', {
                    post_type: 'ocb_template',
                    title: title,
                    content: html,
                    status: 'publish',
                    meta: {
                        ocb_tree_content: objectCopy,
                        ocb_object_css: css,
                        ocb_template_requirements: requirements
                    },
                    taxonomies: {
                        ocb_template_type: type,
                        ocb_template_module_type: moduleType,
                        ocb_template_global: moduleGlobal,
                        ocb_template_folder: folder,
                        ocb_template_theme: theme,
                        ocb_template_industry: industry
                    }
                });
                 theTemplate.then((result) => {
                    let updateUndoRedo = {};
                     if( moduleGlobal == 'yes' ){
                        updateUndoRedo = {updateUndo: 'GLOBAL_CREATED'}
                    }
                     this.props.updateObjectProperty(objectCopy, {templateId: result.customId, templateUnique: type + (Date.now().toString(36) + Math.random().toString(36).substr(2, 9)).toLowerCase()}, false, updateUndoRedo);
                    this.notifyTreeSaveDone();
                     if( moduleGlobal == 'yes' ){
                        //activate the javascript initialization
                        window.ocbDoNeededInitializePlugins();
                        parent.ocbDoNeededInitializePlugins();
                        window.ocbDoNeededInitializePlugins(true);
                        parent.ocbDoNeededInitializePlugins(true);
                    }
                });
            } else {
                theTemplate = OAPI.doRequest('updateCustom', {
                    id: this.state.templateName,
                    post: {
                        post_content: html
                    },
                    meta: {
                        ocb_tree_content: objectCopy,
                        ocb_object_css: css,
                        ocb_template_requirements: requirements
                    },
                    taxonomies: {
                        ocb_template_type: type,
                        ocb_template_module_type: moduleType,
                        ocb_template_theme: theme,
                        ocb_template_industry: industry
                    }
                });
                 theTemplate.then((result) => {
                    if( result.customId != undefined ) {
                        this.props.updateObjectProperty(objectCopy, {templateId: result.customId, templateUnique: type + (Date.now().toString(36) + Math.random().toString(36).substr(2, 9)).toLowerCase()});
                    }
                    this.notifyTreeSaveDone();
                });
            }
        }*/

    }, {
        key: 'doSaveTemplate',
        value: function doSaveTemplate() {
            var _this4 = this;

            var title = this.state.templateName ? this.state.templateName : 'Untitled';
            var folder = this.state.templateFolder ? this.state.templateFolder : 'No Folder';
            var templateGlobal = this.state.templateGlobal == 1 ? 'global' : 'template';
            var theme = this.state.templateTheme ? this.state.templateTheme : 'Generic';
            var industry = this.state.templateIndustry ? this.state.templateIndustry : 'Generic';
            var moduleGlobal = this.state.templateGlobal != 'no' && this.state.templateGlobal != false ? 'yes' : 'no';

            //Make sure the object in the tree is updated with global/template
            this.props.updateObjectProperty(this.props.templateObject, { template: templateGlobal });

            var objectCopy = JSON.parse(JSON.stringify(this.props.templateObject));

            //Save the template
            var theTemplate = _settings_helpers2.default.doSaveTemplate(objectCopy, {
                title: title, folder: folder, templateGlobal: templateGlobal, theme: theme, industry: industry
            }, this.state.templateNameInput);

            if (this.state.templateNameInput == 'new') {
                theTemplate.then(function (result) {
                    var updateUndoRedo = {};

                    if (moduleGlobal == 'yes') {
                        updateUndoRedo = { updateUndo: 'GLOBAL_CREATED' };
                    }

                    _this4.props.updateObjectProperty(objectCopy, { templateId: result.customId, templateUnique: objectCopy.type + (Date.now().toString(36) + Math.random().toString(36).substr(2, 9)).toLowerCase() }, false, updateUndoRedo);
                    _this4.notifyTreeSaveDone();

                    if (moduleGlobal == 'yes') {
                        //activate the javascript initialization
                        window.ocbDoNeededInitializePlugins();
                        parent.ocbDoNeededInitializePlugins();
                        window.ocbDoNeededInitializePlugins(true);
                        parent.ocbDoNeededInitializePlugins(true);
                    }
                });
            } else {
                theTemplate.then(function (result) {
                    if (result.customId != undefined) {
                        _this4.props.updateObjectProperty(objectCopy, { templateId: result.customId, templateUnique: objectCopy.type + (Date.now().toString(36) + Math.random().toString(36).substr(2, 9)).toLowerCase() });
                    }
                    _this4.notifyTreeSaveDone();
                });
            }
        }
    }, {
        key: 'doSaveTreeTemplate',
        value: function doSaveTreeTemplate() {
            var _this5 = this;

            var title = this.state.templateName ? this.state.templateName : 'Untitled';
            var folder = this.state.templateFolder ? this.state.templateFolder : 'No Folder';
            var theme = this.state.templateTheme ? this.state.templateTheme : 'Generic';
            var industry = this.state.templateIndustry ? this.state.templateIndustry : 'Generic';

            var iframe = jQuery('#ocb-workspace-iframe');

            //Save the state as meta

            //Clean the content
            var content = iframe.contents().find('#treeContent').clone();
            var pageCSS = _settings_helpers2.default.getPageCSS(content);
            var html = _settings_helpers2.default.cleanHTML(content);
            var requirements = _settings_helpers2.default.getModuleTypeRequirements(this.props.treeContent);

            var meta = {
                ocb_tree_content: this.props.treeContent,
                ocb_page_css: pageCSS,
                ocb_template_post_type: parent.OCBGlobalSettings.postType,
                ocb_template_requirements: requirements
            };

            if (OCBGlobalSettings.permissions.has_theme) {
                //If the theme is not active, we don't need to save the structure
                meta.ocb_structure = parent.OCBGlobalSettings.structure;
            }

            //We do need to save the wp page template
            meta._wp_page_template = parent.OCBGlobalSettings._wp_page_template;

            //Delete the template cache global
            parent.OffsproutSiteSettings.template_cache = false;

            var newContent = void 0;

            if (this.state.templateNameInput == 'new') {

                var payload = {
                    post_type: 'ocb_tree_template',
                    title: title,
                    content: html,
                    status: 'publish',
                    meta: meta,
                    taxonomies: {
                        ocb_template_folder: folder,
                        ocb_template_theme: theme,
                        ocb_template_industry: industry
                    }
                };

                newContent = _api_helpers2.default.doRequest('createCustom', payload);
            } else {
                newContent = _api_helpers2.default.doRequest('updateCustom', {
                    id: this.state.templateName,
                    post: {
                        post_content: html
                    },
                    meta: meta,
                    taxonomies: {
                        ocb_template_theme: theme,
                        ocb_template_industry: industry
                    }
                });
            }

            newContent.then(function (response, error) {
                _this5.notifyTreeSaveDone();
            });
        }
    }, {
        key: 'delaySetState',
        value: function delaySetState(newState) {
            var _this6 = this;

            this.setState(newState);

            //Give setState time to update and then trigger the prompt again
            setTimeout(function () {
                _this6.saveTemplatePrompt();
            }, 100);
        }
    }, {
        key: 'setTemplateGlobalYes',
        value: function setTemplateGlobalYes() {
            this.delaySetState({ templateGlobal: 1 });
        }
    }, {
        key: 'setTemplateGlobalNo',
        value: function setTemplateGlobalNo() {
            this.delaySetState({ templateGlobal: 0 });
        }
    }, {
        key: 'saveTemplatePrompt',
        value: function saveTemplatePrompt() {
            var _this7 = this;

            var saveDialog = null;
            var templateActive = this.state.templateGlobal ? '' : 'active';
            var globalActive = this.state.templateGlobal ? 'active' : '';
            var which = this.state.templateGlobal ? 'Global' : 'Template';
            var message = _react2.default.createElement(
                'p',
                { className: 'ocb-text-smaller' },
                _react2.default.createElement(
                    'strong',
                    null,
                    'Globals'
                ),
                ' can be added to multiple pages, and when they are updated, they are updated everywhere they occur. ',
                _react2.default.createElement(
                    'strong',
                    null,
                    'Templates'
                ),
                ' are simply starting points that can be edited without affecting any other uses of the template.'
            );
            var isGlobal = _react2.default.createElement(
                'div',
                { className: 'ocb-template-global ocb-toggle-group d-flex' },
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-template-global-choice ocb-toggle-group-button ' + templateActive, onClick: this.setTemplateGlobalNo.bind(this) },
                    'Template'
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-template-global-choice ocb-toggle-group-button ' + globalActive, onClick: this.setTemplateGlobalYes.bind(this) },
                    'Global'
                )
            );

            if (this.props.type == 'tree') {
                isGlobal = null;
                message = _react2.default.createElement(
                    'p',
                    { className: 'ocb-text-smaller' },
                    'Save all of the content on this page. This template will be available for use by clicking "New..." in the toolbar.'
                );
                if (parent.OCBGlobalSettings.permissions.has_theme) {
                    message = _react2.default.createElement(
                        'p',
                        { className: 'ocb-text-smaller' },
                        'Save all of the content on this page and its current structure. This template will be available for use by clicking "New..." in the toolbar.'
                    );
                }
            }

            var overlayOptions = [{
                classes: 'ocb-admin-button-load',
                onClick: this.doSave.bind(this),
                text: this.state.templateNameInput == 'select' ? 'Update' : 'Save New'
            }, {
                classes: 'ocb-danger',
                onClick: this.cancelSave.bind(this),
                text: 'Cancel'
            }];

            //Folder input
            var folderInput = _react2.default.createElement('input', { type: 'text', className: 'form-control', placeholder: 'folder name...', defaultValue: this.state.templateFolder, onChange: function onChange(e) {
                    return _this7.setState({ templateFolder: e.target.value });
                } });

            if (this.state.templateFolderInput == 'select' && this.state.templateFolders.length) {
                var folderOptions = this.state.templateFolders.map(function (folder, index) {
                    if (!folder) {
                        folder = 'No Folder';
                    }
                    return _react2.default.createElement(
                        'option',
                        { key: index, value: folder },
                        folder
                    );
                });

                folderInput = _react2.default.createElement(
                    'select',
                    { className: 'form-control', defaultValue: this.state.templateFolder, onChange: function onChange(e) {
                            return _this7.setState({ templateFolder: e.target.value });
                        } },
                    _react2.default.createElement(
                        'option',
                        { value: '' },
                        'Choose a folder...'
                    ),
                    folderOptions
                );
            }

            if (this.state.templateFolderInput == 'select' && this.state.templateFolders.length) {
                folderInput = _react2.default.createElement(
                    'div',
                    { className: 'd-flex' },
                    folderInput,
                    _react2.default.createElement(
                        'div',
                        { className: 'ocb-admin-button ocb-admin-button-square ocb-admin-button-small ocb-success', onClick: function onClick() {
                                _this7.delaySetState({ templateFolderInput: 'new' });
                            } },
                        'New'
                    )
                );
            } else if (this.state.templateFolders.length) {
                folderInput = _react2.default.createElement(
                    'div',
                    { className: 'd-flex' },
                    folderInput,
                    _react2.default.createElement(
                        'div',
                        { className: 'ocb-admin-button ocb-admin-button-square ocb-admin-button-small ocb-danger', onClick: function onClick() {
                                _this7.delaySetState({ templateFolderInput: 'select' });
                            } },
                        'Cancel'
                    )
                );
            }

            var themeInput = null;
            var industryInput = null;

            if (!this.state.templateGlobal && false) {

                //Theme Input
                themeInput = _react2.default.createElement('input', { type: 'text', className: 'form-control', placeholder: 'theme name...', defaultValue: this.state.templateTheme, onChange: function onChange(e) {
                        return _this7.setState({ templateTheme: e.target.value });
                    } });

                if (this.state.templateThemeInput == 'select' && this.state.templateThemes.length) {
                    var themeOptions = this.state.templateThemes.map(function (theme, index) {
                        if (!theme) {
                            theme = 'Generic';
                        }
                        return _react2.default.createElement(
                            'option',
                            { key: index, value: theme },
                            theme
                        );
                    });

                    themeInput = _react2.default.createElement(
                        'select',
                        { className: 'form-control', defaultValue: this.state.templateTheme, onChange: function onChange(e) {
                                return _this7.setState({ templateTheme: e.target.value });
                            } },
                        _react2.default.createElement(
                            'option',
                            { value: '' },
                            'Choose a theme...'
                        ),
                        themeOptions
                    );
                }

                if (this.state.templateThemeInput == 'select' && this.state.templateThemes.length) {
                    themeInput = _react2.default.createElement(
                        'div',
                        { className: 'd-flex' },
                        themeInput,
                        _react2.default.createElement(
                            'div',
                            { className: 'ocb-admin-button ocb-admin-button-square ocb-admin-button-small ocb-success', onClick: function onClick() {
                                    _this7.delaySetState({ templateThemeInput: 'new' });
                                } },
                            'New'
                        )
                    );
                } else if (this.state.templateThemes.length) {
                    themeInput = _react2.default.createElement(
                        'div',
                        { className: 'd-flex' },
                        themeInput,
                        _react2.default.createElement(
                            'div',
                            { className: 'ocb-admin-button ocb-admin-button-square ocb-admin-button-small ocb-danger', onClick: function onClick() {
                                    _this7.delaySetState({ templateThemeInput: 'select' });
                                } },
                            'Cancel'
                        )
                    );
                }

                //Industry Input
                industryInput = _react2.default.createElement('input', { type: 'text', className: 'form-control', placeholder: 'industry name...', defaultValue: this.state.templateIndustry, onChange: function onChange(e) {
                        return _this7.setState({ templateIndustry: e.target.value });
                    } });

                if (this.state.templateIndustryInput == 'select' && this.state.templateIndustries.length) {
                    var industryOptions = this.state.templateIndustries.map(function (industry, index) {
                        if (!industry) {
                            industry = 'Generic';
                        }
                        return _react2.default.createElement(
                            'option',
                            { key: index, value: industry },
                            industry
                        );
                    });

                    industryInput = _react2.default.createElement(
                        'select',
                        { className: 'form-control', defaultValue: this.state.templateIndustry, onChange: function onChange(e) {
                                return _this7.setState({ templateIndustry: e.target.value });
                            } },
                        _react2.default.createElement(
                            'option',
                            { value: '' },
                            'Choose an industry...'
                        ),
                        industryOptions
                    );
                }

                if (this.state.templateIndustryInput == 'select' && this.state.templateIndustries.length) {
                    industryInput = _react2.default.createElement(
                        'div',
                        { className: 'd-flex' },
                        industryInput,
                        _react2.default.createElement(
                            'div',
                            { className: 'ocb-admin-button ocb-admin-button-square ocb-admin-button-small ocb-success', onClick: function onClick() {
                                    _this7.delaySetState({ templateIndustryInput: 'new' });
                                } },
                            'New'
                        )
                    );
                } else if (this.state.templateIndustries.length) {
                    industryInput = _react2.default.createElement(
                        'div',
                        { className: 'd-flex' },
                        industryInput,
                        _react2.default.createElement(
                            'div',
                            { className: 'ocb-admin-button ocb-admin-button-square ocb-admin-button-small ocb-danger', onClick: function onClick() {
                                    _this7.delaySetState({ templateIndustryInput: 'select' });
                                } },
                            'Cancel'
                        )
                    );
                }

                themeInput = _react2.default.createElement(
                    'div',
                    { className: 'mt-2 d-flex align-items-center' },
                    _react2.default.createElement(
                        'div',
                        { className: 'ocb-flex-33' },
                        'Theme:'
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'ocb-flex-fill' },
                        themeInput
                    )
                );

                industryInput = _react2.default.createElement(
                    'div',
                    { className: 'mt-2 d-flex align-items-center' },
                    _react2.default.createElement(
                        'div',
                        { className: 'ocb-flex-33' },
                        'Industry:'
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'ocb-flex-fill' },
                        industryInput
                    )
                );
            }

            //Name input
            var nameInput = _react2.default.createElement('input', { type: 'text', className: 'form-control', placeholder: 'template name...', defaultValue: this.state.templateName, onChange: function onChange(e) {
                    return _this7.setState({ templateName: e.target.value });
                } });
            var templatesInFolder = this.state.templates.reduce(function (accumulator, currentValue) {

                //Currently, remote templates aren't being retrieved in the componentDidMount function.
                // But we don't want to allow overwriting of remote templates in the event that we change that.
                if (currentValue.remote_template == 1) return accumulator;

                //Folder
                if (currentValue.taxonomies != undefined && currentValue.taxonomies.ocb_template_folder != undefined) {
                    if (currentValue.taxonomies.ocb_template_folder == _this7.state.templateFolder) {
                        accumulator.push(currentValue);
                    }
                } else {
                    if (_this7.state.templateFolder == 'No Folder') {
                        accumulator.push(currentValue);
                    }
                }

                /*//Industry
                if( currentValue.taxonomies != undefined && currentValue.taxonomies.ocb_template_industry != undefined ){
                    if( currentValue.taxonomies.ocb_template_industry == this.state.templateIndustry ){
                        accumulator.push(currentValue);
                    }
                } else {
                    if( this.state.templateIndustry == 'Generic' ){
                        accumulator.push(currentValue);
                    }
                }
                 //Theme
                if( currentValue.taxonomies != undefined && currentValue.taxonomies.ocb_template_theme != undefined ){
                    if( currentValue.taxonomies.ocb_template_theme == this.state.templateTheme ){
                        accumulator.push(currentValue);
                    }
                } else {
                    if( this.state.templateTheme == 'Generic' ){
                        accumulator.push(currentValue);
                    }
                }*/
                return accumulator;
            }, []);

            if (this.state.templateNameInput == 'select' && templatesInFolder.length) {
                var templateOptions = templatesInFolder.map(function (template, index) {
                    return _react2.default.createElement(
                        'option',
                        { key: index, value: template.ID },
                        template.post_title
                    );
                });

                nameInput = _react2.default.createElement(
                    'select',
                    { className: 'form-control', defaultValue: this.state.templateName, onChange: function onChange(e) {
                            return _this7.setState({ templateName: e.target.value });
                        } },
                    _react2.default.createElement(
                        'option',
                        { value: '' },
                        'Choose template to update...'
                    ),
                    templateOptions
                );
            }

            if (this.state.templateNameInput == 'select' && templatesInFolder.length) {
                nameInput = _react2.default.createElement(
                    'div',
                    { className: 'd-flex' },
                    nameInput,
                    _react2.default.createElement(
                        'div',
                        { className: 'ocb-admin-text-button ocb-admin-text-button-small ml-2', onClick: function onClick() {
                                _this7.setState({ templateNameInput: 'new', templateName: '' });_this7.saveTemplatePrompt();
                            } },
                        'Switch to New'
                    )
                );
            } else if (templatesInFolder.length && !this.state.templateGlobal) {
                nameInput = _react2.default.createElement(
                    'div',
                    { className: 'd-flex' },
                    nameInput,
                    _react2.default.createElement(
                        'div',
                        { className: 'ocb-admin-text-button ocb-admin-text-button-small ml-2', onClick: function onClick() {
                                _this7.setState({ templateNameInput: 'select', templateName: '' });_this7.saveTemplatePrompt();
                            } },
                        'Switch to Update'
                    )
                );
            }

            if (!templatesInFolder.length) {
                overlayOptions[0].text = 'Save New';
            }

            var overlayContent = _react2.default.createElement(
                'div',
                null,
                message,
                isGlobal,
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-template-save-options p-2' },
                    _react2.default.createElement(
                        'div',
                        { className: 'd-flex align-items-center' },
                        _react2.default.createElement(
                            'div',
                            { className: 'ocb-flex-33' },
                            'Folder:'
                        ),
                        _react2.default.createElement(
                            'div',
                            { className: 'ocb-flex-fill' },
                            folderInput
                        )
                    ),
                    themeInput,
                    industryInput,
                    _react2.default.createElement(
                        'div',
                        { className: 'mt-2 d-flex align-items-center' },
                        _react2.default.createElement(
                            'div',
                            { className: 'ocb-flex-33' },
                            which,
                            ' Name:'
                        ),
                        _react2.default.createElement(
                            'div',
                            { className: 'ocb-flex-fill' },
                            nameInput
                        )
                    )
                )
            );

            var overlay = _react2.default.createElement(_app_overlay2.default, {
                title: "Save " + which,
                stacked: '1',
                content: overlayContent,
                overlayStyle: 'small',
                options: overlayOptions
            });

            this.props.updateAppState('overlay', overlay);
        }
    }, {
        key: 'keyboardShortcuts',
        value: function keyboardShortcuts() {
            var _this8 = this;

            this.combokeys = new _combokeys2.default(document.documentElement);

            //Allows bindGlobal, which makes this work inside of textareas
            __webpack_require__(19)(this.combokeys);

            this.combokeys.bindGlobal(['esc'], function () {
                console.log('cancel save');
                _this8.cancelSave();
            });

            this.combokeysIframe = false;
            var iframe = document.getElementById('ocb-workspace-iframe');

            if (iframe != null) {
                this.combokeysIframe = new _combokeys2.default(document.getElementById('ocb-workspace-iframe').contentWindow);
                __webpack_require__(19)(this.combokeysIframe);
                if (this.combokeysIframe) {
                    this.combokeysIframe.bindGlobal(['esc'], function () {
                        console.log('cancel save iframe');
                        _this8.cancelSave();
                    });
                }
            }
        }

        /**
         * Want to make sure that we remove the event listener when it unmounts,
         * otherwise, the listener gets added to window multiple times and causes multiple setState updates
         */

    }, {
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {
            this.combokeys.detach();
            if (this.combokeysIframe) {
                this.combokeysIframe.detach();
            }
        }
    }, {
        key: 'componentDidUpdate',
        value: function componentDidUpdate(prevProps, prevState) {
            if (prevState.templateFolderInput != this.state.templateFolderInput || prevState.templateNameInput != this.state.templateNameInput || prevState.templateGlobal != this.state.templateGlobal || prevState.templates.length != this.state.templates.length || prevState.templateFolder != this.state.templateFolder) {
                this.saveTemplatePrompt();
            }
        }
    }, {
        key: 'render',
        value: function render() {
            return null;
        }
    }]);

    return SaveTemplate;
}(_react.Component);

function mapStateToProps(_ref) {
    var treeContent = _ref.treeContent,
        appState = _ref.appState;

    return { treeContent: treeContent, appState: appState };
}
function mapDispatchToProps(dispatch) {
    return (0, _redux.bindActionCreators)({ updateAppState: _index.updateAppState, updateObjectProperty: _index.updateObjectProperty }, dispatch);
}
exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(SaveTemplate);

/***/ }),

/***/ 104:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _admin_tooltip_wrap = __webpack_require__(845);

var _admin_tooltip_wrap2 = _interopRequireDefault(_admin_tooltip_wrap);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var SettingsPanelTooltip = function (_Component) {
    _inherits(SettingsPanelTooltip, _Component);

    function SettingsPanelTooltip() {
        _classCallCheck(this, SettingsPanelTooltip);

        return _possibleConstructorReturn(this, (SettingsPanelTooltip.__proto__ || Object.getPrototypeOf(SettingsPanelTooltip)).apply(this, arguments));
    }

    _createClass(SettingsPanelTooltip, [{
        key: 'render',
        value: function render() {
            var properties = {
                wrapClass: this.props.wrapClass != undefined ? this.props.wrapClass : 'ocb-sf-description',
                content: this.props.content != undefined ? this.props.content : _react2.default.createElement('i', { className: 'fa fa-question-circle' }),
                tooltipContent: this.props.tooltipContent,
                animation: 'fadeIn',
                direction: 'right'
            };

            return _react2.default.createElement(_admin_tooltip_wrap2.default, { tooltip: properties });
        }
    }]);

    return SettingsPanelTooltip;
}(_react.Component);

exports.default = SettingsPanelTooltip;

/***/ }),

/***/ 105:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _app_overlay = __webpack_require__(13);

var _app_overlay2 = _interopRequireDefault(_app_overlay);

var _reactRedux = __webpack_require__(5);

var _redux = __webpack_require__(7);

var _index = __webpack_require__(8);

var _api_helpers = __webpack_require__(6);

var _api_helpers2 = _interopRequireDefault(_api_helpers);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Tutorials = function (_Component) {
    _inherits(Tutorials, _Component);

    function Tutorials(props) {
        _classCallCheck(this, Tutorials);

        var _this = _possibleConstructorReturn(this, (Tutorials.__proto__ || Object.getPrototypeOf(Tutorials)).call(this, props));

        if (_this.props.tutorials == undefined || !_this.props.tutorials instanceof Array) {
            console.log('need to pass an array of tutorials');
            return _possibleConstructorReturn(_this);
        }

        var tutorials = _this.props.tutorials;
        var finalTutorials = [];

        //Add any tutorials that still need to run to the final tutorials array
        //true indicates a tutorial that still needs to be shown
        tutorials.forEach(function (tutorial) {
            if (OCBGlobalSettings.tutorials[tutorial] == true || _this.props.force) {
                finalTutorials.push(tutorial);
            }
        });

        _this.state = {
            current: -1,
            tutorials: finalTutorials
        };
        return _this;
    }

    _createClass(Tutorials, [{
        key: 'add_modules_column',
        value: function add_modules_column() {
            return {
                title: 'Add new columns on the fly by dragging to the side of a module or column',
                content: this.getTutorialImage()
            };
        }
    }, {
        key: 'add_modules_drag',
        value: function add_modules_drag() {
            return {
                title: 'Add modules by dragging them to their desired place in the design',
                content: this.getTutorialImage()
            };
        }
    }, {
        key: 'right_click_modules',
        value: function right_click_modules() {
            return {
                title: 'Did You Know?',
                content: _react2.default.createElement(
                    'p',
                    null,
                    'You can also right-click on a module to edit it.'
                )
            };
        }
    }, {
        key: 'getTutorialImage',
        value: function getTutorialImage() {
            return _react2.default.createElement('img', { src: OCBGlobalSettings.mainDir + 'builder/app/build/images/' + this.state.tutorials[this.state.current] + '.gif' });
        }
    }, {
        key: 'saveTutorialStatus',
        value: function saveTutorialStatus() {
            this.state.tutorials.forEach(function (tutorial) {
                OCBGlobalSettings.tutorials[tutorial] = false;
            });
            var result = _api_helpers2.default.doRequest('updateSetting', OCBGlobalSettings.tutorials, { setting: 'ocb_tutorials' });
            result.then(function (result, error) {});
            this.props.updateAppState('overlay', null);
        }
    }, {
        key: 'componentDidMount',
        value: function componentDidMount() {
            if (this.state.current === -1) this.setState({ current: 0 });
        }
    }, {
        key: 'componentDidUpdate',
        value: function componentDidUpdate() {
            var _this2 = this;

            if (this.state.current + 1 > this.state.tutorials.length) {
                return null;
            }

            var content = this[this.state.tutorials[this.state.current]]();

            var options = [{
                classes: '',
                onClick: function onClick() {
                    return _this2.setState({ current: _this2.state.current + 1 });
                },
                text: 'Next'
            }];

            if (this.state.current + 1 == this.state.tutorials.length) {
                options = [{
                    classes: '',
                    onClick: function onClick() {
                        return _this2.saveTutorialStatus();
                    },
                    text: 'Got It!'
                }];
            }

            var size = this.props.size != undefined ? this.props.size : 'large';

            var overlay = _react2.default.createElement(_app_overlay2.default, {
                title: content.title,
                content: content.content,
                stacked: '1',
                overlayStyle: 'small',
                size: size,
                options: options
            });

            this.props.updateAppState('overlay', overlay);
        }
    }, {
        key: 'shouldComponentUpdate',
        value: function shouldComponentUpdate(nextProps, nextState) {
            if (this.state.current != nextState.current && this.state.current + 1 <= this.state.tutorials.length) return true;

            return false;
        }
    }, {
        key: 'render',
        value: function render() {
            return null;
        }
    }]);

    return Tutorials;
}(_react.Component);

function mapDispatchToProps(dispatch) {
    return (0, _redux.bindActionCreators)({ updateAppState: _index.updateAppState }, dispatch);
}
exports.default = (0, _reactRedux.connect)(null, mapDispatchToProps)(Tutorials);

/***/ }),

/***/ 106:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _deepmerge = __webpack_require__(9);

var _deepmerge2 = _interopRequireDefault(_deepmerge);

var _settings_helpers = __webpack_require__(2);

var _settings_helpers2 = _interopRequireDefault(_settings_helpers);

var _background_helpers = __webpack_require__(49);

var _background_helpers2 = _interopRequireDefault(_background_helpers);

var _reactRedux = __webpack_require__(5);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ItemBackground = function (_Component) {
    _inherits(ItemBackground, _Component);

    function ItemBackground(props) {
        _classCallCheck(this, ItemBackground);

        var _this = _possibleConstructorReturn(this, (ItemBackground.__proto__ || Object.getPrototypeOf(ItemBackground)).call(this, props));

        _this.suffix = _this.props.suffix != undefined ? _this.props.suffix : '';
        _this.index = _this.props.index != undefined ? _this.props.index : '';
        _this.selector = _this.props.selector != undefined ? _this.props.selector : '> .ocb-item-background' + _this.suffix + _this.index;
        return _this;
    }

    _createClass(ItemBackground, [{
        key: 'shouldComponentUpdate',
        value: function shouldComponentUpdate(nextProps, nextState) {
            if (this.props.currentlyEditingObject && this.props.customId == this.props.currentlyEditingObject.id || this.props.currentlyEditingObject != false && nextProps.currentlyEditingObject == false || this.props.undoRedoIndex != nextProps.undoRedoIndex || this.props.undoRedoLength != nextProps.undoRedoLength || this.props.object.skinId != nextProps.object.skinId) {
                return true;
            } else {
                return false;
            }
        }

        /**
         * must receive the following as properties
         *
         * background_type.choice, background_screen.yes, background.parallax.yes, background.color,
         * gradient_1.color, gradient_2.color, gradient_3.color, gradient_angle.choice,
         * background_image.url,background_custom_video.text, background_youtube_video.text
         *
         * @returns {XML}
         */

    }, {
        key: 'render',
        value: function render() {
            var settings = JSON.parse(JSON.stringify(this.props.settings));
            settings = Array.isArray(settings) && !settings.length ? _background_helpers2.default.getDefaultProps() : (0, _deepmerge2.default)(_background_helpers2.default.getDefaultProps(), settings);
            var id = this.props.skinId != undefined && this.props.skinId ? this.props.skinId : this.props.customId;

            var backgroundScreen = void 0,
                backgroundStyle = null;

            //Get settings from the skin if a skin is active
            if (this.props.skinId && this.props.skinState[this.props.skinId] != undefined) {
                backgroundStyle = {
                    classes: this.props.skinState[this.props.skinId].standardClasses,
                    css: {
                        css: '', //this.props.skinState[this.props.skinId].standardCSS,
                        otherCSS: _background_helpers2.default.getOtherCSS(settings, this.props.object, this.suffix, this.props.object.id, this.selector)
                    }
                };
            } else {
                if (!this.props.classesCSS) {
                    backgroundStyle = _background_helpers2.default.getBackgroundStyle(settings, this.props.object, this.suffix);
                } else {
                    backgroundStyle = {
                        classes: this.props.classesCSS.classes,
                        css: {
                            css: '',
                            otherCSS: _background_helpers2.default.getOtherCSS(settings, this.props.object, this.suffix, this.props.object.id, this.selector)
                        }
                    };
                }
            }

            var background = _background_helpers2.default.getBackgroundObject(settings, this.props.object, this.suffix, backgroundStyle.classes);

            //if( BackgroundHelpers.hasBackgroundScreen( settings, this.props.object, this.suffix ) ){
            if (this.suffix != '_2' && this.suffix != '_3') {
                backgroundScreen = _background_helpers2.default.getBackgroundScreenObject(settings, this.props.object, this.suffix, backgroundStyle.classes);
            }
            //}

            var extraClasses = '';
            /*if( this.suffix == '_2' || this.suffix == '_3' ){
                 if( settings[`remove_background_mobile${this.suffix}`].yes ){
                    extraClasses = ' ocb-item-background-remove-mobile';
                }
             }*/

            extraClasses += ' ' + backgroundStyle.classes['backgroundShared' + this.suffix];

            var cssTag = _settings_helpers2.default.wrapCSSInStyleTag(backgroundStyle.css.otherCSS, this.props.customId, 'ocb-item-background' + this.suffix + this.index);
            var skinCSSTag = backgroundStyle.css.css ? _settings_helpers2.default.wrapCSSInStyleTag(backgroundStyle.css.css, id, 'ocb-item-background' + this.suffix + this.index) : null;

            return _react2.default.createElement(
                'div',
                { className: 'ocb-item-background' + this.suffix + extraClasses },
                cssTag,
                skinCSSTag,
                background,
                backgroundScreen
            );
        }
    }]);

    return ItemBackground;
}(_react.Component);

function mapStateToProps(_ref) {
    var undoRedoState = _ref.undoRedoState,
        workspaceState = _ref.workspaceState,
        skinState = _ref.skinState;


    //console.log('mapStateToProps undoRedoState', undoRedoState.currentIndex);
    var defaultReturn = {
        currentlyEditingObject: false,
        undoRedoIndex: undoRedoState.currentIndex,
        undoRedoLength: undoRedoState.states.length,
        skinState: skinState
    };

    if (workspaceState == undefined) return defaultReturn;
    if (workspaceState.editSettings == undefined) return defaultReturn;
    if (workspaceState.editSettings.id == undefined) return defaultReturn;

    return {
        currentlyEditingObject: workspaceState.editSettings,
        undoRedoIndex: undoRedoState.currentIndex,
        undoRedoLength: undoRedoState.states.length,
        skinState: skinState
    };
}

//Promote Tree from component to container - it needs to know about the new dispatch methods above, updateModuleStandard
//and updateModuleSettings
exports.default = (0, _reactRedux.connect)(mapStateToProps)(ItemBackground);

/***/ }),

/***/ 1123:
/***/ (function(module, exports) {

// Filename: formurlencoded.js
// Timestamp: 2016.01.18-15:36:37 (last modified)
// Author(s): Bumblehead (www.bumblehead.com), JBlashill (james@blashill.com)
//
// http://www.w3.org/TR/html5/forms.html#url-encoded-form-data
// input: {one:1,two:2} return: '[one]=1&[two]=2'

var formurlencoded = module.exports = function (data, opts) {
  opts = typeof opts === 'object' ? opts : {};

  function encode (value) {
    return String(value)
      .replace(/[^ !'()~\*]*/g, encodeURIComponent)
      .replace(/ /g, '+')
      .replace(/[!'()~\*]/g, function (ch) {
        return '%' + ch.charCodeAt().toString(16).slice(-2).toUpperCase();
      });
  }

  function keys (obj) {
    var keys = Object.keys(obj);

    return opts.sorted ? keys.sort() : keys;
  }

  function filterjoin (arr) {
    return arr.filter(function (e) { return e; }).join('&');
  }

  function objnest (name, obj) {
    return filterjoin(keys(obj).map(function (key) {
      return nest(name + '[' + key + ']', obj[key]);
    }));
  }

  function arrnest (name, arr) {
    return filterjoin(arr.map(function (elem) {
      return nest(name + '[]', elem);
    }));
  }

  function nest (name, value) {
    var type = typeof value,
        f = null;

    if (value === f) {
      f = opts.ignorenull ? f : encode(name) + '=' + f;
    } else if (/string|number|boolean/.test(type)) {
      f = encode(name) + '=' + encode(value);
    } else if (Array.isArray(value)) {
      f = arrnest(name, value);
    } else if (type === 'object') {
      f = objnest(name, value);
    }

    return f;
  }

  return filterjoin(keys(data).map(function (key) {
    return nest(key, data[key]);
  }));
};


/***/ }),

/***/ 1134:
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {/**
 * lodash (Custom Build) <https://lodash.com/>
 * Build: `lodash modularize exports="npm" -o ./`
 * Copyright jQuery Foundation and other contributors <https://jquery.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */

/** Used as the `TypeError` message for "Functions" methods. */
var FUNC_ERROR_TEXT = 'Expected a function';

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0;

/** `Object#toString` result references. */
var funcTag = '[object Function]',
    genTag = '[object GeneratorFunction]',
    symbolTag = '[object Symbol]';

/** Used to match property names within property paths. */
var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
    reIsPlainProp = /^\w*$/,
    reLeadingDot = /^\./,
    rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;

/**
 * Used to match `RegExp`
 * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
 */
var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;

/** Used to match backslashes in property paths. */
var reEscapeChar = /\\(\\)?/g;

/** Used to detect host constructors (Safari). */
var reIsHostCtor = /^\[object .+?Constructor\]$/;

/** Detect free variable `global` from Node.js. */
var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

/** Detect free variable `self`. */
var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

/** Used as a reference to the global object. */
var root = freeGlobal || freeSelf || Function('return this')();

/**
 * Gets the value at `key` of `object`.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {string} key The key of the property to get.
 * @returns {*} Returns the property value.
 */
function getValue(object, key) {
  return object == null ? undefined : object[key];
}

/**
 * Checks if `value` is a host object in IE < 9.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a host object, else `false`.
 */
function isHostObject(value) {
  // Many host objects are `Object` objects that can coerce to strings
  // despite having improperly defined `toString` methods.
  var result = false;
  if (value != null && typeof value.toString != 'function') {
    try {
      result = !!(value + '');
    } catch (e) {}
  }
  return result;
}

/** Used for built-in method references. */
var arrayProto = Array.prototype,
    funcProto = Function.prototype,
    objectProto = Object.prototype;

/** Used to detect overreaching core-js shims. */
var coreJsData = root['__core-js_shared__'];

/** Used to detect methods masquerading as native. */
var maskSrcKey = (function() {
  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
  return uid ? ('Symbol(src)_1.' + uid) : '';
}());

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var objectToString = objectProto.toString;

/** Used to detect if a method is native. */
var reIsNative = RegExp('^' +
  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
);

/** Built-in value references. */
var Symbol = root.Symbol,
    splice = arrayProto.splice;

/* Built-in method references that are verified to be native. */
var Map = getNative(root, 'Map'),
    nativeCreate = getNative(Object, 'create');

/** Used to convert symbols to primitives and strings. */
var symbolProto = Symbol ? Symbol.prototype : undefined,
    symbolToString = symbolProto ? symbolProto.toString : undefined;

/**
 * Creates a hash object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Hash(entries) {
  var index = -1,
      length = entries ? entries.length : 0;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

/**
 * Removes all key-value entries from the hash.
 *
 * @private
 * @name clear
 * @memberOf Hash
 */
function hashClear() {
  this.__data__ = nativeCreate ? nativeCreate(null) : {};
}

/**
 * Removes `key` and its value from the hash.
 *
 * @private
 * @name delete
 * @memberOf Hash
 * @param {Object} hash The hash to modify.
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function hashDelete(key) {
  return this.has(key) && delete this.__data__[key];
}

/**
 * Gets the hash value for `key`.
 *
 * @private
 * @name get
 * @memberOf Hash
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function hashGet(key) {
  var data = this.__data__;
  if (nativeCreate) {
    var result = data[key];
    return result === HASH_UNDEFINED ? undefined : result;
  }
  return hasOwnProperty.call(data, key) ? data[key] : undefined;
}

/**
 * Checks if a hash value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Hash
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function hashHas(key) {
  var data = this.__data__;
  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);
}

/**
 * Sets the hash `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Hash
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the hash instance.
 */
function hashSet(key, value) {
  var data = this.__data__;
  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
  return this;
}

// Add methods to `Hash`.
Hash.prototype.clear = hashClear;
Hash.prototype['delete'] = hashDelete;
Hash.prototype.get = hashGet;
Hash.prototype.has = hashHas;
Hash.prototype.set = hashSet;

/**
 * Creates an list cache object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function ListCache(entries) {
  var index = -1,
      length = entries ? entries.length : 0;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

/**
 * Removes all key-value entries from the list cache.
 *
 * @private
 * @name clear
 * @memberOf ListCache
 */
function listCacheClear() {
  this.__data__ = [];
}

/**
 * Removes `key` and its value from the list cache.
 *
 * @private
 * @name delete
 * @memberOf ListCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function listCacheDelete(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    return false;
  }
  var lastIndex = data.length - 1;
  if (index == lastIndex) {
    data.pop();
  } else {
    splice.call(data, index, 1);
  }
  return true;
}

/**
 * Gets the list cache value for `key`.
 *
 * @private
 * @name get
 * @memberOf ListCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function listCacheGet(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  return index < 0 ? undefined : data[index][1];
}

/**
 * Checks if a list cache value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf ListCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function listCacheHas(key) {
  return assocIndexOf(this.__data__, key) > -1;
}

/**
 * Sets the list cache `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf ListCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the list cache instance.
 */
function listCacheSet(key, value) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    data.push([key, value]);
  } else {
    data[index][1] = value;
  }
  return this;
}

// Add methods to `ListCache`.
ListCache.prototype.clear = listCacheClear;
ListCache.prototype['delete'] = listCacheDelete;
ListCache.prototype.get = listCacheGet;
ListCache.prototype.has = listCacheHas;
ListCache.prototype.set = listCacheSet;

/**
 * Creates a map cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function MapCache(entries) {
  var index = -1,
      length = entries ? entries.length : 0;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

/**
 * Removes all key-value entries from the map.
 *
 * @private
 * @name clear
 * @memberOf MapCache
 */
function mapCacheClear() {
  this.__data__ = {
    'hash': new Hash,
    'map': new (Map || ListCache),
    'string': new Hash
  };
}

/**
 * Removes `key` and its value from the map.
 *
 * @private
 * @name delete
 * @memberOf MapCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function mapCacheDelete(key) {
  return getMapData(this, key)['delete'](key);
}

/**
 * Gets the map value for `key`.
 *
 * @private
 * @name get
 * @memberOf MapCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function mapCacheGet(key) {
  return getMapData(this, key).get(key);
}

/**
 * Checks if a map value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf MapCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function mapCacheHas(key) {
  return getMapData(this, key).has(key);
}

/**
 * Sets the map `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf MapCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the map cache instance.
 */
function mapCacheSet(key, value) {
  getMapData(this, key).set(key, value);
  return this;
}

// Add methods to `MapCache`.
MapCache.prototype.clear = mapCacheClear;
MapCache.prototype['delete'] = mapCacheDelete;
MapCache.prototype.get = mapCacheGet;
MapCache.prototype.has = mapCacheHas;
MapCache.prototype.set = mapCacheSet;

/**
 * Gets the index at which the `key` is found in `array` of key-value pairs.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} key The key to search for.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function assocIndexOf(array, key) {
  var length = array.length;
  while (length--) {
    if (eq(array[length][0], key)) {
      return length;
    }
  }
  return -1;
}

/**
 * The base implementation of `_.get` without support for default values.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array|string} path The path of the property to get.
 * @returns {*} Returns the resolved value.
 */
function baseGet(object, path) {
  path = isKey(path, object) ? [path] : castPath(path);

  var index = 0,
      length = path.length;

  while (object != null && index < length) {
    object = object[toKey(path[index++])];
  }
  return (index && index == length) ? object : undefined;
}

/**
 * The base implementation of `_.isNative` without bad shim checks.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a native function,
 *  else `false`.
 */
function baseIsNative(value) {
  if (!isObject(value) || isMasked(value)) {
    return false;
  }
  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;
  return pattern.test(toSource(value));
}

/**
 * The base implementation of `_.toString` which doesn't convert nullish
 * values to empty strings.
 *
 * @private
 * @param {*} value The value to process.
 * @returns {string} Returns the string.
 */
function baseToString(value) {
  // Exit early for strings to avoid a performance hit in some environments.
  if (typeof value == 'string') {
    return value;
  }
  if (isSymbol(value)) {
    return symbolToString ? symbolToString.call(value) : '';
  }
  var result = (value + '');
  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
}

/**
 * Casts `value` to a path array if it's not one.
 *
 * @private
 * @param {*} value The value to inspect.
 * @returns {Array} Returns the cast property path array.
 */
function castPath(value) {
  return isArray(value) ? value : stringToPath(value);
}

/**
 * Gets the data for `map`.
 *
 * @private
 * @param {Object} map The map to query.
 * @param {string} key The reference key.
 * @returns {*} Returns the map data.
 */
function getMapData(map, key) {
  var data = map.__data__;
  return isKeyable(key)
    ? data[typeof key == 'string' ? 'string' : 'hash']
    : data.map;
}

/**
 * Gets the native function at `key` of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {string} key The key of the method to get.
 * @returns {*} Returns the function if it's native, else `undefined`.
 */
function getNative(object, key) {
  var value = getValue(object, key);
  return baseIsNative(value) ? value : undefined;
}

/**
 * Checks if `value` is a property name and not a property path.
 *
 * @private
 * @param {*} value The value to check.
 * @param {Object} [object] The object to query keys on.
 * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
 */
function isKey(value, object) {
  if (isArray(value)) {
    return false;
  }
  var type = typeof value;
  if (type == 'number' || type == 'symbol' || type == 'boolean' ||
      value == null || isSymbol(value)) {
    return true;
  }
  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
    (object != null && value in Object(object));
}

/**
 * Checks if `value` is suitable for use as unique object key.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
 */
function isKeyable(value) {
  var type = typeof value;
  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
    ? (value !== '__proto__')
    : (value === null);
}

/**
 * Checks if `func` has its source masked.
 *
 * @private
 * @param {Function} func The function to check.
 * @returns {boolean} Returns `true` if `func` is masked, else `false`.
 */
function isMasked(func) {
  return !!maskSrcKey && (maskSrcKey in func);
}

/**
 * Converts `string` to a property path array.
 *
 * @private
 * @param {string} string The string to convert.
 * @returns {Array} Returns the property path array.
 */
var stringToPath = memoize(function(string) {
  string = toString(string);

  var result = [];
  if (reLeadingDot.test(string)) {
    result.push('');
  }
  string.replace(rePropName, function(match, number, quote, string) {
    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));
  });
  return result;
});

/**
 * Converts `value` to a string key if it's not a string or symbol.
 *
 * @private
 * @param {*} value The value to inspect.
 * @returns {string|symbol} Returns the key.
 */
function toKey(value) {
  if (typeof value == 'string' || isSymbol(value)) {
    return value;
  }
  var result = (value + '');
  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
}

/**
 * Converts `func` to its source code.
 *
 * @private
 * @param {Function} func The function to process.
 * @returns {string} Returns the source code.
 */
function toSource(func) {
  if (func != null) {
    try {
      return funcToString.call(func);
    } catch (e) {}
    try {
      return (func + '');
    } catch (e) {}
  }
  return '';
}

/**
 * Creates a function that memoizes the result of `func`. If `resolver` is
 * provided, it determines the cache key for storing the result based on the
 * arguments provided to the memoized function. By default, the first argument
 * provided to the memoized function is used as the map cache key. The `func`
 * is invoked with the `this` binding of the memoized function.
 *
 * **Note:** The cache is exposed as the `cache` property on the memoized
 * function. Its creation may be customized by replacing the `_.memoize.Cache`
 * constructor with one whose instances implement the
 * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
 * method interface of `delete`, `get`, `has`, and `set`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to have its output memoized.
 * @param {Function} [resolver] The function to resolve the cache key.
 * @returns {Function} Returns the new memoized function.
 * @example
 *
 * var object = { 'a': 1, 'b': 2 };
 * var other = { 'c': 3, 'd': 4 };
 *
 * var values = _.memoize(_.values);
 * values(object);
 * // => [1, 2]
 *
 * values(other);
 * // => [3, 4]
 *
 * object.a = 2;
 * values(object);
 * // => [1, 2]
 *
 * // Modify the result cache.
 * values.cache.set(object, ['a', 'b']);
 * values(object);
 * // => ['a', 'b']
 *
 * // Replace `_.memoize.Cache`.
 * _.memoize.Cache = WeakMap;
 */
function memoize(func, resolver) {
  if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  var memoized = function() {
    var args = arguments,
        key = resolver ? resolver.apply(this, args) : args[0],
        cache = memoized.cache;

    if (cache.has(key)) {
      return cache.get(key);
    }
    var result = func.apply(this, args);
    memoized.cache = cache.set(key, result);
    return result;
  };
  memoized.cache = new (memoize.Cache || MapCache);
  return memoized;
}

// Assign cache to `_.memoize`.
memoize.Cache = MapCache;

/**
 * Performs a
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * comparison between two values to determine if they are equivalent.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * var object = { 'a': 1 };
 * var other = { 'a': 1 };
 *
 * _.eq(object, object);
 * // => true
 *
 * _.eq(object, other);
 * // => false
 *
 * _.eq('a', 'a');
 * // => true
 *
 * _.eq('a', Object('a'));
 * // => false
 *
 * _.eq(NaN, NaN);
 * // => true
 */
function eq(value, other) {
  return value === other || (value !== value && other !== other);
}

/**
 * Checks if `value` is classified as an `Array` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
 * @example
 *
 * _.isArray([1, 2, 3]);
 * // => true
 *
 * _.isArray(document.body.children);
 * // => false
 *
 * _.isArray('abc');
 * // => false
 *
 * _.isArray(_.noop);
 * // => false
 */
var isArray = Array.isArray;

/**
 * Checks if `value` is classified as a `Function` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
 * @example
 *
 * _.isFunction(_);
 * // => true
 *
 * _.isFunction(/abc/);
 * // => false
 */
function isFunction(value) {
  // The use of `Object#toString` avoids issues with the `typeof` operator
  // in Safari 8-9 which returns 'object' for typed array and other constructors.
  var tag = isObject(value) ? objectToString.call(value) : '';
  return tag == funcTag || tag == genTag;
}

/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */
function isObject(value) {
  var type = typeof value;
  return !!value && (type == 'object' || type == 'function');
}

/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
function isObjectLike(value) {
  return !!value && typeof value == 'object';
}

/**
 * Checks if `value` is classified as a `Symbol` primitive or object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
 * @example
 *
 * _.isSymbol(Symbol.iterator);
 * // => true
 *
 * _.isSymbol('abc');
 * // => false
 */
function isSymbol(value) {
  return typeof value == 'symbol' ||
    (isObjectLike(value) && objectToString.call(value) == symbolTag);
}

/**
 * Converts `value` to a string. An empty string is returned for `null`
 * and `undefined` values. The sign of `-0` is preserved.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to process.
 * @returns {string} Returns the string.
 * @example
 *
 * _.toString(null);
 * // => ''
 *
 * _.toString(-0);
 * // => '-0'
 *
 * _.toString([1, 2, 3]);
 * // => '1,2,3'
 */
function toString(value) {
  return value == null ? '' : baseToString(value);
}

/**
 * Gets the value at `path` of `object`. If the resolved value is
 * `undefined`, the `defaultValue` is returned in its place.
 *
 * @static
 * @memberOf _
 * @since 3.7.0
 * @category Object
 * @param {Object} object The object to query.
 * @param {Array|string} path The path of the property to get.
 * @param {*} [defaultValue] The value returned for `undefined` resolved values.
 * @returns {*} Returns the resolved value.
 * @example
 *
 * var object = { 'a': [{ 'b': { 'c': 3 } }] };
 *
 * _.get(object, 'a[0].b.c');
 * // => 3
 *
 * _.get(object, ['a', '0', 'b', 'c']);
 * // => 3
 *
 * _.get(object, 'a.b.c', 'default');
 * // => 'default'
 */
function get(object, path, defaultValue) {
  var result = object == null ? undefined : baseGet(object, path);
  return result === undefined ? defaultValue : result;
}

module.exports = get;

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(32)))

/***/ }),

/***/ 1149:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var has = Object.prototype.hasOwnProperty;

/**
 * Decode a URI encoded string.
 *
 * @param {String} input The URI encoded string.
 * @returns {String} The decoded string.
 * @api private
 */
function decode(input) {
  return decodeURIComponent(input.replace(/\+/g, ' '));
}

/**
 * Simple query string parser.
 *
 * @param {String} query The query string that needs to be parsed.
 * @returns {Object}
 * @api public
 */
function querystring(query) {
  var parser = /([^=?&]+)=?([^&]*)/g
    , result = {}
    , part;

  //
  // Little nifty parsing hack, leverage the fact that RegExp.exec increments
  // the lastIndex property so we can continue executing this loop until we've
  // parsed all results.
  //
  for (;
    part = parser.exec(query);
    result[decode(part[1])] = decode(part[2])
  );

  return result;
}

/**
 * Transform a query string to an object.
 *
 * @param {Object} obj Object that should be transformed.
 * @param {String} prefix Optional prefix.
 * @returns {String}
 * @api public
 */
function querystringify(obj, prefix) {
  prefix = prefix || '';

  var pairs = [];

  //
  // Optionally prefix with a '?' if needed
  //
  if ('string' !== typeof prefix) prefix = '?';

  for (var key in obj) {
    if (has.call(obj, key)) {
      pairs.push(encodeURIComponent(key) +'='+ encodeURIComponent(obj[key]));
    }
  }

  return pairs.length ? prefix + pairs.join('&') : '';
}

//
// Expose the module.
//
exports.stringify = querystringify;
exports.parse = querystring;


/***/ }),

/***/ 119:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactRedux = __webpack_require__(5);

var _redux = __webpack_require__(7);

var _index = __webpack_require__(8);

var _api_helpers = __webpack_require__(6);

var _api_helpers2 = _interopRequireDefault(_api_helpers);

var _site_options_render = __webpack_require__(24);

var _site_options_render2 = _interopRequireDefault(_site_options_render);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var OverlayFull = function (_Component) {
    _inherits(OverlayFull, _Component);

    function OverlayFull(props) {
        _classCallCheck(this, OverlayFull);

        var _this = _possibleConstructorReturn(this, (OverlayFull.__proto__ || Object.getPrototypeOf(OverlayFull)).call(this, props));

        var currentId = 0;
        var current = 0;

        if (_this.props.type != undefined) {
            switch (_this.props.type) {
                case 'post':
                    currentId = _this.getDefaultPostStructure();
                    break;
                default:
                    currentId = _this.getDefaultStructure();
                    break;
            }
        }

        if (currentId) {
            current = _this.props.filters.find(function (filter) {
                return filter.id == currentId;
            }).name;
            window.ocbInitializePlugins();
        }

        _this.state = {
            current: current,
            currentId: currentId,
            search: '',
            filters: _this.props.filters
        };
        return _this;
    }

    _createClass(OverlayFull, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            this.refs.search.focus();
        }
    }, {
        key: 'getDefaultPostStructure',
        value: function getDefaultPostStructure() {
            return OCBGlobalSettings.structureDefaults != undefined && OCBGlobalSettings.structureDefaults.post != undefined ? OCBGlobalSettings.structureDefaults.post : 0;
        }
    }, {
        key: 'getDefaultStructure',
        value: function getDefaultStructure() {
            return OCBGlobalSettings.structureDefaults != undefined && OCBGlobalSettings.structureDefaults.default != undefined ? OCBGlobalSettings.structureDefaults.default : 0;
        }
    }, {
        key: 'updateFilter',
        value: function updateFilter(theState) {
            this.setState(theState);
            window.ocbInitializePlugins();
        }
    }, {
        key: 'deleteItem',
        value: function deleteItem(id) {
            var message = 'Are you sure you want to delete this structure? This cannot be undone!';
            var r = confirm(message);

            if (r == true) {
                _api_helpers2.default.doRequest('deleteCustom', { ocb_id: id, post_type: 'ocb_structure' });
                this.setState({ filters: this.state.filters.filter(function (filter) {
                        return filter.id != id;
                    }) });
            }
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var options = null;
            var filters = null;
            var items = null;
            var currentItem = _react2.default.createElement(
                'div',
                { className: 'ocb-overlay-item p-4' },
                'Select an item'
            );

            if (this.state.filters != undefined && this.state.filters.length) {
                filters = this.state.filters.map(function (filter, index) {
                    var active = _this2.state.current == filter.name ? 'active' : '';

                    var defaultTag = '';
                    if (_this2.props.type == 'post' && filter.id == _this2.getDefaultPostStructure()) defaultTag = ' [Default]';
                    if (_this2.props.type == 'page' && filter.id == _this2.getDefaultStructure()) defaultTag = ' [Default]';

                    if (_this2.state.current != filter.name && _this2.state.search && !filter.name.toLowerCase().includes(_this2.state.search.toLowerCase())) return null;

                    return _react2.default.createElement(
                        'div',
                        { key: index, className: 'ocb-overlay-filter ' + active + ' ocb-text-icon-row' },
                        _react2.default.createElement(
                            'div',
                            { className: 'ocb-text-icon-row-text', onClick: function onClick() {
                                    return _this2.updateFilter({ current: filter.name, currentId: filter.id });
                                } },
                            filter.name,
                            defaultTag
                        ),
                        _react2.default.createElement('i', { className: 'ocb-text-icon-row-icon ocb-transition fa fa-trash', onClick: function onClick() {
                                return _this2.deleteItem(filter.id);
                            } })
                    );
                });
            }

            if (this.props.options != undefined && this.props.options.length) {
                options = this.props.options.slice().reverse().map(function (option, index) {
                    //We want to be able to pass a default function as well as a function that gets the currentId as a parameter, depending on the button
                    var onClick = option.onClick;
                    if (!onClick || onClick == undefined) {
                        var currentId = _this2.state.currentId;

                        //Don't pass a structure ID if we're just setting the default for the post type
                        if (_this2.props.type == 'post' && _this2.state.currentId == _this2.getDefaultPostStructure()) currentId = false;
                        if (_this2.props.type == 'page' && _this2.state.currentId == _this2.getDefaultStructure()) currentId = false;

                        onClick = function onClick() {
                            return option.onClickCurrent(currentId);
                        };
                    }

                    //tooltip
                    var tooltip = null;
                    var tooltipClass = '';
                    if (option.tooltip != undefined) {
                        tooltip = _react2.default.createElement(
                            'div',
                            { className: 'ocb-tooltip ocb-tooltip-large ' + window.OffsproutEffect },
                            option.tooltip
                        );
                        tooltipClass = 'ocb-tooltip-wrap';
                    }

                    return _react2.default.createElement(
                        'button',
                        { key: index, className: 'ocb-overlay-option ocb-admin-button ' + tooltipClass + ' ' + option.classes, onClick: onClick },
                        tooltip,
                        option.text
                    );
                });
            } else {
                options = _react2.default.createElement(
                    'button',
                    { ref: 'okay', className: 'ocb-overlay-option ocb-admin-button', onClick: function onClick() {
                            return _this2.props.updateAppState('overlay', null);
                        } },
                    'Okay'
                );
            }

            options = _react2.default.createElement(
                'div',
                { className: 'ocb-overlay-options' },
                options
            );

            if (this.state.currentId) {
                currentItem = this.props.items.find(function (item, index) {
                    return item.id == _this2.state.currentId;
                });

                var extraCss = '.animated.wow{visibility:visible !important}';

                currentItem = _react2.default.createElement(
                    'div',
                    { className: 'ocb-overlay-item' },
                    _react2.default.createElement('style', { dangerouslySetInnerHTML: { __html: currentItem.css + extraCss } }),
                    _react2.default.createElement('style', { dangerouslySetInnerHTML: { __html: currentItem.globalCss } }),
                    _react2.default.createElement('div', { dangerouslySetInnerHTML: { __html: currentItem.content } })
                );
            }

            return _react2.default.createElement(
                'div',
                { className: 'ocb-overlay-box ocb-full' },
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-overlay-title' },
                    this.props.title
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-overlay-content' },
                    _react2.default.createElement(
                        'div',
                        { className: 'ocb-overlay-full-column ocb-overlay-filters' },
                        _react2.default.createElement('input', { ref: 'search', className: 'ocb-overlay-search', placeholder: 'Search...', onChange: function onChange(e) {
                                return _this2.setState({ search: e.target.value });
                            } }),
                        filters
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'ocb-overlay-full-column ocb-overlay-items' },
                        _react2.default.createElement(_site_options_render2.default, null),
                        currentItem
                    )
                ),
                options
            );
        }
    }]);

    return OverlayFull;
}(_react.Component);

function mapDispatchToProps(dispatch) {
    return (0, _redux.bindActionCreators)({ updateAppState: _index.updateAppState }, dispatch);
}

exports.default = (0, _reactRedux.connect)(null, mapDispatchToProps)(OverlayFull);

/***/ }),

/***/ 12:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; //import DeepMerge from 'deepmerge';


var _api_helpers = __webpack_require__(6);

var _api_helpers2 = _interopRequireDefault(_api_helpers);

var _settings_helpers = __webpack_require__(2);

var _settings_helpers2 = _interopRequireDefault(_settings_helpers);

var _deepmerge = __webpack_require__(9);

var _deepmerge2 = _interopRequireDefault(_deepmerge);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ModuleHelpers = {
    replaceShortcodes: function replaceShortcodes(text, domElement) {
        if (wp.shortcode != undefined && text != undefined) {
            var shortcodes = text.regexMatchAll(this.shortcodeRegex());

            if (shortcodes && shortcodes.length) {
                var newModuleContent = domElement.html();
                shortcodes.forEach(function (shortcode) {
                    var singleQuotesShortcode = shortcode[0].replaceAll('"', '\'');
                    if (singleQuotesShortcode.includes('OCBREPLACED')) return;

                    var theShortcode = shortcode[2] ? shortcode[2] : 'NO_SHORTCODE';
                    var theShortcodeArgs = shortcode[3] ? shortcode[3] : 'NO_SHORTCODE_ARGS'; //this seems to be uriencoded automatically
                    var theShortcodeContent = shortcode[5] ? shortcode[5] : 'NO_SHORTCODE_CONTENT';

                    //Add this to the shortcode to indicate that the shortcode has already been replaced so that it isn't replaced again when it's in the data-shortcode attribute
                    singleQuotesShortcode = singleQuotesShortcode.replace(theShortcode, 'OCBREPLACED' + theShortcode);

                    //If we don't want to replace the shortcode in the editor, we can manually add ocbnoreplace
                    //For example, if we want the shortcode result in an HTML attribute
                    //Ex: <a href="[ocbconnect post:post_custom field='ocb_custom_link' ocbnoreplace]">link</a>
                    if (theShortcodeArgs.includes('ocbnoreplace')) return;

                    var shortcodeFromAPIPromise = _api_helpers2.default.doRequest('getShortcode', false, { shortcode: theShortcode, shortcodeArgs: theShortcodeArgs, shortcodeContent: theShortcodeContent });
                    shortcodeFromAPIPromise.then(function (response) {
                        if (response != shortcode[0]) {
                            if (response.includes('<div')) {
                                newModuleContent = newModuleContent.replace(shortcode[0], '<div class="ocb-replaced-shortcode" data-shortcode="' + singleQuotesShortcode + '">' + response + '</div>');
                            } else {
                                newModuleContent = newModuleContent.replace(shortcode[0], '<span class="ocb-replaced-shortcode" data-shortcode="' + singleQuotesShortcode + '">' + response + '</span>');
                            }
                            domElement.html(newModuleContent);
                        }
                    }).catch(function (error) {});
                });
            }
        }
    },


    /**
     * Returns a promise with the shortcode content in response as well as the cleaned shortcode
     *
     * example of how to handle:
     *
     * let shortcode = ModuleHelpers.getShortcode('[theShortcode]');
     * shortcode.request.then((result) => //do stuff);
     * <div class="ocb-replaced-shortcode" data-shortcode="' + shortcode.shortcode + '">' + response + '</div>
     *
     * @param shortcode
     * @returns {*}
     *
     * { request: Promise, shortcode: the shortcode to be placed in data-ocb-shortcode in a shortcode replacement div }
     */
    getShortcode: function getShortcode(shortcode) {
        shortcode = shortcode.regexMatchAll(this.shortcodeRegex());
        shortcode = shortcode[0];

        var singleQuotesShortcode = shortcode[0].replaceAll('"', '\'');
        if (singleQuotesShortcode.includes('OCBREPLACED')) return false;

        var theShortcode = shortcode[2] ? shortcode[2] : 'NO_SHORTCODE';
        var theShortcodeArgs = shortcode[3] ? shortcode[3] : 'NO_SHORTCODE_ARGS'; //this seems to be uriencoded automatically
        var theShortcodeContent = shortcode[5] ? shortcode[5] : 'NO_SHORTCODE_CONTENT';

        //Add this to the shortcode to indicate that the shortcode has already been replaced so that it isn't replaced again when it's in the data-shortcode attribute
        singleQuotesShortcode = singleQuotesShortcode.replace(theShortcode, 'OCBREPLACED' + theShortcode);

        return {
            request: _api_helpers2.default.doRequest('getShortcode', false, {
                shortcode: theShortcode,
                shortcodeArgs: theShortcodeArgs,
                shortcodeContent: theShortcodeContent
            }),
            shortcode: singleQuotesShortcode
        };
    },


    /**
     * Adapted from WordPress's shortcode.js https://github.com/WordPress/WordPress/blob/77e365efbf2e499e2ed11d29c101ea466cf1ceed/wp-includes/js/shortcode.js
     *
     * @returns {RegExp}
     */
    shortcodeRegex: function shortcodeRegex() {
        return new RegExp('\\[(\\[?)([a-zA-Z0-9-_]+)(?![\\w-])([^\\]\\/]*(?:\\/(?!\\])[^\\]\\/]*)*?)(?:(\\/)\\]|\\](?:([^\\[]*(?:\\[(?!\\/\\2\\])[^\\[]*)*)(\\[\\/\\2\\]))?)(\\]?)', 'g');
    },
    replaceEmbedURLs: function replaceEmbedURLs(text, domElement) {
        if (text != undefined) {
            var embeds = text.regexMatchAll(this.embedURLRegex());
            if (embeds && embeds.length) {
                var newModuleContent = domElement.html();
                embeds.forEach(function (embed) {
                    var embedFromAPIPromise = _api_helpers2.default.doRequest('getEmbed', { embed: embed[1] });
                    embedFromAPIPromise.then(function (response, error) {
                        newModuleContent = newModuleContent.replace(embed[0], '<div class="ocb-replaced-embed" data-embedUrl="' + embed[1] + '">' + response + '</div>');
                        domElement.html(newModuleContent);
                    });
                });
            }
        }
    },
    embedURLRegex: function embedURLRegex() {
        return new RegExp('\<p\>((?:(?:https?):\/\/|www\.)(?:\([-A-Z0-9+&@#\/%=~_|$?!:,.]*\)|[-A-Z0-9+&@#\/%=~_|$?!:,.])*(?:\([-A-Z0-9+&@#\/%=~_|$?!:,.]*\)|[A-Z0-9+&@#\/%=~_|$]))\</p\>', 'igm');
    },
    getModuleStyle: function getModuleStyle(settings, object) {
        var id = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
        var className = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '';


        var cssFunction = 'get_css';
        var classFunction = 'get_classes';
        var styleFunction = 'get_style';
        var skinId = object.skinId != undefined ? object.skinId : false;

        //Get the helpers registered with the module
        var moduleRegistry = _settings_helpers2.default.getModuleRegistry();
        var moduleIndex = moduleRegistry.findIndex(function (module) {
            return module.type == object.moduleType;
        });
        var ModuleHelper = moduleRegistry[moduleIndex] != undefined ? moduleRegistry[moduleIndex].helpers : false;

        if (ModuleHelper == undefined || ModuleHelper == false) {
            return {
                classes: {},
                css: ''
            };
        }

        //Get CSS and Classes
        var css = { additional: '' };
        var classes = {};
        if (ModuleHelper && ModuleHelper[styleFunction] != undefined) {
            var combined = ModuleHelper[styleFunction](settings, object, skinId);
            css = combined.css;
            classes = combined.classes;
        } else if (ModuleHelper && ModuleHelper[cssFunction] != undefined && ModuleHelper[classFunction] != undefined) {
            css = ModuleHelper[cssFunction](settings, object, skinId);
            classes = ModuleHelper[classFunction](settings, object);
        }

        //Add tags that will be replaced in post_content processing
        classes = ModuleHelpers.appendSkinTags(classes, skinId, 'settings');

        //Make sure that CSS is correctly formed
        if (css.additional == 'null') css.additional = '';
        if (_typeof(css.additional) == 'object') {
            console.log('module ' + object.id + ' of type ' + object.moduleType + ' is producing a CSS object', css.additional);
            css.additional = '';
        }

        //If we're not passing in the id and classname then we're likely retrieving to store rather than display
        if (!id) {
            return {
                classes: classes,
                css: css.additional
            };
        }

        return {
            classes: classes,
            css: css.additional ? _settings_helpers2.default.wrapCSSInStyleTag(css.additional, id, className) : null
        };
    },
    getColorCSS: function getColorCSS(settings) {
        var includes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

        var fields = _settings_helpers2.default.getAnyPropertiesOfType('color', settings, includes);
        var style = '';
        var styleHover = '';
        var styleActive = '';

        fields.forEach(function (field) {
            if (settings[field] != undefined) {
                if (settings[field].color != 'default') {
                    var property = '';

                    if (field.includes('background')) {
                        property = 'background:';
                    } else if (field.includes('border_top')) {
                        property = 'border-top-color:';
                    } else if (field.includes('border_right')) {
                        property = 'border-right-color:';
                    } else if (field.includes('border_bottom')) {
                        property = 'border-bottom-color:';
                    } else if (field.includes('border_left')) {
                        property = 'border-left-color:';
                    } else if (field.includes('border')) {
                        property = 'border-color:';
                    } else {
                        property = 'color:';
                    }

                    if (settings[field].color == 'custom') {
                        if (field.includes('hover')) {
                            styleHover += property + settings[field].customColor + ';';
                        } else if (field.includes('active')) {
                            styleActive += property + settings[field].customColor + ';';
                        } else {
                            style += property + settings[field].customColor + ';';
                        }
                    } else {
                        var theColor = settings[field].color;
                        theColor = window.OffsproutSiteSettings[theColor + '_color'].customColor;

                        if (field.includes('hover')) {
                            styleHover += property + theColor + ';';
                        } else if (field.includes('active')) {
                            styleActive += property + theColor + ';';
                        } else {
                            style += property + theColor + ';';
                        }
                    }
                }
            }
        });

        return { style: style, styleHover: styleHover, styleActive: styleActive };
    },


    /**
     * Will wrap the CSS that is used instead of classes in skins in a div that can be processed on save
     *
     * @param css
     * @param selector
     * @param additional
     * @returns {XML}
     */
    prepareClassCSS: function prepareClassCSS(css, selector, id) {
        var additional = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '';

        css = '#' + id + ' ' + selector + '{' + css + '}' + additional;

        return css;
    },


    /**
     * Will wrap the CSS that is used instead of classes in skins in a div that can be processed on save
     *
     * @param css
     * @param className
     * @param skinId
     * @returns {XML}
     */
    wrapClassCSS: function wrapClassCSS(css, className) {
        var skinId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';

        if (!skinId) skinId = _settings_helpers2.default.generateId('skin');

        var exists = window.OffsproutPageStyle.find(function (style) {
            return style.skinId == skinId;
        });
        //if that combination of id and className doesn't exist, then create it, otherwise, overwrite
        if (!exists) {
            window.OffsproutSkins = window.OffsproutPageStyle.concat({
                skinId: skinId,
                className: className,
                css: css
            });
        }

        return React.createElement('div', { id: skinId, className: 'ocb-skin-css-tag', dangerouslySetInnerHTML: { __html: css } });
    },


    /**
     * Adds something like {{ocbr:skin:settings:skinjpn88qtnm9u03qfa4:buttonCombinedClasses}} to classes
     *
     * @param classes
     * @param skinId
     * @param which
     * @param uses - other skins that this skin includes
     * @returns {*}
     */
    appendSkinTags: function appendSkinTags(classes, skinId) {
        var which = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'settings';

        if (!skinId) return classes;

        Object.keys(classes).forEach(function (key) {

            classes[key] = '--- ocb-has-skin ' + classes[key] + ' {{ocbr:skin:' + which + ':' + skinId + ':' + key + '}}';
            classes[key] = classes[key].replace('undefined ', '');
        });

        return classes;
    },
    getSkin: function getSkin(object) {
        var settingsStandard = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'settings';
        var id = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;


        var settings = false;
        var classes = false;
        var css = false;
        var standard = false;
        var standardClasses = false;
        var standardCss = false;

        if (object.type == 'module') {

            //Get the design settings and values
            var designFields = ModuleHelpers.getDesignFields(object.moduleType);

            //Get the default settings
            var moduleRegistry = _settings_helpers2.default.getModuleRegistry();
            var moduleIndex = moduleRegistry.findIndex(function (module) {
                return module.type == object.moduleType;
            });

            var defaults = moduleRegistry[moduleIndex].default.default;
            settings = ModuleHelpers.getDesignFieldValues(designFields, object, settingsStandard, defaults);

            //Get the classes/CSS
            var classesCSS = ModuleHelpers.getModuleStyle((0, _deepmerge2.default)(settings, object.settings), object, id);
            classes = classesCSS.classes;
            css = classesCSS.css;
        }

        return { settings: settings, classes: classes, css: css, moduleType: object.moduleType };
    },


    /**
     * Get the IDs of settings to add to the skin
     *
     * @param moduleType
     * @param allFields - allow passing in of fields from mixins
     * @param prefix - prefix of a mixin
     * @returns {Array}
     */
    getDesignFields: function getDesignFields(moduleType) {
        var allFields = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
        var prefix = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';


        if (!allFields) {
            allFields = _settings_helpers2.default.getModuleRegistryProp(moduleType, 'default');

            if (!allFields) return [];

            allFields = allFields.fields;
        }

        var designFields = [];

        allFields.forEach(function (field) {
            if (field.wrap == 'field_wrap' && (field.settingType == 'design' || field.designOverwrite === true)) {
                designFields = designFields.concat([prefix + field.id]);
            } else if (field.wrap == 'field_group' && field.settingType == 'design') {
                if (prefix) {
                    field.items.forEach(function (item) {
                        designFields = designFields.concat([prefix + item]);
                    });
                } else {
                    designFields = designFields.concat(field.items);
                }
            } else if (field.wrap == 'field_mixin' && field.settingType == 'design') {
                var mixinRegistry = window.OffsproutFieldMixinRegistry;
                var mixin = field.mixin;
                var _prefix = field.prefix;
                var mixinItem = mixinRegistry.find(function (item) {
                    return item.id == mixin;
                });

                designFields = designFields.concat(ModuleHelpers.getDesignFields(moduleType, mixinItem.fields, _prefix));
            } else if (field.settingType == 'design') {
                //designFields = designFields.concat( [field.id] );
            }
        });

        return designFields;
    },
    getDesignFieldValues: function getDesignFieldValues(fields, object) {
        var settingsStandard = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'settings';
        var theDefault = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};


        var settings = {};

        fields.forEach(function (field) {
            ['linked', 'laptop', 'tablet', 'phone'].forEach(function (device) {
                if (settings[device] == undefined) settings[device] = {};

                if (settingsStandard == 'settings') {
                    if (object.settings[device] != undefined && object.settings[device][field] != undefined) {
                        settings[device][field] = object.settings[device][field];
                    } else if (theDefault[field] != undefined && device == 'linked') {
                        settings[device][field] = theDefault[field];
                    }
                } else {
                    if (object.standard[device] != undefined && object.standard[device][field] != undefined) {
                        settings[device][field] = object.standard[device][field];
                    } else if (theDefault[field] != undefined && device == 'linked') {
                        settings[device][field] = theDefault[field];
                    }
                }
            });
        });

        return settings;
    }
};

exports.default = ModuleHelpers;

/***/ }),

/***/ 120:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactRedux = __webpack_require__(5);

var _redux = __webpack_require__(7);

var _index = __webpack_require__(8);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var OverlayLarge = function (_Component) {
    _inherits(OverlayLarge, _Component);

    function OverlayLarge(props) {
        _classCallCheck(this, OverlayLarge);

        return _possibleConstructorReturn(this, (OverlayLarge.__proto__ || Object.getPrototypeOf(OverlayLarge)).call(this, props));
    }

    _createClass(OverlayLarge, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var options = void 0;

            if (this.props.options != undefined && this.props.options.length) {
                options = this.props.options.map(function (option, index) {
                    var onClick = option.onClick;
                    if (!onClick || onClick == undefined) {
                        onClick = function onClick() {
                            return _this2.props.updateAppState('overlay', null);
                        };
                    }

                    return _react2.default.createElement(
                        'button',
                        { key: index, className: 'ocb-overlay-option ocb-admin-button ' + option.classes, onClick: onClick },
                        option.text
                    );
                });
            } else {
                options = _react2.default.createElement(
                    'button',
                    { ref: 'okay', className: 'ocb-overlay-option ocb-admin-button', onClick: function onClick() {
                            return _this2.props.updateAppState('overlay', null);
                        } },
                    'Okay'
                );
            }

            options = _react2.default.createElement(
                'div',
                { className: 'ocb-overlay-options' },
                options
            );

            return _react2.default.createElement(
                'div',
                { className: 'ocb-overlay-box ocb-full ocb-large' },
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-overlay-title' },
                    this.props.title
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-overlay-content' },
                    this.props.content
                ),
                options
            );
        }
    }]);

    return OverlayLarge;
}(_react.Component);

function mapDispatchToProps(dispatch) {
    return (0, _redux.bindActionCreators)({ updateAppState: _index.updateAppState }, dispatch);
}

exports.default = (0, _reactRedux.connect)(null, mapDispatchToProps)(OverlayLarge);

/***/ }),

/***/ 121:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var OverlayScreen = function (_Component) {
    _inherits(OverlayScreen, _Component);

    function OverlayScreen() {
        _classCallCheck(this, OverlayScreen);

        return _possibleConstructorReturn(this, (OverlayScreen.__proto__ || Object.getPrototypeOf(OverlayScreen)).apply(this, arguments));
    }

    _createClass(OverlayScreen, [{
        key: "render",
        value: function render() {
            return _react2.default.createElement("div", { className: "ocb-overlay-screen" });
        }
    }]);

    return OverlayScreen;
}(_react.Component);

exports.default = OverlayScreen;

/***/ }),

/***/ 122:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactRedux = __webpack_require__(5);

var _redux = __webpack_require__(7);

var _overlay_success = __webpack_require__(123);

var _overlay_success2 = _interopRequireDefault(_overlay_success);

var _overlay_warning = __webpack_require__(126);

var _overlay_warning2 = _interopRequireDefault(_overlay_warning);

var _index = __webpack_require__(8);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var OverlaySmall = function (_Component) {
    _inherits(OverlaySmall, _Component);

    function OverlaySmall(props) {
        _classCallCheck(this, OverlaySmall);

        var _this = _possibleConstructorReturn(this, (OverlaySmall.__proto__ || Object.getPrototypeOf(OverlaySmall)).call(this, props));

        _this.state = {};
        return _this;
    }

    _createClass(OverlaySmall, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            jQuery('#ocb-overlay-focus-input').focus();
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var options = null;
            var icon = null;

            if (this.props.options != undefined && this.props.options.length) {
                options = this.props.options.map(function (option, index) {
                    //tooltip
                    var tooltip = null;
                    var tooltipClass = '';
                    if (option.tooltip != undefined) {
                        tooltip = _react2.default.createElement(
                            'div',
                            { className: 'ocb-tooltip ocb-tooltip-large ' + window.OffsproutEffect },
                            option.tooltip
                        );
                        tooltipClass = 'ocb-tooltip-wrap';
                    }

                    if (option.link != undefined) {
                        return _react2.default.createElement(
                            'a',
                            { key: index, className: 'ocb-overlay-option ocb-admin-button ' + tooltipClass + ' ' + option.classes, href: option.link, target: '_blank' },
                            tooltip,
                            option.text
                        );
                    }

                    //We want to be able to pass a default function as well as a function that gets the currentId as a parameter, depending on the button
                    var onClick = option.onClick;
                    if (!onClick || onClick == undefined) {
                        if (option.onClickCurrent != undefined) {
                            onClick = function onClick() {
                                return option.onClickCurrent(_this2.state.currentId);
                            };
                        }
                    }

                    return _react2.default.createElement(
                        'button',
                        { key: index, className: 'ocb-overlay-option ocb-admin-button ' + tooltipClass + ' ' + option.classes, onClick: onClick },
                        tooltip,
                        option.text
                    );
                });
            } else if (this.props.options === null) {
                options = null;
            } else {
                options = _react2.default.createElement(
                    'button',
                    { ref: 'okay', className: 'ocb-overlay-option ocb-admin-button', onClick: function onClick() {
                            return _this2.props.updateAppState('overlay', null);
                        } },
                    'Okay'
                );
            }

            var stacked = this.props.stacked != undefined ? 'ocb-stacked' : 'mt-2';

            options = _react2.default.createElement(
                'div',
                { className: 'ocb-overlay-options ' + stacked },
                options
            );

            if (this.props.icon) {
                switch (this.props.icon) {
                    case 'success':
                        icon = _react2.default.createElement(_overlay_success2.default, null);
                        break;
                    case 'warning':
                        icon = _react2.default.createElement(_overlay_warning2.default, null);
                        break;
                }
                if (icon) {
                    icon = _react2.default.createElement(
                        'div',
                        { className: 'ocb-overlay-icon' },
                        icon
                    );
                }
            }

            setTimeout(function () {
                if (_this2.refs.okay != undefined) _this2.refs.okay.focus();
            }, 100);

            var sizeClass = '';
            if (this.props.size != undefined) {
                sizeClass = 'ocb-' + this.props.size;
            }

            return _react2.default.createElement(
                'div',
                { className: 'ocb-overlay-box ocb-small ' + sizeClass + ' ' + window.OffsproutEffect },
                icon,
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-overlay-title' },
                    this.props.title
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-overlay-content' },
                    this.props.content
                ),
                options
            );
        }
    }]);

    return OverlaySmall;
}(_react.Component);

function mapDispatchToProps(dispatch) {
    return (0, _redux.bindActionCreators)({ updateAppState: _index.updateAppState }, dispatch);
}

exports.default = (0, _reactRedux.connect)(null, mapDispatchToProps)(OverlaySmall);

/***/ }),

/***/ 123:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var OverlaySuccess = function (_Component) {
    _inherits(OverlaySuccess, _Component);

    function OverlaySuccess() {
        _classCallCheck(this, OverlaySuccess);

        return _possibleConstructorReturn(this, (OverlaySuccess.__proto__ || Object.getPrototypeOf(OverlaySuccess)).apply(this, arguments));
    }

    _createClass(OverlaySuccess, [{
        key: 'render',
        value: function render() {
            return _react2.default.createElement(
                'div',
                { className: 'ocb-overlay-success' },
                _react2.default.createElement(
                    'div',
                    { style: { width: '80px', height: '80px', borderWidth: '4px', borderStyle: 'solid', borderColor: 'rgb(76, 174, 76)', borderRadius: '50%', margin: '20px auto', position: 'relative', boxSizing: 'content-box' } },
                    _react2.default.createElement('div', { style: { borderRadius: '120px 0px 0px 120px', position: 'absolute', width: '60px', height: '100px', background: 'white', transform: 'rotate(-45deg)', top: '-7px', left: '-33px', transformOrigin: '60px 60px 0px' } }),
                    _react2.default.createElement('span', { style: { height: '5px', backgroundColor: 'rgb(92, 184, 92)', display: 'block', borderRadius: '2px', position: 'absolute', zIndex: '2', width: '25px', left: '14px', top: '46px', transform: 'rotate(45deg)', animation: 'animateSuccessTip 0.75s' } }),
                    _react2.default.createElement('span', { style: { height: '5px', backgroundColor: 'rgb(92, 184, 92)', display: 'block', borderRadius: '2px', position: 'absolute', zIndex: '2', width: '47px', right: '8px', top: '38px', transform: 'rotate(-45deg)', animation: 'animateSuccessLong 0.75s' } }),
                    _react2.default.createElement('div', { style: { width: '80px', height: '80px', border: '4px solid rgba(92, 184, 92, 0.2)', borderRadius: '50%', boxSizing: 'content-box', position: 'absolute', left: '-4px', top: '-4px', zIndex: '2' } }),
                    _react2.default.createElement('div', { style: { width: '5px', height: '90px', backgroundColor: 'rgb(255, 255, 255)', position: 'absolute', left: '28px', top: '8px', zIndex: '1', transform: 'rotate(-45deg)' } }),
                    _react2.default.createElement('div', { style: { borderRadius: '0px 120px 120px 0px', position: 'absolute', width: '60px', height: '120px', background: 'white', transform: 'rotate(-45deg)', top: '-11px', left: '30px', transformOrigin: '0px 60px 0px', animation: 'rotatePlaceholder 4.25s ease-in' } })
                )
            );
        }
    }]);

    return OverlaySuccess;
}(_react.Component);

exports.default = OverlaySuccess;

/***/ }),

/***/ 124:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactRedux = __webpack_require__(5);

var _redux = __webpack_require__(7);

var _index = __webpack_require__(8);

var _site_options_render = __webpack_require__(24);

var _site_options_render2 = _interopRequireDefault(_site_options_render);

var _skins_render = __webpack_require__(34);

var _skins_render2 = _interopRequireDefault(_skins_render);

var _settings_helpers = __webpack_require__(2);

var _settings_helpers2 = _interopRequireDefault(_settings_helpers);

var _api_helpers = __webpack_require__(6);

var _api_helpers2 = _interopRequireDefault(_api_helpers);

var _app_overlay = __webpack_require__(13);

var _app_overlay2 = _interopRequireDefault(_app_overlay);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var OverlayTemplate = function (_Component) {
    _inherits(OverlayTemplate, _Component);

    function OverlayTemplate(props) {
        _classCallCheck(this, OverlayTemplate);

        var _this = _possibleConstructorReturn(this, (OverlayTemplate.__proto__ || Object.getPrototypeOf(OverlayTemplate)).call(this, props));

        _this.state = {
            current: 0,
            currentId: 0,
            search: '',
            filters: [],
            items: [],
            selectedItem: false,
            templates: _this.props.templates != undefined ? _this.props.templates : []
        };
        return _this;
    }

    _createClass(OverlayTemplate, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            this.filterInput.focus();

            if (this.props.items == undefined || !this.props.items.length) {
                this.getTemplates();
            }
        }
    }, {
        key: 'componentDidUpdate',
        value: function componentDidUpdate(prevProps, prevState) {
            if (this.state.currentId) {
                this.props.useFunction(this.state.currentId, this.state.selectedItem, this.state.items);
            }
            if (prevState.templates.length != this.state.templates.length) {
                this.handleTemplates(this.state.templates);
            }
        }
    }, {
        key: 'getTemplates',
        value: function getTemplates() {
            var _this2 = this;

            /*let templateMemory = SettingsHelpers.getTemplateMemory();
            let templateCache = parent.OffsproutCache.template_cache;
             //Get templates in chunks unless max template_memory is set
            if(
                templateMemory != 'max'
                && templateCache == undefined
            ){
                 this.getTemplateChunks( 0, templateMemory )
             } else if( templateCache == undefined ){
                 let templates = SettingsHelpers.getTemplates();
                 templates.then((response) => {
                    if( response.length ){
                        this.handleTemplates(response);
                    } else {
                        this.unableToGetTemplates();
                    }
                }).catch((error) => {
                    this.unableToGetTemplates();
                })
             } else {
                 this.setState({templates: templateCache});
             }*/

            var templateCache = parent.OffsproutCache.template_cache_object;

            //Get templates in chunks unless max template_memory is set
            if (templateCache == undefined) {

                _settings_helpers2.default.getAllTemplatesSkins().then(function (result) {
                    if (result[0].length) {
                        _this2.handleTemplates(result[0]);
                    } else {
                        _this2.unableToGetTemplates();
                    }

                    //Update site skins
                    if (result[1] != undefined && Object.keys(result[1]).length) {
                        //Prepend the name of the skins with the name of the template
                        var renamedSkins = _settings_helpers2.default.getRenamedTemplateSkins(result[1]);
                        _this2.props.importSkins(result[1]);
                    }
                }).catch(function (error) {
                    console.log('Could not get templates', error);
                    _this2.unableToGetTemplates();
                });
            } else {

                this.setState({ templates: templateCache });
            }
        }

        /**
         * Get templates in batches rather than all at once to use less memory
         *
         * Because of the way this is implemented it is possible that it could retrieve a mix of cached and fresh remote templates
         * SettingsHelpers.getTemplateChunks knows whether it's getting cached templates, but doesn't pass that info back to this function
         * And it's this function that keeps telling SettingsHelpers to get stuff
         *
         * @param location
         * @param number
         * @param chunk
         */
        /*getTemplateChunks( location = 0, number = 20, chunk = 1 ){
             let offset = ( chunk - 1 ) * number;
            let templates = SettingsHelpers.getTemplateChunks( 'page', location, { number, offset, chunk });
             if( templates != false ) {
                 templates.then((response) => {
                     //If there are templates add them to the templates in state and then keep trying to retrieve more
                    if ( response.length && chunk < 20 ) {
                         parent.OffsproutCache.template_cache = this.state.templates.concat(response);
                         this.setState({templates: this.state.templates.concat(response)});
                         if( response.length != number ){
                            location++;
                             //If we're going to the next location, make sure to reset chunk to 1
                            chunk = 1;
                        } else {
                            chunk++
                        }
                         this.getTemplateChunks(location, number, chunk);
                     //If there are no templates, go to the next location up to location 3, which does not exist
                    } else {
                         if (location < 3) {
                            this.getTemplateChunks(( location + 1 ), number, 1);
                        }
                     }
                 }).catch((error) => {
                     //If there was an error or are no templates, go to the next location up to location 3, which does not exist
                    if (location < 3) {
                        this.getTemplateChunks(( location + 1 ), number, 1);
                    }
                 })
             }
         }*/

    }, {
        key: 'unableToGetTemplates',
        value: function unableToGetTemplates() {
            var cancelFunction = this.props.config != undefined && this.props.config.cancelFunction != undefined ? this.props.config.cancelFunction : this.props.updateAppState('overlay', null);

            var overlay = _react2.default.createElement(_app_overlay2.default, {
                title: 'Error',
                icon: 'warning',
                stacked: '1',
                content: 'Unable to retrieve any templates. You may have to decrease your memory settings in Site Settings.',
                overlayStyle: 'small',
                options: [{
                    classes: '',
                    onClick: cancelFunction,
                    text: 'Okay'
                }]
            });
            this.props.updateAppState('overlay', overlay);
        }
    }, {
        key: 'handleTemplates',
        value: function handleTemplates(templates) {
            var filters = templates.reduce(function (accumulator, current) {
                var folder = current.taxonomies != undefined && current.taxonomies.ocb_template_folder != undefined ? current.taxonomies.ocb_template_folder : 'No Folder';

                var canAccessFolder = true;
                var folderPermission = 'page_template_folder_' + folder.replace(' ', '_');

                if (parent.OCBGlobalSettings.permissions[folderPermission] != undefined && !parent.OCBGlobalSettings.permissions[folderPermission]) {
                    canAccessFolder = false;
                }

                if (canAccessFolder && !accumulator.find(function (each) {
                    return each.id == folder;
                })) {
                    accumulator.push({
                        name: folder,
                        id: folder
                    });
                }

                return accumulator;
            }, []);
            var items = templates.map(function (template) {
                var folder = template.taxonomies != undefined && template.taxonomies.ocb_template_folder != undefined ? template.taxonomies.ocb_template_folder : 'No Folder';

                return {
                    name: template.post_title,
                    css: template.ocb_page_css, //Don't use the meta.ocb_page_css because the API method actually serves the structure's CSS: get_post_meta( $structure_id, 'ocb_page_css', true )
                    globalCss: '',
                    content: template.post_content_shortcode,
                    id: template.ID,
                    folder: folder,
                    template: template
                };
            });

            items = items.filter(function (template) {
                var canAccessFolder = true;
                var folderPermission = 'page_template_folder_' + template.folder.replace(' ', '_');

                if (parent.OCBGlobalSettings.permissions[folderPermission] != undefined && !parent.OCBGlobalSettings.permissions[folderPermission]) {
                    canAccessFolder = false;
                }

                return canAccessFolder;
            });

            this.setState({ items: items, filters: this.state.filters.concat(filters) });
        }

        /**
         * Returns a button to delete an internal template
         * Called by getItemsHTML
         * @param id
         */

    }, {
        key: 'deleteTemplate',
        value: function deleteTemplate(id) {
            var _this3 = this;

            var r = confirm('Are you sure you want to delete this template? This cannot be undone!');
            var theItems = this.props.items != undefined && this.props.items.length ? this.props.items : this.state.items;
            if (r == true) {
                var action = _api_helpers2.default.doRequest('deleteCustom', { post_id: id });
                action.then(function (response, error) {
                    var items = theItems.filter(function (item) {
                        return item.id != id;
                    });
                    _this3.setState({ items: items });
                });
            }
        }

        /**
         * Will return requirements if the template has modules that are included in a premium plugin
         * Called by getItemsHTML()
         * @param template
         * @returns {{hasRequirements: boolean, requirements: *}}
         */

    }, {
        key: 'templateHasRequirements',
        value: function templateHasRequirements(template) {
            var hasRequirements = false;
            var theRequirements = [];
            var requirements = null;

            if (template.template != undefined && template.template.meta != undefined && template.template.meta.ocb_template_requirements != undefined && template.template.meta.ocb_template_requirements.length) {
                template.template.meta.ocb_template_requirements.forEach(function (requirement) {
                    var requiredPermission = requirement.permission != undefined ? requirement.permission : 'has_pro';

                    if (OCBGlobalSettings.permissions[requiredPermission] != undefined && !OCBGlobalSettings.permissions[requiredPermission]) {
                        hasRequirements = true;
                        theRequirements = theRequirements.concat(requirement);
                    }
                });
            }

            if (hasRequirements) {
                requirements = theRequirements.map(function (requirement, index) {
                    return _react2.default.createElement(
                        'a',
                        { key: index, className: 'ocb-overlay-item-requirement', href: requirement.url, target: '_blank' },
                        requirement.name
                    );
                });
                requirements = _react2.default.createElement(
                    'span',
                    { className: 'ocb-overlay-item-requirements' },
                    'Requires: ',
                    requirements
                );
            }

            return { hasRequirements: hasRequirements, requirements: requirements };
        }

        /**
         * Returns items from props if they're there, otherwise gets state.items
         * @returns {Array}
         */

    }, {
        key: 'getTheItems',
        value: function getTheItems() {
            return this.props.items != undefined && this.props.items.length ? this.props.items : this.state.items;
        }

        /**
         * Returns filters from props if they're there, otherwise gets state.filters
         * @returns {Array}
         */

    }, {
        key: 'getTheFilters',
        value: function getTheFilters() {
            return this.props.filters != undefined && this.props.filters.length ? this.props.filters : this.state.filters;
        }

        /**
         * Gets the filter HTML (sorting by folder)
         * @returns {*}
         */

    }, {
        key: 'getFilterHTML',
        value: function getFilterHTML() {
            var _this4 = this;

            var theFilters = this.getTheFilters();
            var filters = null;

            if (theFilters != undefined && theFilters.length) {
                filters = theFilters
                //Remove duplicates
                .filter(function (value, index, self) {
                    return index === self.findIndex(function (t) {
                        return t.id === value.id;
                    });
                })
                //Sort alphabetically
                .sort(function (a, b) {
                    var nameA = a.name.toLowerCase(),
                        nameB = b.name.toLowerCase();
                    if (nameA < nameB) //sort string ascending
                        return -1;
                    if (nameA > nameB) return 1;
                    return 0;
                })
                //Create the menu
                .map(function (filter, index) {
                    var active = _this4.state.current == filter.name ? 'active' : '';

                    return _react2.default.createElement(
                        'div',
                        { key: index, className: 'ocb-overlay-filter ' + active, onClick: function onClick() {
                                return _this4.setState({ current: filter.name });
                            } },
                        filter.name
                    );
                });
            }

            return filters;
        }

        /**
         * Gets items HTML (the template items)
         * @returns {XML}
         */

    }, {
        key: 'getItemsHTML',
        value: function getItemsHTML() {
            var _this5 = this;

            var config = this.props.config != undefined ? this.props.config : {};
            config = Object.assign({ deleteButton: true, chooseButton: 'Create' }, config);

            var theItems = this.getTheItems();
            var currentItems = _react2.default.createElement(
                'div',
                { className: 'p-4' },
                'Select an item'
            );
            var showItems = [];

            if (this.state.current) {
                showItems = theItems.filter(function (item, index) {
                    if (_this5.state.search) {
                        return item.folder == _this5.state.current && item.name.toLowerCase().includes(_this5.state.search.toLowerCase());
                    }

                    return item.folder == _this5.state.current;
                });
            } else {
                //get the first 6
                showItems = theItems.filter(function (item, index) {
                    if (_this5.state.search) {
                        return item.name.toLowerCase().includes(_this5.state.search.toLowerCase());
                    }

                    return index < 6;
                });
            }

            var extraCss = '.animated.wow{visibility:visible !important}';

            if (showItems.length) {
                currentItems = showItems.map(function (item, index) {
                    var active = '';

                    if (_this5.state.currentId == item.id) {
                        active = 'active';
                    }

                    //make sure that the CSS of one template does not affect the CSS of another template with the same object IDs by prepending with item index class
                    var newCss = item.css.replace(/#[a-z0-9-]{7,}/g, function (a) {
                        return '.ocb-overlay-item-' + index + ' ' + a;
                    });

                    var deleteTemplate = _react2.default.createElement(
                        'div',
                        { className: 'ocb-admin-button ocb-admin-button-square ocb-danger pull-right', onClick: function onClick() {
                                return _this5.deleteTemplate(item.id);
                            } },
                        _react2.default.createElement('i', { className: 'fa fa-trash' })
                    );
                    var useTemplate = _react2.default.createElement(
                        'div',
                        { className: 'ocb-admin-button ocb-admin-button-square ocb-success pull-right', onClick: function onClick() {
                                return _this5.setState({ currentId: item.id, selectedItem: item });
                            } },
                        config.chooseButton
                    );

                    if (!OCBGlobalSettings.permissions.delete_tree_templates || config.deleteButton == false || item.template.remote_template) {
                        deleteTemplate = null;
                    }

                    //See if there are requirements and if there are, if they're met
                    var requirements = _this5.templateHasRequirements(item);

                    if (requirements.hasRequirements) {
                        useTemplate = requirements.requirements;
                    }

                    var name = item.name;

                    if (name.length > 20) {
                        name = name.substring(0, 19).trim() + '...';
                    }

                    return _react2.default.createElement(
                        'div',
                        { key: index, className: 'ocb-overlay-item ocb-overlay-item-' + index + ' ' + active },
                        _react2.default.createElement(
                            'div',
                            { className: 'ocb-overlay-item-title' },
                            name,
                            deleteTemplate,
                            useTemplate
                        ),
                        _react2.default.createElement(
                            'div',
                            { className: 'ocb-overlay-item-inner' },
                            _react2.default.createElement(
                                'div',
                                { className: 'ocb-overlay-item-display' },
                                _react2.default.createElement('style', { dangerouslySetInnerHTML: { __html: newCss + extraCss } }),
                                _react2.default.createElement('style', { dangerouslySetInnerHTML: { __html: item.globalCss } }),
                                _react2.default.createElement('div', { dangerouslySetInnerHTML: { __html: item.content } })
                            ),
                            _react2.default.createElement('div', { className: 'ocb-overlay-item-display-screen' })
                        )
                    );
                });
            } else {
                currentItems = _react2.default.createElement(
                    'div',
                    { className: 'p-3' },
                    'No items found.'
                );
            }

            if (!this.getTheItems().length) {
                currentItems = _react2.default.createElement(
                    'div',
                    { className: 'p-3' },
                    'Finding templates...'
                );
            }

            return currentItems;
        }

        /**
         * Gets options HTML (the options that are passed in via props are converted to buttons on the bottom of the overlay)
         * @returns {*}
         */

    }, {
        key: 'getOptionsHTML',
        value: function getOptionsHTML() {
            var _this6 = this;

            var options = null;

            if (this.props.options != undefined && this.props.options.length) {
                options = this.props.options.slice().reverse().map(function (option, index) {
                    //We want to be able to pass a default function as well as a function that gets the currentId as a parameter, depending on the button
                    var onClick = option.onClick;
                    if (!onClick || onClick == undefined) {
                        onClick = function onClick() {
                            return option.onClickCurrent(_this6.state.currentId);
                        };
                    }

                    //tooltip
                    var tooltip = null;
                    var tooltipClass = '';
                    if (option.tooltip != undefined) {
                        tooltip = _react2.default.createElement(
                            'div',
                            { className: 'ocb-tooltip ocb-tooltip-large ' + window.OffsproutEffect },
                            option.tooltip
                        );
                        tooltipClass = 'ocb-tooltip-wrap';
                    }

                    return _react2.default.createElement(
                        'button',
                        { key: index, className: 'ocb-overlay-option ocb-admin-button ' + tooltipClass + ' ' + option.classes, onClick: onClick },
                        tooltip,
                        option.text
                    );
                });
            } else {
                options = _react2.default.createElement(
                    'button',
                    { className: 'ocb-overlay-option ocb-admin-button', onClick: function onClick() {
                            return _this6.props.updateAppState('overlay', null);
                        } },
                    'Okay'
                );
            }

            options = _react2.default.createElement(
                'div',
                { className: 'ocb-overlay-options' },
                options
            );

            return options;
        }

        /**
         * Bring the template screen back up
         */

    }, {
        key: 'backToTemplates',
        value: function backToTemplates() {
            delete parent.OffsproutCache.template_cache;

            var overlayOptions = [{
                classes: 'ocb-danger',
                onClick: this.props.config.cancelFunction,
                text: 'Cancel'
            }];

            var message = 'Choose the template to use';

            var overlay = _react2.default.createElement(_app_overlay2.default, {
                title: message,
                overlayStyle: 'template',
                config: { cancelFunction: this.props.config.cancelFunction },
                options: overlayOptions,
                useFunction: this.props.useFunction
            });
            this.props.updateAppState('overlay', overlay);
        }
    }, {
        key: 'openThemes',
        value: function openThemes() {
            var overlayOptions = [{
                classes: 'ocb-danger',
                onClick: this.backToTemplates.bind(this),
                text: 'Cancel'
            }];

            var message = 'Choose the theme to use';

            var overlay = _react2.default.createElement(_app_overlay2.default, {
                title: message,
                overlayStyle: 'theme',
                config: { cancelFunction: this.backToTemplates.bind(this) },
                options: overlayOptions,
                useFunction: null
            });
            this.props.updateAppState('overlay', overlay);
        }
    }, {
        key: 'render',
        value: function render() {
            var _this7 = this;

            //activate the various modules that are JS dependent
            window.ocbDoNeededInitializePlugins();
            parent.ocbDoNeededInitializePlugins();
            window.ocbDoNeededInitializePlugins(true);
            parent.ocbDoNeededInitializePlugins(true);
            window.ocbInitLazy(true);
            parent.ocbInitLazy(true);

            var changeTheme = null;

            if (OCBGlobalSettings.remoteTemplates[0] != undefined && OCBGlobalSettings.remoteTemplates[0].includes('t.offsprout.com')) {
                changeTheme = _react2.default.createElement(
                    'div',
                    { className: 'ocb-overlay-title-left', onClick: function onClick() {
                            return _this7.openThemes();
                        } },
                    'Change Template Theme'
                );
            }

            //Need to include SiteOptionsRender and SkinsRender because this is outside of the iFrame
            //Also need to include a fix to parallax images that makes them non-parallax
            return _react2.default.createElement(
                'div',
                { className: 'ocb-overlay-box ocb-template' },
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-overlay-title' },
                    changeTheme,
                    _react2.default.createElement(
                        'span',
                        null,
                        this.props.title
                    )
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-overlay-content' },
                    _react2.default.createElement(
                        'div',
                        { className: 'ocb-overlay-full-column ocb-overlay-filters' },
                        _react2.default.createElement('input', { ref: function ref(input) {
                                _this7.filterInput = input;
                            }, className: 'ocb-overlay-search', placeholder: 'Search...', onChange: function onChange(e) {
                                return _this7.setState({ search: e.target.value });
                            } }),
                        this.getFilterHTML()
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'ocb-overlay-full-column ocb-overlay-items' },
                        _react2.default.createElement(_site_options_render2.default, null),
                        _react2.default.createElement(_skins_render2.default, { templatePreview: '1', pageTemplates: '1' }),
                        _react2.default.createElement(
                            'style',
                            null,
                            '.ocb-overlay-box.ocb-template .jarallax > div > *{width:100% !important;height:100% !important;transform:none !important;margin:0 !important;margin-top:0 !important;}'
                        ),
                        this.getItemsHTML()
                    )
                ),
                this.getOptionsHTML()
            );
        }
    }]);

    return OverlayTemplate;
}(_react.Component);

function mapDispatchToProps(dispatch) {
    return (0, _redux.bindActionCreators)({ updateAppState: _index.updateAppState, importSkins: _index.importSkins }, dispatch);
}

exports.default = (0, _reactRedux.connect)(null, mapDispatchToProps)(OverlayTemplate);

/***/ }),

/***/ 125:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactRedux = __webpack_require__(5);

var _redux = __webpack_require__(7);

var _index = __webpack_require__(8);

var _site_options_render = __webpack_require__(24);

var _site_options_render2 = _interopRequireDefault(_site_options_render);

var _skins_render = __webpack_require__(34);

var _skins_render2 = _interopRequireDefault(_skins_render);

var _settings_helpers = __webpack_require__(2);

var _settings_helpers2 = _interopRequireDefault(_settings_helpers);

var _api_helpers = __webpack_require__(6);

var _api_helpers2 = _interopRequireDefault(_api_helpers);

var _app_overlay = __webpack_require__(13);

var _app_overlay2 = _interopRequireDefault(_app_overlay);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var OverlayTheme = function (_Component) {
    _inherits(OverlayTheme, _Component);

    function OverlayTheme(props) {
        _classCallCheck(this, OverlayTheme);

        var _this = _possibleConstructorReturn(this, (OverlayTheme.__proto__ || Object.getPrototypeOf(OverlayTheme)).call(this, props));

        _this.state = {
            current: 0,
            currentId: 0,
            search: '',
            filters: [],
            items: [],
            selectedItem: false,
            preview: '',
            previewTemplates: [],
            previewSkins: {},
            oldTemplateSite: '',
            oldTemplateTheme: '',
            maybeSwitchTheme: false,
            templates: _this.props.templates != undefined ? _this.props.templates : []
        };
        return _this;
    }

    _createClass(OverlayTheme, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            //this.filterInput.focus();

            if (this.props.items == undefined || !this.props.items.length) {
                this.getTemplates();
            }
        }
    }, {
        key: 'getTemplates',
        value: function getTemplates() {
            var _this2 = this;

            var packs = _settings_helpers2.default.getTemplatePacks();

            packs.then(function (result) {
                _this2.handleTemplates(result);
            });
        }
    }, {
        key: 'unableToGetTemplates',
        value: function unableToGetTemplates() {
            var cancelFunction = this.props.config != undefined && this.props.config.cancelFunction != undefined ? this.props.config.cancelFunction : this.props.updateAppState('overlay', null);

            var overlay = _react2.default.createElement(_app_overlay2.default, {
                title: 'Error',
                icon: 'warning',
                stacked: '1',
                content: 'Unable to retrieve any templates. You may have to decrease your memory settings in Site Settings.',
                overlayStyle: 'small',
                options: [{
                    classes: '',
                    onClick: cancelFunction,
                    text: 'Okay'
                }]
            });
            this.props.updateAppState('overlay', overlay);
        }
    }, {
        key: 'handleTemplates',
        value: function handleTemplates(templates) {
            var items = templates.map(function (template) {

                return {
                    name: template.name,
                    css: template.template.meta.ocb_page_css,
                    skins: template.skins,
                    content: template.template.post_content_shortcode,
                    blogId: template.blog_id,
                    template: template,
                    url: template.url
                };
            });

            this.setState({ items: items });
        }
    }, {
        key: 'handlePreviewTemplates',
        value: function handlePreviewTemplates(templates) {
            if (templates.length != 2) return;

            var items = templates[0].map(function (template) {

                return {
                    name: template.post_title,
                    css: template.ocb_page_css,
                    content: template.post_content_shortcode,
                    template: template
                };
            });

            this.setState({ previewTemplates: items, previewSkins: templates[1] });
        }

        /**
         * Will return requirements if the template has modules that are included in a premium plugin
         * Called by getItemsHTML()
         * @param template
         * @returns {{hasRequirements: boolean, requirements: *}}
         */

    }, {
        key: 'templateHasRequirements',
        value: function templateHasRequirements(template) {
            var hasRequirements = false;
            var theRequirements = [];
            var requirements = null;

            if (template.template != undefined && template.template.meta != undefined && template.template.meta.ocb_template_requirements != undefined && template.template.meta.ocb_template_requirements.length) {
                template.template.meta.ocb_template_requirements.forEach(function (requirement) {
                    var requiredPermission = requirement.permission != undefined ? requirement.permission : 'has_pro';

                    if (OCBGlobalSettings.permissions[requiredPermission] != undefined && !OCBGlobalSettings.permissions[requiredPermission]) {
                        hasRequirements = true;
                        theRequirements = theRequirements.concat(requirement);
                    }
                });
            }

            if (hasRequirements) {
                requirements = theRequirements.map(function (requirement, index) {
                    return _react2.default.createElement(
                        'a',
                        { key: index, className: 'ocb-overlay-item-requirement', href: requirement.url, target: '_blank' },
                        requirement.name
                    );
                });
                requirements = _react2.default.createElement(
                    'span',
                    { className: 'ocb-overlay-item-requirements' },
                    'Requires: ',
                    requirements
                );
            }

            return { hasRequirements: hasRequirements, requirements: requirements };
        }

        /**
         * Returns items from props if they're there, otherwise gets state.items
         * @returns {Array}
         */

    }, {
        key: 'getTheItems',
        value: function getTheItems() {
            if (this.state.preview && this.state.previewTemplates) {
                var theTemplates = this.state.previewTemplates;
                var newTemplateOrder = [];

                //Make Home template first
                theTemplates.forEach(function (template) {
                    if (template.name == 'Home') {
                        newTemplateOrder.unshift(template);
                    } else {
                        newTemplateOrder.push(template);
                    }
                });

                return newTemplateOrder;
            }

            return this.props.items != undefined && this.props.items.length ? this.props.items : this.state.items;
        }

        /**
         * Returns filters from props if they're there, otherwise gets state.filters
         * @returns {Array}
         */

    }, {
        key: 'getTheFilters',
        value: function getTheFilters() {
            return this.props.filters != undefined && this.props.filters.length ? this.props.filters : this.state.filters;
        }

        /**
         * Gets the filter HTML (sorting by folder)
         * @returns {*}
         */

    }, {
        key: 'getFilterHTML',
        value: function getFilterHTML() {
            var _this3 = this;

            var theFilters = this.getTheFilters();
            var filters = null;

            if (theFilters != undefined && theFilters.length) {
                filters = theFilters
                //Remove duplicates
                .filter(function (value, index, self) {
                    return index === self.findIndex(function (t) {
                        return t.id === value.id;
                    });
                })
                //Sort alphabetically
                .sort(function (a, b) {
                    var nameA = a.name.toLowerCase(),
                        nameB = b.name.toLowerCase();
                    if (nameA < nameB) //sort string ascending
                        return -1;
                    if (nameA > nameB) return 1;
                    return 0;
                })
                //Create the menu
                .map(function (filter, index) {
                    var active = _this3.state.current == filter.name ? 'active' : '';

                    return _react2.default.createElement(
                        'div',
                        { key: index, className: 'ocb-overlay-filter ' + active, onClick: function onClick() {
                                return _this3.setState({ current: filter.name });
                            } },
                        filter.name
                    );
                });
            }

            return filters;
        }
    }, {
        key: 'previewTemplates',
        value: function previewTemplates(item) {
            var _this4 = this;

            var newState = { preview: item.name };

            if (!this.state.oldTemplateSite) {
                newState.oldTemplateSite = OCBGlobalSettings.remoteTemplates[0];
            }

            if (!this.state.oldTemplateTheme) {
                newState.oldTemplateTheme = OCBGlobalSettings.templates.theme;
            }

            this.setState(newState);

            OCBGlobalSettings.remoteTemplates[0] = item.url;
            parent.OCBGlobalSettings.remoteTemplates[0] = item.url;
            OCBGlobalSettings.templates.theme = item.name;
            parent.OCBGlobalSettings.templates.theme = item.name;

            var previewTemplates = _settings_helpers2.default.getAllTemplatesSkins('page', '', false, { location: 1 });

            previewTemplates.then(function (result) {
                _this4.handlePreviewTemplates(result);
            });
        }

        /**
         * Gets items HTML (the template items)
         * @returns {XML}
         */

    }, {
        key: 'getItemsHTML',
        value: function getItemsHTML() {
            var _this5 = this;

            var config = this.props.config != undefined ? this.props.config : {};
            config = Object.assign({ deleteButton: true, chooseButton: 'Create' }, config);

            var theItems = this.getTheItems();
            var currentItems = _react2.default.createElement(
                'div',
                { className: 'p-4' },
                'Select an item'
            );
            var showItems = [];

            //get the first 50
            showItems = theItems.filter(function (item, index) {
                if (_this5.state.search) {
                    return item.name.toLowerCase().includes(_this5.state.search.toLowerCase());
                }

                return index < 50;
            });

            var extraCss = '.animated.wow{visibility:visible !important}';

            if (showItems.length) {
                currentItems = showItems.map(function (item, index) {

                    //make sure that the CSS of one template does not affect the CSS of another template with the same object IDs by prepending with item index class
                    var newCss = item.css.replace(/#[a-z0-9-]{7,}/g, function (a) {
                        return '.ocb-overlay-item-' + index + ' ' + a;
                    });

                    var useTemplate = null;
                    var skins = null;

                    if (!_this5.state.preview) {
                        useTemplate = _react2.default.createElement(
                            'div',
                            { className: 'ocb-admin-button ocb-admin-button-square ocb-success pull-right', onClick: function onClick() {
                                    return _this5.previewTemplates(item);
                                } },
                            'Preview'
                        );
                        skins = _react2.default.createElement(_skins_render2.default, { templatePreview: '1', pageTemplates: '1', skins: item.skins });
                    }

                    //See if there are requirements and if there are, if they're met
                    var requirements = _this5.templateHasRequirements(item);

                    if (requirements.hasRequirements) {
                        useTemplate = requirements.requirements;
                    }

                    var name = item.name;

                    if (name.length > 20) {
                        name = name.substring(0, 19).trim() + '...';
                    }

                    return _react2.default.createElement(
                        'div',
                        { key: index, className: 'ocb-overlay-item ocb-overlay-item-' + index },
                        _react2.default.createElement(
                            'div',
                            { className: 'ocb-overlay-item-title' },
                            name,
                            useTemplate
                        ),
                        _react2.default.createElement(
                            'div',
                            { className: 'ocb-overlay-item-inner' },
                            _react2.default.createElement(
                                'div',
                                { className: 'ocb-overlay-item-display' },
                                skins,
                                _react2.default.createElement('style', { dangerouslySetInnerHTML: { __html: newCss + extraCss } }),
                                _react2.default.createElement('div', { dangerouslySetInnerHTML: { __html: item.content } })
                            ),
                            _react2.default.createElement('div', { className: 'ocb-overlay-item-display-screen' })
                        )
                    );
                });
            } else {
                currentItems = _react2.default.createElement(
                    'div',
                    { className: 'p-3' },
                    'No items found.'
                );
            }

            if (!this.getTheItems().length) {
                currentItems = _react2.default.createElement(
                    'div',
                    { className: 'p-3' },
                    'Finding templates...'
                );
            }

            return currentItems;
        }
    }, {
        key: 'switchTemplateTheme',
        value: function switchTemplateTheme() {
            var _this6 = this;

            //Prepend the name of the skins with the name of the template
            var renamedSkins = _settings_helpers2.default.getRenamedTemplateSkins(this.state.previewSkins, this.state.preview);
            var skinsToSave = Object.assign({}, this.props.skinState);

            //Update site skins
            if (this.props.config.skinsUpdate != undefined && this.props.config.skinsUpdate == 'replace') {
                skinsToSave = renamedSkins;
                this.props.replaceSkins(renamedSkins);
            } else {
                //This must match SkinStateFunctions.importSkins
                //Only import new skins, don't overwrite old skins
                Object.keys(renamedSkins).forEach(function (skinId) {
                    if (_this6.props.skinState[skinId] == undefined) {
                        skinsToSave[skinId] = renamedSkins[skinId];
                    }
                });

                this.props.importSkins(renamedSkins);
            }

            //Save skins option
            _settings_helpers2.default.saveCurrentSiteSkin({ skinState: skinsToSave });

            //Update and save site settings with new templateRemote
            var templateUpdate = { cache: 60 * 60 * 24, text: OCBGlobalSettings.remoteTemplates[0] };
            this.props.updateSiteSetting('template_remote_1', templateUpdate);
            this.props.updateSiteSetting('template_theme', { choice: OCBGlobalSettings.templates.theme });
            var newSiteState = Object.assign({}, this.props.siteState, { template_remote_1: templateUpdate, template_theme: { choice: this.state.preview } });
            _settings_helpers2.default.saveCurrentSite({ siteState: newSiteState });

            //Delete the template cache
            _api_helpers2.default.doRequest('runUtility', { action: 'forceDeleteRemoteTemplateCache' });

            //Keep new remote template location
            this.props.config.cancelFunction();
        }
    }, {
        key: 'cancelSwitch',
        value: function cancelSwitch() {
            this.setState({ preview: '', previewTemplates: [], previewSkins: {} });
            OCBGlobalSettings.remoteTemplates[0] = this.state.oldTemplateSite;
            parent.OCBGlobalSettings.remoteTemplates[0] = this.state.oldTemplateSite;
            OCBGlobalSettings.templates.theme = this.state.oldTemplateTheme;
            parent.OCBGlobalSettings.templates.theme = this.state.oldTemplateTheme;
        }

        /**
         * Gets options HTML (the options that are passed in via props are converted to buttons on the bottom of the overlay)
         * @returns {*}
         */

    }, {
        key: 'getOptionsHTML',
        value: function getOptionsHTML() {
            var _this7 = this;

            var options = null;

            if (this.state.preview && this.state.previewTemplates.length && this.props.config.noConfirm === true) {
                return _react2.default.createElement(
                    'div',
                    { className: 'ocb-overlay-options' },
                    _react2.default.createElement(
                        'button',
                        { className: 'ocb-overlay-option ocb-admin-button ocb-success', onClick: function onClick() {
                                return _this7.switchTemplateTheme();
                            } },
                        'Switch to this Theme'
                    ),
                    _react2.default.createElement(
                        'button',
                        { className: 'ocb-overlay-option ocb-admin-button ocb-danger', onClick: function onClick() {
                                return _this7.cancelSwitch();
                            } },
                        'Back'
                    )
                );
            } else if (this.state.preview && this.state.previewTemplates.length) {
                return _react2.default.createElement(
                    'div',
                    { className: 'ocb-overlay-options' },
                    _react2.default.createElement(
                        'button',
                        { className: 'ocb-overlay-option ocb-admin-button ocb-success', onClick: function onClick() {
                                return _this7.cancelSwitch();
                            } },
                        'Back'
                    ),
                    _react2.default.createElement(
                        'button',
                        { className: 'ocb-overlay-option ocb-admin-button ocb-danger', onClick: function onClick() {
                                return _this7.setState({ maybeSwitchTheme: true });
                            } },
                        'Switch to this Theme'
                    )
                );
            }

            if (this.props.options != undefined && this.props.options.length) {
                options = this.props.options.slice().reverse().map(function (option, index) {
                    //We want to be able to pass a default function as well as a function that gets the currentId as a parameter, depending on the button
                    var onClick = option.onClick;
                    if (!onClick || onClick == undefined) {
                        onClick = function onClick() {
                            return option.onClickCurrent(_this7.state.currentId);
                        };
                    }

                    //tooltip
                    var tooltip = null;
                    var tooltipClass = '';
                    if (option.tooltip != undefined) {
                        tooltip = _react2.default.createElement(
                            'div',
                            { className: 'ocb-tooltip ocb-tooltip-large ' + window.OffsproutEffect },
                            option.tooltip
                        );
                        tooltipClass = 'ocb-tooltip-wrap';
                    }

                    return _react2.default.createElement(
                        'button',
                        { key: index, className: 'ocb-overlay-option ocb-admin-button ' + tooltipClass + ' ' + option.classes, onClick: onClick },
                        tooltip,
                        option.text
                    );
                });
            } else {
                options = _react2.default.createElement(
                    'button',
                    { className: 'ocb-overlay-option ocb-admin-button', onClick: function onClick() {
                            return _this7.props.updateAppState('overlay', null);
                        } },
                    'Okay'
                );
            }

            options = _react2.default.createElement(
                'div',
                { className: 'ocb-overlay-options' },
                options
            );

            return options;
        }
    }, {
        key: 'render',
        value: function render() {
            var _this8 = this;

            //activate the various modules that are JS dependent
            window.ocbDoNeededInitializePlugins();
            window.ocbDoNeededInitializePlugins(true);
            window.ocbInitLazy(true);
            parent.ocbDoNeededInitializePlugins(true);
            parent.ocbInitLazy(true);

            var filterHTML = null;
            var wrapClass = 'ocb-overlay-box ocb-template';

            if (this.state.items.length > 30) {
                filterHTML = _react2.default.createElement(
                    'div',
                    { className: 'ocb-overlay-full-column ocb-overlay-filters' },
                    _react2.default.createElement('input', { ref: function ref(input) {
                            _this8.filterInput = input;
                        }, className: 'ocb-overlay-search', placeholder: 'Search...', onChange: function onChange(e) {
                            return _this8.setState({ search: e.target.value });
                        } }),
                    this.getFilterHTML()
                );
            } else {
                //Add this class to make full width if no filter
                wrapClass += ' ocb-template-theme';
            }

            var skins = null;
            if (this.state.preview) {
                skins = _react2.default.createElement(_skins_render2.default, { templatePreview: '1', pageTemplates: '1', skins: this.state.previewSkins });
            }

            var content = _react2.default.createElement(
                'div',
                { className: 'ocb-overlay-content' },
                filterHTML,
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-overlay-full-column ocb-overlay-items' },
                    _react2.default.createElement(_site_options_render2.default, null),
                    skins,
                    _react2.default.createElement(
                        'style',
                        null,
                        '.ocb-overlay-box.ocb-template .jarallax > div > *{width:100% !important;height:100% !important;transform:none !important;margin:0 !important;margin-top:0 !important;}'
                    ),
                    this.getItemsHTML()
                )
            );

            var options = this.getOptionsHTML();

            if (this.state.maybeSwitchTheme) {
                content = _react2.default.createElement(
                    'div',
                    { className: 'ocb-overlay-content ocb-overlay-centered-prompt' },
                    _react2.default.createElement(
                        'div',
                        { className: 'ocb-overlay-centered-prompt-content' },
                        _react2.default.createElement(
                            'h3',
                            null,
                            'Switch Themes and Import New Design Skins?'
                        ),
                        _react2.default.createElement(
                            'p',
                            null,
                            'Switching template themes requires importing new design skins and should not be done too often. Are you sure you want to switch and import?'
                        ),
                        _react2.default.createElement(
                            'div',
                            { className: 'mt-3' },
                            _react2.default.createElement(
                                'button',
                                { className: 'ocb-overlay-option ocb-admin-button ocb-success', onClick: function onClick() {
                                        return _this8.switchTemplateTheme();
                                    } },
                                'Switch'
                            ),
                            _react2.default.createElement(
                                'button',
                                { className: 'ocb-overlay-option ocb-admin-button ocb-danger ml-3', onClick: function onClick() {
                                        return _this8.setState({ maybeSwitchTheme: false });
                                    } },
                                'Cancel'
                            )
                        )
                    )
                );

                options = _react2.default.createElement('div', { className: 'ocb-overlay-options' });
            }

            //Need to include SiteOptionsRender and SkinsRender because this is outside of the iFrame
            //Also need to include a fix to parallax images that makes them non-parallax
            return _react2.default.createElement(
                'div',
                { className: wrapClass },
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-overlay-title' },
                    _react2.default.createElement(
                        'span',
                        null,
                        this.props.title
                    )
                ),
                content,
                options
            );
        }
    }]);

    return OverlayTheme;
}(_react.Component);

function mapStateToProps(_ref) {
    var skinState = _ref.skinState,
        siteState = _ref.siteState;

    return {
        skinState: skinState, siteState: siteState
    };
}

function mapDispatchToProps(dispatch) {
    return (0, _redux.bindActionCreators)({ updateAppState: _index.updateAppState, importSkins: _index.importSkins, updateSiteSetting: _index.updateSiteSetting, replaceSkins: _index.replaceSkins }, dispatch);
}

exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(OverlayTheme);

/***/ }),

/***/ 126:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var OverlayWarning = function (_Component) {
    _inherits(OverlayWarning, _Component);

    function OverlayWarning() {
        _classCallCheck(this, OverlayWarning);

        return _possibleConstructorReturn(this, (OverlayWarning.__proto__ || Object.getPrototypeOf(OverlayWarning)).apply(this, arguments));
    }

    _createClass(OverlayWarning, [{
        key: 'render',
        value: function render() {
            return _react2.default.createElement(
                'div',
                { className: 'ocb-overlay-warning' },
                _react2.default.createElement(
                    'div',
                    { style: { width: '80px', height: '80px', borderWidth: '4px', borderStyle: 'solid', borderColor: 'rgb(238, 162, 54)', borderRadius: '50%', margin: '20px auto', position: 'relative', boxSizing: 'content-box', animation: 'pulseWarning 0.75s infinite alternate' } },
                    _react2.default.createElement('span', { style: { position: 'absolute', width: '5px', height: '47px', left: '50%', top: '10px', borderRadius: '2px', marginLeft: '-2px', backgroundColor: 'rgb(240, 173, 78)', animation: 'pulseWarningIns 0.75s infinite alternate' } }),
                    _react2.default.createElement('span', { style: { position: 'absolute', width: '7px', height: '7px', borderRadius: '50%', marginLeft: '-3px', left: '50%', bottom: '10px', backgroundColor: 'rgb(240, 173, 78)', animation: 'pulseWarningIns 0.75s infinite alternate' } })
                )
            );
        }
    }]);

    return OverlayWarning;
}(_react.Component);

exports.default = OverlayWarning;

/***/ }),

/***/ 127:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _deepmerge = __webpack_require__(9);

var _deepmerge2 = _interopRequireDefault(_deepmerge);

var _settings_helpers = __webpack_require__(2);

var _settings_helpers2 = _interopRequireDefault(_settings_helpers);

var _background_helpers = __webpack_require__(49);

var _background_helpers2 = _interopRequireDefault(_background_helpers);

var _reactRedux = __webpack_require__(5);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ItemLayer = function (_Component) {
    _inherits(ItemLayer, _Component);

    function ItemLayer(props) {
        _classCallCheck(this, ItemLayer);

        var _this = _possibleConstructorReturn(this, (ItemLayer.__proto__ || Object.getPrototypeOf(ItemLayer)).call(this, props));

        _this.suffix = _this.props.suffix != undefined ? _this.props.suffix : '';
        _this.index = _this.props.index != undefined ? _this.props.index : '';
        _this.selector = _this.props.selector != undefined ? _this.props.selector : '> .ocb-item-background' + _this.suffix + _this.index;
        return _this;
    }

    _createClass(ItemLayer, [{
        key: 'shouldComponentUpdate',
        value: function shouldComponentUpdate(nextProps, nextState) {
            if (this.props.currentlyEditingObject && this.props.objectId == this.props.currentlyEditingObject.id || this.props.currentlyEditingObject != false && nextProps.currentlyEditingObject == false || this.props.undoRedoIndex != nextProps.undoRedoIndex || this.props.undoRedoLength != nextProps.undoRedoLength) {
                return true;
            } else {
                return false;
            }
        }
    }, {
        key: 'getContent',
        value: function getContent(settings) {
            if (!settings.include_layer_content.yes || !settings.layer_text.text || settings.layer_type.choice == 'image') return null;

            var classes = this.getTextClasses(settings);

            return _react2.default.createElement('span', { className: 'ocb-item-layer-text' + classes, dangerouslySetInnerHTML: { __html: settings.layer_text.text } });
        }
    }, {
        key: 'getIcon',
        value: function getIcon(settings) {
            if (!settings.include_layer_icon.yes || !settings.layer_icon.icon || settings.layer_type.choice == 'image') return null;

            var classes = this.getIconClasses(settings);

            return _react2.default.createElement(
                'span',
                { className: 'ocb-item-layer-icon' + classes },
                _react2.default.createElement('i', { className: 'fa ' + settings.layer_icon.icon })
            );
        }
    }, {
        key: 'getImage',
        value: function getImage(settings) {
            if (settings.layer_type.choice != 'image') return null;

            var imageSrc = _settings_helpers2.default.getImageURL(settings.layer_image.url, settings.layer_image);

            return _react2.default.createElement('img', { className: 'ocb-item-layer-img', src: imageSrc });
        }
    }, {
        key: 'getSharedClasses',
        value: function getSharedClasses(settings) {
            var classes = '';

            if (settings.remove_layer_mobile.yes) {
                classes += ' ocb-item-background-remove-mobile';
            }

            return classes;
        }
    }, {
        key: 'getSharedInnerClasses',
        value: function getSharedInnerClasses(settings) {
            var classes = '';

            if (settings.layer_content_align.choice != 'none') {
                classes += ' justify-content-' + settings.layer_content_align.choice;
            }

            return classes;
        }
    }, {
        key: 'getTextClasses',
        value: function getTextClasses(settings) {
            var classes = '';

            if (settings.include_layer_content.yes) {
                if (settings.layer_text_color.color != 'custom' && settings.layer_text_color.color != 'default') classes += ' ' + settings.layer_text_color.color + '-color ocb-specific-color';
            }

            return classes;
        }
    }, {
        key: 'getIconClasses',
        value: function getIconClasses(settings) {
            var classes = '';

            if (settings.include_layer_icon.yes) {
                if (settings.layer_icon_color.color != 'custom' && settings.layer_icon_color.color != 'default') classes += ' ' + settings.layer_icon_color.color + '-color ocb-specific-color';
            }

            return classes;
        }
    }, {
        key: 'getTextCSS',
        value: function getTextCSS(settings, css) {
            if (settings.include_layer_content.yes && settings.layer_type.choice != 'image') {
                if (settings.layer_text_size.useDefault == 'custom') {
                    css.fontSize = settings.layer_text_size.value + settings.layer_text_size.units;
                }
                if (settings.layer_text_color.color == 'custom') {
                    css.color += settings.layer_text_color.customColor;
                }
            }

            return css;
        }
    }, {
        key: 'getIconCSS',
        value: function getIconCSS(settings, css) {
            if (settings.include_layer_icon.yes && settings.layer_type.choice != 'image') {
                if (settings.layer_icon_size.useDefault == 'custom') {
                    css.fontSize = settings.layer_icon_size.value + settings.layer_icon_size.units;
                }
                if (settings.layer_icon_color.color == 'custom') {
                    css.color += settings.layer_icon_color.customColor;
                }
            }

            return css;
        }
    }, {
        key: 'getSharedCSS',
        value: function getSharedCSS(settings, css) {
            if (settings.layer_xy.useDefault == 'custom') {
                var xy = settings.layer_xy;
                if (xy.units == 'xy') {
                    if (xy.x != 50 && xy.y != 50) {
                        if (xy.x <= 50) {
                            css.left = xy.x + '%';
                        } else {
                            css.right = 100 - xy.x + '%';
                        }
                        if (xy.y <= 50) {
                            css.top = xy.y + '%';
                        } else {
                            css.bottom = 100 - xy.y + '%';
                        }
                    }
                } else {
                    if (css.transform == undefined) css.transform = '';

                    css.transform += ' translate(' + xy.x + xy.units + ', ' + xy.y + xy.units + ')';
                }
            }
            if (settings.layer_rotation.useDefault == 'custom') {
                if (css.transform == undefined) css.transform = '';

                css.transform += ' rotate(' + settings.layer_rotation.value + 'deg)';
            }
            if (settings.layer_opacity.useDefault == 'custom') {
                css.opacity = settings.layer_opacity.value / 100;
            }

            if (settings.layer_z.useDefault == 'custom') {
                css.zIndex = settings.layer_z.value;
            }

            if (settings.layer_box_shadow.useDefault == 'custom') {
                var shad = settings.layer_box_shadow;
                css.boxShadow = shad.horizontal + 'px ' + shad.vertical + 'px ' + shad.blur + 'px ' + shad.spread + 'px ' + shad.color;
            }

            if (settings.layer_type.choice != 'image') {
                if (settings.layer_width.useDefault == 'custom') {
                    css.width = settings.layer_width.value + settings.layer_width.units;
                }
                if (settings.layer_height.useDefault == 'custom') {
                    css.height = settings.layer_height.value + settings.layer_height.units;
                }
                if (settings.layer_border_radius.useDefault == 'custom') {
                    var br = settings.layer_border_radius;
                    var bRU = br.units;
                    css.borderRadius = br.top + bRU + ' ' + br.right + bRU + ' ' + br.bottom + bRU + ' ' + br.left + bRU + ' ';
                }
            }

            return css;
        }
    }, {
        key: 'getColorClasses',
        value: function getColorClasses(settings) {
            var classes = '';

            if (settings.layer_background.color != 'custom') {
                classes += ' ' + settings.layer_background.color + '-background';
            }

            return classes;
        }
    }, {
        key: 'getColorCSS',
        value: function getColorCSS(settings, css) {
            return css;
        }
    }, {
        key: 'getGradientCSS',
        value: function getGradientCSS(settings, css) {
            var gradient1 = settings.layer_gradient_1.customColor;
            var gradient2 = settings.layer_gradient_2.customColor;

            css.background = 'linear-gradient(135deg, ' + gradient1 + ' 0%, ' + gradient2 + ' 100%)';

            return css;
        }
    }, {
        key: 'getPatternCSS',
        value: function getPatternCSS(settings, css) {
            css.backgroundImage = 'url(' + settings.layer_image.url + ')';
            css.backgroundSize = settings.layer_pattern_size.value + settings.layer_pattern_size.units;
            css.backgroundRepeat = 'repeat';

            return css;
        }
    }, {
        key: 'getImageCSS',
        value: function getImageCSS(settings, css) {
            if (settings.layer_image_size.useDefault == 'custom') {
                if (settings.layer_image_size.units == 'px') {
                    css.width = settings.layer_image_size.value + 'px';
                } else {
                    if (css.transform == undefined) css.transform = '';
                    var scale = settings.layer_image_size.value / 100;
                    css.transform += ' scale(' + scale + ')';
                }
            }

            return css;
        }

        /**
         * must receive the following as properties
         *
         * background_type.choice, background_screen.yes, background.parallax.yes, background.color,
         * gradient_1.color, gradient_2.color, gradient_3.color, gradient_angle.choice,
         * background_image.url,background_custom_video.text, background_youtube_video.text
         *
         * @returns {XML}
         */

    }, {
        key: 'render',
        value: function render() {
            var settings = JSON.parse(JSON.stringify(this.props.settings));
            settings = Array.isArray(settings) && !settings.length ? ItemLayer.defaultProps : (0, _deepmerge2.default)(ItemLayer.defaultProps, settings);

            var css = {},
                innerCSS = {},
                textCSS = {},
                iconCSS = {},
                extraClasses = '',
                otherClasses = '',
                dataAttr = {};

            switch (settings.layer_type.choice) {
                case 'color':
                    otherClasses = this.getColorClasses(settings);
                    break;
                case 'gradient_2':
                    innerCSS = this.getGradientCSS(settings, innerCSS);
                    break;
                case 'pattern':
                    innerCSS = this.getPatternCSS(settings, innerCSS);
                    break;
                case 'image':
                    css = this.getImageCSS(settings, css);
                    break;
            }

            extraClasses += this.getSharedClasses(settings);
            otherClasses += this.getSharedInnerClasses(settings);

            css = this.getSharedCSS(settings, css);

            var theCSS = '';

            textCSS = this.getTextCSS(settings, textCSS);
            iconCSS = this.getIconCSS(settings, iconCSS);

            if (Object.keys(textCSS).length) {
                theCSS += _settings_helpers2.default.wrapCSSProperties(this.props.objectId, '.ocb-item-layer-' + this.props.index + ' .ocb-item-layer-text', textCSS, 'layers');
            }
            if (Object.keys(iconCSS).length) {
                theCSS += _settings_helpers2.default.wrapCSSProperties(this.props.objectId, '.ocb-item-layer-' + this.props.index + ' .ocb-item-layer-icon', iconCSS, 'layers');
            }

            if (css.transform != undefined) {
                innerCSS.transform = css.transform;
            }

            if (css.borderRadius != undefined) {
                innerCSS.borderRadius = css.borderRadius;
            }

            if (css.boxShadow != undefined) {
                innerCSS.boxShadow = css.boxShadow;
            }

            theCSS += _settings_helpers2.default.wrapCSSProperties(this.props.objectId, '.ocb-item-layer-' + this.props.index + ' > .ocb-item-layer-inner', innerCSS, 'layers');

            delete css.transform;
            delete css.borderRadius;
            delete css.boxShadow;
            theCSS += _settings_helpers2.default.wrapCSSProperties(this.props.objectId, '.ocb-item-layer-' + this.props.index, css, 'layers');

            var cssTag = _settings_helpers2.default.wrapCSSInStyleTag(theCSS, this.props.objectId, '.ocb-item-layer-' + this.props.index);

            if (settings.layer_horizontal_parallax.useDefault == 'custom' || settings.layer_vertical_parallax.useDefault == 'custom') {
                var vertical = settings.layer_vertical_parallax.useDefault == 'custom' ? settings.layer_vertical_parallax.value : 0;
                var horizontal = settings.layer_horizontal_parallax.useDefault == 'custom' ? ' ' + settings.layer_horizontal_parallax.value : '';
                dataAttr['data-jarallax-element'] = vertical + horizontal;
                extraClasses += ' jarallax';
            }

            var background = _react2.default.createElement(
                'div',
                { className: 'ocb-item-layer-inner' + otherClasses },
                this.getIcon(settings),
                this.getContent(settings),
                this.getImage(settings)
            );

            return _react2.default.createElement(
                'div',
                _extends({ className: 'ocb-item-layer ocb-item-layer-' + this.props.index + ' ocb-item-layer-' + settings.layer_type.choice + extraClasses }, dataAttr),
                cssTag,
                background
            );
        }
    }]);

    return ItemLayer;
}(_react.Component);

ItemLayer.defaultProps = {
    remove_layer_mobile: {
        yes: 1
    },
    hide_layer: {
        yes: 0
    },
    layer_opacity: {
        value: 100,
        units: '%',
        useDefault: 'default'
    },
    layer_content_align: {
        choice: 'none'
    },
    include_layer_content: {
        yes: 0
    },
    layer_text: {
        text: ''
    },
    layer_text_color: {
        color: 'default',
        customColor: '#ffffff'
    },
    layer_text_size: {
        value: 1,
        units: 'em',
        useDefault: 'default'
    },
    include_layer_icon: {
        yes: 0
    },
    layer_icon: {
        icon: ''
    },
    layer_icon_color: {
        color: 'default',
        customColor: '#ffffff'
    },
    layer_icon_size: {
        value: 1,
        units: 'em',
        useDefault: 'default'
    },
    layer_rotation: {
        value: 0,
        units: 'deg',
        useDefault: 'default'
    },
    layer_xy: {
        x: 0,
        y: 0,
        units: '%',
        useDefault: 'default'
    },
    layer_z: {
        value: 0,
        units: 'z',
        useDefault: 'default'
    },
    layer_height: {
        value: 100,
        units: '%',
        useDefault: 'default'
    },
    layer_width: {
        value: 100,
        units: '%',
        useDefault: 'default'
    },
    layer_border_radius: {
        top: 0,
        left: 0,
        right: 0,
        bottom: 0,
        units: 'px',
        useDefault: 'default'
    },
    layer_type: {
        choice: 'color'
    },
    layer_image: {
        url: ''
    },
    layer_image_size: {
        value: 100,
        units: '%',
        useDefault: 'default'
    },
    layer_pattern_size: {
        value: 10,
        units: '%',
        useDefault: 'default'
    },
    layer_background: {
        color: 'primary_dark',
        customColor: 'rgba(0,0,0,0.2)'
    },
    layer_gradient_1: {
        color: 'custom',
        customColor: '#B300C8'
    },
    layer_gradient_2: {
        color: 'custom',
        customColor: '#4E00C7'
    },
    layer_behind: {
        yes: 1
    },
    layer_box_shadow: {
        useDefault: 'default',
        horizontal: 0,
        vertical: 0,
        blur: 20,
        spread: 5,
        color: 'rgba(0,0,0,0.1)'
    },
    layer_horizontal_parallax: {
        value: 0,
        units: 'px',
        useDefault: 'default'
    },
    layer_vertical_parallax: {
        value: 0,
        units: 'px',
        useDefault: 'default'
    }
};

function mapStateToProps(_ref) {
    var undoRedoState = _ref.undoRedoState,
        workspaceState = _ref.workspaceState,
        skinState = _ref.skinState;


    //console.log('mapStateToProps undoRedoState', undoRedoState.currentIndex);
    var defaultReturn = {
        currentlyEditingObject: false,
        undoRedoIndex: undoRedoState.currentIndex,
        undoRedoLength: undoRedoState.states.length,
        skinState: skinState
    };

    if (workspaceState == undefined) return defaultReturn;
    if (workspaceState.editSettings == undefined) return defaultReturn;
    if (workspaceState.editSettings.id == undefined) return defaultReturn;

    return {
        currentlyEditingObject: workspaceState.editSettings,
        undoRedoIndex: undoRedoState.currentIndex,
        undoRedoLength: undoRedoState.states.length,
        skinState: skinState
    };
}

//Promote Tree from component to container - it needs to know about the new dispatch methods above, updateModuleStandard
//and updateModuleSettings
exports.default = (0, _reactRedux.connect)(mapStateToProps)(ItemLayer);

/***/ }),

/***/ 128:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _deepmerge = __webpack_require__(9);

var _deepmerge2 = _interopRequireDefault(_deepmerge);

var _settings_helpers = __webpack_require__(2);

var _settings_helpers2 = _interopRequireDefault(_settings_helpers);

var _reactRedux = __webpack_require__(5);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ItemShapeDivider = function (_Component) {
    _inherits(ItemShapeDivider, _Component);

    function ItemShapeDivider() {
        _classCallCheck(this, ItemShapeDivider);

        return _possibleConstructorReturn(this, (ItemShapeDivider.__proto__ || Object.getPrototypeOf(ItemShapeDivider)).apply(this, arguments));
    }

    _createClass(ItemShapeDivider, [{
        key: 'shouldComponentUpdate',
        value: function shouldComponentUpdate(nextProps, nextState) {
            if (this.props.currentlyEditingObject && this.props.object.id == this.props.currentlyEditingObject.id || this.props.currentlyEditingObject != false && nextProps.currentlyEditingObject == false || this.props.undoRedoIndex != nextProps.undoRedoIndex || this.props.undoRedoLength != nextProps.undoRedoLength) {
                return true;
            } else {
                return false;
            }
        }
    }, {
        key: 'get_arrow',
        value: function get_arrow(key) {
            return _react2.default.createElement(
                'svg',
                { xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 700 10', preserveAspectRatio: 'none', key: key },
                _react2.default.createElement('path', { className: 'ocb-shape-fill', d: 'M350,10L340,0h20L350,10z' })
            );
        }
    }, {
        key: 'get_arrow_inverted',
        value: function get_arrow_inverted(key) {
            return _react2.default.createElement(
                'svg',
                { xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 700 10', preserveAspectRatio: 'none', key: key },
                _react2.default.createElement('path', { className: 'ocb-shape-fill', d: 'M360 0L350 9.9 340 0 0 0 0 10 700 10 700 0' })
            );
        }
    }, {
        key: 'get_book',
        value: function get_book(key) {
            return _react2.default.createElement(
                'svg',
                { xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 1000 100', preserveAspectRatio: 'none', key: key },
                _react2.default.createElement('path', { className: 'ocb-shape-fill', d: 'M194,99c186.7,0.7,305-78.3,306-97.2c1,18.9,119.3,97.9,306,97.2c114.3-0.3,194,0.3,194,0.3s0-91.7,0-100c0,0,0,0,0-0 L0,0v99.3C0,99.3,79.7,98.7,194,99z' })
            );
        }
    }, {
        key: 'get_book_inverted',
        value: function get_book_inverted(key) {
            return _react2.default.createElement(
                'svg',
                { xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 1000 100', preserveAspectRatio: 'none', key: key },
                _react2.default.createElement('path', { className: 'ocb-shape-fill', d: 'M806,94.7C619.5,90,500,20.3,500,1.7c-1,18.6-117.5,88.3-306,93C92,97.2,0,97.9,0,97.9v-0l0,0v2.3h1000v-2.3 C1000,97.7,920.3,97.6,806,94.7z M350,65.1L350,65.1L350,65.1L350,65.1z' })
            );
        }
    }, {
        key: 'get_clouds',
        value: function get_clouds(key) {
            return _react2.default.createElement(
                'svg',
                { xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 283.5 27.8', preserveAspectRatio: 'xMidYMax slice', key: key },
                _react2.default.createElement('path', { className: 'ocb-shape-fill', d: 'M0 0v6.7c1.9-.8 4.7-1.4 8.5-1 9.5 1.1 11.1 6 11.1 6s2.1-.7 4.3-.2c2.1.5 2.8 2.6 2.8 2.6s.2-.5 1.4-.7c1.2-.2 1.7.2 1.7.2s0-2.1 1.9-2.8c1.9-.7 3.6.7 3.6.7s.7-2.9 3.1-4.1 4.7 0 4.7 0 1.2-.5 2.4 0 1.7 1.4 1.7 1.4h1.4c.7 0 1.2.7 1.2.7s.8-1.8 4-2.2c3.5-.4 5.3 2.4 6.2 4.4.4-.4 1-.7 1.8-.9 2.8-.7 4 .7 4 .7s1.7-5 11.1-6c9.5-1.1 12.3 3.9 12.3 3.9s1.2-4.8 5.7-5.7c4.5-.9 6.8 1.8 6.8 1.8s.6-.6 1.5-.9c.9-.2 1.9-.2 1.9-.2s5.2-6.4 12.6-3.3c7.3 3.1 4.7 9 4.7 9s1.9-.9 4 0 2.8 2.4 2.8 2.4 1.9-1.2 4.5-1.2 4.3 1.2 4.3 1.2.2-1 1.4-1.7 2.1-.7 2.1-.7-.5-3.1 2.1-5.5 5.7-1.4 5.7-1.4 1.5-2.3 4.2-1.1c2.7 1.2 1.7 5.2 1.7 5.2s.3-.1 1.3.5c.5.4.8.8.9 1.1.5-1.4 2.4-5.8 8.4-4 7.1 2.1 3.5 8.9 3.5 8.9s.8-.4 2 0 1.1 1.1 1.1 1.1 1.1-1.1 2.3-1.1 2.1.5 2.1.5 1.9-3.6 6.2-1.2 1.9 6.4 1.9 6.4 2.6-2.4 7.4 0c3.4 1.7 3.9 4.9 3.9 4.9s3.3-6.9 10.4-7.9 11.5 2.6 11.5 2.6.8 0 1.2.2c.4.2.9.9.9.9s4.4-3.1 8.3.2c1.9 1.7 1.5 5 1.5 5s.3-1.1 1.6-1.4c1.3-.3 2.3.2 2.3.2s-.1-1.2.5-1.9 1.9-.9 1.9-.9-4.7-9.3 4.4-13.4c5.6-2.5 9.2.9 9.2.9s5-6.2 15.9-6.2 16.1 8.1 16.1 8.1.7-.2 1.6-.4V0H0z' })
            );
        }
    }, {
        key: 'get_clouds_inverted',
        value: function get_clouds_inverted(key) {
            return _react2.default.createElement(
                'svg',
                { xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 283.5 27.8', preserveAspectRatio: 'xMidYMax slice', key: key },
                _react2.default.createElement('path', { className: 'ocb-shape-fill', d: 'M265.8 3.5c-10.9 0-15.9 6.2-15.9 6.2s-3.6-3.5-9.2-.9c-9.1 4.1-4.4 13.4-4.4 13.4s-1.2.2-1.9.9c-.6.7-.5 1.9-.5 1.9s-1-.5-2.3-.2c-1.3.3-1.6 1.4-1.6 1.4s.4-3.4-1.5-5c-3.9-3.4-8.3-.2-8.3-.2s-.6-.7-.9-.9c-.4-.2-1.2-.2-1.2-.2s-4.4-3.6-11.5-2.6-10.4 7.9-10.4 7.9-.5-3.3-3.9-4.9c-4.8-2.4-7.4 0-7.4 0s2.4-4.1-1.9-6.4-6.2 1.2-6.2 1.2-.9-.5-2.1-.5-2.3 1.1-2.3 1.1.1-.7-1.1-1.1c-1.2-.4-2 0-2 0s3.6-6.8-3.5-8.9c-6-1.8-7.9 2.6-8.4 4-.1-.3-.4-.7-.9-1.1-1-.7-1.3-.5-1.3-.5s1-4-1.7-5.2c-2.7-1.2-4.2 1.1-4.2 1.1s-3.1-1-5.7 1.4-2.1 5.5-2.1 5.5-.9 0-2.1.7-1.4 1.7-1.4 1.7-1.7-1.2-4.3-1.2c-2.6 0-4.5 1.2-4.5 1.2s-.7-1.5-2.8-2.4c-2.1-.9-4 0-4 0s2.6-5.9-4.7-9c-7.3-3.1-12.6 3.3-12.6 3.3s-.9 0-1.9.2c-.9.2-1.5.9-1.5.9S99.4 3 94.9 3.9c-4.5.9-5.7 5.7-5.7 5.7s-2.8-5-12.3-3.9-11.1 6-11.1 6-1.2-1.4-4-.7c-.8.2-1.3.5-1.8.9-.9-2.1-2.7-4.9-6.2-4.4-3.2.4-4 2.2-4 2.2s-.5-.7-1.2-.7h-1.4s-.5-.9-1.7-1.4-2.4 0-2.4 0-2.4-1.2-4.7 0-3.1 4.1-3.1 4.1-1.7-1.4-3.6-.7c-1.9.7-1.9 2.8-1.9 2.8s-.5-.5-1.7-.2c-1.2.2-1.4.7-1.4.7s-.7-2.3-2.8-2.8c-2.1-.5-4.3.2-4.3.2s-1.7-5-11.1-6c-3.8-.4-6.6.2-8.5 1v21.2h283.5V11.1c-.9.2-1.6.4-1.6.4s-5.2-8-16.1-8z' })
            );
        }
    }, {
        key: 'get_clouds2',
        value: function get_clouds2(key) {
            return _react2.default.createElement(
                'svg',
                { xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 100 100', preserveAspectRatio: 'none', key: key },
                _react2.default.createElement('path', { d: 'M-5 100 Q 0 20 5 100 Z M0 100 Q 5 0 10 100 M5 100 Q 10 30 15 100 M10 100 Q 15 10 20 100 M15 100 Q 20 30 25 100 M20 100 Q 25 -10 30 100 M25 100 Q 30 10 35 100 M30 100 Q 35 30 40 100 M35 100 Q 40 10 45 100 M40 100 Q 45 50 50 100 M45 100 Q 50 20 55 100 M50 100 Q 55 40 60 100 M55 100 Q 60 60 65 100 M60 100 Q 65 50 70 100 M65 100 Q 70 20 75 100 M70 100 Q 75 45 80 100 M75 100 Q 80 30 85 100 M80 100 Q 85 20 90 100 M85 100 Q 90 50 95 100 M90 100 Q 95 25 100 100 M95 100 Q 100 15 105 100 Z' })
            );
        }
    }, {
        key: 'get_curve',
        value: function get_curve(key) {
            return _react2.default.createElement(
                'svg',
                { xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 1000 100', preserveAspectRatio: 'none', key: key },
                _react2.default.createElement('path', { className: 'ocb-shape-fill', d: 'M1000,4.3V0H0v4.3C0.9,23.1,126.7,99.2,500,100S1000,22.7,1000,4.3z' })
            );
        }
    }, {
        key: 'get_curve_inverted',
        value: function get_curve_inverted(key) {
            return _react2.default.createElement(
                'svg',
                { xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 1000 100', preserveAspectRatio: 'none', key: key },
                _react2.default.createElement('path', { className: 'ocb-shape-fill', d: 'M500,97C126.7,96.3,0.8,19.8,0,0v100l1000,0V1C1000,19.4,873.3,97.8,500,97z' })
            );
        }
    }, {
        key: 'get_asymmetric_curve',
        value: function get_asymmetric_curve(key) {
            return _react2.default.createElement(
                'svg',
                { xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 1000 100', preserveAspectRatio: 'none', key: key },
                _react2.default.createElement('path', { className: 'ocb-shape-fill', d: 'M0,0c0,0,0,6,0,6.7c0,18,240.2,93.6,615.2,92.6C989.8,98.5,1000,25,1000,6.7c0-0.7,0-6.7,0-6.7H0z' })
            );
        }
    }, {
        key: 'get_asymmetric_curve_inverted',
        value: function get_asymmetric_curve_inverted(key) {
            return _react2.default.createElement(
                'svg',
                { xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 1000 100', preserveAspectRatio: 'none', key: key },
                _react2.default.createElement('path', { className: 'ocb-shape-fill', d: 'M615.2,96.7C240.2,97.8,0,18.9,0,0v100h1000V0C1000,19.2,989.8,96,615.2,96.7z' })
            );
        }
    }, {
        key: 'get_droplets',
        value: function get_droplets(key) {
            return _react2.default.createElement(
                'svg',
                { xmlns: 'http://www.w3.org/2000/svg', height: '100%', viewBox: '0 0 283.5 27.8', preserveAspectRatio: 'xMidYMax slice', key: key },
                _react2.default.createElement('path', { className: 'ocb-shape-fill', d: 'M0 0v1.4c.6.7 1.1 1.4 1.4 2 2 3.8 2.2 6.6 1.8 10.8-.3 3.3-2.4 9.4 0 12.3 1.7 2 3.7 1.4 4.6-.9 1.4-3.8-.7-8.2-.6-12 .1-3.7 3.2-5.5 6.9-4.9 4 .6 4.8 4 4.9 7.4.1 1.8-1.1 7 0 8.5.6.8 1.6 1.2 2.4.5 1.4-1.1.1-5.4.1-6.9.1-3.7.3-8.6 4.1-10.5 5-2.5 6.2 1.6 5.4 5.6-.4 1.7-1 9.2 2.9 6.3 1.5-1.1.7-3.5.5-4.9-.4-2.4-.4-4.3 1-6.5.9-1.4 2.4-3.1 4.2-3 2.4.1 2.7 2.2 4 3.7 1.5 1.8 1.8 2.2 3 .1 1.1-1.9 1.2-2.8 3.6-3.3 1.3-.3 4.8-1.4 5.9-.5 1.5 1.1.6 2.8.4 4.3-.2 1.1-.6 4 1.8 3.4 1.7-.4-.3-4.1.6-5.6 1.3-2.2 5.8-1.4 7 .5 1.3 2.1.5 5.8.1 8.1s-1.2 5-.6 7.4c1.3 5.1 4.4.9 4.3-2.4-.1-4.4-2-8.8-.5-13 .9-2.4 4.6-6.6 7.7-4.5 2.7 1.8.5 7.8.2 10.3-.2 1.7-.8 4.6.2 6.2.9 1.4 2 1.5 2.6-.3.5-1.5-.9-4.5-1-6.1-.2-1.7-.4-3.7.2-5.4 1.8-5.6 3.5 2.4 6.3.6 1.4-.9 4.3-9.4 6.1-3.1.6 2.2-1.3 7.8.7 8.9 4.2 2.3 1.5-7.1 2.2-8 3.1-4 4.7 3.8 6.1 4.1 3.1.7 2.8-7.9 8.1-4.5 1.7 1.1 2.9 3.3 3.2 5.2.4 2.2-1 4.5-.6 6.6 1 4.3 4.4 1.5 4.4-1.7 0-2.7-3-8.3 1.4-9.1 4.4-.9 7.3 3.5 7.8 6.9.3 2-1.5 10.9 1.3 11.3 4.1.6-3.2-15.7 4.8-15.8 4.7-.1 2.8 4.1 3.9 6.6 1 2.4 2.1 1 2.3-.8.3-1.9-.9-3.2 1.3-4.3 5.9-2.9 5.9 5.4 5.5 8.5-.3 2-1.7 8.4 2 8.1 6.9-.5-2.8-16.9 4.8-18.7 4.7-1.2 6.1 3.6 6.3 7.1.1 1.7-1.2 8.1.6 9.1 3.5 2 1.9-7 2-8.4.2-4 1.2-9.6 6.4-9.8 4.7-.2 3.2 4.6 2.7 7.5-.4 2.2 1.3 8.6 3.8 4.4 1.1-1.9-.3-4.1-.3-6 0-1.7.4-3.2 1.3-4.6 1-1.6 2.9-3.5 5.1-2.9 2.5.6 2.3 4.1 4.1 4.9 1.9.8 1.6-.9 2.3-2.1 1.2-2.1 2.1-2.1 4.4-2.4 1.4-.2 3.6-1.5 4.9-.5 2.3 1.7-.7 4.4.1 6.5.6 1.5 2.1 1.7 2.8.3.7-1.4-1.1-3.4-.3-4.8 1.4-2.5 6.2-1.2 7.2 1 2.3 4.8-3.3 12-.2 16.3 3 4.1 3.9-2.8 3.8-4.8-.4-4.3-2.1-8.9 0-13.1 1.3-2.5 5.9-5.7 7.9-2.4 2 3.2-1.3 9.8-.8 13.4.5 4.4 3.5 3.3 2.7-.8-.4-1.9-2.4-10 .6-11.1 3.7-1.4 2.8 7.2 6.5.4 2.2-4.1 4.9-3.1 5.2 1.2.1 1.5-.6 3.1-.4 4.6.2 1.9 1.8 3.7 3.3 1.3 1-1.6-2.6-10.4 2.9-7.3 2.6 1.5 1.6 6.5 4.8 2.7 1.3-1.5 1.7-3.6 4-3.7 2.2-.1 4 2.3 4.8 4.1 1.3 2.9-1.5 8.4.9 10.3 4.2 3.3 3-5.5 2.7-6.9-.6-3.9 1-7.2 5.5-5 4.1 2.1 4.3 7.7 4.1 11.6 0 .8-.6 9.5 2.5 5.2 1.2-1.7-.1-7.7.1-9.6.3-2.9 1.2-5.5 4.3-6.2 4.5-1 7.7 1.5 7.4 5.8-.2 3.5-1.8 7.7-.5 11.1 1 2.7 3.6 2.8 5 .2 1.6-3.1 0-8.3-.4-11.6-.4-4.2-.2-7 1.8-10.8 0 0-.1.1-.1.2-.2.4-.3.7-.4.8v.1c-.1.2-.1.2 0 0v-.1l.4-.8c0-.1.1-.1.1-.2.2-.4.5-.8.8-1.2V0H0zM282.7 3.4z' })
            );
        }
    }, {
        key: 'get_droplets_inverted',
        value: function get_droplets_inverted(key) {
            return _react2.default.createElement(
                'svg',
                { xmlns: 'http://www.w3.org/2000/svg', height: '100%', viewBox: '0 0 283.5 27.8', preserveAspectRatio: 'xMidYMax slice', key: key },
                _react2.default.createElement('path', { className: 'ocb-shape-fill', d: 'M282.7 3.4c-2 3.8-2.2 6.6-1.8 10.8.3 3.3 2 8.5.4 11.6-1.4 2.6-4 2.5-5-.2-1.2-3.4.3-7.6.5-11.1.3-4.3-2.9-6.9-7.4-5.8-3.1.7-4.1 3.3-4.3 6.2-.2 2 1.2 8-.1 9.6-3.1 4.3-2.5-4.5-2.5-5.2.1-4-.1-9.6-4.1-11.6-4.5-2.3-6.1 1-5.5 5 .2 1.4 1.5 10.2-2.7 6.9-2.5-1.9.4-7.5-.9-10.3-.8-1.8-2.6-4.2-4.8-4.1-2.4.1-2.7 2.2-4 3.7-3.3 3.8-2.2-1.2-4.8-2.7-5.5-3.1-2 5.6-2.9 7.3-1.4 2.4-3.1.6-3.3-1.3-.1-1.5.5-3.1.4-4.6-.3-4.3-2.9-5.3-5.2-1.2-3.7 6.7-2.8-1.9-6.5-.4-3 1.1-.9 9.2-.6 11.1.7 4.1-2.2 5.2-2.7.8-.4-3.6 2.8-10.2.8-13.4-2.1-3.3-6.7-.1-7.9 2.4-2.1 4.2-.4 8.7 0 13.1.2 2-.8 8.9-3.8 4.8-3.1-4.3 2.5-11.6.2-16.3-1.1-2.2-5.8-3.5-7.2-1-.8 1.4 1 3.4.3 4.8s-2.2 1.2-2.8-.3c-.8-2.1 2.2-4.8-.1-6.5-1.3-.9-3.5.3-4.9.5-2.4-.1-3.3 0-4.5 2-.7 1.2-.4 3-2.3 2.1-1.9-.8-1.7-4.3-4.1-4.9-2.1-.6-4 1.3-5.1 2.9-.9 1.4-1.3 3-1.3 4.6 0 1.9 1.4 4.2.3 6-2.4 4.2-4.2-2.2-3.8-4.4.5-2.9 2-7.7-2.7-7.5-5.2.3-6.1 5.8-6.4 9.8-.1 1.3 1.5 10.4-2 8.4-1.8-1-.5-7.5-.6-9.1-.1-3.5-1.6-8.3-6.3-7.1-7.6 1.9 2.1 18.2-4.8 18.7-3.7.3-2.3-6.2-2-8.1.5-3.1.5-11.4-5.5-8.5-2.2 1.1-1 2.3-1.3 4.3-.2 1.8-1.3 3.2-2.3.8-1.1-2.5.8-6.7-3.9-6.6-8 .1-.7 16.4-4.8 15.8-2.8-.4-1-9.3-1.3-11.3-.6-3.5-3.5-7.8-7.8-6.9-4.4.9-1.4 6.5-1.4 9.1 0 3.1-3.4 5.9-4.4 1.7-.5-2.2.9-4.4.6-6.6-.3-1.9-1.5-4.1-3.2-5.2-5.3-3.4-4.9 5.2-8.1 4.5-1.4-.3-3-8.1-6.1-4.1-.7.9 2 10.3-2.2 8-2-1.1-.1-6.7-.7-8.9-1.8-6.2-4.7 2.3-6.1 3.1-2.9 1.7-4.6-6.2-6.3-.6-.5 1.7-.4 3.7-.2 5.4.2 1.6 1.5 4.6 1 6.1-.6 1.8-1.7 1.7-2.6.3-1-1.6-.4-4.5-.2-6.2.3-2.5 2.4-8.4-.2-10.3-3.1-2.1-6.8 2.1-7.7 4.5-1.5 4.3.3 8.7.5 13 .1 3.2-3 7.5-4.3 2.4-.6-2.4.2-5.1.6-7.4.4-2.3 1.2-6-.1-8.1-1.2-1.9-5.8-2.7-7-.5-.9 1.6 1.2 5.2-.6 5.6-2.4.6-2-2.3-1.8-3.4.3-1.5 1.1-3.2-.4-4.3-1.2-.9-4.7.3-5.9.5-2.4.5-2.5 1.4-3.6 3.3-1.2 2.1-1.4 1.7-3-.1-1.3-1.5-1.7-3.6-4-3.7-1.8-.1-3.4 1.7-4.2 3-1.4 2.2-1.3 4.1-1 6.5.2 1.4 1 3.8-.5 4.9-3.9 2.9-3.2-4.6-2.9-6.3.8-3.9-.4-8.1-5.4-5.6-3.8 1.9-4.1 6.7-4.1 10.5 0 1.6 1.2 5.8-.1 6.9-.8.7-1.8.3-2.4-.5-1.1-1.5.1-6.7 0-8.5-.1-3.5-.9-6.9-4.9-7.4-3.6-.6-6.7 1.2-6.8 4.9-.1 3.9 2 8.2.6 12-.9 2.4-2.9 2.9-4.6.9-2.4-2.8-.4-9 0-12.3.4-4.2.2-7-1.8-10.8C1.1 2.8.6 2.1 0 1.4v26.4h283.5V2.2c-.3.4-.6.8-.8 1.2z' })
            );
        }
    }, {
        key: 'get_fan_opacity',
        value: function get_fan_opacity(key) {
            return _react2.default.createElement(
                'svg',
                { xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 283.5 19.6', preserveAspectRatio: 'none', key: key },
                _react2.default.createElement('path', { className: 'ocb-shape-fill', style: { opacity: 0.33 }, d: 'M0 0L0 18.8 141.8 4.1 283.5 18.8 283.5 0z' }),
                _react2.default.createElement('path', { className: 'ocb-shape-fill', style: { opacity: 0.33 }, d: 'M0 0L0 12.6 141.8 4 283.5 12.6 283.5 0z' }),
                _react2.default.createElement('path', { className: 'ocb-shape-fill', style: { opacity: 0.33 }, d: 'M0 0L0 6.4 141.8 4 283.5 6.4 283.5 0z' }),
                _react2.default.createElement('path', { className: 'ocb-shape-fill', d: 'M0 0L0 1.2 141.8 4 283.5 1.2 283.5 0z' })
            );
        }
    }, {
        key: 'get_mountains',
        value: function get_mountains(key) {
            return _react2.default.createElement(
                'svg',
                { xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 1000 100', preserveAspectRatio: 'none', key: key },
                _react2.default.createElement('path', { className: 'ocb-shape-fill', opacity: '0.33', d: 'M473,67.3c-203.9,88.3-263.1-34-320.3,0C66,119.1,0,59.7,0,59.7V0h1000v59.7 c0,0-62.1,26.1-94.9,29.3c-32.8,3.3-62.8-12.3-75.8-22.1C806,49.6,745.3,8.7,694.9,4.7S492.4,59,473,67.3z' }),
                _react2.default.createElement('path', { className: 'ocb-shape-fill', opacity: '0.66', d: 'M734,67.3c-45.5,0-77.2-23.2-129.1-39.1c-28.6-8.7-150.3-10.1-254,39.1 s-91.7-34.4-149.2,0C115.7,118.3,0,39.8,0,39.8V0h1000v36.5c0,0-28.2-18.5-92.1-18.5C810.2,18.1,775.7,67.3,734,67.3z' }),
                _react2.default.createElement('path', { className: 'ocb-shape-fill', d: 'M766.1,28.9c-200-57.5-266,65.5-395.1,19.5C242,1.8,242,5.4,184.8,20.6C128,35.8,132.3,44.9,89.9,52.5C28.6,63.7,0,0,0,0 h1000c0,0-9.9,40.9-83.6,48.1S829.6,47,766.1,28.9z' })
            );
        }
    }, {
        key: 'get_pyramids',
        value: function get_pyramids(key) {
            return _react2.default.createElement(
                'svg',
                { xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 1000 100', preserveAspectRatio: 'none', key: key },
                _react2.default.createElement('path', { className: 'ocb-shape-fill', d: 'M761.9,44.1L643.1,27.2L333.8,98L0,3.8V0l1000,0v3.9' })
            );
        }
    }, {
        key: 'get_pyramids_inverted',
        value: function get_pyramids_inverted(key) {
            return _react2.default.createElement(
                'svg',
                { xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 1000 100', preserveAspectRatio: 'none', key: key },
                _react2.default.createElement('path', { className: 'ocb-shape-fill', d: 'M761.9,40.6L643.1,24L333.9,93.8L0.1,1H0v99h1000V1' })
            );
        }
    }, {
        key: 'get_split',
        value: function get_split(key) {
            return _react2.default.createElement(
                'svg',
                { xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 1000 20', preserveAspectRatio: 'none', key: key },
                _react2.default.createElement('path', { className: 'ocb-shape-fill', d: 'M0,0v3c0,0,393.8,0,483.4,0c9.2,0,16.6,7.4,16.6,16.6c0-9.1,7.4-16.6,16.6-16.6C606.2,3,1000,3,1000,3V0H0z' })
            );
        }
    }, {
        key: 'get_split_inverted',
        value: function get_split_inverted(key) {
            return _react2.default.createElement(
                'svg',
                { xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 1000 20', preserveAspectRatio: 'none', key: key },
                _react2.default.createElement('path', { className: 'ocb-shape-fill', d: 'M519.8,0.2c-11,0-19.8,8.5-19.8,19c0-10.4-8.8-19-19.8-19L0,0v20h1000V0.2H519.8z' })
            );
        }
    }, {
        key: 'get_teeth',
        value: function get_teeth(key) {
            return _react2.default.createElement(
                'svg',
                { xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 1800 5.8', preserveAspectRatio: 'none', key: key },
                _react2.default.createElement('path', { className: 'ocb-shape-fill', d: 'M5.4.4l5.4 5.3L16.5.4l5.4 5.3L27.5.4 33 5.7 38.6.4l5.5 5.4h.1L49.9.4l5.4 5.3L60.9.4l5.5 5.3L72 .4l5.5 5.3L83.1.4l5.4 5.3L94.1.4l5.5 5.4h.2l5.6-5.4 5.5 5.3 5.6-5.3 5.4 5.3 5.6-5.3 5.5 5.3 5.6-5.3 5.5 5.4h.2l5.6-5.4 5.4 5.3L161 .4l5.4 5.3L172 .4l5.5 5.3 5.6-5.3 5.4 5.3 5.7-5.3 5.4 5.4h.2l5.6-5.4 5.5 5.3 5.6-5.3 5.5 5.3 5.6-5.3 5.4 5.3 5.6-5.3 5.5 5.4h.2l5.6-5.4 5.5 5.3L261 .4l5.4 5.3L272 .4l5.5 5.3 5.6-5.3 5.5 5.3 5.6-5.3 5.5 5.4h.1l5.7-5.4 5.4 5.3 5.6-5.3 5.5 5.3 5.6-5.3 5.4 5.3 5.7-5.3 5.4 5.4h.2l5.6-5.4 5.5 5.3L361 .4l5.5 5.3 5.6-5.3 5.4 5.3 5.6-5.3 5.5 5.3 5.6-5.3 5.5 5.4h.1l5.7-5.4 5.4 5.3 5.6-5.3 5.5 5.3 5.6-5.3 5.5 5.3 5.6-5.3 5.5 5.4h.1l5.6-5.4 5.5 5.3L461 .4l5.5 5.3 5.6-5.3 5.4 5.3 5.7-5.3 5.4 5.3 5.6-5.3 5.5 5.4h.2l5.6-5.4 5.5 5.3 5.6-5.3 5.4 5.3 5.6-5.3 5.5 5.3 5.6-5.3 5.5 5.4h.1L550 .4l5.4 5.3L561 .4l5.5 5.3 5.6-5.3 5.5 5.3 5.6-5.3 5.4 5.3 5.6-5.3 5.5 5.4h.2l5.6-5.4 5.5 5.3 5.6-5.3 5.4 5.3 5.7-5.3 5.4 5.3 5.6-5.3 5.5 5.4h.2L650 .4l5.5 5.3 5.6-5.3 5.4 5.3 5.6-5.3 5.5 5.3 5.6-5.3 5.5 5.3 5.6-5.3 5.4 5.4h.2l5.6-5.4 5.5 5.3 5.6-5.3 5.5 5.3 5.6-5.3 5.4 5.3 5.6-5.3 5.5 5.4h.2L750 .4l5.5 5.3 5.6-5.3 5.4 5.3 5.7-5.3 5.4 5.3 5.6-5.3 5.5 5.3 5.6-5.3 5.5 5.4h.1l5.7-5.4 5.4 5.3 5.6-5.3 5.5 5.3 5.6-5.3 5.5 5.3 5.6-5.3 5.4 5.4h.2L850 .4l5.5 5.3 5.6-5.3 5.5 5.3 5.6-5.3 5.4 5.3 5.6-5.3 5.5 5.3 5.6-5.3 5.5 5.4h.2l5.6-5.4 5.4 5.3 5.7-5.3 5.4 5.3 5.6-5.3 5.5 5.3 5.6-5.3 5.5 5.4h.1l5.7-5.4 5.4 5.3 5.6-5.3 5.5 5.3 5.6-5.3 5.5 5.3 5.6-5.3 5.4 5.3 5.6-5.3 5.5 5.4h.2l5.6-5.4 5.5 5.3 5.6-5.3 5.4 5.3 5.6-5.3 5.5 5.3 5.6-5.3 5.5 5.4h.2l5.6-5.4 5.4 5.3 5.7-5.3 5.4 5.3 5.6-5.3 5.5 5.3 5.6-5.3 5.5 5.3 5.6-5.3 5.4 5.4h.2l5.6-5.4 5.5 5.3 5.6-5.3 5.5 5.3 5.6-5.3 5.4 5.3 5.6-5.3 5.5 5.4h.2l5.6-5.4 5.5 5.3 5.6-5.3 5.4 5.3 5.6-5.3 5.5 5.3 5.6-5.3 5.5 5.3 5.6-5.3 5.5 5.4h.1l5.7-5.4 5.4 5.3 5.6-5.3 5.5 5.3 5.6-5.3 5.5 5.3 5.6-5.3 5.4 5.4h.2l5.6-5.4 5.5 5.3 5.6-5.3 5.5 5.3 5.6-5.3 5.4 5.3 5.6-5.3 5.5 5.3 5.6-5.3 5.5 5.4h.2l5.6-5.4 5.4 5.3 5.6-5.3 5.5 5.3 5.6-5.3 5.5 5.3 5.6-5.3 5.5 5.4h.1l5.7-5.4 5.4 5.3 5.6-5.3 5.5 5.3 5.6-5.3 5.5 5.3 5.6-5.3 5.4 5.3 5.6-5.3 5.5 5.4h.2l5.6-5.4 5.5 5.3 5.6-5.3 5.4 5.3 5.6-5.3 5.5 5.3 5.6-5.3 5.5 5.4h.2l5.6-5.4 5.4 5.3 5.6-5.3 5.5 5.3 5.6-5.3 5.5 5.3 5.6-5.3 5.4 5.3 5.7-5.3 5.4 5.4h.2l5.6-5.4 5.5 5.3 5.6-5.3 5.5 5.3 5.6-5.3 5.4 5.3 5.6-5.3 5.5 5.4h.2l5.6-5.4 5.5 5.3 5.6-5.3 5.4 5.3 5.6-5.3 5.5 5.3 5.6-5.3 5.5 5.3 5.6-5.3 5.5 5.4h.1l5.6-5.4 5.5 5.3 5.6-5.3 5.5 5.3 5.6-5.3 5.4 5.3 5.7-5.3 5.4 5.4h.2l5.6-5.4 5.5 5.3 5.6-5.3 5.5 5.3 5.6-5.3 5.4 5.3 5.6-5.3 5.5 5.3 5.6-5.3 5.5 5.4h.1l5.7-5.4 5.4 5.3 5.6-5.3 5.5 5.3 5.6-5.3 5.5 5.3 5.6-5.3 5.5 5.4h.1l5.6-5.4 5.5 5.3 5.6-5.3 5.5 5.3 5.6-5.3 5.4 5.3 5.7-5.3 5.4 5.3 5.6-5.3 5.5 5.4V0H-.2v5.8z' })
            );
        }
    }, {
        key: 'get_triangle',
        value: function get_triangle(key) {
            return _react2.default.createElement(
                'svg',
                { xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 1000 100', preserveAspectRatio: 'none', key: key },
                _react2.default.createElement('path', { className: 'ocb-shape-fill', d: 'M500,98.9L0,6.1V0h1000v6.1L500,98.9z' })
            );
        }
    }, {
        key: 'get_triangle_inverted',
        value: function get_triangle_inverted(key) {
            return _react2.default.createElement(
                'svg',
                { xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 1000 100', preserveAspectRatio: 'none', key: key },
                _react2.default.createElement('path', { className: 'ocb-shape-fill', d: 'M500.2,94.7L0,0v100h1000V0L500.2,94.7z' })
            );
        }
    }, {
        key: 'get_asymmetric_triangle',
        value: function get_asymmetric_triangle(key) {
            return _react2.default.createElement(
                'svg',
                { xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 1000 100', preserveAspectRatio: 'none', key: key },
                _react2.default.createElement('path', { className: 'ocb-shape-fill', d: 'M738,99l262-93V0H0v5.6L738,99z' })
            );
        }
    }, {
        key: 'get_asymmetric_triangle_inverted',
        value: function get_asymmetric_triangle_inverted(key) {
            return _react2.default.createElement(
                'svg',
                { xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 1000 100', preserveAspectRatio: 'none', key: key },
                _react2.default.createElement('path', { className: 'ocb-shape-fill', d: 'M737.9,94.7L0,0v100h1000V0L737.9,94.7z' })
            );
        }
    }, {
        key: 'get_tilt',
        value: function get_tilt(key) {
            return _react2.default.createElement(
                'svg',
                { xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 1000 100', preserveAspectRatio: 'none', key: key },
                _react2.default.createElement('path', { className: 'ocb-shape-fill', d: 'M0,6V0h1000v100L0,6z' })
            );
        }
    }, {
        key: 'get_tilt_opacity',
        value: function get_tilt_opacity(key) {
            return _react2.default.createElement(
                'svg',
                { xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 2600 131.1', preserveAspectRatio: 'none', key: key },
                _react2.default.createElement('path', { className: 'ocb-shape-fill', d: 'M0 0L2600 0 2600 69.1 0 0z' }),
                _react2.default.createElement('path', { className: 'ocb-shape-fill', style: { opacity: 0.5 }, d: 'M0 0L2600 0 2600 69.1 0 69.1z' }),
                _react2.default.createElement('path', { className: 'ocb-shape-fill', style: { opacity: 0.25 }, d: 'M2600 0L0 0 0 130.1 2600 69.1z' })
            );
        }
    }, {
        key: 'get_waves',
        value: function get_waves(key) {
            return _react2.default.createElement(
                'svg',
                { xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 1000 100', preserveAspectRatio: 'none', key: key },
                _react2.default.createElement('path', { className: 'ocb-shape-fill', d: 'M421.9,6.5c22.6-2.5,51.5,0.4,75.5,5.3c23.6,4.9,70.9,23.5,100.5,35.7c75.8,32.2,133.7,44.5,192.6,49.7  c23.6,2.1,48.7,3.5,103.4-2.5c54.7-6,106.2-25.6,106.2-25.6V0H0v30.3c0,0,72,32.6,158.4,30.5c39.2-0.7,92.8-6.7,134-22.4  c21.2-8.1,52.2-18.2,79.7-24.2C399.3,7.9,411.6,7.5,421.9,6.5z' })
            );
        }
    }, {
        key: 'get_waves_inverted',
        value: function get_waves_inverted(key) {
            return _react2.default.createElement(
                'svg',
                { xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 1000 100', preserveAspectRatio: 'none', key: key },
                _react2.default.createElement('path', { className: 'ocb-shape-fill', d: 'M790.5,93.1c-59.3-5.3-116.8-18-192.6-50c-29.6-12.7-76.9-31-100.5-35.9c-23.6-4.9-52.6-7.8-75.5-5.3 c-10.2,1.1-22.6,1.4-50.1,7.4c-27.2,6.3-58.2,16.6-79.4,24.7c-41.3,15.9-94.9,21.9-134,22.6C72,58.2,0,25.8,0,25.8V100h1000V65.3 c0,0-51.5,19.4-106.2,25.7C839.5,97,814.1,95.2,790.5,93.1z' })
            );
        }
    }, {
        key: 'get_waves_brush',
        value: function get_waves_brush(key) {
            return _react2.default.createElement(
                'svg',
                { xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 283.5 27.8', preserveAspectRatio: 'none', key: key },
                _react2.default.createElement('path', { className: 'ocb-shape-fill', d: 'M283.5,9.7c0,0-7.3,4.3-14,4.6c-6.8,0.3-12.6,0-20.9-1.5c-11.3-2-33.1-10.1-44.7-5.7 s-12.1,4.6-18,7.4c-6.6,3.2-20,9.6-36.6,9.3C131.6,23.5,99.5,7.2,86.3,8c-1.4,0.1-6.6,0.8-10.5,2c-3.8,1.2-9.4,3.8-17,4.7 c-3.2,0.4-8.3,1.1-14.2,0.9c-1.5-0.1-6.3-0.4-12-1.6c-5.7-1.2-11-3.1-15.8-3.7C6.5,9.2,0,10.8,0,10.8V0h283.5V9.7z M260.8,11.3 c-0.7-1-2-0.4-4.3-0.4c-2.3,0-6.1-1.2-5.8-1.1c0.3,0.1,3.1,1.5,6,1.9C259.7,12.2,261.4,12.3,260.8,11.3z M242.4,8.6 c0,0-2.4-0.2-5.6-0.9c-3.2-0.8-10.3-2.8-15.1-3.5c-8.2-1.1-15.8,0-15.1,0.1c0.8,0.1,9.6-0.6,17.6,1.1c3.3,0.7,9.3,2.2,12.4,2.7 C239.9,8.7,242.4,8.6,242.4,8.6z M185.2,8.5c1.7-0.7-13.3,4.7-18.5,6.1c-2.1,0.6-6.2,1.6-10,2c-3.9,0.4-8.9,0.4-8.8,0.5 c0,0.2,5.8,0.8,11.2,0c5.4-0.8,5.2-1.1,7.6-1.6C170.5,14.7,183.5,9.2,185.2,8.5z M199.1,6.9c0.2,0-0.8-0.4-4.8,1.1 c-4,1.5-6.7,3.5-6.9,3.7c-0.2,0.1,3.5-1.8,6.6-3C197,7.5,199,6.9,199.1,6.9z M283,6c-0.1,0.1-1.9,1.1-4.8,2.5s-6.9,2.8-6.7,2.7 c0.2,0,3.5-0.6,7.4-2.5C282.8,6.8,283.1,5.9,283,6z M31.3,11.6c0.1-0.2-1.9-0.2-4.5-1.2s-5.4-1.6-7.8-2C15,7.6,7.3,8.5,7.7,8.6 C8,8.7,15.9,8.3,20.2,9.3c2.2,0.5,2.4,0.5,5.7,1.6S31.2,11.9,31.3,11.6z M73,9.2c0.4-0.1,3.5-1.6,8.4-2.6c4.9-1.1,8.9-0.5,8.9-0.8 c0-0.3-1-0.9-6.2-0.3S72.6,9.3,73,9.2z M71.6,6.7C71.8,6.8,75,5.4,77.3,5c2.3-0.3,1.9-0.5,1.9-0.6c0-0.1-1.1-0.2-2.7,0.2 C74.8,5.1,71.4,6.6,71.6,6.7z M93.6,4.4c0.1,0.2,3.5,0.8,5.6,1.8c2.1,1,1.8,0.6,1.9,0.5c0.1-0.1-0.8-0.8-2.4-1.3 C97.1,4.8,93.5,4.2,93.6,4.4z M65.4,11.1c-0.1,0.3,0.3,0.5,1.9-0.2s2.6-1.3,2.2-1.2s-0.9,0.4-2.5,0.8C65.3,10.9,65.5,10.8,65.4,11.1 z M34.5,12.4c-0.2,0,2.1,0.8,3.3,0.9c1.2,0.1,2,0.1,2-0.2c0-0.3-0.1-0.5-1.6-0.4C36.6,12.8,34.7,12.4,34.5,12.4z M152.2,21.1 c-0.1,0.1-2.4-0.3-7.5-0.3c-5,0-13.6-2.4-17.2-3.5c-3.6-1.1,10,3.9,16.5,4.1C150.5,21.6,152.3,21,152.2,21.1z' }),
                _react2.default.createElement('path', { className: 'ocb-shape-fill', d: 'M269.6,18c-0.1-0.1-4.6,0.3-7.2,0c-7.3-0.7-17-3.2-16.6-2.9c0.4,0.3,13.7,3.1,17,3.3 C267.7,18.8,269.7,18,269.6,18z' }),
                _react2.default.createElement('path', { className: 'ocb-shape-fill', d: 'M227.4,9.8c-0.2-0.1-4.5-1-9.5-1.2c-5-0.2-12.7,0.6-12.3,0.5c0.3-0.1,5.9-1.8,13.3-1.2 S227.6,9.9,227.4,9.8z' }),
                _react2.default.createElement('path', { className: 'ocb-shape-fill', d: 'M204.5,13.4c-0.1-0.1,2-1,3.2-1.1c1.2-0.1,2,0,2,0.3c0,0.3-0.1,0.5-1.6,0.4 C206.4,12.9,204.6,13.5,204.5,13.4z' }),
                _react2.default.createElement('path', { className: 'ocb-shape-fill', d: 'M201,10.6c0-0.1-4.4,1.2-6.3,2.2c-1.9,0.9-6.2,3.1-6.1,3.1c0.1,0.1,4.2-1.6,6.3-2.6 S201,10.7,201,10.6z' }),
                _react2.default.createElement('path', { className: 'ocb-shape-fill', d: 'M154.5,26.7c-0.1-0.1-4.6,0.3-7.2,0c-7.3-0.7-17-3.2-16.6-2.9c0.4,0.3,13.7,3.1,17,3.3 C152.6,27.5,154.6,26.8,154.5,26.7z' }),
                _react2.default.createElement('path', { className: 'ocb-shape-fill', d: 'M41.9,19.3c0,0,1.2-0.3,2.9-0.1c1.7,0.2,5.8,0.9,8.2,0.7c4.2-0.4,7.4-2.7,7-2.6 c-0.4,0-4.3,2.2-8.6,1.9c-1.8-0.1-5.1-0.5-6.7-0.4S41.9,19.3,41.9,19.3z' }),
                _react2.default.createElement('path', { className: 'ocb-shape-fill', d: 'M75.5,12.6c0.2,0.1,2-0.8,4.3-1.1c2.3-0.2,2.1-0.3,2.1-0.5c0-0.1-1.8-0.4-3.4,0 C76.9,11.5,75.3,12.5,75.5,12.6z' }),
                _react2.default.createElement('path', { className: 'ocb-shape-fill', d: 'M15.6,13.2c0-0.1,4.3,0,6.7,0.5c2.4,0.5,5,1.9,5,2c0,0.1-2.7-0.8-5.1-1.4 C19.9,13.7,15.7,13.3,15.6,13.2z' })
            );
        }
    }, {
        key: 'get_waves_pattern',
        value: function get_waves_pattern(key) {
            return _react2.default.createElement(
                'svg',
                { xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 1047.1 3.7', preserveAspectRatio: 'xMidYMin slice', key: key },
                _react2.default.createElement('path', { className: 'ocb-shape-fill', d: 'M1047.1,0C557,0,8.9,0,0,0v1.6c0,0,0.6-1.5,2.7-0.3C3.9,2,6.1,4.1,8.3,3.5c0.9-0.2,1.5-1.9,1.5-1.9 s0.6-1.5,2.7-0.3C13.8,2,16,4.1,18.2,3.5c0.9-0.2,1.5-1.9,1.5-1.9s0.6-1.5,2.7-0.3C23.6,2,25.9,4.1,28,3.5c0.9-0.2,1.5-1.9,1.5-1.9 c0,0,0.6-1.5,2.7-0.3c1.2,0.7,3.5,2.8,5.6,2.2c0.9-0.2,1.5-1.9,1.5-1.9c0,0,0.6-1.5,2.7-0.3c1.2,0.7,3.5,2.8,5.6,2.2 c0.9-0.2,1.5-1.9,1.5-1.9s0.6-1.5,2.7-0.3c1.2,0.7,3.5,2.8,5.6,2.2c0.9-0.2,1.5-1.9,1.5-1.9s0.6-1.5,2.7-0.3C63,2,65.3,4.1,67.4,3.5 C68.3,3.3,69,1.6,69,1.6s0.6-1.5,2.7-0.3c1.2,0.7,3.5,2.8,5.6,2.2c0.9-0.2,1.5-1.9,1.5-1.9c0,0,0.6-1.5,2.7-0.3 C82.7,2,85,4.1,87.1,3.5c0.9-0.2,1.5-1.9,1.5-1.9s0.6-1.5,2.7-0.3C92.6,2,94.8,4.1,97,3.5c0.9-0.2,1.5-1.9,1.5-1.9s0.6-1.5,2.7-0.3 c1.2,0.7,3.5,2.8,5.6,2.2c0.9-0.2,1.5-1.9,1.5-1.9s0.6-1.5,2.7-0.3c1.2,0.7,3.5,2.8,5.6,2.2c0.9-0.2,1.5-1.9,1.5-1.9 c0,0,0.6-1.5,2.7-0.3c1.2,0.7,3.5,2.8,5.6,2.2c0.9-0.2,1.5-1.9,1.5-1.9c0,0,0.6-1.5,2.7-0.3c1.2,0.7,3.5,2.8,5.6,2.2 c0.9-0.2,1.5-1.9,1.5-1.9s0.6-1.5,2.7-0.3c1.2,0.7,3.5,2.8,5.6,2.2c0.9-0.2,1.5-1.9,1.5-1.9s0.6-1.5,2.7-0.3 c1.2,0.7,3.5,2.8,5.6,2.2c0.9-0.2,1.5-1.9,1.5-1.9s0.6-1.5,2.7-0.3c1.2,0.7,3.5,2.8,5.6,2.2c0.9-0.2,1.5-1.9,1.5-1.9 c0,0,0.6-1.5,2.7-0.3c1.2,0.7,3.5,2.8,5.6,2.2c0.9-0.2,1.5-1.9,1.5-1.9s0.6-1.5,2.7-0.3c1.2,0.7,3.5,2.8,5.6,2.2 c0.9-0.2,1.5-1.9,1.5-1.9s0.6-1.5,2.7-0.3c1.2,0.7,3.5,2.8,5.6,2.2c0.9-0.2,1.5-1.9,1.5-1.9s0.6-1.5,2.7-0.3 c1.2,0.7,3.5,2.8,5.6,2.2c0.9-0.2,1.5-1.9,1.5-1.9c0,0,0.6-1.5,2.7-0.3c1.2,0.7,3.5,2.8,5.6,2.2c0.9-0.2,1.5-1.9,1.5-1.9 c0,0,0.6-1.5,2.7-0.3c1.2,0.7,3.5,2.8,5.6,2.2c0.9-0.2,1.5-1.9,1.5-1.9s0.6-1.5,2.7-0.3c1.2,0.7,3.5,2.8,5.6,2.2 c0.9-0.2,1.5-1.9,1.5-1.9s0.6-1.5,2.7-0.3c1.2,0.7,3.5,2.8,5.6,2.2c0.9-0.2,1.5-1.9,1.5-1.9s0.6-1.5,2.7-0.3 c1.2,0.7,3.5,2.8,5.6,2.2c0.9-0.2,1.5-1.9,1.5-1.9c0,0,0.6-1.5,2.7-0.3c1.2,0.7,3.5,2.8,5.6,2.2c0.9-0.2,1.5-1.9,1.5-1.9 s0.6-1.5,2.7-0.3c1.2,0.7,3.5,2.8,5.6,2.2c0.9-0.2,1.5-1.9,1.5-1.9s0.6-1.5,2.7-0.3c1.2,0.7,3.5,2.8,5.6,2.2 c0.9-0.2,1.5-1.9,1.5-1.9s0.6-1.5,2.7-0.3c1.2,0.7,3.5,2.8,5.6,2.2c0.9-0.2,1.5-1.9,1.5-1.9c0,0,0.6-1.5,2.7-0.3 c1.2,0.7,3.5,2.8,5.6,2.2c0.9-0.2,1.5-1.9,1.5-1.9c0,0,0.6-1.5,2.7-0.3c1.2,0.7,3.5,2.8,5.6,2.2c0.9-0.2,1.5-1.9,1.5-1.9 s0.6-1.5,2.7-0.3c1.2,0.7,3.5,2.8,5.6,2.2c0.9-0.2,1.5-1.9,1.5-1.9s0.6-1.5,2.7-0.3c1.2,0.7,3.5,2.8,5.6,2.2 c0.9-0.2,1.5-1.9,1.5-1.9s0.6-1.5,2.7-0.3c1.2,0.7,3.5,2.8,5.6,2.2c0.9-0.2,1.5-1.9,1.5-1.9c0,0,0.6-1.5,2.7-0.3 c1.2,0.7,3.5,2.8,5.6,2.2c0.9-0.2,1.5-1.9,1.5-1.9s0.6-1.5,2.7-0.3c1.2,0.7,3.5,2.8,5.6,2.2c0.9-0.2,1.5-1.9,1.5-1.9 s0.6-1.5,2.7-0.3c1.2,0.7,3.5,2.8,5.6,2.2c0.9-0.2,1.5-1.9,1.5-1.9s0.6-1.5,2.7-0.3c1.2,0.7,3.5,2.8,5.6,2.2 c0.9-0.2,1.5-1.9,1.5-1.9c0,0,0.6-1.5,2.7-0.3c1.2,0.7,3.5,2.8,5.6,2.2c0.9-0.2,1.5-1.9,1.5-1.9c0,0,0.6-1.5,2.7-0.3 c1.2,0.7,3.5,2.8,5.6,2.2c0.9-0.2,1.5-1.9,1.5-1.9s0.6-1.5,2.7-0.3c1.2,0.7,3.5,2.8,5.6,2.2c0.9-0.2,1.5-1.9,1.5-1.9 s0.6-1.5,2.7-0.3c1.2,0.7,3.5,2.8,5.6,2.2c0.9-0.2,1.5-1.9,1.5-1.9s0.6-1.5,2.7-0.3c1.2,0.7,3.5,2.8,5.6,2.2 c0.9-0.2,1.5-1.9,1.5-1.9c0,0,0.6-1.5,2.7-0.3c1.2,0.7,3.5,2.8,5.6,2.2c0.9-0.2,1.5-1.9,1.5-1.9s0.6-1.5,2.7-0.3 c1.2,0.7,3.5,2.8,5.6,2.2c0.9-0.2,1.5-1.9,1.5-1.9s0.6-1.5,2.7-0.3c1.2,0.7,3.5,2.8,5.6,2.2c0.9-0.2,1.5-1.9,1.5-1.9 s0.6-1.5,2.7-0.3c1.2,0.7,3.5,2.8,5.6,2.2c0.9-0.2,1.5-1.9,1.5-1.9c0,0,0.6-1.5,2.7-0.3c1.2,0.7,3.5,2.8,5.6,2.2 c0.9-0.2,1.5-1.9,1.5-1.9c0,0,0.6-1.5,2.7-0.3c1.2,0.7,3.5,2.8,5.6,2.2c0.9-0.2,1.5-1.9,1.5-1.9s0.6-1.5,2.7-0.3 c1.2,0.7,3.5,2.8,5.6,2.2c0.9-0.2,1.5-1.9,1.5-1.9s0.6-1.5,2.7-0.3c1.2,0.7,3.5,2.8,5.6,2.2c0.9-0.2,1.5-1.9,1.5-1.9 s0.6-1.5,2.7-0.3c1.2,0.7,3.5,2.8,5.6,2.2c0.9-0.2,1.5-1.9,1.5-1.9c0,0,0.6-1.5,2.7-0.3c1.2,0.7,3.5,2.8,5.6,2.2 c0.9-0.2,1.5-1.9,1.5-1.9s0.6-1.5,2.7-0.3c1.2,0.7,3.5,2.8,5.6,2.2c0.9-0.2,1.5-1.9,1.5-1.9s0.6-1.5,2.7-0.3 c1.2,0.7,3.5,2.8,5.6,2.2c0.9-0.2,1.5-1.9,1.5-1.9s0.6-1.5,2.7-0.3c1.2,0.7,3.5,2.8,5.6,2.2c0.9-0.2,1.5-1.9,1.5-1.9 c0,0,0.6-1.5,2.7-0.3c1.2,0.7,3.5,2.8,5.6,2.2c0.9-0.2,1.5-1.9,1.5-1.9c0,0,0.6-1.5,2.7-0.3c1.2,0.7,3.5,2.8,5.6,2.2 c0.9-0.2,1.5-1.9,1.5-1.9s0.6-1.5,2.7-0.3c1.2,0.7,3.5,2.8,5.6,2.2c0.9-0.2,1.5-1.9,1.5-1.9s0.6-1.5,2.7-0.3 c1.2,0.7,3.5,2.8,5.6,2.2c0.9-0.2,1.5-1.9,1.5-1.9s0.6-1.5,2.7-0.3c1.2,0.7,3.5,2.8,5.6,2.2c0.9-0.2,1.5-1.9,1.5-1.9 c0,0,0.6-1.5,2.7-0.3c1.2,0.7,3.5,2.8,5.6,2.2c0.9-0.2,1.5-1.9,1.5-1.9s0.6-1.5,2.7-0.3c1.2,0.7,3.5,2.8,5.6,2.2 c0.9-0.2,1.5-1.9,1.5-1.9s0.6-1.5,2.7-0.3c1.2,0.7,3.5,2.8,5.6,2.2c0.9-0.2,1.5-1.9,1.5-1.9s0.6-1.5,2.7-0.3 c1.2,0.7,3.5,2.8,5.6,2.2c0.9-0.2,1.5-1.9,1.5-1.9c0,0,0.6-1.5,2.7-0.3c1.2,0.7,3.5,2.8,5.6,2.2c0.9-0.2,1.5-1.9,1.5-1.9 c0,0,0.6-1.5,2.7-0.3c1.2,0.7,3.5,2.8,5.6,2.2c0.9-0.2,1.5-1.9,1.5-1.9s0.6-1.5,2.7-0.3c1.2,0.7,3.5,2.8,5.6,2.2 c0.9-0.2,1.5-1.9,1.5-1.9s0.6-1.5,2.7-0.3c1.2,0.7,3.5,2.8,5.6,2.2c0.9-0.2,1.5-1.9,1.5-1.9s0.6-1.5,2.7-0.3 c1.2,0.7,3.5,2.8,5.6,2.2c0.9-0.2,1.5-1.9,1.5-1.9c0,0,0.6-1.5,2.7-0.3c1.2,0.7,3.5,2.8,5.6,2.2c0.9-0.2,1.5-1.9,1.5-1.9 s0.6-1.5,2.7-0.3c1.2,0.7,3.5,2.8,5.6,2.2c0.9-0.2,1.5-1.9,1.5-1.9s0.6-1.5,2.7-0.3c1.2,0.7,3.5,2.8,5.6,2.2 c0.9-0.2,1.5-1.9,1.5-1.9s0.6-1.5,2.7-0.3c1.2,0.7,3.5,2.8,5.6,2.2c0.9-0.2,1.5-1.9,1.5-1.9c0,0,0.6-1.5,2.7-0.3 c1.2,0.7,3.5,2.8,5.6,2.2c0.9-0.2,1.5-1.9,1.5-1.9c0,0,0.6-1.5,2.7-0.3c1.2,0.7,3.5,2.8,5.6,2.2c0.9-0.2,1.5-1.9,1.5-1.9 s0.6-1.5,2.7-0.3c1.2,0.7,3.5,2.8,5.6,2.2c0.9-0.2,1.5-1.9,1.5-1.9s0.6-1.5,2.7-0.3c1.2,0.7,3.5,2.8,5.6,2.2 c0.9-0.2,1.5-1.9,1.5-1.9s0.6-1.5,2.7-0.3c1.2,0.7,3.5,2.8,5.6,2.2c0.9-0.2,1.5-1.9,1.5-1.9c0,0,0.6-1.5,2.7-0.3 c1.2,0.7,3.5,2.8,5.6,2.2c0.9-0.2,1.5-1.9,1.5-1.9s0.6-1.5,2.7-0.3c1.2,0.7,3.5,2.8,5.6,2.2c0.9-0.2,1.5-1.9,1.5-1.9 s0.6-1.5,2.7-0.3c1.2,0.7,3.5,2.8,5.6,2.2c0.9-0.2,1.5-1.9,1.5-1.9s0.6-1.5,2.7-0.3c1.2,0.7,3.5,2.8,5.6,2.2 c0.9-0.2,1.5-1.9,1.5-1.9c0,0,0.6-1.5,2.7-0.3c1.2,0.7,3.5,2.8,5.6,2.2c0.9-0.2,1.5-1.9,1.5-1.9c0,0,0.6-1.5,2.7-0.3 c1.2,0.7,3.5,2.8,5.6,2.2c0.9-0.2,1.5-1.9,1.5-1.9s0.6-1.5,2.7-0.3c1.2,0.7,3.5,2.8,5.6,2.2c0.9-0.2,1.5-1.9,1.5-1.9 s0.6-1.5,2.7-0.3c1.2,0.7,3.5,2.8,5.6,2.2c0.9-0.2,1.5-1.9,1.5-1.9s0.6-1.5,2.7-0.3c1.2,0.7,3.5,2.8,5.6,2.2 c0.9-0.2,1.5-1.9,1.5-1.9c0,0,0.6-1.5,2.7-0.3c1.2,0.7,3.5,2.8,5.6,2.2c0.9-0.2,1.5-1.9,1.5-1.9s0.6-1.5,2.7-0.3 c1.2,0.7,3.5,2.8,5.6,2.2c0.9-0.2,1.5-1.9,1.5-1.9s0.6-1.5,2.7-0.3c1.2,0.7,3.5,2.8,5.6,2.2c0.9-0.2,1.5-1.9,1.5-1.9 s0.6-1.5,2.7-0.3c1.2,0.7,3.5,2.8,5.6,2.2c0.9-0.2,1.5-1.9,1.5-1.9c0,0,0.6-1.5,2.7-0.3c1.2,0.7,3.5,2.8,5.6,2.2 c0.9-0.2,1.5-1.9,1.5-1.9c0,0,0.6-1.5,2.7-0.3c1.2,0.7,3.5,2.8,5.6,2.2c0.9-0.2,1.5-1.9,1.5-1.9s0.6-1.5,2.7-0.3 c1.2,0.7,3.5,2.8,5.6,2.2c0.9-0.2,1.5-1.9,1.5-1.9s0.6-1.5,2.7-0.3c1.2,0.7,3.5,2.8,5.6,2.2c0.9-0.2,1.5-1.9,1.5-1.9 s0.6-1.5,2.7-0.3c1.2,0.7,3.5,2.8,5.6,2.2c0.9-0.2,1.5-1.9,1.5-1.9c0,0,0.6-1.5,2.7-0.3c1.2,0.7,3.5,2.8,5.6,2.2 c0.9-0.2,1.5-1.9,1.5-1.9s0.6-1.5,2.7-0.3c1.2,0.7,3.5,2.8,5.6,2.2c0.9-0.2,1.5-1.9,1.5-1.9s0.6-1.5,2.7-0.3 c1.2,0.7,3.5,2.8,5.6,2.2c0.9-0.2,1.5-1.9,1.5-1.9s0.6-1.5,2.7-0.3c1.2,0.7,3.5,2.8,5.6,2.2c0.9-0.2,1.5-1.9,1.5-1.9 c0,0,0.6-1.5,2.7-0.3c1.2,0.7,3.5,2.8,5.6,2.2c0.9-0.2,1.5-1.9,1.5-1.9c0,0,0.6-1.5,2.7-0.3c1.2,0.7,3.5,2.8,5.6,2.2 c0.9-0.2,1.5-1.9,1.5-1.9s0.6-1.5,2.7-0.3c1.2,0.7,3.5,2.8,5.6,2.2c0.9-0.2,1.5-1.9,1.5-1.9s0.6-1.5,2.7-0.3 c1.2,0.7,3.5,2.8,5.6,2.2c0.9-0.2,1.5-1.9,1.5-1.9s0.6-1.5,2.6-0.4V0z M2.5,1.2C2.5,1.2,2.5,1.2,2.5,1.2C2.5,1.2,2.5,1.2,2.5,1.2z M2.7,1.4c0.1,0,0.1,0.1,0.1,0.1C2.8,1.4,2.8,1.4,2.7,1.4z' })
            );
        }
    }, {
        key: 'get_asymmetric1',
        value: function get_asymmetric1(key) {
            return _react2.default.createElement(
                'svg',
                { key: key, preserveAspectRatio: 'none', viewBox: '0 0 1280 140' },
                _react2.default.createElement('path', { className: 'ocb-shape-fill', d: 'M978.81 122.25L0 0h1280l-262.1 116.26a73.29 73.29 0 0 1-39.09 5.99z' })
            );
        }
    }, {
        key: 'get_asymmetric2',
        value: function get_asymmetric2(key) {
            return _react2.default.createElement(
                'svg',
                { preserveAspectRatio: 'none', viewBox: '0 0 1280 140' },
                _react2.default.createElement('path', { className: 'ocb-shape-fill', d: 'M978.81 122.25L0 0h1280l-262.1 116.26a73.29 73.29 0 0 1-39.09 5.99z', fillOpacity: '.5' }),
                _react2.default.createElement('path', { className: 'ocb-shape-fill', d: 'M983.19 95.23L0 0h1280l-266 91.52a72.58 72.58 0 0 1-30.81 3.71z' })
            );
        }
    }, {
        key: 'get_asymmetric3',
        value: function get_asymmetric3(key) {
            return _react2.default.createElement(
                'svg',
                { preserveAspectRatio: 'none', viewBox: '0 0 1280 140' },
                _react2.default.createElement('path', { className: 'ocb-shape-fill', d: 'M1093.48 131.85L173 94a76.85 76.85 0 0 1-36.79-11.46L0 0h1280l-131.81 111.68c-16.47 13.96-35.47 20.96-54.71 20.17z', fillOpacity: '.5' }),
                _react2.default.createElement('path', { className: 'ocb-shape-fill', d: 'M1094.44 119L172.7 68.72a74.54 74.54 0 0 1-25.19-5.95L0 0h1280l-133.85 102c-15.84 12.09-33.7 17.95-51.71 17z' })
            );
        }
    }, {
        key: 'get_asymmetric4',
        value: function get_asymmetric4(key) {
            return _react2.default.createElement(
                'svg',
                { preserveAspectRatio: 'none', viewBox: '0 0 1280 140' },
                _react2.default.createElement('path', { className: 'ocb-shape-fill', d: 'M1280 0l-131.81 111.68c-16.47 14-35.47 21-54.71 20.17L173 94a76.85 76.85 0 0 1-36.79-11.46L0 0z' })
            );
        }
    }, {
        key: 'get_graph1',
        value: function get_graph1(key) {
            return _react2.default.createElement(
                'svg',
                { preserveAspectRatio: 'none', viewBox: '0 0 1280 140' },
                _react2.default.createElement('path', { className: 'ocb-shape-fill', d: 'M156.258 127.903l86.363-18.654 78.684 13.079L411.441 99.4l94.454 10.303L582.82 93.8l82.664 18.728 76.961-11.39L816.109 71.4l97.602 9.849L997.383 50.4l66.285 14.694 70.793-24.494h79.863L1280 0H0v122.138l60.613 9.965z' })
            );
        }
    }, {
        key: 'get_graph2',
        value: function get_graph2(key) {
            return _react2.default.createElement(
                'svg',
                { preserveAspectRatio: 'none', viewBox: '0 0 1280 140' },
                _react2.default.createElement('path', { className: 'ocb-shape-fill', d: 'M1214.323 66.051h-79.863l-70.793 18.224-66.285-10.933-83.672 22.953-97.601-7.328-73.664 22.125-76.961 8.475-82.664-13.934-76.926 11.832-94.453-7.666-90.137 17.059-78.684-9.731-86.363 13.879-95.644 3.125L0 126.717V0h1280l-.001 35.844z', fillOpacity: '.5' }),
                _react2.default.createElement('path', { className: 'ocb-shape-fill', d: 'M0 0h1280v.006l-70.676 36.578-74.863 4.641-70.793 23.334-66.285-11.678-83.672 29.618-97.602-7.07-63.664 21.421-76.961 12.649-91.664-20.798-77.926 17.66-94.453-7.574-90.137 21.595-78.683-9.884-86.363 16.074-95.645 6.211L0 127.905z' })
            );
        }
    }, {
        key: 'get_graph3',
        value: function get_graph3(key) {
            return _react2.default.createElement(
                'svg',
                { preserveAspectRatio: 'none', viewBox: '0 0 1280 140' },
                _react2.default.createElement('path', { className: 'ocb-shape-fill', d: 'M156 35.51l95.46 34.84 120.04.24 71.5 33.35 90.09-3.91L640 137.65l102.39-37.17 85.55 10.65 88.11-7.19L992 65.28l73.21 5.31 66.79-22.1 77-.42L1280 0H0l64.8 38.69 91.2-3.18z' })
            );
        }
    }, {
        key: 'get_graph4',
        value: function get_graph4(key) {
            return _react2.default.createElement(
                'svg',
                { preserveAspectRatio: 'none', viewBox: '0 0 1280 140' },
                _react2.default.createElement('path', { className: 'ocb-shape-fill', d: 'M156 35.41l95.46 34.73 120.04.25 71.5 33.24 90.09-3.89L640 137.25l102.39-37.06 85.55 10.61 88.11-7.17L992 65.08l73.21 5.31L1132 48.35l77-.42L1280 0H0l64.8 38.57 91.2-3.16z', fillOpacity: '.5' }),
                _react2.default.createElement('path', { className: 'ocb-shape-fill', d: 'M156 28.32l95.46 27.79 120.04.2L443 82.9l90.09-3.11L640 109.8l102.39-29.65 85.55 8.49 88.11-5.74L992 52.07l73.21 4.24L1132 38.68l77-.34L1280 0H0l64.8 30.86 91.2-2.54z' })
            );
        }
    }, {
        key: 'get_ramp1',
        value: function get_ramp1(key) {
            return _react2.default.createElement(
                'svg',
                { preserveAspectRatio: 'none', viewBox: '0 0 1280 140' },
                _react2.default.createElement('path', { className: 'ocb-shape-fill', d: 'M0 0s573.08 140 1280 140V0z' })
            );
        }
    }, {
        key: 'get_ramp2',
        value: function get_ramp2(key) {
            return _react2.default.createElement(
                'svg',
                { preserveAspectRatio: 'none', viewBox: '0 0 1280 140' },
                _react2.default.createElement('path', { className: 'ocb-shape-fill', d: 'M0 0v60s573.09 80 1280 80V0z', fillOpacity: '.3' }),
                _react2.default.createElement('path', { className: 'ocb-shape-fill', d: 'M0 0v30s573.09 110 1280 110V0z', fillOpacity: '.5' }),
                _react2.default.createElement('path', { className: 'ocb-shape-fill', d: 'M0 0s573.09 140 1280 140V0z' })
            );
        }

        /**
         *
         *
         * @returns {XML}
         */

    }, {
        key: 'render',
        value: function render() {
            var position = this.props.position != undefined ? this.props.position : 'bottom';
            var settings = JSON.parse(JSON.stringify(this.props.settings));

            var newSettings = {};

            for (var setting in settings) {
                if (!settings.hasOwnProperty(setting) || !setting.includes('shape')) continue;

                var newSettingName = setting.replace(position + '_', '');
                newSettings[newSettingName] = settings[setting];
            }

            settings = (0, _deepmerge2.default)(ItemShapeDivider.defaultProps.settings, newSettings);

            var invertedTypes = ['arrow', 'book', 'clouds', 'curve', 'asymmetric_curve', 'droplets', 'pyramids', 'split', 'triangle', 'asymmetric_triangle', 'waves'];

            var inverted = settings.shape_invert.yes == 1;
            var bringFront = settings.shape_bring_front != undefined && settings.shape_bring_front.yes == 1;

            var additionalClass = '';
            var invertedCall = '';

            if (inverted && invertedTypes.includes(settings.shape.choice)) {
                invertedCall = '_inverted';
                additionalClass = 'ocb-item-shape-divider-inverted';
            } else if (inverted) {
                additionalClass = 'ocb-item-shape-divider-flip';
            }

            if (bringFront) {
                additionalClass += ' ocb-item-shape-divider-front';
            }

            //Need to pass a key in to make sure that the svg gets re-rendered when there is a set width and height - weird bug
            var shape = this['get_' + settings.shape.choice + invertedCall](settings.shape_height.value * settings.shape_width.value);

            var styleTag = null;
            var style = '';
            var colorClass = '';

            if (settings.shape_color.color == 'custom') {
                style += _settings_helpers2.default.wrapCSSProperty(this.props.object.id, '.ocb-item-shape-divider-' + position + ' .ocb-shape-fill', 'fill', settings.shape_color.customColor, this.props.object.type);
            } else {
                colorClass += settings.shape_color.color + '-color';
            }

            style += _settings_helpers2.default.wrapMaybeDeviceCSSProperty(this.props.object, 'standard', {
                valueProp: position + '_shape_height',
                className: '.ocb-item-shape-divider-' + position + ' svg',
                property: 'height'
            });

            style += _settings_helpers2.default.wrapMaybeDeviceCSSProperty(this.props.object, 'standard', {
                valueProp: position + '_shape_width',
                className: '.ocb-item-shape-divider-' + position + ' svg',
                property: 'width',
                valueBefore: 'calc(',
                valueAfter: ' + 1.3px)'
            });

            if (style) {
                styleTag = _settings_helpers2.default.wrapCSSInStyleTag(style, this.props.object.id, '.ocb-item-shape-divider-' + position);
            }

            return _react2.default.createElement(
                'div',
                { className: 'ocb-item-shape-divider ocb-item-shape-divider-' + position + ' ' + colorClass + ' ' + additionalClass, 'data-shape': settings.shape.choice },
                styleTag,
                shape
            );
        }
    }]);

    return ItemShapeDivider;
}(_react.Component);

ItemShapeDivider.defaultProps = {
    settings: {
        shape: {
            choice: 'tilt'
        },
        shape_include: {
            yes: 0
        },
        shape_invert: {
            yes: 0
        },
        shape_color: {
            color: 'default',
            customColor: '#ffffff'
        },
        shape_height: {
            value: 25,
            units: 'px',
            useDefault: 'default'
        },
        shape_width: {
            value: 100,
            units: '%',
            useDefault: 'default'
        }
    }
};

//export default ItemShapeDivider;

function mapStateToProps(_ref) {
    var undoRedoState = _ref.undoRedoState,
        workspaceState = _ref.workspaceState;


    //console.log('mapStateToProps undoRedoState', undoRedoState.currentIndex);
    var defaultReturn = {
        currentlyEditingObject: false,
        undoRedoIndex: undoRedoState.currentIndex,
        undoRedoLength: undoRedoState.states.length
    };

    if (workspaceState == undefined) return defaultReturn;
    if (workspaceState.editSettings == undefined) return defaultReturn;
    if (workspaceState.editSettings.id == undefined) return defaultReturn;

    return {
        currentlyEditingObject: workspaceState.editSettings,
        undoRedoIndex: undoRedoState.currentIndex,
        undoRedoLength: undoRedoState.states.length
    };
}

//Promote Tree from component to container - it needs to know about the new dispatch methods above, updateModuleStandard
//and updateModuleSettings
exports.default = (0, _reactRedux.connect)(mapStateToProps)(ItemShapeDivider);

/***/ }),

/***/ 129:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _object = __webpack_require__(35);

var _object2 = _interopRequireDefault(_object);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Column = function (_Component) {
    _inherits(Column, _Component);

    function Column() {
        _classCallCheck(this, Column);

        return _possibleConstructorReturn(this, (Column.__proto__ || Object.getPrototypeOf(Column)).apply(this, arguments));
    }

    _createClass(Column, [{
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps(nextProps) {
            if (this.props.treeProps.inlineEdit.editing != nextProps.treeProps.inlineEdit.editing || this.props.treeProps.move.state != nextProps.treeProps.move.state) {
                this.setState({ hover: false });
            }
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var newProps = _extends({}, this.props.treeProps, { column: this.props.column });

            var objects = this.props.column.items.map(function (object, index) {
                return _react2.default.createElement(_object2.default, {
                    object: object,
                    parentRow: _this2.props.parentRow,
                    parentColumn: _this2.props.column,
                    key: object.id + index,
                    treeProps: newProps,
                    preventControls: _this2.props.preventControls,
                    depth: { overall: _this2.props.depth.overall + 1, row: _this2.props.depth.row, column: _this2.props.depth.column + 1 },
                    parentObjects: _this2.props.parentObjects
                });
            });

            return _react2.default.createElement(
                'div',
                { className: 'ocb-column-inner ' + this.props.classes },
                objects
            );
        }
    }]);

    return Column;
}(_react.Component);

exports.default = Column;

/***/ }),

/***/ 13:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _overlay_screen = __webpack_require__(121);

var _overlay_screen2 = _interopRequireDefault(_overlay_screen);

var _overlay_small = __webpack_require__(122);

var _overlay_small2 = _interopRequireDefault(_overlay_small);

var _overlay_full = __webpack_require__(119);

var _overlay_full2 = _interopRequireDefault(_overlay_full);

var _overlay_template = __webpack_require__(124);

var _overlay_template2 = _interopRequireDefault(_overlay_template);

var _overlay_theme = __webpack_require__(125);

var _overlay_theme2 = _interopRequireDefault(_overlay_theme);

var _overlay_large = __webpack_require__(120);

var _overlay_large2 = _interopRequireDefault(_overlay_large);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 <AppOverlay
     title="New"
     content="Create new content"
     icon="success"
     stacked="1"
     overlayStyle="small"
     options={ [
            {
                classes: '',
                onClick: () => this.props.updateAppState('overlay', null),
                text: 'New Page With Structure...'
            },
            {
                classes: '',
                onClick: () => this.props.updateAppState('overlay', null),
                text: 'New Post With Structure...'
            }
        ] }
 />
 *
 *
 */
var AppOverlay = function (_Component) {
    _inherits(AppOverlay, _Component);

    function AppOverlay(props) {
        _classCallCheck(this, AppOverlay);

        var _this = _possibleConstructorReturn(this, (AppOverlay.__proto__ || Object.getPrototypeOf(AppOverlay)).call(this, props));

        _this.state = {};
        return _this;
    }

    _createClass(AppOverlay, [{
        key: 'render',
        value: function render() {
            var overlay = null;

            switch (this.props.overlayStyle) {
                case 'small':
                    overlay = _react2.default.createElement(_overlay_small2.default, { title: this.props.title, content: this.props.content, options: this.props.options, icon: this.props.icon, stacked: this.props.stacked, size: this.props.size });
                    break;
                case 'full':
                    overlay = _react2.default.createElement(_overlay_full2.default, { title: this.props.title, type: this.props.type, content: this.props.content, options: this.props.options, filters: this.props.filters, items: this.props.items });
                    break;
                case 'template':
                    overlay = _react2.default.createElement(_overlay_template2.default, { title: this.props.title, config: this.props.config, content: this.props.content, options: this.props.options, filters: this.props.filters, items: this.props.items, useFunction: this.props.useFunction });
                    break;
                case 'large':
                    overlay = _react2.default.createElement(_overlay_large2.default, { title: this.props.title, content: this.props.content, options: this.props.options });
                    break;
                case 'theme':
                    overlay = _react2.default.createElement(_overlay_theme2.default, { title: this.props.title, config: this.props.config, content: this.props.content, options: this.props.options, filters: this.props.filters, items: this.props.items, useFunction: this.props.useFunction });
                    break;
            }

            return _react2.default.createElement(
                'div',
                { className: 'ocb-overlay offsprout-font' },
                overlay
            );
        }
    }]);

    return AppOverlay;
}(_react.Component);

exports.default = AppOverlay;

/***/ }),

/***/ 130:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactDraggable = __webpack_require__(58);

var _reactDraggable2 = _interopRequireDefault(_reactDraggable);

var _tree_reducer_functions = __webpack_require__(28);

var _tree_reducer_functions2 = _interopRequireDefault(_tree_reducer_functions);

var _settings_helpers = __webpack_require__(2);

var _settings_helpers2 = _interopRequireDefault(_settings_helpers);

var _object_controls = __webpack_require__(74);

var _object_controls2 = _interopRequireDefault(_object_controls);

var _api_helpers = __webpack_require__(6);

var _api_helpers2 = _interopRequireDefault(_api_helpers);

var _index = __webpack_require__(8);

var _redux = __webpack_require__(7);

var _reactRedux = __webpack_require__(5);

var _app_overlay = __webpack_require__(13);

var _app_overlay2 = _interopRequireDefault(_app_overlay);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var GlobalTemplate = function (_Component) {
    _inherits(GlobalTemplate, _Component);

    function GlobalTemplate(props) {
        _classCallCheck(this, GlobalTemplate);

        var _this = _possibleConstructorReturn(this, (GlobalTemplate.__proto__ || Object.getPrototypeOf(GlobalTemplate)).call(this, props));

        _this.state = {
            top: 0,
            left: 0,
            moving: false,
            unlocked: false,
            hover: false
        };
        return _this;
    }

    _createClass(GlobalTemplate, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _this2 = this;

            setTimeout(function () {
                window.ocbMountTimeoutOrderTester('module assign template unique ids');
                _this2.props.assignChildTemplateUniqueIds(_this2.props.object);
            }, 400);
            setTimeout(function () {
                window.ocbMountTimeoutOrderTester('update undoredo global');
                _this2.props.undoRedoReplaceGlobal(_this2.props.object);
            }, 650);
        }
    }, {
        key: 'componentDidUpdate',
        value: function componentDidUpdate(prevProps, prevState) {

            this.keepGlobalEditable(prevProps, prevState);
        }

        /**
         * Keep a global in edit mode
         * @param prevProps
         * @param prevState
         */

    }, {
        key: 'keepGlobalEditable',
        value: function keepGlobalEditable(prevProps, prevState) {
            var _this3 = this;

            if (this.props.moveState.moving == false) {
                if (prevProps.moveState.moving == true) {
                    if (prevProps.moveState.objectMoveTo != undefined && prevProps.moveState.objectMoveTo.templateUnique == prevProps.object.templateUnique && prevProps.treeProps.templates.editingGlobal != false) {
                        setTimeout(function () {
                            _this3.setState({ unlocked: true });
                        }, 200);
                    }
                }
            }
        }
    }, {
        key: 'startMoveFunction',
        value: function startMoveFunction() {
            var column = false;
            var row = false;

            if (this.props.object.type == 'column' || this.props.object.type == 'module') {
                row = this.props.treeProps.row;
            }

            if (this.props.object.type == 'module') {
                column = this.props.treeProps.column;
            }

            this.setState({ moving: true });
            this.props.treeProps.move.moveStart();
            this.props.treeProps.move.moveFrom(this.props.object, column, row);
        }
    }, {
        key: 'stopMoveFunction',
        value: function stopMoveFunction() {
            var _this4 = this;

            this.setState({
                top: 0,
                left: 0,
                moving: false
            });
            setTimeout(function () {
                _this4.props.treeProps.move.moveStop();
            }, 10);
        }
    }, {
        key: 'editGlobal',
        value: function editGlobal() {
            if (this.props.treeProps.templates.editGlobalToggle(this.props.object.id, this.props.object)) {
                this.setState({ unlocked: true });
                this.props.saveTemplateGlobalRevert(JSON.parse(JSON.stringify(this.props.object)));
            }
        }
    }, {
        key: 'cancelEditGlobal',
        value: function cancelEditGlobal() {
            this.props.treeProps.inlineEdit.stopEditing();
            this.setState({ unlocked: false });
            this.props.treeProps.templates.editGlobalToggle(false);
            //this.props.updateTemplateGlobals(this.props.object.templateId, this.props.globals.currentRevert);
            this.props.updateObjectProperty(this.props.object, {
                settings: this.props.globals.currentRevert.settings,
                standard: this.props.globals.currentRevert.standard,
                items: this.props.globals.currentRevert.items
            });

            //activate the number counters
            window.ocbDoNeededInitializePlugins();
            parent.ocbDoNeededInitializePlugins();
            window.ocbDoNeededInitializePlugins(true);
            parent.ocbDoNeededInitializePlugins(true);

            //Delete the revert object from the templateGlobals state - the revert object is checked by undoRedo
            // undoRedo states are not added by the history toolbar while editing a global because we can always cancel the updates to the global
            this.props.saveTemplateGlobalRevert(false);
        }
    }, {
        key: 'getAllGlobalInstances',
        value: function getAllGlobalInstances(tree, object) {
            var _this5 = this;

            var instances = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];

            if (tree.id == object.id) {
                instances.push(tree);
            }
            if (tree.items != undefined && tree.items.length) {
                tree.items.map(function (each) {
                    _this5.getAllGlobalInstances(each, object, instances);
                });
            }

            return instances;
        }
    }, {
        key: 'saveGlobal',
        value: function saveGlobal() {
            var _this6 = this;

            if (this.props.treeProps.inlineEdit.editing) {
                var overlayOptions = [{
                    classes: '',
                    onClick: function onClick() {
                        return _this6.props.updateAppState('overlay', null);
                    },
                    text: 'Okay'
                }];

                var overlay = _react2.default.createElement(_app_overlay2.default, {
                    title: 'You must finish editing your text first',
                    icon: 'warning',
                    content: '',
                    overlayStyle: 'small',
                    options: overlayOptions
                });

                this.props.updateAppState('overlay', overlay);

                return;
            }

            this.props.treeProps.inlineEdit.stopEditing();

            //Save the global to redux state
            var theObject = JSON.parse(JSON.stringify(this.props.object));
            delete theObject.id;
            this.props.updateTemplateGlobals(theObject.templateId, theObject);
            this.setState({ unlocked: false });
            this.props.treeProps.templates.editGlobalToggle(false);

            //Save the global via the API
            _settings_helpers2.default.updateTemplate(this.props.object, this.props.object.templateId);

            //Then update all other instances of that global
            //Get all instances of that global in an array
            var instances = this.getAllGlobalInstances(this.props.treeContent, this.props.object);

            //For each, update
            instances.map(function (each) {
                if (_this6.props.object.items != undefined && _this6.props.object.items.length) {
                    _this6.props.updateObjectProperty(each, {
                        settings: _this6.props.object.settings != undefined ? JSON.parse(JSON.stringify(_this6.props.object.settings)) : {},
                        standard: _this6.props.object.standard != undefined ? JSON.parse(JSON.stringify(_this6.props.object.standard)) : {},
                        items: _this6.props.object.items != undefined ? JSON.parse(JSON.stringify(_this6.props.object.items)) : []
                    });
                } else {
                    _this6.props.updateObjectProperty(each, {
                        settings: _this6.props.object.settings != undefined ? JSON.parse(JSON.stringify(_this6.props.object.settings)) : {},
                        standard: _this6.props.object.standard != undefined ? JSON.parse(JSON.stringify(_this6.props.object.standard)) : {}
                    });
                }
                _this6.props.assignChildTemplateUniqueIds(each);
            });

            //Replace instances of the global object in undoRedo with the updated object
            // so that when an undoRedo state is loaded, it always has the latest version of the global
            this.props.undoRedoReplaceGlobal(this.props.object);

            //Delete the revert object from the templateGlobals state - the revert object is checked by undoRedo
            // undoRedo states are not added by the history toolbar while editing a global because we can always cancel the updates to the global
            this.props.saveTemplateGlobalRevert(false);

            //activate the number counters
            window.ocbDoNeededInitializePlugins();
            parent.ocbDoNeededInitializePlugins();
            window.ocbDoNeededInitializePlugins(true);
            parent.ocbDoNeededInitializePlugins(true);
        }
    }, {
        key: 'saveGlobalRegular',
        value: function saveGlobalRegular() {
            var _this7 = this;

            if (this.props.treeProps.inlineEdit.editing) {
                var overlayOptions = [{
                    classes: '',
                    onClick: function onClick() {
                        return _this7.props.updateAppState('overlay', null);
                    },
                    text: 'Okay'
                }];

                var overlay = _react2.default.createElement(_app_overlay2.default, {
                    title: 'You must finish editing your text first',
                    icon: 'warning',
                    content: '',
                    overlayStyle: 'small',
                    options: overlayOptions
                });

                this.props.updateAppState('overlay', overlay);

                return;
            }

            this.props.treeProps.inlineEdit.stopEditing();
            this.setState({ unlocked: false });

            //We want to make sure the new object has all different IDs so that there aren't any collisions
            this.props.assignChildTemplateUniqueIds(this.props.object, { remove: true });

            setTimeout(function () {
                _this7.props.replaceChildIds(_this7.props.object, {}, true);
            }, 250);

            this.props.treeProps.templates.editGlobalToggle(false);

            setTimeout(function () {
                //Save the global as it is to the tree and remove the template: 'global' designation
                _this7.props.updateObjectProperty(_this7.props.object, {
                    id: _settings_helpers2.default.generateId(_this7.props.object.type),
                    template: false,
                    templateId: false,
                    templateUnique: false
                }, true, { updateUndo: 'GLOBAL_BROKEN' });

                //activate the number counters
                window.ocbDoNeededInitializePlugins();
                parent.ocbDoNeededInitializePlugins();
                window.ocbDoNeededInitializePlugins(true);
                parent.ocbDoNeededInitializePlugins(true);
            }, 500);

            //Delete the revert object from the templateGlobals state - the revert object is checked by undoRedo
            // undoRedo states are not added by the history toolbar while editing a global because we can always cancel the updates to the global
            this.props.saveTemplateGlobalRevert(false);
        }
    }, {
        key: 'render',
        value: function render() {
            var _this8 = this;

            var moveClass = ".ocb-object-control-move-" + this.props.object.id;
            var objectControls = null;
            var objectClass = '';
            var style = {};

            //Hover
            if (this.state.unlocked == false && this.state.hover == true && OCBGlobalSettings.permissions.edit_globals && (this.props.treeProps.move.state == false || this.state.moving == true) && this.props.treeProps.resize.widthChanging == false) {
                objectControls = _react2.default.createElement(_object_controls2.default, { object: this.props.object, treeProps: this.props.treeProps, template: 'global', controlConfig: {} });
                objectClass += ' ocb-' + this.props.object.type + '-hover';
            }

            var globalLock = _react2.default.createElement(
                'div',
                { className: 'ocb-global-unlock', onClick: function onClick() {
                        return _this8.editGlobal();
                    } },
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-global-unlock-message' },
                    _react2.default.createElement('i', { className: 'fa fa-lock' }),
                    ' ',
                    _react2.default.createElement(
                        'span',
                        null,
                        'Edit Global'
                    )
                )
            );

            if (this.state.unlocked) {
                globalLock = _react2.default.createElement(
                    'div',
                    { className: 'ocb-global-lock ocb-save-remove-element' },
                    _react2.default.createElement(
                        'div',
                        { className: 'ocb-global-button ocb-global-cancel', onClick: function onClick() {
                                return _this8.cancelEditGlobal();
                            } },
                        'Cancel'
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'ocb-global-button ocb-global-save-regular', onClick: function onClick() {
                                return _this8.saveGlobalRegular();
                            } },
                        'Save As Regular'
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'ocb-global-button ocb-global-save', onClick: function onClick() {
                                return _this8.saveGlobal();
                            } },
                        'Update Global'
                    )
                );
            }

            //Cover the global so that nothing can be clicked to edit inline if the user doesn't have global permission
            if (!OCBGlobalSettings.permissions.edit_globals) {
                globalLock = _react2.default.createElement('div', { className: 'ocb-global-screen ocb-save-remove-element' });
            }

            if (this.props.treeProps.settings.settingsActive) {
                globalLock = null;
            }

            if (this.props.object.type == 'column') {
                style.width = this.props.object.width + '%';
            }

            if (this.props.object.standard != undefined && this.props.object.standard.linked != undefined && this.props.object.standard.linked.z_index != undefined && this.props.object.standard.linked.z_index.useDefault == 'custom') {
                style.zIndex = this.props.object.standard.linked.z_index.value;
            }

            return _react2.default.createElement(
                _reactDraggable2.default,
                {
                    position: { x: this.state.left, y: this.state.top },
                    handle: moveClass,
                    defaultPosition: { x: 50, y: 50 },
                    onStart: this.startMoveFunction.bind(this),
                    onStop: this.stopMoveFunction.bind(this) },
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-global ocb-object ocb-global-type-' + this.props.object.type + ' ' + objectClass,
                        style: style,
                        'data-ocb-type': this.props.object.type,
                        'data-ocb-id': this.props.object.id,
                        'data-ocb-depth-overall': this.props.depth.overall,
                        'data-ocb-depth-row': this.props.depth.row,
                        'data-ocb-depth-column': this.props.depth.column,
                        'data-ocb-global-id': this.props.object.templateId,
                        'data-ocb-template-unique': this.props.object.templateUnique,
                        onMouseEnter: function onMouseEnter() {
                            return _this8.props.treeProps.canAddControls() ? _this8.setState({ hover: true }) : null;
                        },
                        onMouseLeave: function onMouseLeave() {
                            return _this8.props.treeProps.canAddControls() ? _this8.setState({ hover: false }) : null;
                        }
                    },
                    objectControls,
                    _react2.default.createElement(
                        'div',
                        { className: 'ocb-global-inner' },
                        this.props.children
                    ),
                    globalLock
                )
            );
        }
    }]);

    return GlobalTemplate;
}(_react.Component);

function mapStateToProps(_ref) {
    var templateGlobals = _ref.templateGlobals,
        treeContent = _ref.treeContent,
        moveState = _ref.moveState;

    return {
        globals: templateGlobals,
        moveState: moveState,
        treeContent: treeContent
    };
}

function mapDispatchToProps(dispatch) {
    return (0, _redux.bindActionCreators)({ updateObjectProperty: _index.updateObjectProperty, updateTemplateGlobals: _index.updateTemplateGlobals, saveTemplateGlobalRevert: _index.saveTemplateGlobalRevert, replaceChildIds: _index.replaceChildIds, assignChildTemplateUniqueIds: _index.assignChildTemplateUniqueIds, undoRedoReplaceGlobal: _index.undoRedoReplaceGlobal, updateAppState: _index.updateAppState }, dispatch);
}

exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(GlobalTemplate);

/***/ }),

/***/ 131:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _settings_helpers = __webpack_require__(2);

var _settings_helpers2 = _interopRequireDefault(_settings_helpers);

var _module_helpers = __webpack_require__(12);

var _module_helpers2 = _interopRequireDefault(_module_helpers);

var _standard_helpers = __webpack_require__(59);

var _standard_helpers2 = _interopRequireDefault(_standard_helpers);

var _object = __webpack_require__(35);

var _object2 = _interopRequireDefault(_object);

var _reactRedux = __webpack_require__(5);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Module = function (_Component) {
    _inherits(Module, _Component);

    function Module() {
        _classCallCheck(this, Module);

        return _possibleConstructorReturn(this, (Module.__proto__ || Object.getPrototypeOf(Module)).apply(this, arguments));
    }

    _createClass(Module, [{
        key: 'shouldComponentUpdate',
        value: function shouldComponentUpdate(nextProps, nextState) {
            if (this.props.currentlyEditingObject && this.props.module.id == this.props.currentlyEditingObject.id || this.props.currentlyEditingObject != false && nextProps.currentlyEditingObject == false || this.props.currentlyEditingObject == false && nextProps.currentlyEditingObject != false || this.props.undoRedoIndex != nextProps.undoRedoIndex || this.props.treeProps.inlineEdit.editing != nextProps.treeProps.inlineEdit.editing || this.props.module.skinId != nextProps.module.skinId || this.props.undoRedoLength != nextProps.undoRedoLength || this.props.module.moduleType == 'tabs' || this.props.module.moduleType == 'side_by_side' || this.props.module.moduleType == 'form' || this.props.treeProps.templates.editingGlobal && this.props.treeProps.parentGlobal != undefined && this.props.treeProps.templates.editingGlobal == this.props.treeProps.parentGlobal.id) {
                //console.log('module.js shouldComponentUpdate', this.props.module.type, this.props.module.id, this.props.module, this.props.module.skinId, nextProps.module.skinId);
                return true;
            } else {
                return false;
            }
        }
    }, {
        key: 'getModule',
        value: function getModule() {
            var _this2 = this;

            var className = 'module-' + this.props.module.moduleType;
            var module = null;
            var moduleRegistry = _settings_helpers2.default.getModuleRegistry();
            var moduleIndex = moduleRegistry.findIndex(function (module) {
                return module.type == _this2.props.module.moduleType;
            });

            var ModuleComponent = moduleRegistry[moduleIndex] != undefined ? moduleRegistry[moduleIndex].component : false;

            if (ModuleComponent) {

                //Merge the module's settings with the default settings
                var fullProps = {};
                fullProps.linked = _settings_helpers2.default.mergeWithDefault(moduleRegistry[moduleIndex].default.default != undefined && moduleRegistry[moduleIndex].default.default != null ? moduleRegistry[moduleIndex].default.default : {}, this.props.module.settings.linked != undefined && this.props.module.settings.linked != null ? this.props.module.settings.linked : {});

                //Merge the module with any active skin
                var skinId = this.props.module.skinId != undefined && this.props.module.skinId ? this.props.module.skinId : false;
                var classesCSS = void 0;

                if (skinId && this.props.skinState[skinId] != undefined) {
                    fullProps = _settings_helpers2.default.mergeWithDefault(fullProps != undefined && fullProps != null ? fullProps : {}, this.props.skinState[skinId].settings != undefined && this.props.skinState[skinId].settings != null ? this.props.skinState[skinId].settings : {});
                    classesCSS = {
                        classes: this.props.skinState[skinId].classes,
                        css: null //SettingsHelpers.wrapCSSInStyleTag( this.props.skinState[skinId].css, this.props.module.id, className )
                    };
                } else {
                    classesCSS = _module_helpers2.default.getModuleStyle(fullProps, this.props.module, this.props.module.id, className);
                }

                if (classesCSS.css == 'null') classesCSS.css = null;

                module = _react2.default.createElement(ModuleComponent, {
                    object: this.props.module,
                    settings: fullProps,
                    id: this.props.module.id,
                    preventControls: this.props.preventControls,
                    treeProps: this.props.treeProps,
                    classesCSS: classesCSS,
                    depth: { overall: this.props.depth.overall + 1, row: this.props.depth.row, column: this.props.depth.column }
                });
            } else {
                module = _react2.default.createElement(
                    'div',
                    null,
                    'Module type ',
                    this.props.module.moduleType,
                    ' not found'
                );
            }

            return _react2.default.createElement(
                'div',
                { className: className },
                module
            );
        }
    }, {
        key: 'render',
        value: function render() {
            var _this3 = this;

            var module = this.getModule();
            var childModules = null;

            //For modules that have inline items like the text module
            if (this.props.module.items != undefined && this.props.module.items.length && this.props.module.moduleType != 'tabs' && this.props.module.moduleType != 'side_by_side') {
                childModules = this.props.module.items.map(function (module, index) {
                    return _react2.default.createElement(_object2.default, {
                        object: module,
                        key: module.id,
                        treeProps: _this3.props.treeProps,
                        preventControls: _this3.props.preventControls,
                        depth: { overall: _this3.props.depth.overall + 1, row: _this3.props.depth.row, column: _this3.props.depth.column },
                        parentObjects: _this3.props.parentObjects
                    });
                });
            }

            //These classes are added in the object for modules
            var theClasses = '';

            return _react2.default.createElement(
                'div',
                { className: 'ocb-module-inner ocb-module-inner-' + this.props.module.moduleType + ' ' + theClasses },
                childModules,
                module
            );
        }
    }]);

    return Module;
}(_react.Component);

//export default Module;

function mapStateToProps(_ref) {
    var undoRedoState = _ref.undoRedoState,
        workspaceState = _ref.workspaceState,
        skinState = _ref.skinState;


    //console.log('mapStateToProps undoRedoState', undoRedoState.currentIndex);
    var defaultReturn = {
        currentlyEditingObject: false,
        undoRedoIndex: undoRedoState.currentIndex,
        undoRedoLength: undoRedoState.states.length,
        skinState: skinState
    };

    if (workspaceState == undefined) return defaultReturn;
    if (workspaceState.editSettings == undefined) return defaultReturn;
    if (workspaceState.editSettings.id == undefined) return defaultReturn;

    return {
        currentlyEditingObject: workspaceState.editSettings,
        undoRedoIndex: undoRedoState.currentIndex,
        undoRedoLength: undoRedoState.states.length,
        skinState: skinState
    };
}

//Promote Tree from component to container - it needs to know about the new dispatch methods above, updateModuleStandard
//and updateModuleSettings
exports.default = (0, _reactRedux.connect)(mapStateToProps)(Module);

/***/ }),

/***/ 132:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _object = __webpack_require__(35);

var _object2 = _interopRequireDefault(_object);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Row = function (_Component) {
    _inherits(Row, _Component);

    function Row() {
        _classCallCheck(this, Row);

        return _possibleConstructorReturn(this, (Row.__proto__ || Object.getPrototypeOf(Row)).apply(this, arguments));
    }

    _createClass(Row, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var newProps = _extends({}, this.props.treeProps, { row: this.props.row, previousColumn: null });
            var previous = false;
            var rowInnerClass = 'ocb-row-inner';

            if (this.props.row.settings != undefined && this.props.row.settings.verticalAlign == 'center') {
                rowInnerClass += ' ocb-row-vertical-middle';
            }

            if (this.props.row.standard.linked.reverse_order_mobile != undefined && this.props.row.standard.linked.reverse_order_mobile.yes) {
                rowInnerClass += ' ocb-row-reverse-mobile';
            }

            var columns = this.props.row.items.map(function (column) {
                var columnProps = newProps;
                if (previous) {
                    columnProps = _extends({}, newProps, { previousColumn: previous });
                }
                previous = column;
                return _react2.default.createElement(_object2.default, {
                    object: column,
                    parentRow: _this2.props.row,
                    key: column.id,
                    treeProps: columnProps,
                    preventControls: _this2.props.preventControls,
                    parentObjects: _this2.props.parentObjects,
                    depth: { overall: _this2.props.depth.overall + 1, row: _this2.props.depth.row + 1, column: _this2.props.depth.column }
                });
            });

            return _react2.default.createElement(
                'div',
                { className: rowInnerClass + ' ' + this.props.classes },
                columns
            );
        }
    }]);

    return Row;
}(_react.Component);

exports.default = Row;

/***/ }),

/***/ 133:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _settings_helpers = __webpack_require__(2);

var _settings_helpers2 = _interopRequireDefault(_settings_helpers);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var SaveTemplateButton = function (_Component) {
    _inherits(SaveTemplateButton, _Component);

    function SaveTemplateButton() {
        _classCallCheck(this, SaveTemplateButton);

        return _possibleConstructorReturn(this, (SaveTemplateButton.__proto__ || Object.getPrototypeOf(SaveTemplateButton)).apply(this, arguments));
    }

    _createClass(SaveTemplateButton, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var type = this.props.object.type;
            var capType = type.capitalize();

            return _react2.default.createElement(
                'div',
                { className: 'ocb-' + type + '-control', 'data-toggle': 'tooltip', 'data-placement': 'top', title: 'Save ' + capType, onClick: function onClick() {
                        return _this2.props.treeProps.settings.saveTemplate(_this2.props.object);
                    } },
                _react2.default.createElement('i', { className: 'fa fa-floppy-o' })
            );
        }
    }]);

    return SaveTemplateButton;
}(_react.Component);

exports.default = SaveTemplateButton;

/***/ }),

/***/ 145:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var ReactDefaultInjection = __webpack_require__(203);
var ReactServerRendering = __webpack_require__(148);
var ReactVersion = __webpack_require__(206);

ReactDefaultInjection.inject();

var ReactDOMServer = {
  renderToString: ReactServerRendering.renderToString,
  renderToStaticMarkup: ReactServerRendering.renderToStaticMarkup,
  version: ReactVersion
};

module.exports = ReactDOMServer;

/***/ }),

/***/ 147:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var ReactServerBatchingStrategy = {
  isBatchingUpdates: false,
  batchedUpdates: function (callback) {
    // Don't do anything here. During the server rendering we don't want to
    // schedule any updates. We will simply ignore them.
  }
};

module.exports = ReactServerBatchingStrategy;

/***/ }),

/***/ 148:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */


var _prodInvariant = __webpack_require__(15);

var React = __webpack_require__(69);
var ReactDOMContainerInfo = __webpack_require__(201);
var ReactDefaultBatchingStrategy = __webpack_require__(202);
var ReactInstrumentation = __webpack_require__(40);
var ReactMarkupChecksum = __webpack_require__(204);
var ReactReconciler = __webpack_require__(65);
var ReactServerBatchingStrategy = __webpack_require__(147);
var ReactServerRenderingTransaction = __webpack_require__(205);
var ReactUpdates = __webpack_require__(46);

var emptyObject = __webpack_require__(88);
var instantiateReactComponent = __webpack_require__(150);
var invariant = __webpack_require__(10);

var pendingTransactions = 0;

/**
 * @param {ReactElement} element
 * @return {string} the HTML markup
 */
function renderToStringImpl(element, makeStaticMarkup) {
  var transaction;
  try {
    ReactUpdates.injection.injectBatchingStrategy(ReactServerBatchingStrategy);

    transaction = ReactServerRenderingTransaction.getPooled(makeStaticMarkup);

    pendingTransactions++;

    return transaction.perform(function () {
      var componentInstance = instantiateReactComponent(element, true);
      var markup = ReactReconciler.mountComponent(componentInstance, transaction, null, ReactDOMContainerInfo(), emptyObject, 0 /* parentDebugID */
      );
      if (process.env.NODE_ENV !== 'production') {
        ReactInstrumentation.debugTool.onUnmountComponent(componentInstance._debugID);
      }
      if (!makeStaticMarkup) {
        markup = ReactMarkupChecksum.addChecksumToMarkup(markup);
      }
      return markup;
    }, null);
  } finally {
    pendingTransactions--;
    ReactServerRenderingTransaction.release(transaction);
    // Revert to the DOM batching strategy since these two renderers
    // currently share these stateful modules.
    if (!pendingTransactions) {
      ReactUpdates.injection.injectBatchingStrategy(ReactDefaultBatchingStrategy);
    }
  }
}

/**
 * Render a ReactElement to its initial HTML. This should only be used on the
 * server.
 * See https://facebook.github.io/react/docs/top-level-api.html#reactdomserver.rendertostring
 */
function renderToString(element) {
  !React.isValidElement(element) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'renderToString(): You must pass a valid ReactElement.') : _prodInvariant('46') : void 0;
  return renderToStringImpl(element, false);
}

/**
 * Similar to renderToString, except this doesn't create extra DOM attributes
 * such as data-react-id that React uses internally.
 * See https://facebook.github.io/react/docs/top-level-api.html#reactdomserver.rendertostaticmarkup
 */
function renderToStaticMarkup(element) {
  !React.isValidElement(element) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'renderToStaticMarkup(): You must pass a valid ReactElement.') : _prodInvariant('47') : void 0;
  return renderToStringImpl(element, true);
}

module.exports = {
  renderToString: renderToString,
  renderToStaticMarkup: renderToStaticMarkup
};
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),

/***/ 1494:
/***/ (function(module, exports, __webpack_require__) {

!function(e,t){ true?module.exports=t(__webpack_require__(1),__webpack_require__(23),__webpack_require__(0)):"function"==typeof define&&define.amd?define(["prop-types","react-dom","react"],t):"object"==typeof exports?exports.DragRange=t(require("prop-types"),require("react-dom"),require("react")):e.DragRange=t(e["prop-types"],e["react-dom"],e.react)}(window,function(e,t,n){return function(e){var t={};function n(o){if(t[o])return t[o].exports;var r=t[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}return n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:o})},n.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=3)}([function(t,n){t.exports=e},function(e,n){e.exports=t},function(e,t){e.exports=n},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=u(n(2)),r=u(n(1)),a=u(n(0));function u(e){return e&&e.__esModule?e:{default:e}}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}var s=function(e){function t(){var e,n,a;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var u=arguments.length,s=Array(u),l=0;l<u;l++)s[l]=arguments[l];return n=a=i(this,(e=t.__proto__||Object.getPrototypeOf(t)).call.apply(e,[this].concat(s))),a.getInitialState=function(){return Object.assign({},{mouseStart:{x:0,y:0},base:a.props.default})},a.state=a.getInitialState(),a.startIsDragging=function(e){a.state.isDragging||(a.setState({isDragging:!0,startIsDraggingOnMove:!1,mouseStart:{x:e.clientX,y:e.clientY},base:a.props.value}),a.props.onDragStart(e))},a.clamp=function(e,t,n){return n<e?e:n>t?t:n},a.roundToDecimals=function(e,t){var n=Math.pow(10,t);return Math.round(e*n)/n},a.getValue=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=a.props,o=n.rate,r=n.unit,u=n.min,i=n.max,s=n.decimals,l=a.state.base,c=Math.ceil(l/o)*o,p=e-t,f=Math.floor(p/r)*o+c;return f=a.clamp(u,i,f),f=a.roundToDecimals(f,s)},a.trackDelta=function(e){if(a.state.isDragging){window.getSelection().removeAllRanges();var t=a.state,n=void 0;n=a.props.yAxis?a.getValue(e.clientY,t.mouseStart.y):a.getValue(e.clientX,t.mouseStart.x),a.handleOnChange(n,e)}},a.startSetPercent=function(e){a.isSettingPercent=!0,a.setPercent(e)},a.handleSetTarget=function(e){var t=e||a.props,n=a.state,o=t.getTarget&&t.getTarget();n.target!==o&&(n.target&&n.target.removeEventListener("mousedown",a.handleMouseDown),o.addEventListener("mousedown",a.handleMouseDown),a.setState({target:o}))},a.getTargetInfo=function(e){var t=e||r.default.findDOMNode(a.state.target||a.container),n=t.getBoundingClientRect(),o=n.width||t.clientWidth,u=n.height||t.clientHeight,i={width:o,height:u,left:n.left,top:n.top};return o&&u?{target:t,rect:i}:t.children?a.getTargetInfo(t.children[0]):null},a.componentWillReceiveProps=function(e){a.handleSetTarget(e)},a.setPercent=function(e){if(a.isSettingPercent){var t=a.getTargetInfo().rect,n=void 0;n=a.props.yAxis?100*(e.clientY-t.top)/t.height:100*(e.clientX-t.left)/t.width,n=Math.floor(n/a.props.rate)*a.props.rate,n=a.clamp(a.props.min,a.props.max,n),a.props.disablePercentClamp||(n=a.clamp(0,100,n)),n=a.roundToDecimals(n,a.props.decimals),a.handleOnChange(n,e)}},a.endSetPercent=function(){a.isSettingPercent=!1},a.handleMouseDown=function(e){a.props.percent&&a.startSetPercent(e),a.state.isDragging||a.setState({startIsDraggingOnMove:!0}),a.handleDoubleClick(e),a.props.onMouseDown(e)},a.handleOnChange=function(e,t){a.props.value!==e&&a.props.onChange(e,t);var n=e-a.prevValue;if(n){var o={value:e,prevValue:a.prevValue,event:t,prevEvent:a.prevEvent};a.props.onDelta(n,o),a.prevValue=e,a.prevEvent=event}},a.handleDoubleClick=function(e){var t=a.props,n=t.percent,o=t.disableReset;if(a.firstClick)void 0===a.props.default||o||(!n||n&&void 0!==o)&&(a.handleOnChange(a.props.default,e),a.setState(a.getInitialState())),e.preventDefault(),a.props.onDoubleClick(e);else{a.firstClick=!0;var r=a.props.doubleClickTimeout;setTimeout(function(){a.firstClick=!1},r)}},a.handleMouseMove=function(e){a.state.startIsDraggingOnMove&&a.startIsDragging(e),a.props.percent?a.setPercent(e):a.trackDelta(e),window.getSelection().removeAllRanges()},a.handleMouseUp=function(e){a.endSetPercent(e),a.setState({startIsDraggingOnMove:!1}),a.endIsDragging(e),a.props.onMouseUp(e)},a.endIsDragging=function(e){a.state.isDragging&&(a.setState({isDragging:!1}),a.props.onDragEnd(e))},a.componentDidMount=function(){a.handleSetTarget(),document.addEventListener("mousemove",a.handleMouseMove),document.addEventListener("mouseup",a.handleMouseUp)},a.componentWillUnmount=function(){document.removeEventListener("mousemove",a.handleMouseMove),document.removeEventListener("mouseup",a.handleMouseUp),a.state.target&&a.state.target.removeEventListener("mousedown",a.handleMouseDown)},a.render=function(){var e=a.props,t=e.getTarget?void 0:a.handleMouseDown;return o.default.createElement("span",{ref:function(e){a.container=e},onMouseDown:t},e.children)},i(a,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.default.Component),t}();s.propTypes={yAxis:a.default.bool,percent:a.default.bool,unit:a.default.number,rate:a.default.number,value:a.default.number,onChange:a.default.func,onDelta:a.default.func,min:a.default.number,max:a.default.number,default:a.default.number,decimals:a.default.number,onDragStart:a.default.func,onDragEnd:a.default.func,onMouseUp:a.default.func,onMouseDown:a.default.func,onDoubleClick:a.default.func,doubleClickTimeout:a.default.number,disablePercentClamp:a.default.bool,disableReset:a.default.bool},s.defaultProps={yAxis:!1,percent:!1,unit:20,rate:1,value:0,onChange:function(){},onDelta:function(){},decimals:2,onDragStart:function(){},onDragEnd:function(){},onMouseUp:function(){},onMouseDown:function(){},onDoubleClick:function(){},doubleClickTimeout:500},t.default=s}])});
//# sourceMappingURL=main.js.map

/***/ }),

/***/ 1499:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var InfiniteScroll = function (_Component) {
  _inherits(InfiniteScroll, _Component);

  function InfiniteScroll(props) {
    _classCallCheck(this, InfiniteScroll);

    var _this = _possibleConstructorReturn(this, (InfiniteScroll.__proto__ || Object.getPrototypeOf(InfiniteScroll)).call(this, props));

    _this.scrollListener = _this.scrollListener.bind(_this);
    _this.eventListenerOptions = _this.eventListenerOptions.bind(_this);
    _this.mousewheelListener = _this.mousewheelListener.bind(_this);
    return _this;
  }

  _createClass(InfiniteScroll, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      this.pageLoaded = this.props.pageStart;
      this.options = this.eventListenerOptions();
      this.attachScrollListener();
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate() {
      if (this.props.isReverse && this.loadMore) {
        var parentElement = this.getParentElement(this.scrollComponent);
        parentElement.scrollTop = parentElement.scrollHeight - this.beforeScrollHeight + this.beforeScrollTop;
        this.loadMore = false;
      }
      this.attachScrollListener();
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this.detachScrollListener();
      this.detachMousewheelListener();
    }
  }, {
    key: 'isPassiveSupported',
    value: function isPassiveSupported() {
      var passive = false;

      var testOptions = {
        get passive() {
          passive = true;
        }
      };

      try {
        document.addEventListener('test', null, testOptions);
        document.removeEventListener('test', null, testOptions);
      } catch (e) {
        // ignore
      }
      return passive;
    }
  }, {
    key: 'eventListenerOptions',
    value: function eventListenerOptions() {
      var options = this.props.useCapture;

      if (this.isPassiveSupported()) {
        options = {
          useCapture: this.props.useCapture,
          passive: true
        };
      }
      return options;
    }

    // Set a defaut loader for all your `InfiniteScroll` components

  }, {
    key: 'setDefaultLoader',
    value: function setDefaultLoader(loader) {
      this.defaultLoader = loader;
    }
  }, {
    key: 'detachMousewheelListener',
    value: function detachMousewheelListener() {
      var scrollEl = window;
      if (this.props.useWindow === false) {
        scrollEl = this.scrollComponent.parentNode;
      }

      scrollEl.removeEventListener('mousewheel', this.mousewheelListener, this.options ? this.options : this.props.useCapture);
    }
  }, {
    key: 'detachScrollListener',
    value: function detachScrollListener() {
      var scrollEl = window;
      if (this.props.useWindow === false) {
        scrollEl = this.getParentElement(this.scrollComponent);
      }

      scrollEl.removeEventListener('scroll', this.scrollListener, this.options ? this.options : this.props.useCapture);
      scrollEl.removeEventListener('resize', this.scrollListener, this.options ? this.options : this.props.useCapture);
    }
  }, {
    key: 'getParentElement',
    value: function getParentElement(el) {
      var scrollParent = this.props.getScrollParent && this.props.getScrollParent();
      if (scrollParent != null) {
        return scrollParent;
      }
      return el && el.parentNode;
    }
  }, {
    key: 'filterProps',
    value: function filterProps(props) {
      return props;
    }
  }, {
    key: 'attachScrollListener',
    value: function attachScrollListener() {
      var parentElement = this.getParentElement(this.scrollComponent);

      if (!this.props.hasMore || !parentElement) {
        return;
      }

      var scrollEl = window;
      if (this.props.useWindow === false) {
        scrollEl = parentElement;
      }

      scrollEl.addEventListener('mousewheel', this.mousewheelListener, this.options ? this.options : this.props.useCapture);
      scrollEl.addEventListener('scroll', this.scrollListener, this.options ? this.options : this.props.useCapture);
      scrollEl.addEventListener('resize', this.scrollListener, this.options ? this.options : this.props.useCapture);

      if (this.props.initialLoad) {
        this.scrollListener();
      }
    }
  }, {
    key: 'mousewheelListener',
    value: function mousewheelListener(e) {
      // Prevents Chrome hangups
      // See: https://stackoverflow.com/questions/47524205/random-high-content-download-time-in-chrome/47684257#47684257
      if (e.deltaY === 1 && !this.isPassiveSupported()) {
        e.preventDefault();
      }
    }
  }, {
    key: 'scrollListener',
    value: function scrollListener() {
      var el = this.scrollComponent;
      var scrollEl = window;
      var parentNode = this.getParentElement(el);

      var offset = void 0;
      if (this.props.useWindow) {
        var doc = document.documentElement || document.body.parentNode || document.body;
        var scrollTop = scrollEl.pageYOffset !== undefined ? scrollEl.pageYOffset : doc.scrollTop;
        if (this.props.isReverse) {
          offset = scrollTop;
        } else {
          offset = this.calculateOffset(el, scrollTop);
        }
      } else if (this.props.isReverse) {
        offset = parentNode.scrollTop;
      } else {
        offset = el.scrollHeight - parentNode.scrollTop - parentNode.clientHeight;
      }

      // Here we make sure the element is visible as well as checking the offset
      if (offset < Number(this.props.threshold) && el && el.offsetParent !== null) {
        this.detachScrollListener();
        this.beforeScrollHeight = parentNode.scrollHeight;
        this.beforeScrollTop = parentNode.scrollTop;
        // Call loadMore after detachScrollListener to allow for non-async loadMore functions
        if (typeof this.props.loadMore === 'function') {
          this.props.loadMore(this.pageLoaded += 1);
          this.loadMore = true;
        }
      }
    }
  }, {
    key: 'calculateOffset',
    value: function calculateOffset(el, scrollTop) {
      if (!el) {
        return 0;
      }

      return this.calculateTopPosition(el) + (el.offsetHeight - scrollTop - window.innerHeight);
    }
  }, {
    key: 'calculateTopPosition',
    value: function calculateTopPosition(el) {
      if (!el) {
        return 0;
      }
      return el.offsetTop + this.calculateTopPosition(el.offsetParent);
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var renderProps = this.filterProps(this.props);

      var children = renderProps.children,
          element = renderProps.element,
          hasMore = renderProps.hasMore,
          initialLoad = renderProps.initialLoad,
          isReverse = renderProps.isReverse,
          loader = renderProps.loader,
          loadMore = renderProps.loadMore,
          pageStart = renderProps.pageStart,
          ref = renderProps.ref,
          threshold = renderProps.threshold,
          useCapture = renderProps.useCapture,
          useWindow = renderProps.useWindow,
          getScrollParent = renderProps.getScrollParent,
          props = _objectWithoutProperties(renderProps, ['children', 'element', 'hasMore', 'initialLoad', 'isReverse', 'loader', 'loadMore', 'pageStart', 'ref', 'threshold', 'useCapture', 'useWindow', 'getScrollParent']);

      props.ref = function (node) {
        _this2.scrollComponent = node;
        if (ref) {
          ref(node);
        }
      };

      var childrenArray = [children];
      if (hasMore) {
        if (loader) {
          isReverse ? childrenArray.unshift(loader) : childrenArray.push(loader);
        } else if (this.defaultLoader) {
          isReverse ? childrenArray.unshift(this.defaultLoader) : childrenArray.push(this.defaultLoader);
        }
      }
      return _react2.default.createElement(element, props, childrenArray);
    }
  }]);

  return InfiniteScroll;
}(_react.Component);

InfiniteScroll.propTypes = {
  children: _propTypes2.default.node.isRequired,
  element: _propTypes2.default.node,
  hasMore: _propTypes2.default.bool,
  initialLoad: _propTypes2.default.bool,
  isReverse: _propTypes2.default.bool,
  loader: _propTypes2.default.node,
  loadMore: _propTypes2.default.func.isRequired,
  pageStart: _propTypes2.default.number,
  ref: _propTypes2.default.func,
  getScrollParent: _propTypes2.default.func,
  threshold: _propTypes2.default.number,
  useCapture: _propTypes2.default.bool,
  useWindow: _propTypes2.default.bool
};
InfiniteScroll.defaultProps = {
  element: 'div',
  hasMore: false,
  initialLoad: true,
  pageStart: 0,
  ref: null,
  threshold: 250,
  useWindow: true,
  isReverse: false,
  useCapture: false,
  loader: null,
  getScrollParent: null
};
exports.default = InfiniteScroll;
module.exports = exports['default'];


/***/ }),

/***/ 151:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = __webpack_require__(145);


/***/ }),

/***/ 16:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

exports.default = function () {
    var icons = {
        color: 'paint-brush',
        left: 'long-arrow-left',
        right: 'long-arrow-right',
        up: 'long-arrow-up',
        down: 'long-arrow-down',
        width: 'arrows-h',
        height: 'arrows-v',
        borderRadius: 'square-o',
        rotate: 'rotate-right',
        fontSize: 'text-height',
        letterSpacing: 'text-width',
        shadow: 'window-restore',
        font: 'font',
        bold: 'bold',
        link: 'link',
        padding: 'chevron-up fa-border-top',
        margin: 'chevron-up fa-border-bottom',
        spacing: 'arrows',
        border: 'stop fa-border',
        background: 'image',
        background2: 'square',
        decorator: 'dot-circle-o',
        advanced: 'bolt',
        divider: 'minus-square',
        sticky: 'window-maximize',
        transform: 'exchange',
        columns: 'columns',
        align: 'align-center'
    };

    return {
        fields: [{
            id: 'row_display_type',
            title: 'Display Type',
            description: 'Select a special type of display for this row element',
            wrap: 'field_wrap',
            type: 'radio_toggle',
            settingType: 'content',
            onlyObjectTypes: ['row'],
            options: [{
                name: 'Default',
                value: 'default'
            }, {
                name: 'Overlay',
                value: 'overlay'
            }]
        }, {
            id: 'row_overlay_info',
            title: 'Overlay Instructions',
            description: '',
            wrap: 'field_wrap',
            type: 'note',
            settingType: 'content',
            note: 'Make sure you also set this row\'s target name by going into Sticky Settings, selecting "Target," and then typing in a name.',
            onlyObjectTypes: ['row'],
            conditional: {
                conditions: [{
                    id: 'row_display_type',
                    property: 'choice',
                    value: 'overlay'
                }]
            }
        }, {
            id: 'width_group',
            title: 'Width/Height',
            description: 'Configure more advanced options for this object',
            wrap: 'field_group',
            items: ['content_width', 'max_width', 'min_width', 'hero_row_height', 'object_align'],
            icon: icons.width,
            settingType: 'design'
        }, {
            id: 'content_width',
            title: 'Width',
            description: 'Whether to stretch the content full width or constrain it to the site width or custom width',
            wrap: 'field_wrap',
            type: 'radio_toggle',
            settingType: 'design',
            inline: true,
            onlyObjectTypes: ['row'],
            icon: icons.width,
            options: [{
                name: 'Full',
                value: 'full'
            }, {
                name: 'Custom',
                value: 'custom'
            }],
            configuration: {
                flex: true
            }
        }, {
            id: 'max_width',
            title: 'Max Width',
            description: 'Set a maximum width for this module. (Will overwrite left and right margins)',
            wrap: 'field_wrap',
            type: 'slider_control',
            settingType: 'design',
            icon: icons.width,
            inline: true,
            deviceSpecific: true,
            configuration: [{ units: '%', min: 10, max: 100, step: 1 }, { units: 'px', min: 50, max: 1200, step: 10 }],
            conditional: {
                conditions: [{
                    id: 'content_width',
                    property: 'choice',
                    value: 'custom'
                }]
            }
        }, {
            id: 'min_width',
            title: 'Min Width',
            description: 'Set a maximum width for this object. (Useful for making sure the object does not contract too much on smaller screens)',
            wrap: 'field_wrap',
            type: 'slider_control',
            settingType: 'design',
            icon: icons.width,
            inline: true,
            deviceSpecific: true,
            onlyObjectTypes: ['module', 'column'],
            configuration: [{ units: 'px', min: 30, max: 1000, step: 5 }]
        }, {
            id: 'object_align',
            title: 'Align',
            wrap: 'field_wrap',
            type: 'radio_toggle',
            inline: true,
            icon: icons.align,
            settingType: 'design',
            options: [{
                name: 'fa-align-left',
                value: 'left'
            }, {
                name: 'fa-align-center',
                value: 'center'
            }, {
                name: 'fa-align-right',
                value: 'right'
            }],
            configuration: {
                flex: true
            },
            conditional: {
                conditions: [{
                    id: 'max_width',
                    property: 'useDefault',
                    value: 'custom'
                }, {
                    id: 'content_width',
                    property: 'choice',
                    value: 'custom'
                }]
            }
        }, {
            id: 'hero_row_height',
            title: 'Height',
            wrap: 'field_wrap',
            type: 'slider_control',
            onlyObjectTypes: ['row'],
            inline: true,
            icon: icons.height,
            settingType: 'design',
            configuration: [{ units: 'vh', min: 30, max: 150, step: 5 }]
        }, {
            id: 'spacing_group',
            title: 'Spacing Options',
            description: 'Configure more advanced options for this object',
            wrap: 'field_group',
            items: ['margin', 'padding', 'column_gutter'],
            icon: icons.spacing,
            settingType: 'design'
        }, {
            id: 'margin',
            title: 'Margin',
            description: 'Adjust the margin for this object',
            wrap: 'field_wrap',
            type: 'linked_sliders',
            icon: icons.margin,
            settingType: 'design',
            deviceSpecific: true,
            configuration: [{ units: 'px', min: -200, max: 200, step: 1 }, { units: '%', min: -100, max: 100, step: 1 }, { units: 'em', min: -30, max: 30, step: 0.1 }, { units: 'rem', min: -30, max: 30, step: 0.1 }]
        }, {
            id: 'padding',
            title: 'Padding',
            description: 'Adjust the padding for this object',
            wrap: 'field_wrap',
            type: 'linked_sliders',
            icon: icons.padding,
            settingType: 'design',
            deviceSpecific: true,
            configuration: [{ units: 'px', min: 0, max: 200, step: 1 }, { units: '%', min: 0, max: 100, step: 1 }, { units: 'em', min: 0, max: 30, step: 0.1 }]
        }, {
            id: 'column_gutter',
            title: 'Column Gutter',
            description: 'Set the spacing in between the columns of this row',
            wrap: 'field_wrap',
            type: 'slider_control',
            settingType: 'design',
            onlyObjectTypes: ['row'],
            icon: icons.columns,
            deviceSpecific: true,
            configuration: [{ units: 'px', min: 0, max: 200, step: 5 }, { units: 'em', min: 0, max: 20, step: 0.5 }]
        }, {
            id: 'row_group',
            title: 'Row Options',
            description: 'Configure more advanced options for this row',
            wrap: 'field_group',
            icon: icons.columns,
            onlyObjectTypes: ['row'],
            items: ['bleed_full', 'advanced_column_heading', 'reverse_order_mobile', 'column_stack_width', 'remove_stack_column_padding']
        }, {
            id: 'bleed_full',
            title: 'Bleed Full Width',
            description: 'Break the row out of constrained width and make it the full width of the page',
            wrap: 'field_wrap',
            type: 'switch',
            settingType: 'content',
            note: 'May display slightly misaligned in builder mode.',
            onlyObjectTypes: ['row']
        }, {
            id: 'advanced_column_heading',
            title: 'Column Settings',
            wrap: 'field_wrap',
            type: 'heading',
            inline: true,
            settingType: 'content',
            onlyObjectTypes: ['row']
        }, {
            id: 'reverse_order_mobile',
            title: 'Reverse Order Mobile',
            description: 'Reverse the order of the columns within this row when displayed on mobile devices',
            wrap: 'field_wrap',
            type: 'switch',
            inline: true,
            settingType: 'content',
            onlyObjectTypes: ['row']
        }, {
            id: 'column_stack_width',
            title: 'Column Stack Width',
            description: 'The width at which the columns within the row will stack and go full width: default sitewide is 767px',
            wrap: 'field_wrap',
            type: 'slider_control',
            settingType: 'content',
            inline: true,
            onlyObjectTypes: ['row'],
            configuration: [{ units: 'px', min: 768, max: 2000, step: 1 }]
        }, {
            id: 'remove_stack_column_padding',
            title: 'Remove Stack Column Padding',
            description: 'Remove the default padding of stacked columns',
            wrap: 'field_wrap',
            type: 'switch',
            inline: true,
            settingType: 'content',
            onlyObjectTypes: ['row'],
            conditional: {
                conditions: [{
                    id: 'column_stack_width',
                    property: 'useDefault',
                    value: 'custom'
                }]
            }
        }, {
            id: 'column_group',
            title: 'Column Options',
            description: 'Configure more advanced options for this column',
            wrap: 'field_group',
            items: ['column_items', 'column_inline_vertical', 'column_inline_align', 'column_inline_mobile_align', 'column_inline_horizontal_margin', 'column_mobile_width'],
            icon: icons.columns,
            onlyObjectTypes: ['column'],
            settingType: 'design'
        }, {
            id: 'column_items',
            title: 'Column Items',
            description: 'When there are multiple columns side by side, these options can be used to control the vertical alignment within them. "Inline" makes a column act almost like a row.',
            wrap: 'field_wrap',
            type: 'radio_toggle',
            settingType: 'design',
            onlyObjectTypes: ['column'],
            options: [{
                name: 'Default',
                value: 'default'
            }, {
                name: 'Inline',
                value: 'inline'
            }, {
                name: 'Top',
                value: 'flex-start'
            }, {
                name: 'Center',
                value: 'center'
            }, {
                name: 'Bottom',
                value: 'flex-end'
            }, {
                name: 'Space Around',
                value: 'space-around'
            }, {
                name: 'Space Between',
                value: 'space-between'
            }, {
                name: 'Space Evenly',
                value: 'space-evenly'
            }, {
                name: 'Space Inital',
                value: 'space-initial'
            }, {
                name: 'Space Final',
                value: 'space-final'
            }],
            configuration: {
                flex: true,
                flexWrap: true,
                flexBasis: 33
            }
        }, {
            id: 'column_inline_vertical',
            title: 'Inline Vertical Align',
            description: 'In what vertical position to align the modules',
            wrap: 'field_wrap',
            type: 'radio_toggle',
            onlyObjectTypes: ['column'],
            settingType: 'design',
            options: [{
                name: 'Top',
                value: 'flex-start'
            }, {
                name: 'Center',
                value: 'center'
            }, {
                name: 'Bottom',
                value: 'flex-end'
            }],
            configuration: {
                flex: true
            },
            conditional: {
                conditions: [{
                    id: 'column_items',
                    property: 'choice',
                    value: 'inline'
                }]
            }
        }, {
            id: 'column_inline_align',
            title: 'Inline Align',
            description: 'In what position to align the modules',
            wrap: 'field_wrap',
            type: 'radio_toggle',
            onlyObjectTypes: ['column'],
            settingType: 'design',
            options: [{
                name: 'Left',
                value: 'flex-start'
            }, {
                name: 'Center',
                value: 'center'
            }, {
                name: 'Right',
                value: 'flex-end'
            }, {
                name: 'Space Around',
                value: 'space-around'
            }, {
                name: 'Space Between',
                value: 'space-between'
            }, {
                name: 'Space Evenly',
                value: 'space-evenly'
            }, {
                name: 'Space Initial',
                value: 'space-initial'
            }, {
                name: 'Space Final',
                value: 'space-final'
            }],
            configuration: {
                flex: true,
                flexWrap: true,
                flexBasis: 33
            },
            conditional: {
                conditions: [{
                    id: 'column_items',
                    property: 'choice',
                    value: 'inline'
                }]
            }
        }, {
            id: 'column_inline_mobile_align',
            title: 'Inline Mobile Align',
            description: 'In what position to align the modules for mobile',
            wrap: 'field_wrap',
            type: 'radio_toggle',
            onlyObjectTypes: ['column'],
            settingType: 'design',
            options: [{
                name: 'Left',
                value: 'flex-start'
            }, {
                name: 'Center',
                value: 'center'
            }, {
                name: 'Right',
                value: 'flex-end'
            }, {
                name: 'Space Around',
                value: 'space-around'
            }, {
                name: 'Space Between',
                value: 'space-between'
            }, {
                name: 'Space Evenly',
                value: 'space-evenly'
            }, {
                name: 'Space Initial',
                value: 'space-initial'
            }, {
                name: 'Space Final',
                value: 'space-final'
            }, {
                name: 'Stack',
                value: 'stack'
            }],
            configuration: {
                flex: true,
                flexWrap: true,
                flexBasis: 33
            },
            conditional: {
                conditions: [{
                    id: 'column_items',
                    property: 'choice',
                    value: 'inline'
                }]
            }
        }, {
            id: 'column_inline_horizontal_margin',
            title: 'Inline Horizontal Margin',
            description: 'Space in between each inline module',
            wrap: 'field_wrap',
            type: 'slider_control',
            onlyObjectTypes: ['column'],
            settingType: 'design',
            configuration: [{ units: 'px', min: 0, max: 100, step: 1 }, { units: 'em', min: 0, max: 10, step: 0.1 }, { units: 'rem', min: 0, max: 10, step: 0.1 }],
            conditional: {
                conditions: [{
                    id: 'column_items',
                    property: 'choice',
                    value: 'inline'
                }]
            }
        }, {
            id: 'column_mobile_width',
            title: 'Column Mobile Width',
            description: 'Set the width of the column in mobile',
            wrap: 'field_wrap',
            type: 'slider_control',
            settingType: 'content',
            onlyObjectTypes: ['column'],
            configuration: [{ units: '%', min: 0, max: 100, step: 1 }]
        }, {
            id: 'text_group',
            title: 'Text Options',
            description: 'Configure text options for this object',
            wrap: 'field_group',
            items: ['color', 'text_font_heading', 'base_font_size', 'line_height', 'letter_spacing', 'text_font', 'text_transform', 'font_weight', 'text_shadow', 'text_alignment_heading', 'text_align', 'mobile_text_align'],
            icon: icons.font,
            settingType: 'design'
        }, {
            id: 'color',
            title: 'Text Color',
            description: 'Select a text color for this object (can be overwritten by the object\'s settings',
            wrap: 'field_wrap',
            icon: icons.color,
            settingType: 'design',
            type: 'color'
        }, {
            id: 'text_font_heading',
            title: 'Font Options',
            wrap: 'field_wrap',
            settingType: 'design',
            inline: true,
            type: 'heading'
        }, {
            id: 'text_font',
            title: 'Text Font',
            description: 'Choose a font from your selected Site wide fonts and override the default font',
            wrap: 'field_wrap',
            type: 'dropdown',
            settingType: 'design',
            inline: true,
            icon: icons.font,
            options: [{
                name: 'Default Font',
                value: 'default',
                className: 'ocb-font-option ocb-default_font'
            }, {
                name: 'Body Font',
                value: 'body',
                className: 'ocb-font-option ocb-body_font'
            }, {
                name: 'Header Font',
                value: 'body_header',
                className: 'ocb-font-option ocb-body_header_font'
            }, {
                name: 'Accent Font',
                value: 'accent',
                className: 'ocb-font-option ocb-accent_font'
            }, {
                name: 'H1 Font',
                value: 'h1',
                className: 'ocb-font-option ocb-h1_font'
            }, {
                name: 'H2 Font',
                value: 'h2',
                className: 'ocb-font-option ocb-h2_font'
            }, {
                name: 'H3 Font',
                value: 'h3',
                className: 'ocb-font-option ocb-h3_font'
            }, {
                name: 'H4 Font',
                value: 'h4',
                className: 'ocb-font-option ocb-h4_font'
            }, {
                name: 'H5 Font',
                value: 'h5',
                className: 'ocb-font-option ocb-h5_font'
            }, {
                name: 'H6 Font',
                value: 'h6',
                className: 'ocb-font-option ocb-h6_font'
            }],
            configuration: {
                complex: true
            }
        }, {
            id: 'base_font_size',
            title: 'Font Size',
            description: 'Adjust the base font size in this object',
            wrap: 'field_wrap',
            type: 'slider_control',
            settingType: 'design',
            icon: icons.fontSize,
            inline: true,
            deviceSpecific: true,
            configuration: [{ units: 'em', min: 0.5, max: 10, step: 0.1 }]
        }, {
            id: 'line_height',
            title: 'Line Height',
            description: 'The line height of the text in this object',
            wrap: 'field_wrap',
            type: 'slider_control',
            settingType: 'design',
            inline: true,
            icon: icons.fontSize,
            deviceSpecific: true,
            configuration: [{ units: 'px', min: 0, max: 100, step: 5 }, { units: 'em', min: 0, max: 10, step: 0.1 }, { units: 'rem', min: 0, max: 10, step: 0.1 }]
        }, {
            id: 'letter_spacing',
            title: 'Letter Spacing',
            description: 'The spacing between letters in text in this object',
            wrap: 'field_wrap',
            settingType: 'design',
            type: 'slider_control',
            inline: true,
            icon: icons.letterSpacing,
            deviceSpecific: true,
            configuration: [{ units: 'px', min: -5, max: 5, step: 0.1 }]
        }, {
            id: 'font_weight',
            title: 'Font Weight',
            description: 'The thickness of the text',
            wrap: 'field_wrap',
            settingType: 'design',
            type: 'slider_control',
            inline: true,
            icon: icons.bold,
            configuration: [{ units: '', min: 100, max: 900, step: 100 }]
        }, {
            id: 'text_transform',
            title: 'Text Transform',
            description: 'Apply a transformation to all text in this object',
            wrap: 'field_wrap',
            settingType: 'design',
            inline: true,
            type: 'dropdown',
            icon: icons.transform,
            options: [{
                name: 'None',
                value: ''
            }, {
                name: 'Uppercase',
                value: 'uppercase'
            }, {
                name: 'Lowercase',
                value: 'lowercase'
            }, {
                name: 'Capitalize',
                value: 'capitalize'
            }]
        }, {
            id: 'text_shadow',
            title: 'Text Shadow',
            description: 'Add a shadow effect to the text',
            wrap: 'field_wrap',
            settingType: 'design',
            icon: icons.shadow,
            type: 'box_shadow'
        }, {
            id: 'text_alignment_heading',
            title: 'Text Alignment',
            wrap: 'field_wrap',
            type: 'heading',
            inline: true,
            note: 'Careful when using this as it can conflict with, or be overwritten by, more specific alignment settings',
            settingType: 'content'
        }, {
            id: 'text_align',
            title: 'fa-laptop',
            description: 'Horizontal alignment of the background image',
            wrap: 'field_wrap',
            settingType: 'design',
            type: 'radio_toggle',
            inline: true,
            options: [{
                name: 'fa-ban',
                value: 'none'
            }, {
                name: 'fa-align-left',
                value: 'left'
            }, {
                name: 'fa-align-center',
                value: 'center'
            }, {
                name: 'fa-align-right',
                value: 'right'
            }],
            configuration: {
                flex: true
            }
        }, {
            id: 'mobile_text_align',
            title: 'fa-mobile',
            description: 'Horizontal alignment of the background image',
            wrap: 'field_wrap',
            settingType: 'design',
            type: 'radio_toggle',
            inline: true,
            options: [{
                name: 'fa-ban',
                value: 'none'
            }, {
                name: 'fa-align-left',
                value: 'left'
            }, {
                name: 'fa-align-center',
                value: 'center'
            }, {
                name: 'fa-align-right',
                value: 'right'
            }],
            configuration: {
                flex: true
            },
            conditional: {
                ifTrue: 'hide',
                conditions: [{
                    id: 'text_align',
                    property: 'choice',
                    value: 'none'
                }]
            }
        }, {
            id: 'background_group',
            title: 'Background Options',
            description: 'Configure the background for this object',
            wrap: 'field_group',
            icon: icons.background,
            items: ['background_position_heading', 'background_parallax_heading', 'constrain_background', 'inner_background_padding', 'background_type', 'background_image', 'background_css_filters', 'background_image_size', 'background_image_repeat', 'background_image_vertical', 'background_image_horizontal', 'background_parallax', 'background_parallax_effect', 'background_custom_video', 'background_other_video', 'background_type_screen', 'background', 'gradient_1', 'gradient_2', 'gradient_3', 'gradient_angle', 'background_screen_group']
        }, {
            id: 'constrain_background',
            title: 'Constrain Background',
            description: 'Create the background inside of the outer padding',
            wrap: 'field_wrap',
            type: 'switch',
            settingType: 'design',
            note: 'May display slightly misaligned in smaller widths in builder mode.',
            onlyObjectTypes: ['row']
        }, {
            id: 'inner_background_padding',
            title: 'Inner Background Padding',
            description: 'Adjust the padding withing the background for this object',
            wrap: 'field_wrap',
            type: 'linked_sliders',
            settingType: 'design',
            inline: true,
            onlyObjectTypes: ['row'],
            configuration: [{ units: 'px', min: 0, max: 200, step: 1 }, { units: '%', min: 0, max: 100, step: 1 }, { units: 'em', min: 0, max: 30, step: 0.1 }],
            conditional: {
                conditions: [{
                    id: 'constrain_background',
                    property: 'yes',
                    value: 1
                }]
            }
        }, {
            id: 'background_type',
            title: 'Background Type',
            description: 'Choose the background for this object',
            wrap: 'field_wrap',
            type: 'dropdown',
            settingType: 'design',
            onChange: 'ocbReInitJarallax',
            options: [{
                name: 'Color',
                value: 'color'
            }, {
                name: '2-Color Gradient',
                value: 'gradient_2'
            }, {
                name: '3-Color Gradient',
                value: 'gradient_3'
            }, {
                name: 'Image',
                value: 'image'
            }, {
                name: 'Custom Video',
                value: 'custom_video'
            }, {
                name: 'Youtube/Vimeo Video',
                value: 'other_video'
            }]
        }, {
            id: 'background_image',
            title: 'Background Image',
            description: 'Select a background image for this object',
            wrap: 'field_wrap',
            type: 'media',
            settingType: 'content',
            designOverwrite: true,
            onChange: 'ocbReInitJarallax',
            //onlyObjectTypes: ['column', 'row'],
            conditional: {
                conditions: [{
                    id: 'background_type',
                    property: 'choice',
                    value: 'image'
                }]
            },
            configuration: {
                featured: true
            }
        },
        /*{
            id: 'background_image',
            title: 'Background Image',
            description: 'Select a background image for this object',
            wrap: 'field_wrap',
            type: 'note',
            note: 'Background image option not available for modules',
            onlyObjectTypes: ['module'],
            conditional: {
                conditions: [
                    {
                        id: 'background_type',
                        property: 'choice',
                        value: 'image'
                    }
                ]
            },
            configuration: {
                featured: true,
                type: 'image'
            }
        },*/
        {
            id: 'background_custom_video',
            title: 'Background Custom Video',
            description: 'Select a background video for this object from your media library',
            wrap: 'field_wrap',
            type: 'media',
            settingType: 'content',
            //onlyObjectTypes: ['column', 'row'],
            onChange: 'ocbReInitJarallax',
            textType: 'url',
            requiredCheck: true,
            configuration: {
                type: 'video'
            },
            conditional: {
                conditions: [{
                    id: 'background_type',
                    property: 'choice',
                    value: 'custom_video'
                }]
            }
        },
        /*{
            id: 'background_custom_video',
            title: 'Background Custom Video',
            description: 'Select a background video for this object from your media library',
            wrap: 'field_wrap',
            type: 'note',
            note: 'Custom background video not available for modules',
            onlyObjectTypes: ['module'],
            textType: 'url',
            requiredCheck: true,
            configuration: {
                type: 'video'
            },
            conditional: {
                conditions: [
                    {
                        id: 'background_type',
                        property: 'choice',
                        value: 'custom_video'
                    }
                ]
            }
        },*/
        {
            id: 'background_other_video',
            title: 'Background Youtube/Vimeo Video',
            description: 'Add a background video for this object from Youtube/Vimeo by pasting in the video url',
            wrap: 'field_wrap',
            type: 'text',
            settingType: 'content',
            onChange: 'ocbReInitJarallax',
            //onlyObjectTypes: ['column', 'row'],
            conditional: {
                conditions: [{
                    id: 'background_type',
                    property: 'choice',
                    value: 'other_video'
                }]
            }
        }, {
            id: 'background_css_filters',
            title: 'CSS Filters',
            wrap: 'field_wrap',
            type: 'css_filter',
            settingType: 'design',
            conditional: {
                type: 'or',
                conditions: [{
                    id: 'background_type',
                    property: 'choice',
                    value: 'image'
                }, {
                    id: 'background_type',
                    property: 'choice',
                    value: 'custom_video'
                }, {
                    id: 'background_type',
                    property: 'choice',
                    value: 'other_video'
                }]
            }
        }, {
            id: 'background_parallax_heading',
            title: 'Parallax',
            wrap: 'field_wrap',
            type: 'heading',
            inline: true,
            settingType: 'design',
            conditional: {
                type: 'or',
                conditions: [{
                    id: 'background_type',
                    property: 'choice',
                    value: 'image'
                }, {
                    id: 'background_type',
                    property: 'choice',
                    value: 'custom_video'
                }, {
                    id: 'background_type',
                    property: 'choice',
                    value: 'other_video'
                }]
            }
        }, {
            id: 'background_parallax',
            title: 'Speed',
            description: 'Add a parallax effect to the image when you scroll',
            wrap: 'field_wrap',
            type: 'dropdown',
            settingType: 'design',
            inline: true,
            onChange: 'ocbReInitJarallax',
            options: [{
                name: 'None',
                value: 'none'
            }, {
                name: 'Light',
                value: 0.5
            }, {
                name: 'Moderate',
                value: 0.2
            }, {
                name: 'Full',
                value: 'fixed'
            }, {
                name: 'Negative',
                value: -1
            }, {
                name: 'Light Negative',
                value: -0.5
            }, {
                name: 'Double',
                value: 2
            }],
            conditional: {
                type: 'or',
                conditions: [{
                    id: 'background_type',
                    property: 'choice',
                    value: 'image'
                }, {
                    id: 'background_type',
                    property: 'choice',
                    value: 'custom_video'
                }, {
                    id: 'background_type',
                    property: 'choice',
                    value: 'other_video'
                }]
            }
        }, {
            id: 'background_parallax_effect',
            title: 'Effect',
            description: 'Add a parallax effect to the image when you scroll',
            wrap: 'field_wrap',
            type: 'dropdown',
            settingType: 'design',
            inline: true,
            onChange: 'ocbReInitJarallax',
            options: [{
                name: 'Scroll',
                value: 'scroll'
            }, {
                name: 'Scale',
                value: 'scale'
            }, {
                name: 'Opacity',
                value: 'opacity'
            }, {
                name: 'Scroll Opacity',
                value: 'scroll-opacity'
            }],
            conditional: {
                /*conditions: [
                    {
                        conditional: {
                            type: 'or',
                            conditions: [
                                {
                                    id: 'background_type',
                                    property: 'choice',
                                    value: 'image'
                                },
                                {
                                    id: 'background_type',
                                    property: 'choice',
                                    value: 'custom_video'
                                },
                                {
                                    id: 'background_type',
                                    property: 'choice',
                                    value: 'other_video'
                                }
                            ]
                        }
                    },
                    {
                        conditional: {
                            ifTrue: 'hide',
                            conditions: [
                                {
                                    id: 'background_parallax',
                                    property: 'choice',
                                    value: 'none'
                                }
                            ]
                        }
                    }
                ]*/
                type: 'or',
                conditions: [{
                    id: 'background_type',
                    property: 'choice',
                    value: 'image'
                }, {
                    id: 'background_type',
                    property: 'choice',
                    value: 'custom_video'
                }, {
                    id: 'background_type',
                    property: 'choice',
                    value: 'other_video'
                }]
            }
        },
        /*{
            id: 'background_other_video',
            title: 'Background Youtube/Vimeo Video',
            description: 'Add a background video for this object from Youtube/Vimeo by pasting in the video url',
            wrap: 'field_wrap',
            type: 'note',
            note: 'Youtube background video not available for modules',
            onlyObjectTypes: ['module'],
            conditional: {
                conditions: [
                    {
                        id: 'background_type',
                        property: 'choice',
                        value: 'other_video'
                    }
                ]
            }
        },*/
        {
            id: 'background_position_heading',
            title: 'Position',
            wrap: 'field_wrap',
            type: 'heading',
            inline: true,
            settingType: 'content',
            conditional: {
                conditions: [{
                    id: 'background_type',
                    property: 'choice',
                    value: 'image'
                }, {
                    id: 'background_parallax',
                    property: 'choice',
                    value: 'none'
                }]
            }
        }, {
            id: 'background_image_size',
            title: 'Image Size',
            description: 'How big the background image is. Defaults to cover the entire object.',
            wrap: 'field_wrap',
            type: 'slider_control',
            settingType: 'content',
            inline: true,
            configuration: [{ units: '%', min: 1, max: 200, step: 1 }, { units: 'px', min: 10, max: 2000, step: 10 }],
            conditional: {
                conditions: [{
                    id: 'background_type',
                    property: 'choice',
                    value: 'image'
                }, {
                    id: 'background_parallax',
                    property: 'choice',
                    value: 'none'
                }]
            }
        }, {
            id: 'background_image_repeat',
            title: 'Image Repeat',
            description: 'Repeat the background image throughout. Great for patterned backgrounds.',
            wrap: 'field_wrap',
            type: 'switch',
            settingType: 'content',
            inline: true,
            conditional: {
                conditions: [{
                    id: 'background_type',
                    property: 'choice',
                    value: 'image'
                }, {
                    id: 'background_parallax',
                    property: 'choice',
                    value: 'none'
                }]
            }
        }, {
            id: 'background_image_vertical',
            title: 'Vertical',
            description: 'Vertical alignment of the background image',
            wrap: 'field_wrap',
            settingType: 'content',
            type: 'radio_toggle',
            inline: true,
            options: [{
                name: 'fa-long-arrow-up',
                value: 'top'
            }, {
                name: 'fa-compress vertical',
                value: 'center'
            }, {
                name: 'fa-long-arrow-down',
                value: 'bottom'
            }],
            configuration: {
                flex: true
            },
            conditional: {
                conditions: [{
                    id: 'background_type',
                    property: 'choice',
                    value: 'image'
                }, {
                    id: 'background_parallax',
                    property: 'choice',
                    value: 'none'
                }]
            }
        }, {
            id: 'background_image_horizontal',
            title: 'Horizontal',
            description: 'Horizontal alignment of the background image',
            wrap: 'field_wrap',
            settingType: 'content',
            type: 'radio_toggle',
            inline: true,
            options: [{
                name: 'fa-long-arrow-left',
                value: 'left'
            }, {
                name: 'fa-compress horizontal',
                value: 'center'
            }, {
                name: 'fa-long-arrow-right',
                value: 'right'
            }],
            conditional: {
                conditions: [{
                    id: 'background_type',
                    property: 'choice',
                    value: 'image'
                }, {
                    id: 'background_parallax',
                    property: 'choice',
                    value: 'none'
                }]
            },
            configuration: {
                flex: true
            }
        }, {
            id: 'background_type_screen',
            title: 'Background Screen',
            description: 'Add a color screen over the image or video so that you can more clearly see text',
            wrap: 'field_wrap',
            type: 'dropdown',
            settingType: 'design',
            options: [{
                name: 'None',
                value: 'default'
            }, {
                name: 'Color',
                value: 'color'
            }, {
                name: '2-Color Gradient',
                value: 'gradient_2'
            }, {
                name: '3-Color Gradient',
                value: 'gradient_3'
            }],
            conditional: {
                type: 'or',
                conditions: [{
                    id: 'background_type',
                    property: 'choice',
                    value: 'image'
                }, {
                    id: 'background_type',
                    property: 'choice',
                    value: 'custom_video'
                }, {
                    id: 'background_type',
                    property: 'choice',
                    value: 'other_video'
                }]
            }
        }, {
            id: 'background',
            title: 'Background Color',
            description: 'Select a background color for this object',
            wrap: 'field_wrap',
            type: 'color',
            settingType: 'design',
            configuration: {
                gradient: true
            },
            conditional: {
                conditions: [{
                    id: 'background_type',
                    property: 'choice',
                    value: 'color'
                }]
            }
        }, {
            id: 'gradient_1',
            title: 'Background Gradient 1',
            description: 'Select a starting background gradient color for this object',
            wrap: 'field_wrap',
            type: 'color',
            settingType: 'design',
            properties: {
                color: false
            },
            conditional: {
                type: 'or',
                conditions: [{
                    id: 'background_type',
                    property: 'choice',
                    value: 'gradient_2'
                }, {
                    id: 'background_type',
                    property: 'choice',
                    value: 'gradient_3'
                }]
            }
        }, {
            id: 'gradient_2',
            title: 'Background Gradient 2',
            description: 'Select a second background gradient color for this object',
            wrap: 'field_wrap',
            type: 'color',
            settingType: 'design',
            properties: {
                color: false
            },
            conditional: {
                type: 'or',
                conditions: [{
                    id: 'background_type',
                    property: 'choice',
                    value: 'gradient_2'
                }, {
                    id: 'background_type',
                    property: 'choice',
                    value: 'gradient_3'
                }]
            }
        }, {
            id: 'gradient_3',
            title: 'Background Gradient 3',
            description: 'Select a third background gradient color for this object',
            wrap: 'field_wrap',
            type: 'color',
            settingType: 'design',
            properties: {
                color: false
            },
            conditional: {
                conditions: [{
                    id: 'background_type',
                    property: 'choice',
                    value: 'gradient_3'
                }]
            }
        }, {
            id: 'background_screen_group',
            title: 'Background Screen',
            description: 'Configure the background for this object',
            wrap: 'field_group',
            settingType: 'design',
            items: ['screen_opacity', 'background_screen_width', 'background_screen', 'gradient_1_screen', 'gradient_2_screen', 'gradient_3_screen'],
            conditional: {
                conditions: [{
                    conditional: {
                        type: 'or',
                        conditions: [{
                            id: 'background_type',
                            property: 'choice',
                            value: 'image'
                        }, {
                            id: 'background_type',
                            property: 'choice',
                            value: 'custom_video'
                        }, {
                            id: 'background_type',
                            property: 'choice',
                            value: 'other_video'
                        }]
                    }
                }, {
                    conditional: {
                        type: 'or',
                        conditions: [{
                            id: 'background_type_screen',
                            property: 'choice',
                            value: 'color'
                        }, {
                            id: 'background_type_screen',
                            property: 'choice',
                            value: 'gradient_2'
                        }, {
                            id: 'background_type_screen',
                            property: 'choice',
                            value: 'gradient_3'
                        }]
                    }
                }]
            }
        }, {
            id: 'screen_opacity',
            title: 'Screen Opacity',
            description: 'How see-through the screen is. You can also adjust opacity within the color-picker itself.',
            wrap: 'field_wrap',
            settingType: 'design',
            type: 'slider_control',
            configuration: [{ units: '%', min: 0, max: 100, step: 1 }],
            conditional: {
                type: 'or',
                conditions: [{
                    id: 'background_type_screen',
                    property: 'choice',
                    value: 'color'
                }, {
                    id: 'background_type_screen',
                    property: 'choice',
                    value: 'gradient_2'
                }, {
                    id: 'background_type_screen',
                    property: 'choice',
                    value: 'gradient_3'
                }]
            }
        }, {
            id: 'background_screen',
            title: 'Screen Color',
            description: 'Select a background screen color for this object',
            wrap: 'field_wrap',
            settingType: 'design',
            type: 'color',
            configuration: {
                gradient: true
            },
            conditional: {
                conditions: [{
                    id: 'background_type_screen',
                    property: 'choice',
                    value: 'color'
                }]
            }
        }, {
            id: 'background_screen_width',
            title: 'Screen Width',
            description: 'Set a background screen width for this object',
            wrap: 'field_wrap',
            settingType: 'design',
            type: 'slider_control',
            configuration: [{ units: '%', min: 0, max: 100, step: 1 }]
        }, {
            id: 'gradient_1_screen',
            title: 'Screen Gradient 1',
            description: 'Select a starting background screen gradient color for this object',
            wrap: 'field_wrap',
            settingType: 'design',
            type: 'color',
            properties: {
                color: false
            },
            conditional: {
                type: 'or',
                conditions: [{
                    id: 'background_type_screen',
                    property: 'choice',
                    value: 'gradient_2'
                }, {
                    id: 'background_type_screen',
                    property: 'choice',
                    value: 'gradient_3'
                }]
            }
        }, {
            id: 'gradient_2_screen',
            title: 'Screen Gradient 2',
            description: 'Select a second background screen gradient color for this object',
            wrap: 'field_wrap',
            settingType: 'design',
            type: 'color',
            properties: {
                color: false
            },
            conditional: {
                type: 'or',
                conditions: [{
                    id: 'background_type_screen',
                    property: 'choice',
                    value: 'gradient_2'
                }, {
                    id: 'background_type_screen',
                    property: 'choice',
                    value: 'gradient_3'
                }]
            }
        }, {
            id: 'gradient_3_screen',
            title: 'Screen Gradient 3',
            description: 'Select a third background screen gradient color for this object',
            wrap: 'field_wrap',
            settingType: 'design',
            type: 'color',
            properties: {
                color: false
            },
            conditional: {
                conditions: [{
                    id: 'background_type_screen',
                    property: 'choice',
                    value: 'gradient_3'
                }]
            }
        }, {
            id: 'gradient_angle',
            title: 'Background Gradient Angle',
            description: 'Select a third background gradient color for this object',
            wrap: 'field_wrap',
            settingType: 'design',
            type: 'dropdown',
            options: [{
                name: 'Vertical',
                value: 'vertical'
            }, {
                name: 'Horizontal',
                value: 'horizontal'
            }, {
                name: 'Diagonal Up',
                value: 'diag_up'
            }, {
                name: 'Diagonal Down',
                value: 'diag_down'
            }, {
                name: 'Radial',
                value: 'radial'
            }],
            conditional: {
                type: 'or',
                conditions: [{
                    id: 'background_type',
                    property: 'choice',
                    value: 'gradient_2'
                }, {
                    id: 'background_type',
                    property: 'choice',
                    value: 'gradient_3'
                }, {
                    id: 'background_type_screen',
                    property: 'choice',
                    value: 'gradient_2'
                }, {
                    id: 'background_type_screen',
                    property: 'choice',
                    value: 'gradient_3'
                }]
            }
        }, {
            id: 'background_group_2',
            title: 'Secondary Background Options',
            description: 'Configure the background for this object',
            wrap: 'field_group',
            icon: icons.background2,
            items: ['include_background_2', 'remove_background_mobile_2', 'background_settings_heading_2', 'background_image_heading_2', 'background_opacity_2', 'background_position_top_2', 'background_position_left_2', 'background_position_right_2', 'background_position_bottom_2', 'background_height_2', 'background_width_2', 'background_border_radius_2', 'background_type_2', 'background_image_2', 'background_image_size_2', 'background_image_repeat_2', 'background_image_vertical_2', 'background_image_horizontal_2', 'background_2', 'gradient_1_2', 'gradient_2_2']
        }, {
            id: 'include_background_2',
            title: 'Add',
            description: 'Include the secondary background',
            wrap: 'field_wrap',
            settingType: 'design',
            inline: true,
            type: 'switch'
        }, {
            id: 'remove_background_mobile_2',
            title: 'Remove Mobile',
            description: 'Remove the secondary background on mobile devices',
            wrap: 'field_wrap',
            type: 'switch',
            settingType: 'design',
            inline: true,
            conditional: {
                conditions: [{
                    id: 'include_background_2',
                    property: 'yes',
                    value: 1
                }]
            }
        }, {
            id: 'background_type_2',
            title: 'Background 2 Type',
            description: 'Choose the background for this object',
            wrap: 'field_wrap',
            type: 'dropdown',
            settingType: 'design',
            options: [{
                name: 'Color',
                value: 'color'
            }, {
                name: '2-Color Gradient',
                value: 'gradient_2'
            }, {
                name: 'Image',
                value: 'image'
            }],
            conditional: {
                conditions: [{
                    id: 'include_background_2',
                    property: 'yes',
                    value: 1
                }]
            }
        }, {
            id: 'background_image_2',
            title: 'Background 2 Image',
            description: 'Select a background image for this object',
            wrap: 'field_wrap',
            type: 'media',
            settingType: 'content',
            conditional: {
                conditions: [{
                    id: 'background_type_2',
                    property: 'choice',
                    value: 'image'
                }, {
                    id: 'include_background_2',
                    property: 'yes',
                    value: 1
                }]
            },
            configuration: {
                featured: true
            }
        }, {
            id: 'background_image_heading_2',
            title: 'Image Settings',
            wrap: 'field_wrap',
            type: 'heading',
            inline: true,
            settingType: 'content',
            conditional: {
                conditions: [{
                    id: 'background_type_2',
                    property: 'choice',
                    value: 'image'
                }, {
                    id: 'include_background_2',
                    property: 'yes',
                    value: 1
                }]
            }
        }, {
            id: 'background_image_size_2',
            title: 'Size',
            description: 'How big the background image is. Defaults to cover the entire object.',
            wrap: 'field_wrap',
            type: 'slider_control',
            settingType: 'content',
            inline: true,
            configuration: [{ units: '%', min: 1, max: 200, step: 1 }, { units: 'px', min: 10, max: 2000, step: 10 }],
            conditional: {
                conditions: [{
                    id: 'background_type_2',
                    property: 'choice',
                    value: 'image'
                }, {
                    id: 'include_background_2',
                    property: 'yes',
                    value: 1
                }]
            }
        }, {
            id: 'background_image_repeat_2',
            title: 'Repeat',
            description: 'Repeat the background image throughout. Great for patterned backgrounds.',
            wrap: 'field_wrap',
            type: 'switch',
            settingType: 'content',
            inline: true,
            conditional: {
                conditions: [{
                    id: 'background_type_2',
                    property: 'choice',
                    value: 'image'
                }, {
                    id: 'include_background_2',
                    property: 'yes',
                    value: 1
                }]
            }
        }, {
            id: 'background_image_vertical_2',
            title: 'Vertical Align',
            description: 'Vertical alignment of the background image',
            wrap: 'field_wrap',
            type: 'radio_toggle',
            settingType: 'content',
            inline: true,
            options: [{
                name: 'fa-long-arrow-up',
                value: 'top'
            }, {
                name: 'fa-compress vertical',
                value: 'center'
            }, {
                name: 'fa-long-arrow-down',
                value: 'bottom'
            }],
            configuration: {
                flex: true
            },
            conditional: {
                conditions: [{
                    id: 'background_type_2',
                    property: 'choice',
                    value: 'image'
                }, {
                    id: 'include_background_2',
                    property: 'yes',
                    value: 1
                }]
            }
        }, {
            id: 'background_image_horizontal_2',
            title: 'Horizontal Align',
            description: 'Horizontal alignment of the background image',
            wrap: 'field_wrap',
            type: 'radio_toggle',
            settingType: 'content',
            inline: true,
            options: [{
                name: 'fa-long-arrow-left',
                value: 'left'
            }, {
                name: 'fa-compress horizontal',
                value: 'center'
            }, {
                name: 'fa-long-arrow-right',
                value: 'right'
            }],
            configuration: {
                flex: true
            },
            conditional: {
                conditions: [{
                    id: 'background_type_2',
                    property: 'choice',
                    value: 'image'
                }, {
                    id: 'include_background_2',
                    property: 'yes',
                    value: 1
                }]
            }
        }, {
            id: 'background_2',
            title: 'Color',
            description: 'Select a background color for this object',
            wrap: 'field_wrap',
            type: 'color',
            settingType: 'design',
            configuration: {
                gradient: true
            },
            conditional: {
                conditions: [{
                    id: 'background_type_2',
                    property: 'choice',
                    value: 'color'
                }, {
                    id: 'include_background_2',
                    property: 'yes',
                    value: 1
                }]
            }
        }, {
            id: 'gradient_1_2',
            title: 'Gradient 1',
            description: 'Select a starting background gradient color for this object',
            wrap: 'field_wrap',
            type: 'color',
            settingType: 'design',
            properties: {
                color: false
            },
            conditional: {
                conditions: [{
                    id: 'background_type_2',
                    property: 'choice',
                    value: 'gradient_2'
                }, {
                    id: 'include_background_2',
                    property: 'yes',
                    value: 1
                }]
            }
        }, {
            id: 'gradient_2_2',
            title: 'Gradient 2',
            description: 'Select a second background gradient color for this object',
            wrap: 'field_wrap',
            type: 'color',
            settingType: 'design',
            properties: {
                color: false
            },
            conditional: {
                conditions: [{
                    id: 'background_type_2',
                    property: 'choice',
                    value: 'gradient_2'
                }, {
                    id: 'include_background_2',
                    property: 'yes',
                    value: 1
                }]
            }
        }, {
            id: 'background_settings_heading_2',
            title: 'Settings',
            wrap: 'field_wrap',
            type: 'heading',
            inline: true,
            settingType: 'content',
            conditional: {
                conditions: [{
                    id: 'include_background_2',
                    property: 'yes',
                    value: 1
                }]
            }
        }, {
            id: 'background_opacity_2',
            title: 'Opacity',
            description: 'Adjust the opacity of the secondary background',
            wrap: 'field_wrap',
            type: 'slider_control',
            settingType: 'design',
            inline: true,
            configuration: [{ units: '%', min: 0, max: 100, step: 1 }],
            conditional: {
                conditions: [{
                    id: 'include_background_2',
                    property: 'yes',
                    value: 1
                }]
            }
        }, {
            id: 'background_position_top_2',
            title: 'Top',
            description: 'Adjust spacing from the top (setting Bottom distance will override this option)',
            wrap: 'field_wrap',
            type: 'slider_control',
            settingType: 'design',
            inline: true,
            configuration: [{ units: 'px', min: -500, max: 500, step: 5 }, { units: '%', min: -100, max: 100, step: 5 }, { units: 'em', min: -30, max: 30, step: 0.5 }],
            conditional: {
                conditions: [{
                    id: 'include_background_2',
                    property: 'yes',
                    value: 1
                }]
            }
        }, {
            id: 'background_position_left_2',
            title: 'Left',
            description: 'Adjust spacing from the left (setting Right distance will override this option)',
            wrap: 'field_wrap',
            type: 'slider_control',
            settingType: 'design',
            inline: true,
            configuration: [{ units: 'px', min: -500, max: 500, step: 5 }, { units: '%', min: -100, max: 100, step: 5 }, { units: 'em', min: -30, max: 30, step: 0.5 }],
            conditional: {
                conditions: [{
                    id: 'include_background_2',
                    property: 'yes',
                    value: 1
                }]
            }
        }, {
            id: 'background_position_right_2',
            title: 'Right',
            description: 'Adjust spacing from the right (setting this will override Left Distance)',
            wrap: 'field_wrap',
            type: 'slider_control',
            settingType: 'design',
            inline: true,
            configuration: [{ units: 'px', min: -500, max: 500, step: 5 }, { units: '%', min: -100, max: 100, step: 5 }, { units: 'em', min: -30, max: 30, step: 0.5 }],
            conditional: {
                conditions: [{
                    id: 'include_background_2',
                    property: 'yes',
                    value: 1
                }]
            }
        }, {
            id: 'background_position_bottom_2',
            title: 'Bottom',
            description: 'Adjust spacing from the bottom (setting this will override Top Distance)',
            wrap: 'field_wrap',
            type: 'slider_control',
            settingType: 'design',
            inline: true,
            configuration: [{ units: 'px', min: -500, max: 500, step: 5 }, { units: '%', min: -100, max: 100, step: 5 }, { units: 'em', min: -30, max: 30, step: 0.5 }],
            conditional: {
                conditions: [{
                    id: 'include_background_2',
                    property: 'yes',
                    value: 1
                }]
            }
        }, {
            id: 'background_height_2',
            title: 'Height',
            description: 'Adjust the height of the background',
            wrap: 'field_wrap',
            type: 'slider_control',
            settingType: 'design',
            inline: true,
            configuration: [{ units: 'px', min: 10, max: 2000, step: 5 }, { units: '%', min: 10, max: 200, step: 5 }, { units: 'em', min: 1, max: 30, step: 0.5 }],
            conditional: {
                conditions: [{
                    id: 'include_background_2',
                    property: 'yes',
                    value: 1
                }]
            }
        }, {
            id: 'background_width_2',
            title: 'Width',
            description: 'Adjust the width of the background',
            wrap: 'field_wrap',
            type: 'slider_control',
            settingType: 'design',
            inline: true,
            configuration: [{ units: 'px', min: 10, max: 2000, step: 5 }, { units: '%', min: 10, max: 200, step: 5 }, { units: 'em', min: 1, max: 30, step: 0.5 }],
            conditional: {
                conditions: [{
                    id: 'include_background_2',
                    property: 'yes',
                    value: 1
                }]
            }
        }, {
            id: 'background_border_radius_2',
            title: 'Border Radius',
            description: 'Curve the borders of this object',
            wrap: 'field_wrap',
            type: 'linked_sliders',
            settingType: 'design',
            labels: {
                top: 'topL',
                right: 'topR',
                left: 'botL',
                bottom: 'botR',
                useDefault: 'None',
                useCustom: 'Add'
            },
            deviceSpecific: true,
            configuration: [{ units: '%', min: 0, max: 100, step: 1 }, { units: 'px', min: 0, max: 500, step: 1 }],
            conditional: {
                conditions: [{
                    id: 'include_background_2',
                    property: 'yes',
                    value: 1
                }]
            }
        }, {
            id: 'background_group_3',
            title: 'Decorator Options',
            description: 'A decorator is a shape or text box that sits in front of the module, column, or row',
            wrap: 'field_group',
            icon: icons.decorator,
            items: ['include_background_3', 'remove_background_mobile_3', 'background_image_heading_3', 'background_content_heading_3', 'background_settings_heading_3', 'background_opacity_3', 'background_text_3', 'background_icon_3', 'background_text_color_3', 'background_text_size_3', 'background_rotation_3', 'background_position_top_3', 'background_position_left_3', 'background_position_right_3', 'background_position_bottom_3', 'background_height_3', 'background_width_3', 'background_border_radius_3', 'background_type_3', 'background_image_3', 'background_image_size_3', 'background_image_repeat_3', 'background_image_vertical_3', 'background_image_horizontal_3', 'background_3', 'gradient_1_3', 'gradient_2_3', 'background_behind_3']
        }, {
            id: 'include_background_3',
            title: 'Add',
            description: 'Include the decorator',
            wrap: 'field_wrap',
            type: 'switch',
            inline: true,
            settingType: 'design'
        }, {
            id: 'remove_background_mobile_3',
            title: 'Remove Mobile',
            description: 'Remove the decorator on mobile devices',
            wrap: 'field_wrap',
            type: 'switch',
            settingType: 'design',
            inline: true,
            conditional: {
                conditions: [{
                    id: 'include_background_3',
                    property: 'yes',
                    value: 1
                }]
            }
        }, {
            id: 'background_behind_3',
            title: 'Show Underneath Content',
            description: 'Show the decorator underneath the content instead of on top of it',
            wrap: 'field_wrap',
            settingType: 'design',
            inline: true,
            type: 'switch',
            conditional: {
                conditions: [{
                    id: 'include_background_3',
                    property: 'yes',
                    value: 1
                }]
            }
        }, {
            id: 'background_type_3',
            title: 'Decorator Type',
            description: 'Choose the background for this decorator',
            wrap: 'field_wrap',
            type: 'dropdown',
            settingType: 'design',
            options: [{
                name: 'Color',
                value: 'color'
            }, {
                name: '2-Color Gradient',
                value: 'gradient_2'
            }, {
                name: 'Image',
                value: 'image'
            }],
            conditional: {
                conditions: [{
                    id: 'include_background_3',
                    property: 'yes',
                    value: 1
                }]
            }
        }, {
            id: 'background_image_3',
            title: 'Decorator Image',
            description: 'Select an image for this decorator',
            wrap: 'field_wrap',
            type: 'media',
            settingType: 'content',
            conditional: {
                conditions: [{
                    id: 'background_type_3',
                    property: 'choice',
                    value: 'image'
                }, {
                    id: 'include_background_3',
                    property: 'yes',
                    value: 1
                }]
            },
            configuration: {
                featured: true
            }
        }, {
            id: 'background_image_heading_3',
            title: 'Image Settings',
            wrap: 'field_wrap',
            type: 'heading',
            inline: true,
            settingType: 'content',
            conditional: {
                conditions: [{
                    id: 'background_type_3',
                    property: 'choice',
                    value: 'image'
                }, {
                    id: 'include_background_3',
                    property: 'yes',
                    value: 1
                }]
            }
        }, {
            id: 'background_image_size_3',
            title: 'Size',
            description: 'How big the decorator image is. Defaults to cover the entire object.',
            wrap: 'field_wrap',
            type: 'slider_control',
            settingType: 'design',
            inline: true,
            configuration: [{ units: '%', min: 1, max: 200, step: 1 }, { units: 'px', min: 10, max: 2000, step: 10 }],
            conditional: {
                conditions: [{
                    id: 'background_type_3',
                    property: 'choice',
                    value: 'image'
                }, {
                    id: 'include_background_3',
                    property: 'yes',
                    value: 1
                }]
            }
        }, {
            id: 'background_image_repeat_3',
            title: 'Repeat',
            description: 'Repeat the decorator image throughout. Great for patterned decorators.',
            wrap: 'field_wrap',
            type: 'switch',
            settingType: 'content',
            inline: true,
            conditional: {
                conditions: [{
                    id: 'background_type_3',
                    property: 'choice',
                    value: 'image'
                }, {
                    id: 'include_background_3',
                    property: 'yes',
                    value: 1
                }]
            }
        }, {
            id: 'background_image_vertical_3',
            title: 'Vertical',
            description: 'Vertical alignment of the background image',
            wrap: 'field_wrap',
            type: 'radio_toggle',
            settingType: 'content',
            inline: true,
            options: [{
                name: 'fa-long-arrow-up',
                value: 'top'
            }, {
                name: 'fa-compress vertical',
                value: 'center'
            }, {
                name: 'fa-long-arrow-down',
                value: 'bottom'
            }],
            configuration: {
                flex: true
            },
            conditional: {
                conditions: [{
                    id: 'background_type_3',
                    property: 'choice',
                    value: 'image'
                }, {
                    id: 'include_background_3',
                    property: 'yes',
                    value: 1
                }]
            }
        }, {
            id: 'background_image_horizontal_3',
            title: 'Horizontal',
            description: 'Horizontal alignment of the decorator image',
            wrap: 'field_wrap',
            type: 'radio_toggle',
            settingType: 'content',
            inline: true,
            options: [{
                name: 'fa-long-arrow-left',
                value: 'left'
            }, {
                name: 'fa-compress horizontal',
                value: 'center'
            }, {
                name: 'fa-long-arrow-right',
                value: 'right'
            }],
            configuration: {
                flex: true
            },
            conditional: {
                conditions: [{
                    id: 'background_type_3',
                    property: 'choice',
                    value: 'image'
                }, {
                    id: 'include_background_3',
                    property: 'yes',
                    value: 1
                }]
            }
        }, {
            id: 'background_3',
            title: 'Background Color',
            description: 'Select a decorator color for this object',
            wrap: 'field_wrap',
            type: 'color',
            settingType: 'design',
            configuration: {
                gradient: true
            },
            conditional: {
                conditions: [{
                    id: 'background_type_3',
                    property: 'choice',
                    value: 'color'
                }, {
                    id: 'include_background_3',
                    property: 'yes',
                    value: 1
                }]
            }
        }, {
            id: 'background_text_color_3',
            title: 'Text Color',
            description: 'Select the color of the decorator text for this object',
            wrap: 'field_wrap',
            type: 'color',
            icon: 'paint-brush',
            settingType: 'design',
            conditional: {
                conditions: [{
                    id: 'background_type_3',
                    property: 'choice',
                    value: 'color'
                }, {
                    id: 'include_background_3',
                    property: 'yes',
                    value: 1
                }]
            }
        }, {
            id: 'gradient_1_3',
            title: 'Decorator Gradient 1',
            description: 'Select a starting decorator gradient color for this object',
            wrap: 'field_wrap',
            type: 'color',
            settingType: 'design',
            properties: {
                color: false
            },
            conditional: {
                conditions: [{
                    id: 'background_type_3',
                    property: 'choice',
                    value: 'gradient_2'
                }, {
                    id: 'include_background_3',
                    property: 'yes',
                    value: 1
                }]
            }
        }, {
            id: 'gradient_2_3',
            title: 'Decorator Gradient 2',
            description: 'Select a second decorator gradient color for this object',
            wrap: 'field_wrap',
            type: 'color',
            settingType: 'design',
            properties: {
                color: false
            },
            conditional: {
                conditions: [{
                    id: 'background_type_3',
                    property: 'choice',
                    value: 'gradient_2'
                }, {
                    id: 'include_background_3',
                    property: 'yes',
                    value: 1
                }]
            }
        }, {
            id: 'background_content_heading_3',
            title: 'Content',
            wrap: 'field_wrap',
            type: 'heading',
            inline: true,
            settingType: 'content',
            conditional: {
                conditions: [{
                    id: 'include_background_3',
                    property: 'yes',
                    value: 1
                }]
            }
        }, {
            id: 'background_text_3',
            title: 'Decorator Text',
            description: 'Include text inside the decorator object',
            wrap: 'field_wrap',
            type: 'text',
            settingType: 'content',
            inline: true,
            conditional: {
                conditions: [{
                    id: 'include_background_3',
                    property: 'yes',
                    value: 1
                }]
            }
        }, {
            id: 'background_icon_3',
            title: 'Decorator Icon',
            description: 'Include an icon inside the decorator object',
            wrap: 'field_wrap',
            type: 'icon',
            settingType: 'content',
            inline: true,
            conditional: {
                conditions: [{
                    id: 'include_background_3',
                    property: 'yes',
                    value: 1
                }]
            }
        }, {
            id: 'background_settings_heading_3',
            title: 'Settings',
            wrap: 'field_wrap',
            type: 'heading',
            inline: true,
            settingType: 'content',
            conditional: {
                conditions: [{
                    id: 'include_background_3',
                    property: 'yes',
                    value: 1
                }]
            }
        }, {
            id: 'background_opacity_3',
            title: 'Opacity',
            description: 'Adjust the opacity of the decorator',
            wrap: 'field_wrap',
            type: 'slider_control',
            settingType: 'design',
            inline: true,
            configuration: [{ units: '%', min: 0, max: 100, step: 1 }],
            conditional: {
                conditions: [{
                    id: 'include_background_3',
                    property: 'yes',
                    value: 1
                }]
            }
        }, {
            id: 'background_text_size_3',
            title: 'Text Size',
            description: 'The size of the text inside the decorator object',
            wrap: 'field_wrap',
            type: 'slider_control',
            inline: true,
            settingType: 'design',
            icon: 'font',
            configuration: [{ units: 'px', min: 8, max: 200, step: 1 }, { units: 'em', min: 0.5, max: 20, step: 0.1 }],
            conditional: {
                conditions: [{
                    id: 'include_background_3',
                    property: 'yes',
                    value: 1
                }]
            }
        }, {
            id: 'background_rotation_3',
            title: 'Rotation',
            description: 'The rotation of the decorator object',
            wrap: 'field_wrap',
            type: 'slider_control',
            icon: 'rotate-right',
            inline: true,
            settingType: 'design',
            configuration: [{ units: 'deg', min: 0, max: 360, step: 5 }],
            conditional: {
                conditions: [{
                    id: 'include_background_3',
                    property: 'yes',
                    value: 1
                }]
            }
        }, {
            id: 'background_position_top_3',
            title: 'Top',
            description: 'Adjust the top position of the decorator',
            wrap: 'field_wrap',
            type: 'slider_control',
            icon: 'long-arrow-up',
            settingType: 'design',
            inline: true,
            configuration: [{ units: 'px', min: -500, max: 500, step: 5 }, { units: '%', min: -100, max: 100, step: 5 }, { units: 'em', min: -30, max: 30, step: 0.5 }],
            conditional: {
                conditions: [{
                    id: 'include_background_3',
                    property: 'yes',
                    value: 1
                }, {
                    id: 'background_position_bottom_3',
                    property: 'useDefault',
                    value: 'default'
                }]
            }
        }, {
            id: 'background_position_left_3',
            title: 'Left',
            description: 'Adjust the left position of the decorator',
            wrap: 'field_wrap',
            type: 'slider_control',
            icon: 'long-arrow-left',
            settingType: 'design',
            inline: true,
            configuration: [{ units: 'px', min: -500, max: 500, step: 5 }, { units: '%', min: -100, max: 100, step: 5 }, { units: 'em', min: -30, max: 30, step: 0.5 }],
            conditional: {
                conditions: [{
                    id: 'include_background_3',
                    property: 'yes',
                    value: 1
                }, {
                    id: 'background_position_right_3',
                    property: 'useDefault',
                    value: 'default'
                }]
            }
        }, {
            id: 'background_position_right_3',
            title: 'Right',
            description: 'Adjust the right position of the decorator',
            wrap: 'field_wrap',
            type: 'slider_control',
            settingType: 'design',
            icon: 'long-arrow-right',
            inline: true,
            configuration: [{ units: 'px', min: -500, max: 500, step: 5 }, { units: '%', min: -100, max: 100, step: 5 }, { units: 'em', min: -30, max: 30, step: 0.5 }],
            conditional: {
                conditions: [{
                    id: 'include_background_3',
                    property: 'yes',
                    value: 1
                }, {
                    id: 'background_position_left_3',
                    property: 'useDefault',
                    value: 'default'
                }]
            }
        }, {
            id: 'background_position_bottom_3',
            title: 'Bottom',
            description: 'Adjust the bottom position of the decorator',
            wrap: 'field_wrap',
            type: 'slider_control',
            settingType: 'design',
            icon: 'long-arrow-down',
            inline: true,
            configuration: [{ units: 'px', min: -500, max: 500, step: 5 }, { units: '%', min: -100, max: 100, step: 5 }, { units: 'em', min: -30, max: 30, step: 0.5 }],
            conditional: {
                conditions: [{
                    id: 'include_background_3',
                    property: 'yes',
                    value: 1
                }, {
                    id: 'background_position_top_3',
                    property: 'useDefault',
                    value: 'default'
                }]
            }
        }, {
            id: 'background_height_3',
            title: 'Height',
            description: 'Adjust the height of the decorator',
            wrap: 'field_wrap',
            type: 'slider_control',
            settingType: 'design',
            icon: 'arrows-v',
            inline: true,
            configuration: [{ units: 'px', min: 10, max: 2000, step: 5 }, { units: '%', min: 10, max: 200, step: 5 }, { units: 'em', min: 1, max: 30, step: 0.5 }],
            conditional: {
                conditions: [{
                    id: 'include_background_3',
                    property: 'yes',
                    value: 1
                }]
            }
        }, {
            id: 'background_width_3',
            title: 'Width',
            description: 'Adjust the width of the decorator',
            wrap: 'field_wrap',
            type: 'slider_control',
            settingType: 'design',
            inline: true,
            icon: 'arrows-h',
            configuration: [{ units: 'px', min: 10, max: 2000, step: 5 }, { units: '%', min: 10, max: 200, step: 5 }, { units: 'em', min: 1, max: 30, step: 0.5 }],
            conditional: {
                conditions: [{
                    id: 'include_background_3',
                    property: 'yes',
                    value: 1
                }]
            }
        }, {
            id: 'background_border_radius_3',
            title: 'Border Radius',
            description: 'Curve the borders of this decorator',
            wrap: 'field_wrap',
            type: 'linked_sliders',
            settingType: 'design',
            icon: 'square-o',
            labels: {
                top: 'topL',
                right: 'topR',
                left: 'botL',
                bottom: 'botR',
                useDefault: 'None',
                useCustom: 'Add'
            },
            deviceSpecific: true,
            configuration: [{ units: '%', min: 0, max: 100, step: 1 }, { units: 'px', min: 0, max: 500, step: 1 }],
            conditional: {
                conditions: [{
                    id: 'include_background_3',
                    property: 'yes',
                    value: 1
                }]
            }
        }, {
            id: 'border_group',
            title: 'Border Options',
            description: 'Configure border options for this object',
            wrap: 'field_group',
            icon: icons.border,
            settingType: 'design',
            items: ['border', 'box_shadow', 'border_radius']
        }, {
            id: 'border',
            title: 'Border',
            description: 'Design a border for this object',
            wrap: 'field_wrap',
            type: 'border',
            settingType: 'design',
            deviceSpecific: true,
            configuration: [{ units: 'px', min: 0, max: 40, step: 1 }]
        }, {
            id: 'border_radius',
            title: 'Border Radius',
            description: 'Curve the borders of this object',
            wrap: 'field_wrap',
            type: 'linked_sliders',
            labels: {
                top: 'topL',
                right: 'topR',
                left: 'botL',
                bottom: 'botR',
                useDefault: 'None',
                useCustom: 'Add'
            },
            deviceSpecific: true,
            configuration: [{ units: '%', min: 0, max: 100, step: 1 }, { units: 'px', min: 0, max: 100, step: 1 }]
        }, {
            id: 'box_shadow',
            title: 'Box Shadow',
            description: 'Add a shadow effect to the object',
            wrap: 'field_wrap',
            settingType: 'design',
            type: 'box_shadow'
        }, {
            id: 'top_shape_divider_group',
            title: 'Top Shape Divider',
            description: 'Add a divider at the top of this row',
            wrap: 'field_group',
            icon: icons.divider,
            items: ['top_shape_divider'],
            permission: 'subscription_only_options',
            onlyObjectTypes: ['row']
        }, {
            id: 'top_shape_divider',
            wrap: 'field_mixin',
            mixin: 'shape',
            prefix: 'top_',
            settingType: 'content',
            individualConditionals: true,
            group: 'top_shape_divider_group'
        }, {
            id: 'bottom_shape_divider_group',
            title: 'Bottom Shape Divider',
            description: 'Add a divider at the bottom of this row',
            wrap: 'field_group',
            icon: icons.divider,
            items: ['bottom_shape_divider'],
            permission: 'subscription_only_options',
            onlyObjectTypes: ['row']
        }, {
            id: 'bottom_shape_divider',
            wrap: 'field_mixin',
            mixin: 'shape',
            prefix: 'bottom_',
            settingType: 'content',
            individualConditionals: true,
            group: 'bottom_shape_divider_group'
        }, {
            id: 'sticky_group',
            title: 'Sticky Settings',
            description: 'Make this row sticky or set this row as a target for sticky scrolling or links',
            wrap: 'field_group',
            icon: icons.sticky,
            settingType: 'content',
            items: ['sticky_or_target', 'minimum_sticky_width', 'target_name', 'stick_width', 'stick_when', 'stick_when_distance', 'stick_overlay', 'stick_when_target', 'stuck_color', 'stuck_background', 'unstick_when', 'unstick_when_distance', 'unstick_when_target'],
            permission: 'subscription_only_options',
            onlyObjectTypes: ['row']
        }, {
            id: 'sticky_or_target',
            title: 'Sticky or Target',
            description: 'Set sticky if you would like to make this row sticky',
            wrap: 'field_wrap',
            settingType: 'content',
            type: 'radio_toggle',
            note: 'The sticky effect is not shown while in editing mode and is best seen while not logged in',
            onlyObjectTypes: ['row'],
            options: [{
                name: 'None',
                value: 'none'
            }, {
                name: 'Sticky',
                value: 'sticky'
            }, {
                name: 'Target',
                value: 'target'
            }]
        }, {
            id: 'target_name',
            title: 'Target Name',
            description: 'Set a name for this sticky target',
            wrap: 'field_wrap',
            settingType: 'content',
            type: 'text',
            onlyObjectTypes: ['row'],
            conditional: {
                conditions: [{
                    id: 'sticky_or_target',
                    property: 'choice',
                    value: 'target'
                }]
            }
        }, {
            id: 'minimum_sticky_width',
            title: 'Minimum Sticky Screen Width',
            description: 'The screen width at which the sticky effect starts. Use this to prevent sticking in phones, for example.',
            //note: 'To see device widths for popular devices, click <a href="https://mydevice.io/devices/" target="_blank">here</a>.',
            wrap: 'field_wrap',
            settingType: 'content',
            type: 'slider_control',
            configuration: [{ units: 'px', min: 0, max: 2000, step: 10 }],
            onlyObjectTypes: ['row'],
            conditional: {
                conditions: [{
                    id: 'sticky_or_target',
                    property: 'choice',
                    value: 'sticky'
                }]
            }
        }, {
            id: 'stick_when',
            title: 'Stick When',
            description: 'Choose when to stick this row. "Reach Distance From Top" can be used to stick the element once you scroll past it.',
            wrap: 'field_wrap',
            settingType: 'content',
            type: 'radio_toggle',
            onlyObjectTypes: ['row'],
            options: [{
                name: 'Reach Distance From Top',
                value: 'distance'
            },
            /*{
            name: 'Reach Target',
            value: 'target'
            },
            {
            name: 'Scroll Below Self',
            value: 'below'
            },*/
            {
                name: 'Item at Top',
                value: 'top'
            }],
            conditional: {
                conditions: [{
                    id: 'sticky_or_target',
                    property: 'choice',
                    value: 'sticky'
                }]
            }
        }, {
            id: 'stick_when_distance',
            title: 'Stick When: Distance',
            description: 'The distance from the top to start sticking the row',
            wrap: 'field_wrap',
            settingType: 'content',
            type: 'slider_control',
            note: 'Use a negative number to delay sticky until item is scrolling out of the viewport',
            onlyObjectTypes: ['row'],
            configuration: [{ units: 'px', min: -500, max: 200, step: 5 }],
            conditional: {
                conditions: [{
                    id: 'sticky_or_target',
                    property: 'choice',
                    value: 'sticky'
                }, {
                    id: 'stick_when',
                    property: 'choice',
                    value: 'distance'
                }]
            }
        }, {
            id: 'stick_overlay',
            title: 'Stick: Overlay',
            description: 'Make the sticky row an overlay header',
            wrap: 'field_wrap',
            settingType: 'content',
            type: 'switch',
            onlyObjectTypes: ['row'],
            note: 'Effect is not visible while in builder mode',
            conditional: {
                conditions: [{
                    id: 'sticky_or_target',
                    property: 'choice',
                    value: 'sticky'
                }, {
                    id: 'stick_when',
                    property: 'choice',
                    value: 'distance'
                }]
            }
        }, {
            id: 'stuck_color',
            title: 'Stuck: Text Color',
            description: 'Select a text color for when this row is stuck',
            wrap: 'field_wrap',
            type: 'color',
            settingType: 'content',
            conditional: {
                conditions: [{
                    id: 'sticky_or_target',
                    property: 'choice',
                    value: 'sticky'
                }, {
                    id: 'stick_when',
                    property: 'choice',
                    value: 'distance'
                }]
            }
        }, {
            id: 'stuck_background',
            title: 'Stuck: Background',
            description: 'Select a background color for when this row is stuck',
            wrap: 'field_wrap',
            type: 'color',
            settingType: 'content',
            conditional: {
                conditions: [{
                    id: 'sticky_or_target',
                    property: 'choice',
                    value: 'sticky'
                }, {
                    id: 'stick_when',
                    property: 'choice',
                    value: 'distance'
                }]
            }
        }, {
            id: 'stick_when_target',
            title: 'Stick When: Target',
            description: 'Stick the row when the following target is scrolled to in the window',
            wrap: 'field_wrap',
            settingType: 'content',
            onlyObjectTypes: ['row'],
            type: 'targets',
            conditional: {
                conditions: [{
                    id: 'sticky_or_target',
                    property: 'choice',
                    value: 'sticky'
                }, {
                    id: 'stick_when',
                    property: 'choice',
                    value: 'target'
                }]
            }
        }, {
            id: 'unstick_when',
            title: 'Unstick When',
            description: 'Choose when to unstick this row.',
            wrap: 'field_wrap',
            settingType: 'content',
            type: 'radio_toggle',
            onlyObjectTypes: ['row'],
            options: [{
                name: 'Never',
                value: 'never'
            },
            /*{
             name: 'Reach Distance From Top',
             value: 'distance'
             },*/
            {
                name: 'Reach Target',
                value: 'target'
            }],
            conditional: {
                conditions: [{
                    id: 'sticky_or_target',
                    property: 'choice',
                    value: 'sticky'
                }]
            }
        }, {
            id: 'unstick_when_distance',
            title: 'Unstick When: Distance',
            description: 'The distance from the top to unstick the row',
            wrap: 'field_wrap',
            settingType: 'content',
            type: 'slider_control',
            onlyObjectTypes: ['row'],
            configuration: [{ units: 'px', min: 0, max: 5000, step: 100 }],
            conditional: {
                conditions: [{
                    id: 'sticky_or_target',
                    property: 'choice',
                    value: 'sticky'
                }, {
                    id: 'unstick_when',
                    property: 'choice',
                    value: 'distance'
                }]
            }
        }, {
            id: 'unstick_when_target',
            title: 'Unstick When: Target',
            description: 'Unstick the row when the following target is scrolled to in the window',
            wrap: 'field_wrap',
            settingType: 'content',
            onlyObjectTypes: ['row'],
            type: 'targets',
            conditional: {
                conditions: [{
                    id: 'sticky_or_target',
                    property: 'choice',
                    value: 'sticky'
                }, {
                    id: 'unstick_when',
                    property: 'choice',
                    value: 'target'
                }]
            }
        }, {
            id: 'advanced_group',
            title: 'Advanced Options',
            description: 'Configure more advanced options for this object',
            wrap: 'field_group',
            icon: icons.advanced,
            items: ['entrance_animation', 'login_status_show', 'device_hide', 'permission_lock', 'z_index', 'overflow', 'classes']
        }, {
            id: 'entrance_animation',
            title: 'Entrance Animation',
            description: 'Show this element with an animation when it first appears on the screen',
            wrap: 'field_wrap',
            type: 'dropdown',
            settingType: 'design',
            onChange: 'ocbHideShow',
            options: ['none', 'bounce', 'flash', 'pulse', 'rubberBand', 'shake', 'headShake', 'swing', 'tada', 'wobble', 'jello', 'bounceIn', 'bounceInDown', 'bounceInLeft', 'bounceInRight', 'bounceInUp', 'bounceOut', 'bounceOutDown', 'bounceOutLeft', 'bounceOutRight', 'bounceOutUp', 'fadeIn', 'fadeInDown', 'fadeInDownBig', 'fadeInLeft', 'fadeInLeftBig', 'fadeInRight', 'fadeInRightBig', 'fadeInUp', 'fadeInUpBig', 'fadeOut', 'fadeOutDown', 'fadeOutDownBig', 'fadeOutLeft', 'fadeOutLeftBig', 'fadeOutRight', 'fadeOutRightBig', 'fadeOutUp', 'fadeOutUpBig', 'flipInX', 'flipInY', 'flipOutX', 'flipOutY', 'lightSpeedIn', 'lightSpeedOut', 'rotateIn', 'rotateInDownLeft', 'rotateInDownRight', 'rotateInUpLeft', 'rotateInUpRight', 'rotateOut', 'rotateOutDownLeft', 'rotateOutDownRight', 'rotateOutUpLeft', 'rotateOutUpRight', 'hinge', 'rollIn', 'rollOut', 'zoomIn', 'zoomInDown', 'zoomInLeft', 'zoomInRight', 'zoomInUp', 'zoomOut', 'zoomOutDown', 'zoomOutLeft', 'zoomOutRight', 'zoomOutUp', 'slideInDown', 'slideInLeft', 'slideInRight', 'slideInUp', 'slideOutDown', 'slideOutLeft', 'slideOutRight', 'slideOutUp']
        }, {
            id: 'login_status_show',
            title: 'Login Status Show',
            description: 'Hide content based on logged in status',
            wrap: 'field_wrap',
            type: 'radio_toggle',
            settingType: 'content',
            note: 'This setting will only take effect when you are viewing the live page, not while in builder mode',
            options: [{
                name: 'Show For Both',
                value: 'both'
            }, {
                name: 'Show Only Logged In',
                value: 'in'
            }, {
                name: 'Show Only Logged Out',
                value: 'out'
            }]
        }, {
            id: 'device_hide',
            title: 'Device Hide',
            description: 'This allows you to hide this object on some devices',
            wrap: 'field_wrap',
            type: 'multi_select',
            settingType: 'content',
            note: 'This setting will only take effect when you are viewing the live page, not while in builder mode',
            options: [{
                name: 'Hide on Desktop',
                value: 'desktop'
            }, {
                name: 'Hide on Tablet',
                value: 'tablet'
            }, {
                name: 'Hide on Phone',
                value: 'phone'
            }]
        }, {
            id: 'permission_lock',
            title: 'Permission Lock',
            description: 'Lock the editing of this element for certain builder roles',
            wrap: 'field_wrap',
            type: 'builder_role',
            settingType: 'content',
            note: 'Select roles that you want to prevent from editing this object'
        }, {
            id: 'overflow',
            title: 'Overflow',
            description: 'What to do with content that extends beyond the boundary of the object',
            wrap: 'field_wrap',
            settingType: 'content',
            type: 'radio_toggle',
            options: [{
                name: 'Default',
                value: 'default'
            }, {
                name: 'Hidden',
                value: 'hidden'
            }],
            configuration: {
                flex: true
            }
        }, {
            id: 'z_index',
            title: 'Z-Index',
            description: 'The z-index this object',
            wrap: 'field_wrap',
            type: 'slider_control',
            settingType: 'content',
            note: 'Keep in mind that in order to bring forward a module, you may have to increase the z-index of the module\'s parent row.',
            configuration: [{ units: 'z', min: 0, max: 10, step: 1 }]
        }, {
            id: 'classes',
            title: 'Classes',
            description: 'Add a CSS class to this object',
            wrap: 'field_wrap',
            settingType: 'content',
            type: 'text'
        }, {
            id: 'row_skin',
            title: 'Row Skin',
            description: 'Select a design skin for this row or use a custom design',
            wrap: 'field_wrap',
            type: 'skin_converter',
            //note: 'Row skins can be configured in the site settings area. This is useful for having site-wide row designs that can be updated in a single place.',
            onlyObjectTypes: ['row'],
            options: [{
                name: 'Hero',
                value: 'hero'
            }, {
                name: 'Content',
                value: 'content'
            }, {
                name: 'Custom',
                value: 'custom'
            }],
            conditional: { //Remove this field if it's custom
                ifTrue: 'hide',
                conditions: [{
                    id: 'row_skin',
                    property: 'choice',
                    value: 'custom'
                }]
            },
            configuration: {
                moduleType: 'row',
                prefixes: {
                    content: 'content_row_',
                    hero: 'hero_row_'
                },
                id: 'row_skin',
                property: 'choice',
                value: 'custom'
            }
        },

        /*{
         id: 'layers_group',
         title: 'Layers',
         description: 'Configure additional background layers',
         wrap: 'field_group',
         icon: icons.advanced,
         items: ['layers']
         },*/
        {
            id: 'layers',
            title: 'Layers',
            description: 'Layers can add additional background images, shapes, and patterns',
            wrap: 'field_repeater',
            settingType: 'content',
            itemName: 'Layer',
            itemDescription: 'Options for the layer',
            items: {
                fields: [{
                    id: 'remove_layer_mobile',
                    title: 'Remove Mobile',
                    description: 'Remove the decorator on mobile devices',
                    wrap: 'field_wrap',
                    type: 'switch',
                    settingType: 'content',
                    inline: true
                }, {
                    id: 'hide_layer',
                    title: 'Hide Layer',
                    description: 'Use if you quickly want to compare the design with vs. without the layer, without deleting the layer',
                    wrap: 'field_wrap',
                    type: 'switch',
                    settingType: 'content',
                    inline: true
                }, {
                    id: 'layer_type',
                    title: 'Layer Type',
                    description: 'Choose the background for this decorator',
                    wrap: 'field_wrap',
                    type: 'dropdown',
                    settingType: 'content',
                    options: [{
                        name: 'Color',
                        value: 'color'
                    }, {
                        name: '2-Color Gradient',
                        value: 'gradient_2'
                    }, {
                        name: 'Image',
                        value: 'image'
                    }, {
                        name: 'Pattern',
                        value: 'pattern'
                    }]
                }, {
                    id: 'layer_patterns_note',
                    title: '',
                    wrap: 'field_wrap',
                    type: 'note',
                    settingType: 'content',
                    inline: true,
                    note: 'Use this with an image. You can find a collection of patterns in the SVG stock images by searching for "patterns"',
                    conditional: {
                        conditions: [{
                            id: 'layer_type',
                            property: 'choice',
                            value: 'pattern',
                            useLocal: true
                        }]
                    }
                }, {
                    id: 'layer_image',
                    title: 'Layer Image',
                    description: 'Select an image for this decorator',
                    wrap: 'field_wrap',
                    type: 'media',
                    settingType: 'content',
                    conditional: {
                        type: 'or',
                        conditions: [{
                            id: 'layer_type',
                            property: 'choice',
                            value: 'image',
                            useLocal: true
                        }, {
                            id: 'layer_type',
                            property: 'choice',
                            value: 'pattern',
                            useLocal: true
                        }]
                    },
                    configuration: {
                        featured: true
                    }
                },
                /*{
                    id: 'layer_image_heading',
                    title: 'Image Settings',
                    wrap: 'field_wrap',
                    type: 'heading',
                    inline: true,
                    settingType: 'content',
                    conditional: {
                        conditions: [
                            {
                                id: 'layer_type',
                                property: 'choice',
                                value: 'image',
                                useLocal: true
                            }
                        ]
                    }
                },*/
                {
                    id: 'layer_image_size',
                    title: 'Size',
                    description: 'How big the decorator image is. Defaults to cover the entire object.',
                    wrap: 'field_wrap',
                    type: 'slider_control',
                    settingType: 'content',
                    inline: true,
                    configuration: [{ units: '%', min: 1, max: 500, step: 1 }, { units: 'px', min: 10, max: 2000, step: 10 }],
                    conditional: {
                        type: 'or',
                        conditions: [{
                            id: 'layer_type',
                            property: 'choice',
                            value: 'image',
                            useLocal: true
                        }]
                    }
                }, {
                    id: 'layer_pattern_size',
                    title: 'Pattern Size',
                    description: 'How big the decorator image is. Defaults to cover the entire object.',
                    wrap: 'field_wrap',
                    type: 'slider_control',
                    settingType: 'content',
                    inline: true,
                    configuration: [{ units: '%', min: 1, max: 100, step: 1 }, { units: 'px', min: 5, max: 500, step: 1 }],
                    conditional: {
                        type: 'or',
                        conditions: [{
                            id: 'layer_type',
                            property: 'choice',
                            value: 'pattern',
                            useLocal: true
                        }]
                    }
                }, {
                    id: 'layer_background',
                    title: 'Background Color',
                    description: 'Select a decorator color for this object',
                    wrap: 'field_wrap',
                    type: 'color',
                    settingType: 'content',
                    configuration: {
                        gradient: true
                    },
                    conditional: {
                        conditions: [{
                            id: 'layer_type',
                            property: 'choice',
                            value: 'color',
                            useLocal: true
                        }]
                    }
                }, {
                    id: 'layer_gradient_1',
                    title: 'Decorator Gradient 1',
                    description: 'Select a starting decorator gradient color for this object',
                    wrap: 'field_wrap',
                    type: 'color',
                    settingType: 'design',
                    properties: {
                        color: false
                    },
                    conditional: {
                        conditions: [{
                            id: 'layer_type',
                            property: 'choice',
                            value: 'gradient_2',
                            useLocal: true
                        }]
                    }
                }, {
                    id: 'layer_gradient_2',
                    title: 'Decorator Gradient 2',
                    description: 'Select a second decorator gradient color for this object',
                    wrap: 'field_wrap',
                    type: 'color',
                    settingType: 'content',
                    properties: {
                        color: false
                    },
                    conditional: {
                        conditions: [{
                            id: 'layer_type',
                            property: 'choice',
                            value: 'gradient_2',
                            useLocal: true
                        }]
                    }
                }, {
                    id: 'layer_content_heading',
                    title: 'Content',
                    wrap: 'field_wrap',
                    type: 'heading',
                    inline: true,
                    settingType: 'content',
                    conditional: {
                        type: 'or',
                        conditions: [{
                            id: 'layer_type',
                            property: 'choice',
                            value: 'color',
                            useLocal: true
                        }, {
                            id: 'layer_type',
                            property: 'choice',
                            value: 'gradient_2',
                            useLocal: true
                        }, {
                            id: 'layer_type',
                            property: 'choice',
                            value: 'pattern',
                            useLocal: true
                        }]
                    }
                }, {
                    id: 'layer_content_align',
                    title: 'Content Align',
                    description: 'Horizontal alignment of the background image',
                    wrap: 'field_wrap',
                    settingType: 'content',
                    inline: true,
                    type: 'radio_toggle',
                    options: [{
                        name: 'fa-ban',
                        value: 'none'
                    }, {
                        name: 'fa-align-left',
                        value: 'start'
                    }, {
                        name: 'fa-align-center',
                        value: 'center'
                    }, {
                        name: 'fa-align-right',
                        value: 'end'
                    }],
                    configuration: {
                        flex: true
                    },
                    conditional: {
                        type: 'or',
                        conditions: [{
                            id: 'layer_type',
                            property: 'choice',
                            value: 'color',
                            useLocal: true
                        }, {
                            id: 'layer_type',
                            property: 'choice',
                            value: 'gradient_2',
                            useLocal: true
                        }, {
                            id: 'layer_type',
                            property: 'choice',
                            value: 'pattern',
                            useLocal: true
                        }]
                    }
                }, {
                    id: 'include_layer_content',
                    title: 'Include Text',
                    description: 'Include text content in this layer',
                    wrap: 'field_wrap',
                    type: 'switch',
                    settingType: 'content',
                    inline: true,
                    conditional: {
                        type: 'or',
                        conditions: [{
                            id: 'layer_type',
                            property: 'choice',
                            value: 'color',
                            useLocal: true
                        }, {
                            id: 'layer_type',
                            property: 'choice',
                            value: 'gradient_2',
                            useLocal: true
                        }, {
                            id: 'layer_type',
                            property: 'choice',
                            value: 'pattern',
                            useLocal: true
                        }]
                    }
                }, {
                    id: 'layer_text',
                    title: 'Layer Text',
                    description: 'Include text inside the decorator object',
                    wrap: 'field_wrap',
                    type: 'texteditor',
                    settingType: 'content',
                    inline: true,
                    conditional: {
                        conditions: [{
                            id: 'include_layer_content',
                            property: 'yes',
                            value: 1,
                            useLocal: true
                        }, {
                            conditional: {
                                type: 'or',
                                conditions: [{
                                    id: 'layer_type',
                                    property: 'choice',
                                    value: 'color',
                                    useLocal: true
                                }, {
                                    id: 'layer_type',
                                    property: 'choice',
                                    value: 'gradient_2',
                                    useLocal: true
                                }, {
                                    id: 'layer_type',
                                    property: 'choice',
                                    value: 'pattern',
                                    useLocal: true
                                }]
                            }
                        }]
                    }
                }, {
                    id: 'layer_text_size',
                    title: 'Text Size',
                    description: 'The size of the text inside the decorator object',
                    wrap: 'field_wrap',
                    type: 'slider_control',
                    inline: true,
                    settingType: 'content',
                    icon: 'font',
                    configuration: [{ units: 'px', min: 8, max: 200, step: 1 }, { units: 'em', min: 0.5, max: 20, step: 0.1 }],
                    conditional: {
                        conditions: [{
                            id: 'include_layer_content',
                            property: 'yes',
                            value: 1,
                            useLocal: true
                        }, {
                            conditional: {
                                type: 'or',
                                conditions: [{
                                    id: 'layer_type',
                                    property: 'choice',
                                    value: 'color',
                                    useLocal: true
                                }, {
                                    id: 'layer_type',
                                    property: 'choice',
                                    value: 'gradient_2',
                                    useLocal: true
                                }, {
                                    id: 'layer_type',
                                    property: 'choice',
                                    value: 'pattern',
                                    useLocal: true
                                }]
                            }
                        }]
                    }
                }, {
                    id: 'layer_text_color',
                    title: 'Text Color',
                    description: 'Select the color of the decorator text for this object',
                    wrap: 'field_wrap',
                    type: 'color',
                    icon: 'paint-brush',
                    settingType: 'content',
                    conditional: {
                        conditions: [{
                            id: 'include_layer_content',
                            property: 'yes',
                            value: 1,
                            useLocal: true
                        }, {
                            conditional: {
                                type: 'or',
                                conditions: [{
                                    id: 'layer_type',
                                    property: 'choice',
                                    value: 'color',
                                    useLocal: true
                                }, {
                                    id: 'layer_type',
                                    property: 'choice',
                                    value: 'gradient_2',
                                    useLocal: true
                                }, {
                                    id: 'layer_type',
                                    property: 'choice',
                                    value: 'pattern',
                                    useLocal: true
                                }]
                            }
                        }]
                    }
                }, {
                    id: 'layer_icon_heading',
                    title: 'Icon',
                    wrap: 'field_wrap',
                    type: 'heading',
                    inline: true,
                    settingType: 'content',
                    conditional: {
                        type: 'or',
                        conditions: [{
                            id: 'layer_type',
                            property: 'choice',
                            value: 'color',
                            useLocal: true
                        }, {
                            id: 'layer_type',
                            property: 'choice',
                            value: 'gradient_2',
                            useLocal: true
                        }, {
                            id: 'layer_type',
                            property: 'choice',
                            value: 'pattern',
                            useLocal: true
                        }]
                    }
                }, {
                    id: 'include_layer_icon',
                    title: 'Include Icon',
                    description: 'Include icon content in this layer',
                    wrap: 'field_wrap',
                    type: 'switch',
                    settingType: 'content',
                    inline: true,
                    conditional: {
                        type: 'or',
                        conditions: [{
                            id: 'layer_type',
                            property: 'choice',
                            value: 'color',
                            useLocal: true
                        }, {
                            id: 'layer_type',
                            property: 'choice',
                            value: 'gradient_2',
                            useLocal: true
                        }, {
                            id: 'layer_type',
                            property: 'choice',
                            value: 'pattern',
                            useLocal: true
                        }]
                    }
                }, {
                    id: 'layer_icon',
                    title: 'Layer Icon',
                    description: 'Include an icon inside the layer object',
                    wrap: 'field_wrap',
                    type: 'icon',
                    settingType: 'content',
                    inline: true,
                    conditional: {
                        conditions: [{
                            id: 'include_layer_icon',
                            property: 'yes',
                            value: 1,
                            useLocal: true
                        }, {
                            conditional: {
                                type: 'or',
                                conditions: [{
                                    id: 'layer_type',
                                    property: 'choice',
                                    value: 'color',
                                    useLocal: true
                                }, {
                                    id: 'layer_type',
                                    property: 'choice',
                                    value: 'gradient_2',
                                    useLocal: true
                                }, {
                                    id: 'layer_type',
                                    property: 'choice',
                                    value: 'pattern',
                                    useLocal: true
                                }]
                            }
                        }]
                    }
                }, {
                    id: 'layer_icon_size',
                    title: 'Icon Size',
                    description: 'The size of the icon inside the layer object',
                    wrap: 'field_wrap',
                    type: 'slider_control',
                    inline: true,
                    settingType: 'content',
                    icon: 'font',
                    configuration: [{ units: 'px', min: 8, max: 200, step: 1 }, { units: 'em', min: 0.5, max: 20, step: 0.1 }],
                    conditional: {
                        conditions: [{
                            id: 'include_layer_icon',
                            property: 'yes',
                            value: 1,
                            useLocal: true
                        }, {
                            conditional: {
                                type: 'or',
                                conditions: [{
                                    id: 'layer_type',
                                    property: 'choice',
                                    value: 'color',
                                    useLocal: true
                                }, {
                                    id: 'layer_type',
                                    property: 'choice',
                                    value: 'gradient_2',
                                    useLocal: true
                                }, {
                                    id: 'layer_type',
                                    property: 'choice',
                                    value: 'pattern',
                                    useLocal: true
                                }]
                            }
                        }]
                    }
                }, {
                    id: 'layer_icon_color',
                    title: 'Icon Color',
                    description: 'Select the color of the layer icon for this object',
                    wrap: 'field_wrap',
                    type: 'color',
                    icon: 'paint-brush',
                    settingType: 'content',
                    conditional: {
                        conditions: [{
                            id: 'include_layer_icon',
                            property: 'yes',
                            value: 1,
                            useLocal: true
                        }, {
                            conditional: {
                                type: 'or',
                                conditions: [{
                                    id: 'layer_type',
                                    property: 'choice',
                                    value: 'color',
                                    useLocal: true
                                }, {
                                    id: 'layer_type',
                                    property: 'choice',
                                    value: 'gradient_2',
                                    useLocal: true
                                }, {
                                    id: 'layer_type',
                                    property: 'choice',
                                    value: 'pattern',
                                    useLocal: true
                                }]
                            }
                        }]
                    }
                }, {
                    id: 'layer_settings_heading',
                    title: 'Settings',
                    wrap: 'field_wrap',
                    type: 'heading',
                    inline: true,
                    settingType: 'content'
                }, {
                    id: 'layer_opacity',
                    title: 'Opacity',
                    description: 'Adjust the opacity of the decorator',
                    wrap: 'field_wrap',
                    type: 'slider_control',
                    settingType: 'content',
                    inline: true,
                    configuration: [{ units: '%', min: 0, max: 100, step: 1 }]
                }, {
                    id: 'layer_rotation',
                    title: 'Rotation',
                    description: 'The rotation of the decorator object',
                    wrap: 'field_wrap',
                    type: 'slider_control',
                    icon: 'rotate-right',
                    inline: true,
                    settingType: 'content',
                    configuration: [{ units: 'deg', min: 0, max: 360, step: 5 }]
                }, {
                    id: 'layer_xy',
                    title: 'Position',
                    description: 'Adjust the position of the layer',
                    wrap: 'field_wrap',
                    type: 'xy_slider',
                    icon: 'long-arrow-up',
                    settingType: 'content',
                    inline: true,
                    configuration: [{ units: 'xy', min: -100, max: 200 }, { units: 'px', min: -1000, max: 1000 }, { units: '%', min: -100, max: 100 }, { units: 'em', min: -30, max: 30 }]
                }, {
                    id: 'layer_z',
                    title: 'Z Index',
                    description: 'Adjust the layer depth in the z plane',
                    wrap: 'field_wrap',
                    type: 'slider_control',
                    settingType: 'content',
                    inline: true,
                    icon: 'arrows-h',
                    configuration: [{ units: 'z', min: -10, max: 10, step: 1 }]
                }, {
                    id: 'layer_height',
                    title: 'Height',
                    description: 'Adjust the height of the decorator',
                    wrap: 'field_wrap',
                    type: 'slider_control',
                    settingType: 'content',
                    icon: 'arrows-v',
                    inline: true,
                    configuration: [{ units: 'px', min: 10, max: 2000, step: 5 }, { units: '%', min: 10, max: 200, step: 1 }, { units: 'em', min: 1, max: 30, step: 0.5 }],
                    conditional: {
                        type: 'or',
                        conditions: [{
                            id: 'layer_type',
                            property: 'choice',
                            value: 'color',
                            useLocal: true
                        }, {
                            id: 'layer_type',
                            property: 'choice',
                            value: 'gradient_2',
                            useLocal: true
                        }, {
                            id: 'layer_type',
                            property: 'choice',
                            value: 'pattern',
                            useLocal: true
                        }]
                    }
                }, {
                    id: 'layer_width',
                    title: 'Width',
                    description: 'Adjust the width of the decorator',
                    wrap: 'field_wrap',
                    type: 'slider_control',
                    settingType: 'content',
                    inline: true,
                    icon: 'arrows-h',
                    configuration: [{ units: 'px', min: 10, max: 2000, step: 5 }, { units: '%', min: 10, max: 200, step: 1 }, { units: 'em', min: 1, max: 30, step: 0.5 }],
                    conditional: {
                        type: 'or',
                        conditions: [{
                            id: 'layer_type',
                            property: 'choice',
                            value: 'color',
                            useLocal: true
                        }, {
                            id: 'layer_type',
                            property: 'choice',
                            value: 'gradient_2',
                            useLocal: true
                        }, {
                            id: 'layer_type',
                            property: 'choice',
                            value: 'pattern',
                            useLocal: true
                        }]
                    }
                }, {
                    id: 'layer_border_radius',
                    title: 'Border Radius',
                    description: 'Curve the borders of this decorator',
                    wrap: 'field_wrap',
                    type: 'linked_sliders',
                    settingType: 'content',
                    icon: 'square-o',
                    labels: {
                        top: 'topL',
                        right: 'topR',
                        left: 'botL',
                        bottom: 'botR',
                        useDefault: 'None',
                        useCustom: 'Add'
                    },
                    configuration: [{ units: '%', min: 0, max: 100, step: 1 }, { units: 'px', min: 0, max: 500, step: 1 }],
                    conditional: {
                        type: 'or',
                        conditions: [{
                            id: 'layer_type',
                            property: 'choice',
                            value: 'color',
                            useLocal: true
                        }, {
                            id: 'layer_type',
                            property: 'choice',
                            value: 'gradient_2',
                            useLocal: true
                        }, {
                            id: 'layer_type',
                            property: 'choice',
                            value: 'pattern',
                            useLocal: true
                        }]
                    }
                }, {
                    id: 'layer_box_shadow',
                    title: 'Layer Box Shadow',
                    description: 'Add a shadow effect to the layer',
                    wrap: 'field_wrap',
                    settingType: 'design',
                    type: 'box_shadow'
                }, {
                    id: 'layer_parallax_heading',
                    title: 'Parallax',
                    wrap: 'field_wrap',
                    type: 'heading',
                    inline: true,
                    settingType: 'content'
                }, {
                    id: 'layer_vertical_parallax',
                    title: 'Vertical Parallax',
                    description: 'Vertical parallax distance in pixels',
                    wrap: 'field_wrap',
                    type: 'slider_control',
                    icon: 'rotate-right',
                    inline: true,
                    settingType: 'content',
                    configuration: [{ units: 'px', min: -500, max: 500, step: 1 }],
                    onChange: 'ocbReInitLayerJarallax'
                }, {
                    id: 'layer_horizontal_parallax',
                    title: 'Horizontal Parallax',
                    description: 'Horizontal parallax distance in pixels',
                    wrap: 'field_wrap',
                    type: 'slider_control',
                    icon: 'rotate-right',
                    inline: true,
                    settingType: 'content',
                    configuration: [{ units: 'px', min: -500, max: 500, step: 1 }],
                    onChange: 'ocbReInitLayerJarallax'
                }],
                default: {
                    remove_layer_mobile: {
                        yes: 1
                    },
                    hide_layer: {
                        yes: 0
                    },
                    layer_opacity: {
                        value: 100,
                        units: '%',
                        useDefault: 'default'
                    },
                    layer_content_align: {
                        choice: 'none'
                    },
                    include_layer_content: {
                        yes: 0
                    },
                    layer_text: {
                        text: ''
                    },
                    layer_text_color: {
                        color: 'default',
                        customColor: '#ffffff'
                    },
                    layer_text_size: {
                        value: 1,
                        units: 'em',
                        useDefault: 'default'
                    },
                    include_layer_icon: {
                        yes: 0
                    },
                    layer_icon: {
                        icon: ''
                    },
                    layer_icon_color: {
                        color: 'default',
                        customColor: '#ffffff'
                    },
                    layer_icon_size: {
                        value: 1,
                        units: 'em',
                        useDefault: 'default'
                    },
                    layer_rotation: {
                        value: 0,
                        units: 'deg',
                        useDefault: 'default'
                    },
                    layer_xy: {
                        x: 0,
                        y: 0,
                        units: '%',
                        useDefault: 'default'
                    },
                    layer_z: {
                        value: 0,
                        units: 'z',
                        useDefault: 'default'
                    },
                    layer_height: {
                        value: 100,
                        units: '%',
                        useDefault: 'default'
                    },
                    layer_width: {
                        value: 100,
                        units: '%',
                        useDefault: 'default'
                    },
                    layer_border_radius: {
                        top: 0,
                        left: 0,
                        right: 0,
                        bottom: 0,
                        units: 'px',
                        useDefault: 'default'
                    },
                    layer_box_shadow: {
                        useDefault: 'default',
                        horizontal: 0,
                        vertical: 0,
                        blur: 20,
                        spread: 5,
                        color: 'rgba(0,0,0,0.1)'
                    },
                    layer_type: {
                        choice: 'color'
                    },
                    layer_image: {
                        url: ''
                    },
                    layer_image_size: {
                        value: 100,
                        units: '%',
                        useDefault: 'default'
                    },
                    layer_pattern_size: {
                        value: 10,
                        units: '%',
                        useDefault: 'default'
                    },
                    layer_background: {
                        color: 'primary_dark',
                        customColor: 'rgba(0,0,0,0.2)'
                    },
                    layer_gradient_1: {
                        color: 'custom',
                        customColor: '#B300C8'
                    },
                    layer_gradient_2: {
                        color: 'custom',
                        customColor: '#4E00C7'
                    },
                    layer_behind: {
                        yes: 1
                    },
                    layer_horizontal_parallax: {
                        value: 200,
                        units: 'px',
                        useDefault: 'default'
                    },
                    layer_vertical_parallax: {
                        value: 200,
                        units: 'px',
                        useDefault: 'default'
                    }
                }
            }
        }],
        default: {
            row_skin: {
                choice: 'custom'
            },
            row_display_type: {
                choice: 'default'
            },
            hero_row_height: {
                value: 100,
                units: 'vh',
                useDefault: 'default'
            },
            classes: {
                text: ''
            },
            html_id: {
                text: ''
            },
            margin: {
                top: 0,
                left: 0,
                right: 0,
                bottom: 1,
                units: 'em',
                useDefault: 'default'
            },
            padding: {
                top: 5,
                left: 2,
                right: 2,
                bottom: 5,
                units: 'em',
                useDefault: 'default'
            },
            content_width: {
                choice: 'custom'
            },
            max_width: {
                value: 700,
                units: 'px',
                useDefault: 'default'
            },
            min_width: {
                value: 200,
                units: 'px',
                useDefault: 'default'
            },
            column_gutter: {
                value: 1,
                units: 'em',
                useDefault: 'default'
            },
            column_items: {
                choice: 'default'
            },
            column_inline_vertical: {
                choice: 'center'
            },
            column_inline_align: {
                choice: 'center'
            },
            column_inline_mobile_align: {
                choice: 'center'
            },
            column_inline_horizontal_margin: {
                value: 2,
                units: 'em',
                useDefault: 'default'
            },
            object_align: {
                choice: 'center'
            },
            constrain_background: {
                yes: 0
            },
            inner_background_padding: {
                top: 1,
                left: 1,
                right: 1,
                bottom: 1,
                units: 'em',
                useDefault: 'default'
            },
            background_type: {
                choice: 'color'
            },
            background_image: {
                url: ''
            },
            background_image_size: {
                value: 100,
                units: '%',
                useDefault: 'default'
            },
            background_image_repeat: {
                yes: 0
            },
            background_image_vertical: {
                choice: 'center'
            },
            background_image_horizontal: {
                choice: 'center'
            },
            background_custom_video: {
                text: ''
            },
            background_other_video: {
                text: ''
            },
            background_css_filters: {
                blur: 0,
                brightness: 100,
                contrast: 100,
                greyscale: 0,
                hue_rotate: 0,
                invert: 0,
                opacity: 100,
                saturate: 100,
                sepia: 0,
                useDefault: 'default'
            },
            background_parallax: {
                choice: 'none'
            },
            background_parallax_effect: {
                choice: 'scroll'
            },
            background_type_screen: {
                choice: 'default'
            },
            background: {
                color: 'default'
            },
            gradient_1: {
                color: 'custom',
                customColor: '#B300C8'
            },
            gradient_2: {
                color: 'custom',
                customColor: '#4E00C7'
            },
            gradient_3: {
                color: 'custom',
                customColor: '#2E17FF'
            },
            screen_opacity: {
                value: 70,
                units: '%',
                useDefault: 'default'
            },
            background_screen: {
                color: 'black',
                customColor: '#000000'
            },
            background_screen_width: {
                value: 100,
                units: '%',
                useDefault: 'default'
            },
            gradient_1_screen: {
                color: 'custom',
                customColor: '#B300C8'
            },
            gradient_2_screen: {
                color: 'custom',
                customColor: '#4E00C7'
            },
            gradient_3_screen: {
                color: 'custom',
                customColor: '#2E17FF'
            },
            gradient_angle: {
                choice: 'diag_down'
            },

            include_background_2: {
                yes: 0
            },
            remove_background_mobile_2: {
                yes: 1
            },
            background_opacity_2: {
                value: 100,
                units: '%',
                useDefault: 'default'
            },
            background_position_top_2: {
                value: 0,
                units: '%',
                useDefault: 'default'
            },
            background_position_left_2: {
                value: 0,
                units: '%',
                useDefault: 'default'
            },
            background_position_right_2: {
                value: 0,
                units: '%',
                useDefault: 'default'
            },
            background_position_bottom_2: {
                value: 0,
                units: '%',
                useDefault: 'default'
            },
            background_height_2: {
                value: 100,
                units: '%',
                useDefault: 'default'
            },
            background_width_2: {
                value: 100,
                units: '%',
                useDefault: 'default'
            },
            background_border_radius_2: {
                top: 0,
                left: 0,
                right: 0,
                bottom: 0,
                units: 'px',
                useDefault: 'default'
            },
            background_type_2: {
                choice: 'color'
            },
            background_image_2: {
                url: ''
            },
            background_image_size_2: {
                value: 100,
                units: '%',
                useDefault: 'default'
            },
            background_image_repeat_2: {
                yes: 0
            },
            background_image_vertical_2: {
                choice: 'center'
            },
            background_image_horizontal_2: {
                choice: 'center'
            },
            background_2: {
                color: 'default',
                customColor: 'rgba(0,0,0,0.2)'
            },
            gradient_1_2: {
                color: 'custom',
                customColor: '#B300C8'
            },
            gradient_2_2: {
                color: 'custom',
                customColor: '#4E00C7'
            },

            include_background_3: {
                yes: 0
            },
            remove_background_mobile_3: {
                yes: 1
            },
            background_opacity_3: {
                value: 100,
                units: '%',
                useDefault: 'default'
            },
            background_text_3: {
                text: ''
            },
            background_icon_3: {
                icon: ''
            },
            background_text_color_3: {
                color: 'default',
                customColor: '#ffffff'
            },
            background_text_size_3: {
                value: 1,
                units: 'em',
                useDefault: 'default'
            },
            background_rotation_3: {
                value: 0,
                units: 'deg',
                useDefault: 'default'
            },
            background_position_top_3: {
                value: -5,
                units: '%',
                useDefault: 'default'
            },
            background_position_left_3: {
                value: -5,
                units: '%',
                useDefault: 'default'
            },
            background_position_right_3: {
                value: 0,
                units: '%',
                useDefault: 'default'
            },
            background_position_bottom_3: {
                value: 0,
                units: '%',
                useDefault: 'default'
            },
            background_height_3: {
                value: 100,
                units: 'px',
                useDefault: 'default'
            },
            background_width_3: {
                value: 100,
                units: 'px',
                useDefault: 'default'
            },
            background_border_radius_3: {
                top: 0,
                left: 0,
                right: 0,
                bottom: 0,
                units: 'px',
                useDefault: 'default'
            },
            background_type_3: {
                choice: 'color'
            },
            background_image_3: {
                url: ''
            },
            background_image_size_3: {
                value: 100,
                units: '%',
                useDefault: 'default'
            },
            background_image_repeat_3: {
                yes: 0
            },
            background_image_vertical_3: {
                choice: 'center'
            },
            background_image_horizontal_3: {
                choice: 'center'
            },
            background_3: {
                color: 'primary_dark',
                customColor: 'rgba(0,0,0,0.2)'
            },
            gradient_1_3: {
                color: 'custom',
                customColor: '#B300C8'
            },
            gradient_2_3: {
                color: 'custom',
                customColor: '#4E00C7'
            },
            background_behind_3: {
                yes: 0
            },

            color: {
                color: 'default'
            },
            border: {
                useDefault: 'default',
                units: 'px',
                top: 1,
                left: 1,
                right: 1,
                bottom: 1,
                type: 'solid',
                color: 'default'
            },
            border_radius: {
                value: 0,
                units: 'px',
                top: 1,
                left: 1,
                right: 1,
                bottom: 1,
                useDefault: 'default'
            },
            box_shadow: {
                useDefault: 'default',
                horizontal: 0,
                vertical: 0,
                blur: 20,
                spread: 5,
                color: 'rgba(151,151,151,1)'
            },
            sticky_or_target: {
                choice: 'none'
            },
            minimum_sticky_width: {
                value: 768,
                units: 'px',
                useDefault: 'default'
            },
            target_name: {
                text: ''
            },
            stick_when: {
                choice: 'top'
            },
            stick_when_distance: {
                value: 0,
                units: 'px',
                useDefault: 'default'
            },
            stuck_color: {
                color: 'default',
                customColor: '#000000'
            },
            stuck_background: {
                color: 'default',
                customColor: '#ffffff'
            },
            stick_overlay: {
                yes: 0
            },
            stick_when_target: {
                target: ''
            },
            unstick_when: {
                choice: 'never'
            },
            unstick_when_distance: {
                value: 2000,
                units: 'px',
                useDefault: 'default'
            },
            unstick_when_target: {
                target: ''
            },
            device_hide: {
                choices: []
            },
            permission_lock: {
                choices: []
            },
            base_font_size: {
                value: 1,
                units: 'em',
                useDefault: 'default'
            },
            line_height: {
                value: 1,
                units: 'em',
                useDefault: 'default'
            },
            letter_spacing: {
                value: 0,
                units: 'px',
                useDefault: 'default'
            },
            text_shadow: {
                useDefault: 'default',
                horizontal: 2,
                vertical: 2,
                blur: 3,
                spread: 0,
                color: 'rgba(0,0,0,0.32)'
            },
            text_transform: {
                choice: ''
            },
            text_font: {
                choice: 'default'
            },
            font_weight: {
                value: 400,
                units: '',
                useDefault: 'default'
            },
            text_align: {
                choice: 'none'
            },
            mobile_text_align: {
                choice: 'none'
            },
            column_stack_width: {
                value: 1400,
                units: 'px',
                useDefault: 'default'
            },
            remove_stack_column_padding: {
                yes: 0
            },
            reverse_order_mobile: {
                yes: 0
            },
            bleed_full: {
                yes: 0
            },
            column_mobile_width: {
                value: 100,
                units: '%',
                useDefault: 'default'
            },
            login_status_show: {
                choice: 'both'
            },
            overflow: {
                choice: 'default'
            },
            z_index: {
                value: 1,
                units: 'z',
                useDefault: 'default'
            },
            entrance_animation: {
                animation: 'none'
            },
            layers: {
                items: []
            }
        }
    };
};

;

/***/ }),

/***/ 167:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _actual_texteditor = __webpack_require__(233);

var _actual_texteditor2 = _interopRequireDefault(_actual_texteditor);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var TextEditor = function (_Component) {
    _inherits(TextEditor, _Component);

    function TextEditor(props) {
        _classCallCheck(this, TextEditor);

        var _this = _possibleConstructorReturn(this, (TextEditor.__proto__ || Object.getPrototypeOf(TextEditor)).call(this, props));

        _this.state = {
            file_frame: false
        };
        return _this;
    }

    _createClass(TextEditor, [{
        key: 'openMediaLibrary',
        value: function openMediaLibrary(editor) {
            var file_frame = null;

            if (window.ocbFileFrame) {
                window.ocbFileFrame.open();
                return;
            }

            var wpObject = wp;

            if (parent.window != undefined && parent.window.wp != undefined) {
                wpObject = parent.window.wp;
            }

            file_frame = wpObject.media.frames.file_frame = wpObject.media({
                title: 'Select Media',
                button: {
                    text: 'Select'
                }
                //multiple: multiple // set this to true for multiple file selection
            });

            file_frame.on('select', function () {

                var attachments = file_frame.state().get('selection').first().toJSON();
                editor.insertContent(attachments.url);
            });

            file_frame.open();

            window.ocbFileFrame = file_frame;
        }
    }, {
        key: 'addConnectionButton',
        value: function addConnectionButton(editor) {
            var _this2 = this;

            editor.addButton('ocbconnected', {
                icon: 'plus',
                classes: 'ocb-connection-button ocb-inline-connection-button',
                tooltip: "Connect to Field",
                onclick: function onclick() {
                    return _this2.props.treeProps.inlineEdit.openConnector(editor);
                }
            });

            editor.addButton('ocbmedia', {
                icon: 'image',
                classes: 'ocb-media-library-button ocb-inline-media-library-button',
                tooltip: "Add Media Link",
                onclick: function onclick() {
                    return _this2.openMediaLibrary(editor);
                }
            });

            var menuItemsArray = ['primary', 'primary_light', 'primary_dark', 'action', 'action_light', 'action_dark', 'accent', 'accent_light', 'accent_dark', 'alt_accent', 'alt_accent_light', 'alt_accent_dark', 'positive', 'negative'];

            var menuItems = menuItemsArray.map(function (each) {
                return {
                    text: each,
                    classes: each + '-color',
                    onclick: function onclick() {
                        editor.focus();
                        //Replace the class on existing span colors or wrap in span color
                        if (editor.selection.getNode().tagName.toLowerCase() == 'span' && editor.selection.getNode().className && menuItemsArray.includes(editor.selection.getNode().className.replace('-color', ''))) {
                            jQuery(editor.selection.getNode()).attr('class', each + '-color');
                        } else {
                            editor.selection.setContent('<span class="' + each + '-color">' + editor.selection.getContent() + '</span>');
                        }
                        tinymce.activeEditor.fire('change');
                    }
                };
            });

            editor.addButton('ocbcolor', {
                type: 'menubutton',
                classes: 'ocb-mce-color-dropdown',
                text: 'Color',
                icon: false,
                menu: menuItems
            });
            editor.on('redo undo', function (e) {
                tinymce.activeEditor.fire('change');
            });
            editor.on('keypress', function (e) {
                clearTimeout(this.editorTimeout);
                this.editorTimeout = setTimeout(function () {
                    tinymce.activeEditor.fire('change');
                }, 500);
            });
            var newThis = this;
            editor.on('init', function (e) {
                // get all Textnodes
                if (newThis.props.index != undefined && newThis.props.offset != undefined) {
                    var node = editor.getBody().childNodes[newThis.props.index] != undefined ? editor.getBody().childNodes[newThis.props.index] : editor.getBody();
                    var textnodes = newThis.getTextNodes(node);
                    editor.selection.setCursorLocation(textnodes[textnodes.length - 1], newThis.props.offset);
                }
            });
        }
    }, {
        key: 'getTextNodes',
        value: function getTextNodes(node, nodeType, result) {

            var children = node.childNodes;
            var nodeType = nodeType ? nodeType : 3;

            var result = !result ? [] : result;
            if (node.nodeType == nodeType) {
                result.push(node);
            }

            for (var i = 0; i < children.length; i++) {
                result = this.getTextNodes(children[i], nodeType, result);
            }

            return result;
        }
    }, {
        key: 'render',
        value: function render() {
            var plugins = this.props.plugins != undefined ? this.props.plugins : 'link image code paste lists wordpress wpautoresize wpeditimage wpemoji wpgallery wplink wpdialogs wptextpattern wpview';
            var toolbar = this.props.toolbar != undefined ? this.props.toolbar : 'ocbconnected ocbmedia styleselect ocbcolor | bold italic strikethrough | bullist numlist | link unlink | alignleft aligncenter alignright | removeformat code';
            var setup = this.props.setup != undefined ? this.props.setup : this.addConnectionButton.bind(this);

            //Don't show the connector button if the user doesn't have permission
            if (!OCBGlobalSettings.permissions.use_connector) {
                toolbar = toolbar.replace('ocbconnected ', '');
            }

            return _react2.default.createElement(
                'div',
                null,
                _react2.default.createElement(_actual_texteditor2.default, { value: this.props.value, plugins: plugins, toolbar: toolbar, update: this.props.update, setup: setup, editType: this.props.editType, treeProps: this.props.treeProps })
            );
        }
    }]);

    return TextEditor;
}(_react.Component);

exports.default = TextEditor;

/***/ }),

/***/ 168:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _default_site_settings = __webpack_require__(355);

var _default_site_settings2 = _interopRequireDefault(_default_site_settings);

var _default_standard = __webpack_require__(16);

var _default_standard2 = _interopRequireDefault(_default_standard);

var _settings_helpers = __webpack_require__(2);

var _settings_helpers2 = _interopRequireDefault(_settings_helpers);

var _field_wrap = __webpack_require__(802);

var _field_wrap2 = _interopRequireDefault(_field_wrap);

var _field_group = __webpack_require__(797);

var _field_group2 = _interopRequireDefault(_field_group);

var _field_panel = __webpack_require__(799);

var _field_panel2 = _interopRequireDefault(_field_panel);

var _field_repeater = __webpack_require__(801);

var _field_repeater2 = _interopRequireDefault(_field_repeater);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
//import { connect } from 'react-redux';

var FieldBuilder = function (_Component) {
    _inherits(FieldBuilder, _Component);

    function FieldBuilder() {
        _classCallCheck(this, FieldBuilder);

        return _possibleConstructorReturn(this, (FieldBuilder.__proto__ || Object.getPrototypeOf(FieldBuilder)).apply(this, arguments));
    }

    _createClass(FieldBuilder, [{
        key: 'getObjectBootstrap',
        value: function getObjectBootstrap() {

            var settings = '';

            if (this.props.appFunctions.settingsOrStandard == 'site') {
                settings = (0, _default_site_settings2.default)();
            } else if (this.props.appFunctions.settingsOrStandard == 'standard') {
                settings = (0, _default_standard2.default)();
            } else {
                settings = _settings_helpers2.default.getModuleRegistryProp(this.props.object.moduleType, 'default');
            }

            //settings = this.buildSettingsObject( settings, this.props.object );

            return settings;
        }

        /**
         * Will splice in groups of fields (field mixins) from the field mixin registry so that
         * if you have a group of fields that you want to be able to add to multiple modules, you don't have to recreate
         * the group several times.
         *
         * Ex: button fields like background color, text color, padding etc. that you want to use on multiple modules
         *
         * @param fields
         * @param defaultValues
         * @returns {{fields: *, defaults: *}}
         */

    }, {
        key: 'integrateMixinFields',
        value: function integrateMixinFields(fields, defaultValues) {
            //These fieldsFromMixin are actually added by the block below but we want to run it before
            // because we don't need to run it right after adding the fields
            // This is here because if you're in a group, you no longer have the full context of all of the fields
            // you just have the fields in the group, so the mixin needs to be found within those fields so that
            // defaults can be set

            //finds all of the fields that have a fromMixin
            var fieldsFromMixin = fields.filter(function (field) {
                return field.fromMixin != undefined;
            });
            if (fieldsFromMixin.length) {
                var uncoveredMixins = [];

                //finds all of the unique mixins
                fieldsFromMixin.forEach(function (field) {
                    if (!uncoveredMixins.find(function (uncoveredMixin) {
                        return uncoveredMixin.mixin == field.fromMixin;
                    })) {
                        uncoveredMixins = uncoveredMixins.concat({ mixin: field.fromMixin, prefix: field.fromMixinPrefix });
                    }
                });

                //sets the default values
                if (uncoveredMixins.length) {
                    uncoveredMixins.forEach(function (mixin) {
                        var theMixin = OffsproutFieldMixinRegistry.find(function (each) {
                            return each.id == mixin.mixin;
                        });
                        //make sure the global isn't mutated
                        theMixin = JSON.parse(JSON.stringify(theMixin));
                        for (var key in theMixin.defaults) {
                            if (!theMixin.defaults.hasOwnProperty(key)) continue;

                            defaultValues[mixin.prefix + key] = theMixin.defaults[key];
                        }
                    });
                }
            }

            var mixins = fields.filter(function (field) {
                return field.wrap == 'field_mixin';
            });
            mixins.forEach(function (mixinField) {

                //get the mixin's prefix
                var mixinPrefix = mixinField.prefix != undefined ? mixinField.prefix : '';

                //grab the mixin from the global
                var theMixin = OffsproutFieldMixinRegistry.find(function (each) {
                    return each.id == mixinField.mixin;
                });
                //make sure the global isn't mutated
                theMixin = JSON.parse(JSON.stringify(theMixin));

                //find the mixin's index in the current field array
                var insertIndex = fields.findIndex(function (field) {
                    return field.id == mixinField.id;
                });

                //go through the mixin fields and apply the prefix
                var theMixinFields = theMixin.fields.map(function (mixinItem) {
                    mixinItem.id = mixinPrefix + mixinItem.id;

                    //add the mixin id as a property, so that when we're going through group fields in the fieldsFromMixin above,
                    // there's still an indication that there's a mixin we need to address
                    mixinItem.fromMixin = mixinField.mixin;
                    mixinItem.fromMixinPrefix = mixinField.prefix;
                    mixinItem.group = mixinField.group;
                    mixinItem.settingType = mixinField.settingType;
                    mixinItem.onChange = mixinField.onChange;
                    if (mixinField.individualConditionals == undefined || mixinField.individualConditionals == false) {
                        mixinItem.conditional = mixinField.conditional;
                    } else if (mixinItem.conditional != undefined && mixinItem.conditional.conditions != undefined) {

                        //Make sure that the conditionals get the prefix as well
                        mixinItem.conditional.conditions = mixinItem.conditional.conditions.map(function (condition) {
                            condition.id = mixinPrefix + condition.id;
                            return condition;
                        });
                    }
                    if (mixinItem.wrap == 'field_group') {
                        mixinItem.items = mixinItem.items.map(function (groupItem) {
                            return mixinPrefix + groupItem;
                        });
                    }
                    return mixinItem;
                });

                //insert its fields in the fields variable
                //https://stackoverflow.com/questions/7032550/javascript-insert-an-array-inside-another-array
                fields.splice.apply(fields, [insertIndex, 0].concat(theMixinFields));

                //Set the default values
                for (var key in theMixin.defaults) {
                    if (!theMixin.defaults.hasOwnProperty(key)) continue;

                    defaultValues[mixinPrefix + key] = theMixin.defaults[key];
                }
            });
            return { fields: fields, defaults: defaultValues };
        }
    }, {
        key: 'putFieldsIntoGroups',
        value: function putFieldsIntoGroups(fields) {
            var groups = fields.filter(function (field) {
                return field.wrap == 'field_group';
            });
            groups.forEach(function (group) {
                fields = fields.map(function (field) {
                    if (group.items.includes(field.id)) {
                        field.group = group.id;
                    }
                    return field;
                });
            });
            return fields;
        }
    }, {
        key: 'putFieldsIntoPanels',
        value: function putFieldsIntoPanels(fields) {
            var panels = fields.filter(function (field) {
                return field.wrap == 'field_panel';
            });
            panels.forEach(function (panel) {
                fields = fields.map(function (field) {
                    if (panel.items.includes(field.id)) {
                        field.panel = panel.id;
                    }
                    return field;
                });
            });
            return fields;
        }

        /**
         * Make sure that none of the values in the eventual mergedValues object are undefined
         * @param fields
         * @returns {{}}
         */

    }, {
        key: 'atLeastSetNullForProperties',
        value: function atLeastSetNullForProperties(fields) {
            var nullValues = {};

            fields.forEach(function (field) {
                var fieldIndex = window.OffsproutFieldRegistry.findIndex(function (fieldItem) {
                    return fieldItem.type == field.type;
                });

                if (fieldIndex >= 0) {
                    var defaultsArray = window.OffsproutFieldRegistry[fieldIndex].properties;
                    nullValues[field.id] = nullValues[field.id] == undefined ? {} : nullValues[field.id];

                    defaultsArray.forEach(function (property) {
                        if ((typeof property === 'undefined' ? 'undefined' : _typeof(property)) == 'object') {
                            nullValues[field.id][property.property] = property.value;
                        } else {
                            nullValues[field.id][property] = '';
                        }
                    });
                } else {
                    //Bootstrap field repeaters by setting the value for this field id to {items: []}
                    if (field.wrap == 'field_repeater') {
                        nullValues[field.id] = nullValues[field.id] == undefined ? {} : nullValues[field.id];
                        nullValues[field.id]['items'] = [{}];
                    }
                }
            });

            return nullValues;
        }

        /**
         * Not currently being used - probably going to want to delete this
         * @param settings
         * @param values
         * @returns {*}
         */

    }, {
        key: 'buildSettingsObject',
        value: function buildSettingsObject(settings) {
            var _this2 = this;

            var values = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

            //return default values;
            if (!values) {
                //Should blend the default values
                return settings;
            }

            /*console.log('------BEFORE BLEND-----');
             console.log(settings);
             console.log(values);
             console.log(this.props.settingsOrStandard);
             console.log(values[this.props.settingsOrStandard].linked);*/

            return settings.fields.map(function (setting) {
                var newSetting = setting;
                newSetting.settings = {};
                //console.log('setting ID: ' + setting.id);
                if (values[_this2.props.settingsOrStandard] != undefined && values[_this2.props.settingsOrStandard].linked[setting.id] != null) {
                    newSetting.settings.linked = values[_this2.props.settingsOrStandard].linked[setting.id];
                } else {
                    /*console.log(settings);
                     console.log(settings.default);
                     console.log(setting);
                     console.log(setting.default);
                     console.log(settings.default[setting.id]);*/
                    newSetting.settings.linked = settings.default[setting.id];
                }
                ['laptop', 'tablet', 'phone'].forEach(function (device) {
                    if (values[_this2.props.settingsOrStandard] != undefined && values[_this2.props.settingsOrStandard][device] != undefined) {
                        if (values[_this2.props.settingsOrStandard][device][setting.id] != null) {
                            newSetting.settings[device] = values[_this2.props.settingsOrStandard][device][setting.id];
                        }
                    }
                });

                return newSetting;
            });
        }
    }, {
        key: 'render',
        value: function render() {
            var _this3 = this;

            //We want object, fields, defaultValues, currentValues, mergedValues, and, further down, currentField as the props

            var settings = this.getObjectBootstrap();

            if (settings == null) return null;

            var fields = this.props.fields != undefined ? this.props.fields : settings.fields;
            var defaultValues = this.props.defaultValues ? this.props.defaultValues : settings.default;
            var mixinResults = this.integrateMixinFields(fields, defaultValues);

            fields = mixinResults.fields;
            fields = this.putFieldsIntoGroups(fields);
            fields = this.putFieldsIntoPanels(fields);

            defaultValues = mixinResults.defaults;

            var nullValues = this.atLeastSetNullForProperties(fields);
            var currentValues = this.props.currentValues ? this.props.currentValues : this.props.object[this.props.appFunctions.settingsOrStandard][this.props.whichActive];

            //Fall back on linked values for device-specific settings
            if (currentValues == undefined && this.props.whichActive != 'linked') {
                currentValues = this.props.object[this.props.appFunctions.settingsOrStandard]['linked'];
            } else if (this.props.whichActive != 'linked') {
                currentValues = Object.assign(this.props.object[this.props.appFunctions.settingsOrStandard]['linked'], this.props.object[this.props.appFunctions.settingsOrStandard][this.props.whichActive]);
            }

            var mergedValues = Object.assign({}, nullValues, defaultValues, currentValues);

            var appFunctions = this.props.appFunctions;

            if (appFunctions.allValues == undefined) {
                appFunctions.allValues = mergedValues;
            }

            if (this.props.repeaterIndex !== false) {
                if (appFunctions.allValues[this.props.repeater] == undefined) appFunctions.allValues[this.props.repeater] = {};
                if (appFunctions.allValues[this.props.repeater].items == undefined) appFunctions.allValues[this.props.repeater].items = [];

                appFunctions.allValues[this.props.repeater].items[this.props.repeaterIndex] = mergedValues;
            }

            /*if( this.props.repeater == undefined ) {
                console.log('Field Builder Render object', object);
                console.log('Field Builder Render fields', fields);
                console.log('Field Builder Render nullValues', nullValues);
                console.log('Field Builder Render defaultValues', defaultValues);
                console.log('Field Builder Render currentValues', currentValues);
                console.log('Field Builder Render mergedValues', mergedValues);
            }*/

            var settingType = false;
            var noSettingsMessage = null;

            if (this.props.settingType != undefined && this.props.settingType != 'standard' && this.props.settingsOrStandard != 'standard' && this.props.object.type == 'module') {
                settingType = this.props.settingType;
                noSettingsMessage = _react2.default.createElement(
                    'div',
                    { className: 'p-3 text-center' },
                    'There are no ',
                    settingType,
                    ' settings'
                );
            }

            var theFields = fields.map(function (field, index) {
                //if the user doesn't have permission to edit the field, return null
                if (field.permission != undefined && !OCBGlobalSettings.permissions[field.permission]) {
                    return null;
                }

                //if the group is defined for this setting, then we have to make sure we're making this as a child of the group
                //return null unless we're building this field within the group
                if (field.group != undefined) {
                    if (_this3.props.group == undefined || _this3.props.group != field.group) {
                        return null;
                    }
                }

                //If there is a setting of the type this.props.settingType, noSettingsMessage should be null;
                if (field.settingType != undefined && field.settingType == _this3.props.settingType) noSettingsMessage = null;

                //if there's an active group and this field doesn't belong to it, set hide to true
                //we want to do this rather than returning null so that we can have a fancy transition
                var hide = false;
                var subgroupHide = false;
                if (_this3.props.appFunctions.activeGroup != false) {
                    switch (field.wrap) {
                        case 'field_wrap':
                        case 'field_panel':
                            if (
                            //if the field doesn't belong to a group
                            field.group == undefined

                            //or the field does belong to a group and that group isn't active
                            || !_this3.props.appFunctions.activeGroup.includes(field.group)) {
                                hide = true;
                            }
                            break;
                        case 'field_group':

                            if ((
                            //if the group doesn't belong to a group
                            field.group == undefined

                            //or the group does belong to a group and that group isn't active
                            || !_this3.props.appFunctions.activeGroup.includes(field.group)) &&

                            //and this group itself isn't active
                            !_this3.props.appFunctions.activeGroup.includes(field.id)) {
                                hide = true;
                            }
                            break;
                        case 'field_repeater':

                            //Does the repeater contain a group that's active
                            _this3.props.appFunctions.activeGroup.forEach(function (group) {

                                //because group ids inside the repeater are all [repeaterId]-[index], we can hide if the fieldId (the id of the repeater) != [repeaterId]
                                if (group.includes('-')) {
                                    var parentId = group.split('-')[0];
                                    if (parentId != field.id) {
                                        hide = true;
                                    }
                                } else {
                                    hide = true;
                                }
                            });
                            break;
                    }

                    var currentGroup = _this3.props.appFunctions.activeGroup[_this3.props.appFunctions.activeGroup.length - 1];
                    if (field.group != currentGroup && field.id != currentGroup) {
                        subgroupHide = true;
                    }
                }

                switch (field.wrap) {
                    case 'field_wrap':
                    case 'field_group':
                        if (field.panel != undefined && _this3.props.appFunctions.activePanel != field.panel) {
                            hide = true;
                        }
                        break;
                    case 'field_panel':
                        if (_this3.props.appFunctions.activePanel != false && _this3.props.appFunctions.activePanel != field.id) {
                            hide = true;
                        }
                        break;
                    //Can't have repeaters in panels yet
                }

                //Hide design fields if no permission
                if (field.settingType == 'design' && (_this3.props.object.type == 'row' && !OCBGlobalSettings.permissions.edit_rows_design || _this3.props.object.type == 'column' && !OCBGlobalSettings.permissions.edit_columns_design || _this3.props.object.type == 'module' && !OCBGlobalSettings.permissions.edit_modules_design)) {
                    hide = true;
                }

                var fieldReturn = null;

                //Add whichActive to the key to make sure that the fields are re-rendered when device is switched
                switch (field.wrap) {

                    case 'field_wrap':
                        fieldReturn = _react2.default.createElement(_field_wrap2.default, {
                            key: index + _this3.props.whichActive,
                            appFunctions: appFunctions,
                            hide: hide,
                            subgroupHide: subgroupHide,
                            object: _this3.props.object,
                            mergedValues: mergedValues,
                            currentField: field,
                            repeater: _this3.props.repeater,
                            repeaterIndex: _this3.props.repeaterIndex,
                            whichActive: _this3.props.whichActive
                        });

                        break;

                    case 'field_group':
                        fieldReturn = _react2.default.createElement(_field_group2.default, {
                            key: index + _this3.props.whichActive,
                            appFunctions: appFunctions,
                            hide: hide,
                            subgroupHide: subgroupHide,
                            object: _this3.props.object,
                            fields: fields,
                            defaultValues: _this3.props.defaultValues //if the group is coming from a repeater, we need to pass this through the group
                            , currentValues: _this3.props.currentValues //if the group is coming from a repeater, we need to pass this through the group
                            , mergedValues: mergedValues,
                            currentField: field,
                            repeater: _this3.props.repeater,
                            repeaterIndex: _this3.props.repeaterIndex,
                            whichActive: _this3.props.whichActive
                        });

                        break;

                    case 'field_repeater':
                        fieldReturn = _react2.default.createElement(_field_repeater2.default, {
                            key: index + _this3.props.whichActive,
                            appFunctions: appFunctions,
                            hide: hide,
                            subgroupHide: subgroupHide,
                            object: _this3.props.object,
                            fields: fields,
                            mergedValues: mergedValues,
                            currentField: field,
                            whichActive: _this3.props.whichActive
                        });

                        break;

                    case 'field_panel':
                        fieldReturn = _react2.default.createElement(_field_panel2.default, {
                            key: index + _this3.props.whichActive,
                            appFunctions: appFunctions,
                            hide: hide,
                            subgroupHide: subgroupHide,
                            object: _this3.props.object,
                            fields: fields,
                            mergedValues: mergedValues,
                            currentField: field,
                            whichActive: _this3.props.whichActive
                        });

                        break;
                }

                return _react2.default.createElement(
                    'div',
                    { key: index + _this3.props.unique + field.id, className: 'ocb-sf-setting-type-' + field.settingType + ' ocb-sf-setting-which-' + _this3.props.appFunctions.settingsOrStandard },
                    fieldReturn
                );
            });

            return _react2.default.createElement(
                'div',
                { className: 'ocb-field-builder' },
                noSettingsMessage,
                theFields
            );
        }
    }]);

    return FieldBuilder;
}(_react.Component);

/*function mapStateToProps( { skinState } ){
    return { skinState }
}
export default connect(mapStateToProps)(FieldBuilder);*/


exports.default = FieldBuilder;

/***/ }),

/***/ 169:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _api_helpers = __webpack_require__(6);

var _api_helpers2 = _interopRequireDefault(_api_helpers);

var _radio_toggle = __webpack_require__(18);

var _radio_toggle2 = _interopRequireDefault(_radio_toggle);

var _targets = __webpack_require__(361);

var _targets2 = _interopRequireDefault(_targets);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Link = function (_Component) {
    _inherits(Link, _Component);

    function Link(props) {
        _classCallCheck(this, Link);

        var _this = _possibleConstructorReturn(this, (Link.__proto__ || Object.getPrototypeOf(Link)).call(this, props));

        _this.state = {
            type: _this.props.values.type != undefined ? _this.props.values.type : 'custom',
            postTypes: false,
            categories: [],
            url: '',
            urlFilter: ''
        };
        return _this;
    }

    _createClass(Link, [{
        key: 'getExclude',
        value: function getExclude() {
            return ['ocb_testimonial', 'attachment'];
        }
    }, {
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _this2 = this;

            var postTypes = _api_helpers2.default.doRequest('getPostTypes');

            postTypes.then(function (response, error) {
                if (_this2.props.configuration != undefined && _this2.props.configuration.exclude != undefined) {
                    _this2.props.configuration.exclude.forEach(function (exclude) {
                        if (response[exclude] != undefined) delete response[exclude];
                    });
                }

                //Don't show these post types in the dropdown
                if (response.ocb_structure != undefined) delete response.ocb_structure;
                if (response.ocb_template != undefined) delete response.ocb_template;
                if (response.ocb_tree_template != undefined) delete response.ocb_tree_template;
                if (response.wp_block != undefined) delete response.wp_block;

                _this2.getExclude().forEach(function (exclude) {
                    if (response[exclude] != undefined) delete response[exclude];
                });

                _this2.setState({ postTypes: response });

                var _loop = function _loop(type) {
                    if (!response.hasOwnProperty(type)) return 'continue';

                    var typeObject = response[type];

                    _api_helpers2.default.doRequest('getOfPostType', null, { type: typeObject.slug }).then(function (newResponse, error) {
                        _this2.setState(_defineProperty({}, typeObject.slug, newResponse));
                    }).catch(function (error) {
                        console.log('No posts of type ' + typeObject.slug + ' to show in Link Component');
                    });
                };

                for (var type in response) {
                    var _ret = _loop(type);

                    if (_ret === 'continue') continue;
                }
            });

            var categories = _api_helpers2.default.doRequest('getTaxonomy', {}, { taxonomy: 'category' });

            categories.then(function (response) {
                _this2.setState({
                    categories: response
                });
            }).catch(function (error) {
                console.log('error retrieving categories', error);
            });
        }
    }, {
        key: 'update',
        value: function update(merge) {
            var update = Object.assign(this.props.values, merge);
            this.props.update(update);
        }
    }, {
        key: 'updateNewWindow',
        value: function updateNewWindow(val) {
            var newWindow = { newWindow: val };
            this.update(newWindow);
            this.setState(newWindow);
        }
    }, {
        key: 'updateLink',
        value: function updateLink(e) {
            var url = { url: e.target.value };
            this.update(url);
            this.setState(url);
        }
    }, {
        key: 'removeLink',
        value: function removeLink() {
            this.update({ url: '' });
            this.setState({ url: '' });
        }
    }, {
        key: 'addLink',
        value: function addLink(link) {
            var url = { url: link };
            this.update(url);
            this.setState(url);
        }
    }, {
        key: 'updateTarget',
        value: function updateTarget(target) {
            var overlay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';

            var url = { url: overlay + '#' + target.target, target: target.target };
            this.update(url);
            this.setState(url);
        }
    }, {
        key: 'render',
        value: function render() {
            var _this3 = this;

            var settings = this.props.values;

            var postTypeArray = [];

            if (this.state.postTypes) {
                for (var type in this.state.postTypes) {
                    if (!this.state.postTypes.hasOwnProperty(type)) continue;

                    postTypeArray = postTypeArray.concat(this.state.postTypes[type]);
                }
            }

            var postTypeOptions = null;

            if (postTypeArray.length) {
                postTypeOptions = postTypeArray.map(function (type, index) {
                    return _react2.default.createElement(
                        'option',
                        { key: index, value: type.slug },
                        type.name
                    );
                });
            }

            var addable = null;
            var addableOverlay = null;
            var items = [];
            var theURL = settings.url ? settings.url : 'No URL set';

            if (this.state.type == 'custom') {
                addable = _react2.default.createElement(
                    'div',
                    { className: 'ocb-sf-link-custom' },
                    _react2.default.createElement('input', { type: 'url', placeholder: 'Enter URL...', defaultValue: settings.url, onChange: this.updateLink.bind(this) })
                );
            } else if (this.state.type == 'target') {

                addable = _react2.default.createElement(
                    'div',
                    { className: 'ocb-sf-link-targets' },
                    _react2.default.createElement(_targets2.default, { values: settings, update: this.updateTarget.bind(this) })
                );
            } else if (this.state.type == 'overlay') {

                addableOverlay = _react2.default.createElement(
                    'div',
                    { className: 'ocb-sf-link-targets' },
                    _react2.default.createElement(_targets2.default, { values: settings, update: function update(target) {
                            return _this3.updateTarget(target, '#');
                        }, overlay: true })
                );
            } else if (this.state.type == 'category') {

                items = this.state.categories;
                var linkIterator = 0;

                addable = _react2.default.createElement(
                    'div',
                    { className: 'ocb-sf-link-' + this.state.type },
                    items.map(function (item, index) {
                        if (linkIterator >= 20) {
                            return null;
                        }

                        if (_this3.state.urlFilter && !item.name.toLowerCase().includes(_this3.state.urlFilter.toLowerCase())) {
                            return null;
                        }
                        linkIterator++;

                        var fullLink = OCBGlobalSettings.siteUrl + '/' + OCBGlobalSettings.categoryBase + '/' + item.slug;

                        return _react2.default.createElement(
                            'div',
                            { key: index, className: 'ocb-sf-link-addable d-flex align-items-stretch mb-1' },
                            _react2.default.createElement(
                                'div',
                                { className: 'ocb-sf-link-addable-text p-1' },
                                _react2.default.createElement(
                                    'div',
                                    null,
                                    _react2.default.createElement(
                                        'strong',
                                        null,
                                        item.name
                                    )
                                ),
                                _react2.default.createElement(
                                    'div',
                                    null,
                                    _react2.default.createElement(
                                        'span',
                                        null,
                                        item.slug
                                    )
                                )
                            ),
                            _react2.default.createElement(
                                'div',
                                { className: 'ocb-sf-link-addable-add d-flex align-items-center justify-content-center', onClick: function onClick() {
                                        return _this3.addLink(fullLink);
                                    } },
                                _react2.default.createElement('i', { className: 'fa fa-plus' })
                            )
                        );
                    })
                );
            } else {
                items = this.state[this.state.type];
                var _linkIterator = 0;

                addable = _react2.default.createElement(
                    'div',
                    { className: 'ocb-sf-link-' + this.state.type },
                    items.map(function (item, index) {
                        if (_linkIterator >= 20) {
                            return null;
                        }
                        if (_this3.state.urlFilter && !item.post_title.toLowerCase().includes(_this3.state.urlFilter.toLowerCase()) && !item.post_name.includes(_this3.state.urlFilter)) {
                            return null;
                        }
                        _linkIterator++;
                        return _react2.default.createElement(
                            'div',
                            { key: index, className: 'ocb-sf-link-addable d-flex align-items-stretch mb-1' },
                            _react2.default.createElement(
                                'div',
                                { className: 'ocb-sf-link-addable-text p-1' },
                                _react2.default.createElement(
                                    'div',
                                    null,
                                    _react2.default.createElement(
                                        'strong',
                                        null,
                                        item.post_title
                                    )
                                ),
                                _react2.default.createElement(
                                    'div',
                                    null,
                                    _react2.default.createElement(
                                        'span',
                                        null,
                                        item.post_name
                                    )
                                )
                            ),
                            _react2.default.createElement(
                                'div',
                                { className: 'ocb-sf-link-addable-add d-flex align-items-center justify-content-center', onClick: function onClick() {
                                        return _this3.addLink(item.permalink);
                                    } },
                                _react2.default.createElement('i', { className: 'fa fa-plus' })
                            )
                        );
                    })
                );
            }

            var filter = null;

            if (items.length > 5) {
                filter = _react2.default.createElement('input', { className: 'mb-1', type: 'text', placeholder: 'filter results...', value: this.state.urlFilter, onChange: function onChange(e) {
                        return _this3.setState({ urlFilter: e.target.value });
                    } });
            }

            var remove = null;
            if (settings.url) {
                remove = _react2.default.createElement(
                    'span',
                    { onClick: function onClick() {
                            return _this3.removeLink();
                        } },
                    _react2.default.createElement('i', { className: 'fa fa-remove' })
                );
            }

            var newWindow = null;

            if (this.props.configuration != undefined && this.props.configuration.newWindow != undefined && this.props.configuration.newWindow) {
                var newWindowVal = settings.newWindow != undefined ? settings.newWindow : 0;
                newWindow = _react2.default.createElement(
                    'div',
                    { className: 'mt-3 sf-label-flex-row justify-content-between' },
                    _react2.default.createElement(
                        'div',
                        null,
                        _react2.default.createElement(
                            'strong',
                            null,
                            'Open in New Window'
                        )
                    ),
                    _react2.default.createElement(_radio_toggle2.default, { update: function update(value) {
                            return _this3.updateNewWindow(value);
                        }, items: [{ name: 'fa-remove', value: 0 }, { name: 'fa-check', value: 1 }], value: newWindowVal, flex: true })
                );
            }

            return _react2.default.createElement(
                'div',
                { className: 'ocb-sf-link' },
                _react2.default.createElement(
                    'div',
                    { className: 'mt-3 sf-label-flex-row' },
                    _react2.default.createElement(
                        'div',
                        null,
                        _react2.default.createElement(
                            'strong',
                            null,
                            'URL'
                        )
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'ocb-sf-100' },
                        _react2.default.createElement(
                            'span',
                            null,
                            theURL
                        )
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'ocb-sf-remove' },
                        remove
                    )
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'mt-3 sf-label-flex-row' },
                    _react2.default.createElement(
                        'strong',
                        null,
                        'Type'
                    ),
                    _react2.default.createElement(
                        'select',
                        { value: this.state.type, onChange: function onChange(e) {
                                return _this3.setState({ type: e.target.value });
                            } },
                        _react2.default.createElement(
                            'option',
                            { value: 'custom' },
                            'Custom URL'
                        ),
                        _react2.default.createElement(
                            'option',
                            { value: 'target' },
                            'Target'
                        ),
                        _react2.default.createElement(
                            'option',
                            { value: 'overlay' },
                            'Overlay'
                        ),
                        _react2.default.createElement(
                            'option',
                            { value: 'category' },
                            'Category'
                        ),
                        postTypeOptions
                    )
                ),
                newWindow,
                _react2.default.createElement(
                    'div',
                    { className: 'mt-3' },
                    filter,
                    addableOverlay,
                    addable
                )
            );
        }
    }]);

    return Link;
}(_react.Component);

exports.default = Link;

/***/ }),

/***/ 18:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var RadioToggle = function (_Component) {
    _inherits(RadioToggle, _Component);

    function RadioToggle(props) {
        _classCallCheck(this, RadioToggle);

        var _this = _possibleConstructorReturn(this, (RadioToggle.__proto__ || Object.getPrototypeOf(RadioToggle)).call(this, props));

        _this.state = {
            active: _this.props.value
        };

        _this.update = _this.update.bind(_this);
        return _this;
    }

    _createClass(RadioToggle, [{
        key: 'update',
        value: function update(item) {
            this.setState({ active: item });
            this.props.update(item);
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var flexClass = '';
            var flexItemClass = '';

            if (this.props.flex != undefined && this.props.flex) {
                flexClass = 'ocb-sf-radio-flex';
            }
            if (this.props.configuration != undefined) {
                if (this.props.configuration.flexWrap === true) {
                    flexClass += ' flex-wrap';
                }
                if (this.props.configuration.flexBasis != undefined) {
                    flexItemClass += ' ocb-flex-' + this.props.configuration.flexBasis;
                }
            }

            var toggle = this.props.items.map(function (item, index) {
                var disabled = '';
                var itemValue = item;
                var itemName = item;
                if ((typeof item === 'undefined' ? 'undefined' : _typeof(item)) == 'object') {
                    itemValue = item.value;
                    itemName = item.name;
                }

                if (itemName.includes('fa-')) {
                    itemName = _react2.default.createElement('i', { className: 'fa ' + itemName });
                }
                if (itemValue != _this2.state.active) {
                    disabled = ' disabled';
                }
                return _react2.default.createElement(
                    'div',
                    { key: index, className: 'ocb-sf-button' + disabled + flexItemClass, onClick: function onClick() {
                            return _this2.update(itemValue);
                        } },
                    itemName
                );
            });

            return _react2.default.createElement(
                'div',
                { className: 'ocb-sf-radio-toggle ' + flexClass },
                toggle
            );
        }
    }]);

    return RadioToggle;
}(_react.Component);

exports.default = RadioToggle;

/***/ }),

/***/ 1823:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Check if we're required to add a port number.
 *
 * @see https://url.spec.whatwg.org/#default-port
 * @param {Number|String} port Port number we need to check
 * @param {String} protocol Protocol we need to check against.
 * @returns {Boolean} Is it a default port for the given protocol
 * @api private
 */
module.exports = function required(port, protocol) {
  protocol = protocol.split(':')[0];
  port = +port;

  if (!port) return false;

  switch (protocol) {
    case 'http':
    case 'ws':
    return port !== 80;

    case 'https':
    case 'wss':
    return port !== 443;

    case 'ftp':
    return port !== 21;

    case 'gopher':
    return port !== 70;

    case 'file':
    return false;
  }

  return port !== 0;
};


/***/ }),

/***/ 1833:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = auth;

var _querystring = __webpack_require__(181);

var _querystring2 = _interopRequireDefault(_querystring);

var _constants = __webpack_require__(688);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function auth() {
  var _this = this;

  return {
    getAuthenticationUrl: function getAuthenticationUrl() {
      var scope = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ["public"];

      var querystrings = _querystring2.default.stringify({
        client_id: _this._applicationId,
        redirect_uri: _this._callbackUrl,
        response_type: "code",
        scope: scope.length > 1 ? scope.join("+") : scope.toString()
      });

      return decodeURIComponent(_constants.OAUTH_AUTHORIZE_URL + "?" + querystrings);
    },

    userAuthentication: function userAuthentication(code) {
      var url = _constants.OAUTH_TOKEN_URL;

      return _this.request({
        url: url,
        method: "POST",
        body: {
          client_id: _this._applicationId,
          client_secret: _this._secret,
          redirect_uri: _this._callbackUrl,
          grant_type: "authorization_code",
          code: code
        },
        oauth: true
      });
    },

    setBearerToken: function setBearerToken(accessToken) {
      if (accessToken) {
        _this._bearerToken = accessToken;
      }
    }
  };
}

/***/ }),

/***/ 1834:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = categories;
function categories() {
  var _this = this;

  return {
    listCategories: function listCategories() {
      var url = "/categories";

      return _this.request({
        url: url,
        method: "GET"
      });
    },

    category: function category(id) {
      var url = "/categories/" + id;

      return _this.request({
        url: url,
        method: "GET"
      });
    },

    categoryPhotos: function categoryPhotos(id, page, perPage) {
      var url = "/categories/" + id + "/photos";

      var query = {
        page: page,
        per_page: perPage
      };

      return _this.request({
        url: url,
        method: "GET",
        query: query
      });
    }
  };
}

/***/ }),

/***/ 1835:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = collections;
function collections() {
  var _this = this;

  return {
    listCollections: function listCollections() {
      var page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;
      var perPage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;

      var url = "/collections";

      var query = {
        page: page,
        per_page: perPage
      };

      return _this.request({
        url: url,
        method: "GET",
        query: query
      });
    },

    listCuratedCollections: function listCuratedCollections() {
      var page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;
      var perPage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;

      var url = "/collections/curated";
      var query = {
        page: page,
        per_page: perPage
      };

      return _this.request({
        url: url,
        method: "GET",
        query: query
      });
    },

    listFeaturedCollections: function listFeaturedCollections() {
      var page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;
      var perPage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;

      var url = "/collections/featured";
      var query = {
        page: page,
        per_page: perPage
      };

      return _this.request({
        url: url,
        method: "GET",
        query: query
      });
    },

    getCollection: collection.bind(this, false),

    getCuratedCollection: collection.bind(this, true),

    getCuratedCollectionPhotos: collectionPhotos.bind(this, true),

    getCollectionPhotos: collectionPhotos.bind(this, false),

    createCollection: createUpdateCollection.bind(this, null),

    updateCollection: createUpdateCollection.bind(this),

    deleteCollection: function deleteCollection(id) {
      var url = "/collections/" + id;

      return _this.request({
        url: url,
        method: "DELETE"
      });
    },

    addPhotoToCollection: function addPhotoToCollection(collectionId, photoId) {
      var url = "/collections/" + collectionId + "/add";

      return _this.request({
        url: url,
        method: "POST",
        body: {
          photo_id: photoId
        }
      });
    },

    removePhotoFromCollection: function removePhotoFromCollection(collectionId, photoId) {
      var url = "/collections/" + collectionId + "/remove?photo_id=" + photoId;

      return _this.request({
        url: url,
        method: "DELETE"
      });
    },

    listRelatedCollections: function listRelatedCollections(collectionId) {
      var url = "/collections/" + collectionId + "/related";

      return _this.request({
        url: url,
        method: "GET"
      });
    }

  };
}

function collection(isCurated, id) {
  var url = isCurated ? "/collections/curated/" + id : "/collections/" + id;

  return this.request({
    url: url,
    method: "GET"
  });
}

function collectionPhotos(isCurated, id) {
  var page = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;
  var perPage = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 10;
  var orderBy = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : "latest";

  var url = isCurated ? "/collections/curated/" + id + "/photos" : "/collections/" + id + "/photos";

  var query = {
    page: page,
    per_page: perPage,
    order_by: orderBy
  };

  return this.request({
    url: url,
    method: "GET",
    query: query
  });
}

function createUpdateCollection(id, title, description, isPrivate) {
  var url = id ? "/collections/" + id : "/collections";
  var body = {
    title: title,
    description: description,
    "private": isPrivate
  };

  return this.request({
    url: url,
    method: id ? "PUT" : "POST",
    body: body
  });
}

/***/ }),

/***/ 1836:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = currentUser;
function currentUser() {
  var _this = this;

  return {
    profile: function profile() {
      var url = "/me";

      return _this.request({
        url: url,
        method: "GET"
      });
    },

    updateProfile: function updateProfile(options) {
      var endpointUrl = "/me";
      var username = options.username,
          firstName = options.firstName,
          lastName = options.lastName,
          email = options.email,
          url = options.url,
          location = options.location,
          bio = options.bio,
          instagramUsername = options.instagramUsername;

      var body = {
        username: username,
        first_name: firstName,
        last_name: lastName,
        email: email,
        url: url,
        location: location,
        bio: bio,
        instagram_username: instagramUsername
      };

      Object.keys(body).forEach(function (key) {
        if (!body[key]) {
          delete body[key];
        }
      });

      return _this.request({
        url: endpointUrl,
        method: "PUT",
        body: body
      });
    }
  };
}

/***/ }),

/***/ 1837:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = photos;

var _utils = __webpack_require__(689);

var _lodash = __webpack_require__(1134);

var _lodash2 = _interopRequireDefault(_lodash);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function photos() {
  var _this = this;

  return {
    listPhotos: function listPhotos() {
      var page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;
      var perPage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;
      var orderBy = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : "latest";

      var url = "/photos";
      var query = {
        page: page,
        per_page: perPage,
        order_by: orderBy
      };

      return _this.request({
        url: url,
        method: "GET",
        query: query
      });
    },

    listCuratedPhotos: function listCuratedPhotos() {
      var page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;
      var perPage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;
      var orderBy = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : "latest";

      var url = "/photos/curated";
      var query = {
        page: page,
        per_page: perPage,
        order_by: orderBy
      };

      return _this.request({
        url: url,
        method: "GET",
        query: query
      });
    },

    searchPhotos: function searchPhotos(q) {
      var category = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [""];
      var page = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;
      var perPage = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 10;

      var url = "/photos/search";
      var query = {
        query: q,
        category: category.length > 1 ? category.join(",") : category.toString(),
        page: page,
        per_page: perPage
      };

      return _this.request({
        url: url,
        method: "GET",
        query: query
      });
    },

    getPhoto: function getPhoto(id, width, height, rectangle) {
      var url = "/photos/" + id;
      var query = {
        w: width,
        h: height,
        rect: rectangle
      };

      return _this.request({
        url: url,
        method: "GET",
        query: query
      });
    },

    getPhotoStats: function getPhotoStats(id) {
      var url = "/photos/" + id + "/stats";

      return _this.request({
        url: url,
        method: "GET"
      });
    },

    getRandomPhoto: function getRandomPhoto() {
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

      var url = "/photos/random";
      var category = options.category || [];
      var collections = options.collections || [];

      var query = {
        featured: options.featured,
        username: options.username,
        orientation: options.orientation,
        category: category.join(),
        collections: collections.join(),
        query: options.query,
        w: options.width,
        h: options.height,
        c: options.cacheBuster || new Date().getTime(), // Avoid ajax response caching
        count: options.count
      };

      Object.keys(query).forEach(function (key) {
        if (!query[key]) {
          delete query[key];
        }
      });

      return _this.request({
        url: url,
        method: "GET",
        query: query
      });
    },

    uploadPhoto: function uploadPhoto(photo) {
      if (!_this._bearerToken) {
        throw new Error("Requires a bearerToken to be set.");
      }

      var url = "/photos";

      return _this.request({
        url: url,
        method: "POST",
        body: {
          photo: photo
        }
      });
    },

    likePhoto: function likePhoto(id) {
      if (!_this._bearerToken) {
        throw new Error("Requires a bearerToken to be set.");
      }

      var url = "/photos/" + id + "/like";

      return _this.request({
        url: url,
        method: "POST"
      });
    },

    unlikePhoto: function unlikePhoto(id) {
      if (!_this._bearerToken) {
        throw new Error("Requires a bearerToken to be set.");
      }

      var url = "/photos/" + id + "/like";

      return _this.request({
        url: url,
        method: "DELETE"
      });
    },

    downloadPhoto: function downloadPhoto(photo) {
      var downloadLocation = (0, _lodash2.default)(photo, "links.download_location", undefined);

      if (downloadLocation === undefined) {
        throw new Error("Object received is not a photo. " + photo);
      }

      var urlComponents = (0, _utils.getUrlComponents)(downloadLocation);

      return _this.request({
        url: urlComponents.pathname,
        method: "GET",
        query: urlComponents.query
      });
    }
  };
}

/***/ }),

/***/ 1838:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = search;
function search() {
  return {
    all: searcher.bind(this, "/search"),

    photos: searcher.bind(this, "/search/photos"),

    users: searcher.bind(this, "/search/users"),

    collections: searcher.bind(this, "/search/collections")
  };
}

function searcher(url) {
  var keyword = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "";
  var page = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;
  var per_page = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 10;

  var query = {
    query: keyword,
    page: page,
    per_page: per_page
  };

  return this.request({
    url: url,
    method: "GET",
    query: query
  });
}

/***/ }),

/***/ 1839:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = stats;
function stats() {
  var _this = this;

  return {
    total: function total() {
      var url = "/stats/total";

      return _this.request({
        url: url,
        method: "GET"
      });
    }
  };
}

/***/ }),

/***/ 1840:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = users;
function users() {
  var _this = this;

  return {
    profile: function profile(username) {
      var url = "/users/" + username;

      return _this.request({
        url: url,
        method: "GET"
      });
    },

    photos: function photos(username) {
      var page = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;
      var perPage = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 10;
      var orderBy = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : "latest";
      var stats = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;

      var url = "/users/" + username + "/photos";
      var query = {
        page: page,
        per_page: perPage,
        order_by: orderBy,
        stats: stats
      };

      return _this.request({
        url: url,
        method: "GET",
        query: query
      });
    },

    likes: function likes(username) {
      var page = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;
      var perPage = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 10;
      var orderBy = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : "latest";

      var url = "/users/" + username + "/likes";
      var query = {
        page: page,
        per_page: perPage,
        order_by: orderBy
      };

      return _this.request({
        url: url,
        method: "GET",
        query: query
      });
    },

    collections: function collections(username) {
      var page = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;
      var perPage = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 10;
      var orderBy = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : "published";

      var url = "/users/" + username + "/collections";
      var query = {
        page: page,
        per_page: perPage,
        order_by: orderBy
      };

      return _this.request({
        url: url,
        method: "GET",
        query: query
      });
    },

    statistics: function statistics(username) {
      var resolution = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "days";
      var quantity = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 30;

      var url = "/users/" + username + "/statistics";
      var query = {
        resolution: resolution,
        quantity: quantity
      };

      return _this.request({
        url: url,
        method: "GET",
        query: query
      });
    }
  };
}

/***/ }),

/***/ 1841:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

exports.toJson = toJson;

var _constants = __webpack_require__(688);

var _utils = __webpack_require__(689);

var _auth = __webpack_require__(1833);

var _auth2 = _interopRequireDefault(_auth);

var _currentUser = __webpack_require__(1836);

var _currentUser2 = _interopRequireDefault(_currentUser);

var _users = __webpack_require__(1840);

var _users2 = _interopRequireDefault(_users);

var _photos = __webpack_require__(1837);

var _photos2 = _interopRequireDefault(_photos);

var _categories = __webpack_require__(1834);

var _categories2 = _interopRequireDefault(_categories);

var _collections = __webpack_require__(1835);

var _collections2 = _interopRequireDefault(_collections);

var _search = __webpack_require__(1838);

var _search2 = _interopRequireDefault(_search);

var _stats = __webpack_require__(1839);

var _stats2 = _interopRequireDefault(_stats);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Unsplash = function () {
  function Unsplash(options) {
    _classCallCheck(this, Unsplash);

    this._apiUrl = options.apiUrl || _constants.API_URL;
    this._apiVersion = options.apiVersion || _constants.API_VERSION;
    this._applicationId = options.applicationId;
    this._secret = options.secret;
    this._callbackUrl = options.callbackUrl;
    this._bearerToken = options.bearerToken;
    this._headers = options.headers || {};

    this.auth = _auth2.default.bind(this)();
    this.currentUser = _currentUser2.default.bind(this)();
    this.users = _users2.default.bind(this)();
    this.photos = _photos2.default.bind(this)();
    this.categories = _categories2.default.bind(this)();
    this.collections = _collections2.default.bind(this)();
    this.search = _search2.default.bind(this)();
    this.stats = _stats2.default.bind(this)();
  }

  _createClass(Unsplash, [{
    key: "request",
    value: function request(requestOptions) {
      var _buildFetchOptions$bi = _utils.buildFetchOptions.bind(this)(requestOptions),
          url = _buildFetchOptions$bi.url,
          options = _buildFetchOptions$bi.options;

      return fetch(url, options);
    }
  }]);

  return Unsplash;
}();

exports.default = Unsplash;
function toJson(res) {
  return typeof res.json === "function" ? res.json() : res;
}

/***/ }),

/***/ 1842:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {

var required = __webpack_require__(1823)
  , qs = __webpack_require__(1149)
  , protocolre = /^([a-z][a-z0-9.+-]*:)?(\/\/)?([\S\s]*)/i
  , slashes = /^[A-Za-z][A-Za-z0-9+-.]*:\/\//;

/**
 * These are the parse rules for the URL parser, it informs the parser
 * about:
 *
 * 0. The char it Needs to parse, if it's a string it should be done using
 *    indexOf, RegExp using exec and NaN means set as current value.
 * 1. The property we should set when parsing this value.
 * 2. Indication if it's backwards or forward parsing, when set as number it's
 *    the value of extra chars that should be split off.
 * 3. Inherit from location if non existing in the parser.
 * 4. `toLowerCase` the resulting value.
 */
var rules = [
  ['#', 'hash'],                        // Extract from the back.
  ['?', 'query'],                       // Extract from the back.
  ['/', 'pathname'],                    // Extract from the back.
  ['@', 'auth', 1],                     // Extract from the front.
  [NaN, 'host', undefined, 1, 1],       // Set left over value.
  [/:(\d+)$/, 'port', undefined, 1],    // RegExp the back.
  [NaN, 'hostname', undefined, 1, 1]    // Set left over.
];

/**
 * These properties should not be copied or inherited from. This is only needed
 * for all non blob URL's as a blob URL does not include a hash, only the
 * origin.
 *
 * @type {Object}
 * @private
 */
var ignore = { hash: 1, query: 1 };

/**
 * The location object differs when your code is loaded through a normal page,
 * Worker or through a worker using a blob. And with the blobble begins the
 * trouble as the location object will contain the URL of the blob, not the
 * location of the page where our code is loaded in. The actual origin is
 * encoded in the `pathname` so we can thankfully generate a good "default"
 * location from it so we can generate proper relative URL's again.
 *
 * @param {Object|String} loc Optional default location object.
 * @returns {Object} lolcation object.
 * @api public
 */
function lolcation(loc) {
  loc = loc || global.location || {};

  var finaldestination = {}
    , type = typeof loc
    , key;

  if ('blob:' === loc.protocol) {
    finaldestination = new URL(unescape(loc.pathname), {});
  } else if ('string' === type) {
    finaldestination = new URL(loc, {});
    for (key in ignore) delete finaldestination[key];
  } else if ('object' === type) {
    for (key in loc) {
      if (key in ignore) continue;
      finaldestination[key] = loc[key];
    }

    if (finaldestination.slashes === undefined) {
      finaldestination.slashes = slashes.test(loc.href);
    }
  }

  return finaldestination;
}

/**
 * @typedef ProtocolExtract
 * @type Object
 * @property {String} protocol Protocol matched in the URL, in lowercase.
 * @property {Boolean} slashes `true` if protocol is followed by "//", else `false`.
 * @property {String} rest Rest of the URL that is not part of the protocol.
 */

/**
 * Extract protocol information from a URL with/without double slash ("//").
 *
 * @param {String} address URL we want to extract from.
 * @return {ProtocolExtract} Extracted information.
 * @api private
 */
function extractProtocol(address) {
  var match = protocolre.exec(address);

  return {
    protocol: match[1] ? match[1].toLowerCase() : '',
    slashes: !!match[2],
    rest: match[3]
  };
}

/**
 * Resolve a relative URL pathname against a base URL pathname.
 *
 * @param {String} relative Pathname of the relative URL.
 * @param {String} base Pathname of the base URL.
 * @return {String} Resolved pathname.
 * @api private
 */
function resolve(relative, base) {
  var path = (base || '/').split('/').slice(0, -1).concat(relative.split('/'))
    , i = path.length
    , last = path[i - 1]
    , unshift = false
    , up = 0;

  while (i--) {
    if (path[i] === '.') {
      path.splice(i, 1);
    } else if (path[i] === '..') {
      path.splice(i, 1);
      up++;
    } else if (up) {
      if (i === 0) unshift = true;
      path.splice(i, 1);
      up--;
    }
  }

  if (unshift) path.unshift('');
  if (last === '.' || last === '..') path.push('');

  return path.join('/');
}

/**
 * The actual URL instance. Instead of returning an object we've opted-in to
 * create an actual constructor as it's much more memory efficient and
 * faster and it pleases my OCD.
 *
 * @constructor
 * @param {String} address URL we want to parse.
 * @param {Object|String} location Location defaults for relative paths.
 * @param {Boolean|Function} parser Parser for the query string.
 * @api public
 */
function URL(address, location, parser) {
  if (!(this instanceof URL)) {
    return new URL(address, location, parser);
  }

  var relative, extracted, parse, instruction, index, key
    , instructions = rules.slice()
    , type = typeof location
    , url = this
    , i = 0;

  //
  // The following if statements allows this module two have compatibility with
  // 2 different API:
  //
  // 1. Node.js's `url.parse` api which accepts a URL, boolean as arguments
  //    where the boolean indicates that the query string should also be parsed.
  //
  // 2. The `URL` interface of the browser which accepts a URL, object as
  //    arguments. The supplied object will be used as default values / fall-back
  //    for relative paths.
  //
  if ('object' !== type && 'string' !== type) {
    parser = location;
    location = null;
  }

  if (parser && 'function' !== typeof parser) parser = qs.parse;

  location = lolcation(location);

  //
  // Extract protocol information before running the instructions.
  //
  extracted = extractProtocol(address || '');
  relative = !extracted.protocol && !extracted.slashes;
  url.slashes = extracted.slashes || relative && location.slashes;
  url.protocol = extracted.protocol || location.protocol || '';
  address = extracted.rest;

  //
  // When the authority component is absent the URL starts with a path
  // component.
  //
  if (!extracted.slashes) instructions[2] = [/(.*)/, 'pathname'];

  for (; i < instructions.length; i++) {
    instruction = instructions[i];
    parse = instruction[0];
    key = instruction[1];

    if (parse !== parse) {
      url[key] = address;
    } else if ('string' === typeof parse) {
      if (~(index = address.indexOf(parse))) {
        if ('number' === typeof instruction[2]) {
          url[key] = address.slice(0, index);
          address = address.slice(index + instruction[2]);
        } else {
          url[key] = address.slice(index);
          address = address.slice(0, index);
        }
      }
    } else if ((index = parse.exec(address))) {
      url[key] = index[1];
      address = address.slice(0, index.index);
    }

    url[key] = url[key] || (
      relative && instruction[3] ? location[key] || '' : ''
    );

    //
    // Hostname, host and protocol should be lowercased so they can be used to
    // create a proper `origin`.
    //
    if (instruction[4]) url[key] = url[key].toLowerCase();
  }

  //
  // Also parse the supplied query string in to an object. If we're supplied
  // with a custom parser as function use that instead of the default build-in
  // parser.
  //
  if (parser) url.query = parser(url.query);

  //
  // If the URL is relative, resolve the pathname against the base URL.
  //
  if (
      relative
    && location.slashes
    && url.pathname.charAt(0) !== '/'
    && (url.pathname !== '' || location.pathname !== '')
  ) {
    url.pathname = resolve(url.pathname, location.pathname);
  }

  //
  // We should not add port numbers if they are already the default port number
  // for a given protocol. As the host also contains the port number we're going
  // override it with the hostname which contains no port number.
  //
  if (!required(url.port, url.protocol)) {
    url.host = url.hostname;
    url.port = '';
  }

  //
  // Parse down the `auth` for the username and password.
  //
  url.username = url.password = '';
  if (url.auth) {
    instruction = url.auth.split(':');
    url.username = instruction[0] || '';
    url.password = instruction[1] || '';
  }

  url.origin = url.protocol && url.host && url.protocol !== 'file:'
    ? url.protocol +'//'+ url.host
    : 'null';

  //
  // The href is just the compiled result.
  //
  url.href = url.toString();
}

/**
 * This is convenience method for changing properties in the URL instance to
 * insure that they all propagate correctly.
 *
 * @param {String} part          Property we need to adjust.
 * @param {Mixed} value          The newly assigned value.
 * @param {Boolean|Function} fn  When setting the query, it will be the function
 *                               used to parse the query.
 *                               When setting the protocol, double slash will be
 *                               removed from the final url if it is true.
 * @returns {URL}
 * @api public
 */
function set(part, value, fn) {
  var url = this;

  switch (part) {
    case 'query':
      if ('string' === typeof value && value.length) {
        value = (fn || qs.parse)(value);
      }

      url[part] = value;
      break;

    case 'port':
      url[part] = value;

      if (!required(value, url.protocol)) {
        url.host = url.hostname;
        url[part] = '';
      } else if (value) {
        url.host = url.hostname +':'+ value;
      }

      break;

    case 'hostname':
      url[part] = value;

      if (url.port) value += ':'+ url.port;
      url.host = value;
      break;

    case 'host':
      url[part] = value;

      if (/:\d+$/.test(value)) {
        value = value.split(':');
        url.port = value.pop();
        url.hostname = value.join(':');
      } else {
        url.hostname = value;
        url.port = '';
      }

      break;

    case 'protocol':
      url.protocol = value.toLowerCase();
      url.slashes = !fn;
      break;

    case 'pathname':
    case 'hash':
      if (value) {
        var char = part === 'pathname' ? '/' : '#';
        url[part] = value.charAt(0) !== char ? char + value : value;
      } else {
        url[part] = value;
      }
      break;

    default:
      url[part] = value;
  }

  for (var i = 0; i < rules.length; i++) {
    var ins = rules[i];

    if (ins[4]) url[ins[1]] = url[ins[1]].toLowerCase();
  }

  url.origin = url.protocol && url.host && url.protocol !== 'file:'
    ? url.protocol +'//'+ url.host
    : 'null';

  url.href = url.toString();

  return url;
}

/**
 * Transform the properties back in to a valid and full URL string.
 *
 * @param {Function} stringify Optional query stringify function.
 * @returns {String}
 * @api public
 */
function toString(stringify) {
  if (!stringify || 'function' !== typeof stringify) stringify = qs.stringify;

  var query
    , url = this
    , protocol = url.protocol;

  if (protocol && protocol.charAt(protocol.length - 1) !== ':') protocol += ':';

  var result = protocol + (url.slashes ? '//' : '');

  if (url.username) {
    result += url.username;
    if (url.password) result += ':'+ url.password;
    result += '@';
  }

  result += url.host + url.pathname;

  query = 'object' === typeof url.query ? stringify(url.query) : url.query;
  if (query) result += '?' !== query.charAt(0) ? '?'+ query : query;

  if (url.hash) result += url.hash;

  return result;
}

URL.prototype = { set: set, toString: toString };

//
// Expose the URL parser and some additional properties that might be useful for
// others or testing.
//
URL.extractProtocol = extractProtocol;
URL.location = lolcation;
URL.qs = qs;

module.exports = URL;

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(32)))

/***/ }),

/***/ 1864:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactDom = __webpack_require__(23);

var _reactDom2 = _interopRequireDefault(_reactDom);

var _reactRedux = __webpack_require__(5);

var _redux = __webpack_require__(7);

var _app = __webpack_require__(698);

var _app2 = _interopRequireDefault(_app);

var _workspace = __webpack_require__(350);

var _workspace2 = _interopRequireDefault(_workspace);

var _backup_workspace = __webpack_require__(699);

var _backup_workspace2 = _interopRequireDefault(_backup_workspace);

var _reducers = __webpack_require__(700);

var _reducers2 = _interopRequireDefault(_reducers);

var _url_helpers = __webpack_require__(27);

var _url_helpers2 = _interopRequireDefault(_url_helpers);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

__webpack_require__(775);


var createStoreWithMiddleware = (0, _redux.applyMiddleware)()(_redux.createStore);

//Make this a global and then use it in iFrame using parent.[globalname]
window.OffsproutStore = createStoreWithMiddleware(_reducers2.default);

//The main animation effect for the app
window.OffsproutEffect = 'animated faster pulseBig';
window.OffsproutHelpDocs = {
    structuresOverview: 'https://pagebuilder.helpscoutdocs.com/article/120-structures-overview'
};

window.OffsproutCache = {};

var OffsproutURLParams = _url_helpers2.default.getSearchParameters();

//This is the full app with the top and side toolbars
if (OffsproutURLParams.offsproutIframe != 1) {

    _reactDom2.default.render(_react2.default.createElement(
        _reactRedux.Provider,
        { store: window.OffsproutStore },
        _react2.default.createElement(_app2.default, null)
    ), document.querySelector('#offsprout-full'));
}
//This is the workspace for the content inside of an iframe
else {
        parent.OffsproutHasContentArea = true;

        try {
            _reactDom2.default.render(_react2.default.createElement(
                _reactRedux.Provider,
                { store: parent.OffsproutStore },
                _react2.default.createElement(_workspace2.default, null)
            ), document.querySelector('#offsprout-builder-content'));
        } catch (error) {
            parent.OffsproutHasContentArea = false;

            _reactDom2.default.render(_react2.default.createElement(
                _reactRedux.Provider,
                { store: parent.OffsproutStore },
                _react2.default.createElement(_backup_workspace2.default, null)
            ), document.querySelector('#offsprout-backup-builder-content'));
        }
    }

jQuery(document).ready(function ($) {
    var $body = $('body');

    $body.on('click', 'a:not(.ocb-follow-link)', function (e) {
        if ($(this).attr('target') == '_blank') return;
        if ($(this).closest('.ocb-toolbar-navigate-results').length) return;

        e.preventDefault();

        //Don't follow button clicks
        if ($(this).hasClass('ocb-button') || $(this).hasClass('ocb-feature-item') || $(this).hasClass('ocb-logo-image')) {
            return;
        }

        if ($(this).closest('.mce-content-body').length) {
            return;
        }

        //We want to grab link clicks and make the top window navigate, not the iframe window
        //top.location.href = $(this).attr('href');
    });

    $body.on('click', '.ocb-admin-button-load', function (e) {
        if (!$(this).hasClass('ocb-admin-button-disabled')) {
            $(this).prepend('<i class="fa fa-spinner fa-pulse"></i>');
            $(this).addClass('ocb-admin-button-disabled');
        }
    });

    $body.on('click', '.ocb-admin-button-disabled', function (e) {
        e.preventDefault();
    });

    $('#offsprout-builder-content').closest('.ocb-column').css({ zIndex: 1000 });

    //Check for login status and refresh nonce
    $(document).on({
        'heartbeat-send': function heartbeatSend(event, data) {
            data.offsprout_post_lock = {
                post_ID: OCBGlobalSettings.postId
            };
        },
        'heartbeat-tick': function heartbeatTick(event, response) {
            var newNonce = response['offsprout-refresh-nonce'] != undefined && response['offsprout-refresh-nonce']['wp_rest'] ? response['offsprout-refresh-nonce']['wp_rest'] : false;

            if (newNonce && newNonce != parent.OCBGlobalSettings.nonce) {
                parent.OCBGlobalSettings.nonce = newNonce;
                console.log('replacing the nonce', newNonce);
            }
        }
    });
});

window.ocbMountTimeoutOrderTester = function (message) {
    //alert(message);
};

/***/ }),

/***/ 19:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* eslint-env node, browser */

/**
 * adds a bindGlobal method to Combokeys that allows you to
 * bind specific keyboard shortcuts that will still work
 * inside a text input field
 *
 * usage:
 * Combokeys.bindGlobal("ctrl+s", _saveChanges)
 */
module.exports = function (Combokeys) {
  var globalCallbacks = {}
  var originalStopCallback = Combokeys.stopCallback
  var originalUnbind = Combokeys.unbind

  Combokeys.stopCallback = function (e, element, combo, sequence) {
    if (globalCallbacks[combo] || globalCallbacks[sequence]) {
      return false
    }

    return originalStopCallback(e, element, combo)
  }

  Combokeys.bindGlobal = function (keys, callback, action) {
    this.bind(keys, callback, action)

    if (keys instanceof Array) {
      for (var i = 0; i < keys.length; i++) {
        globalCallbacks[keys[i]] = true
      }
      return
    }

    globalCallbacks[keys] = true
  }

  Combokeys.unbind = function (keys, action) {
    originalUnbind.call(this, keys, action)

    if (keys instanceof Array) {
      for (var i = 0; i < keys.length; i++) {
        globalCallbacks[keys[i]] = false
      }
      return
    }

    globalCallbacks[keys] = false
  }

  return Combokeys
}


/***/ }),

/***/ 2:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _deepmerge = __webpack_require__(9);

var _deepmerge2 = _interopRequireDefault(_deepmerge);

var _api_helpers = __webpack_require__(6);

var _api_helpers2 = _interopRequireDefault(_api_helpers);

var _default_standard = __webpack_require__(16);

var _default_standard2 = _interopRequireDefault(_default_standard);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var SettingsHelpers = {

    generateId: function generateId(type) {
        if (type == 'column') type = 'col';
        if (type == 'module') type = 'mod';

        return type + (Date.now().toString(36) + Math.random().toString(36).substr(2, 9)).toLowerCase();
    },

    rgb2hex: function rgb2hex(rgb) {
        if (!rgb.includes('rgb')) return rgb;

        rgb = rgb.match(/^rgba?[\s+]?\([\s+]?(\d+)[\s+]?,[\s+]?(\d+)[\s+]?,[\s+]?(\d+)[\s+]?/i);
        return rgb && rgb.length === 4 ? "#" + ("0" + parseInt(rgb[1], 10).toString(16)).slice(-2) + ("0" + parseInt(rgb[2], 10).toString(16)).slice(-2) + ("0" + parseInt(rgb[3], 10).toString(16)).slice(-2) : '';
    },

    /**
     * Useful for the site grower where the full state is being passed at completion of the site grower
     *  and we want to make sure that we're modifying properties of the state that actually exist
     *
     * @param fullState - the full application state from redux
     * @param typeState - a branch of the application state, like siteState
     * @param property - a property of that application state branch, like logo
     * @returns {*}
     */
    maybeBuildStateBranch: function maybeBuildStateBranch(fullState, typeState) {
        var property = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

        if (fullState[typeState] == undefined || _typeof(fullState[typeState]) != 'object') {
            fullState[typeState] = {};
        }
        if (property && (fullState[typeState][property] == undefined || _typeof(fullState[typeState][property]) != 'object')) {
            fullState[typeState][property] = {};
        }

        return fullState;
    },


    /**
     * Save a module's settings as the default settings if the module doesn't have any properties set
     * (i.e. if the module has just been added)
     *
     * @param object
     */
    setDefaultIfNew: function setDefaultIfNew(object) {
        var defaultSettings = SettingsHelpers.getModuleRegistryProp(object.moduleType, 'default');

        //This is the field that should be set and if it isn't, that means the module is new
        var requiredFieldIndex = defaultSettings.fields.findIndex(function (field) {
            return field.requiredCheck == true;
        });
        var fieldId = defaultSettings.fields[requiredFieldIndex].id;

        if (object.settings.linked == undefined || object.settings.linked[fieldId] == undefined || jQuery.isEmptyObject(object.settings.linked[fieldId]) || Array.isArray(object.settings.linked[fieldId]) && object.settings.linked[fieldId].length == 0) {
            var newSettings = {};
            newSettings.linked = defaultSettings.default;
            return newSettings;
        } else {
            return false;
        }
    },

    /**
     * Get the settings for a module, and use default values if there is no setting
     *
     * @param defaultSettings
     * @param settings
     * @returns object - the actual settings merged with the default settings
     */
    mergeWithDefault: function mergeWithDefault(defaultSettings, settings) {
        if (Array.isArray(settings)) {
            if (settings == 0) {
                settings = {};
            }
        }
        return (0, _deepmerge2.default)(defaultSettings, settings);
    },

    /**
     * Get the settings for a repeater and use default values if there is no setting
     *
     * @param defaultModule
     * @param settings
     * @param repeater
     */
    mergeRepeaterWithDefault: function mergeRepeaterWithDefault(defaultModule, settings, repeater) {
        var repeaterField = defaultModule.fields.find(function (field) {
            return field.id == repeater;
        });
        var defaultSettings = repeaterField.items.default;
        if (Array.isArray(settings)) {
            if (settings == 0) {
                settings = {};
            }
        }
        return (0, _deepmerge2.default)(defaultSettings, settings);
    },

    /**
     * Gets an array of settings panel fields
     *
     * @returns []
     */
    getFieldRegistry: function getFieldRegistry() {
        var registry = window.OffsproutFieldRegistry;
        if (registry == undefined) {
            registry = window.OffsproutFieldRegistry;
        }

        return OffsproutFilter.apply('fieldRegistry', registry);
    },

    /**
     * Useful helper for retrieving a property for a module type in the module registry
     *
     * @param type - module type
     * @param prop - the property that you want to retrieve
     * @returns value or null
     */
    getModuleRegistryProp: function getModuleRegistryProp(type, prop) {
        var registry = SettingsHelpers.getModuleRegistry();

        var moduleIndex = registry.findIndex(function (module) {
            return module.type == type;
        });

        if (moduleIndex != -1 && registry[moduleIndex][prop] != undefined) {
            //Need to clone this object so that we're not just passing a reference to the global
            return JSON.parse(JSON.stringify(registry[moduleIndex][prop]));
        } else {
            return null;
        }
    },

    getModuleRegistry: function getModuleRegistry() {
        var registry = window.OffsproutModuleRegistry;
        if (registry == undefined) {
            registry = parent.OffsproutModuleRegistry;
        }

        return OffsproutFilter.apply('moduleRegistry', registry);
    },

    getModuleRegistryOnSave: function getModuleRegistryOnSave(type) {
        var registry = SettingsHelpers.getModuleRegistry();

        var moduleIndex = registry.findIndex(function (module) {
            return module.type == type;
        });

        if (moduleIndex != -1 && registry[moduleIndex]['onSave'] != undefined) {
            return registry[moduleIndex]['onSave'];
        }

        return false;
    },

    setFieldDefaults: function setFieldDefaults(settings, fields) {
        if (settings == undefined) {
            settings = {};
        }

        fields.forEach(function (field) {
            if ((typeof field === 'undefined' ? 'undefined' : _typeof(field)) == 'object') {
                if (settings[field.property] == undefined) {
                    settings[field.property] = field.value;
                }
            } else if (settings[field] == undefined) {
                settings[field] = null;
            }
        });

        return settings;
    },

    shouldFieldWrapUpdate: function shouldFieldWrapUpdate(properties, currentValues, nextValues) {
        var needsUpdate = false;

        if (nextValues != undefined) {
            properties.forEach(function (property) {
                if (currentValues[property] != nextValues[property]) {
                    needsUpdate = true;
                }
            });
        }

        return needsUpdate;
    },

    /**
     * Checks to see if there's a conditional for a field, and if so, will re-render that field NO MATTER WHAT
     * Called by field_wrap
     *
     * @todo: this should not be re-rendering no matter what - we need the currentValues !== nextValues, but there seems to be a mutation that mutates currentValues to equal nextValues
     * @param field
     * @param currentValues
     * @param nextValues
     * @returns {boolean}
     */
    fieldConditionalUpdated: function fieldConditionalUpdated(field, currentValues, nextValues) {
        var needsUpdate = false;
        if (field.conditional != undefined) {
            /*console.log('fieldConditionalUpdated field', field);
             console.log('fieldConditionalUpdated currentValues', currentValues);
             console.log('fieldConditionalUpdated nextValues', nextValues);*/
            field.conditional.conditions.forEach(function (condition) {
                /*console.log( '1', ( currentValues[condition.id] != undefined && currentValues[condition.id][condition.property] != undefined ) );
                 console.log( '2', ( nextValues[condition.id] != undefined && nextValues[condition.id][condition.property] != undefined ) );
                 console.log( '3', ( currentValues[condition.id][condition.property] != nextValues[condition.id][condition.property] ) );*/
                var conditionId = condition.id; //field.fromMixinPrefix != undefined ? field.fromMixinPrefix + condition.id : condition.id;

                if (currentValues[conditionId] != undefined && currentValues[conditionId][condition.property] != undefined && nextValues[conditionId] != undefined && nextValues[conditionId][condition.property] != undefined
                //&& currentValues[condition.id][condition.property] != nextValues[condition.id][condition.property]
                ) {
                        needsUpdate = true;
                    } else {
                    if (field.conditional.type == 'and' || field.conditional.type == undefined) {
                        return false;
                    }
                }
            });
        }
        return needsUpdate;
    },

    /**
     * Evaluates whether to show or hide a field that has conditionals
     * Called by field_wrap
     *
     * @param field
     * @param currentValues
     * @returns {boolean}
     */
    passesFieldConditional: function passesFieldConditional(field, currentValues, mergedValues) {
        var repeaterIndex = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;

        var passes = true;

        if (field.conditional != undefined) {
            passes = SettingsHelpers.evaluateFieldConditional(field.conditional, field, currentValues, mergedValues, repeaterIndex);
        }

        return passes;
    },

    evaluateFieldConditional: function evaluateFieldConditional(conditional, field, currentValues, mergedValues) {
        var repeaterIndex = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;

        if (conditional.ifTrue == undefined) {
            conditional.ifTrue = 'show';
        }
        if (conditional.type == undefined) {
            conditional.type = 'and';
        }

        var passes = null;

        for (var i = 0; i < conditional.conditions.length; i++) {
            var condition = conditional.conditions[i];
            var conditionId = condition.id;

            //Only keep going if passes isn't set, it's "and" and true, or it's "or" and false
            if (passes === null || conditional.type == 'and' && passes == true || conditional.type == 'or' && passes == false) {

                if (condition.conditional != undefined) {

                    //Allows nested conditionals so you can have something like if( (a && b) || (c && d) )
                    passes = SettingsHelpers.evaluateFieldConditional(condition.conditional, field, currentValues, mergedValues, repeaterIndex);
                } else {

                    var theValues = Object.assign({}, currentValues);

                    //If it's a repeater, the field value is in mergedValues, which only has the values local to the repeater
                    //currentValues does not have accurate values
                    if (repeaterIndex !== false && condition.useLocal == true) {

                        //Repeaters with more than one field are given a group id that is equal to [repeaterId]-[repeaterIndex]
                        //That means that the value will be currentValues[repeaterId][items][repeaterIndex][conditionId][conditionProperty]
                        var repeaterPath = field.group.split('-');

                        theValues = Object.assign({}, mergedValues);
                    }

                    if (theValues[conditionId] == undefined || theValues[conditionId][condition.property] == undefined) {

                        passes = true;
                    } else {

                        passes = condition.value == theValues[conditionId][condition.property];
                    }

                    //If there's a condition-level ifTrue, act on that here
                    if (condition.ifTrue != undefined && condition.ifTrue != 'show') {
                        passes = !passes;
                    }
                }
            }
        }

        //If there's a conditional-level ifTrue, act on that here
        if (conditional.ifTrue != undefined && conditional.ifTrue != 'show') {
            passes = !passes;
        }

        return passes;
    },

    evaluateFieldConditionalOld2: function evaluateFieldConditionalOld2(conditional, field, currentValues, mergedValues) {
        var repeaterIndex = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;

        if (conditional.ifTrue == undefined) {
            conditional.ifTrue = 'show';
        }
        if (conditional.type == undefined) {
            conditional.type = 'and';
        }

        var passes = conditional.ifTrue != 'show';

        /*
             ifTrue = hide
            type = or
             passes = true
          */

        for (var i = 0; i < conditional.conditions.length; i++) {
            var condition = conditional.conditions[i];

            var ifTrueShowMatches = condition.ifTrue != undefined ? condition.ifTrue == 'show' : conditional.ifTrue == 'show';
            var ifTrueShowNoMatch = condition.ifTrue != undefined ? condition.ifTrue != 'show' : conditional.ifTrue != 'show';

            /*
              ifTrueShowMatches = false
             ifTrueShowNoMatch = true
              */

            var conditionId = condition.id;
            //Make sure that conditionals work with mixins - handled elsewhere now
            //let conditionId = field.fromMixinPrefix != undefined ? field.fromMixinPrefix + condition.id : condition.id;

            if (condition.conditional != undefined) {

                //Allows nested conditionals so you can have something like if( (a && b) || (c && d) )
                passes = SettingsHelpers.evaluateFieldConditional(condition.conditional, field, currentValues, mergedValues, repeaterIndex);
            } else {

                var theValues = Object.assign({}, currentValues);

                //If it's a repeater, the field value is in mergedValues, which only has the values local to the repeater
                //currentValues does not have accurate values
                if (repeaterIndex !== false && condition.useLocal == true) {

                    //Repeaters with more than one field are given a group id that is equal to [repeaterId]-[repeaterIndex]
                    //That means that the value will be currentValues[repeaterId][items][repeaterIndex][conditionId][conditionProperty]
                    var repeaterPath = field.group.split('-');

                    theValues = Object.assign({}, mergedValues);
                }

                if (theValues[conditionId] == undefined || theValues[conditionId][condition.property] == undefined) {

                    if (conditional.type == 'and') {
                        return ifTrueShowNoMatch;
                    } else {
                        if (!passes) {
                            passes = ifTrueShowNoMatch;
                        }
                    }
                } else {

                    if (condition.value == theValues[conditionId][condition.property]) {
                        if (!passes) {
                            passes = ifTrueShowMatches;
                        }
                    } else {
                        if (conditional.type == 'and') {
                            return ifTrueShowNoMatch;
                        }
                    }
                }
            }

            if (conditional.type == 'and' && !passes) return false;
            if (conditional.type == 'or' && passes) return true;
        }

        return passes;
    },

    evaluateFieldConditionalOld: function evaluateFieldConditionalOld(conditional, field, currentValues, mergedValues) {
        var repeaterIndex = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;

        if (conditional.ifTrue == undefined) {
            conditional.ifTrue = 'show';
        }
        if (conditional.type == undefined) {
            conditional.type = 'and';
        }

        var passes = conditional.ifTrue != 'show';

        for (var i = 0; i < conditional.conditions.length; i++) {
            var condition = conditional.conditions[i];

            var ifTrueShowMatches = condition.ifTrue != undefined ? condition.ifTrue == 'show' : conditional.ifTrue == 'show';
            var ifTrueShowNoMatch = condition.ifTrue != undefined ? condition.ifTrue != 'show' : conditional.ifTrue != 'show';

            var conditionId = condition.id;
            //Make sure that conditionals work with mixins - handled elsewhere now
            //let conditionId = field.fromMixinPrefix != undefined ? field.fromMixinPrefix + condition.id : condition.id;

            if (condition.conditional != undefined) {
                //Allows nested conditionals so you can have something like if( (a && b) || (c && d) )
                passes = SettingsHelpers.evaluateFieldConditional(condition.conditional, field, currentValues, mergedValues, repeaterIndex);
            } else {
                //If it's a repeater, the field value is in mergedValues, which only has the values local to the repeater
                //currentValues does not have accurate values
                if (repeaterIndex !== false && condition.useLocal == true) {
                    //Repeaters with more than one field are given a group id that is equal to [repeaterId]-[repeaterIndex]
                    //That means that the value will be currentValues[repeaterId][items][repeaterIndex][conditionId][conditionProperty]
                    var repeaterPath = field.group.split('-');

                    if (mergedValues[conditionId] != undefined && mergedValues[conditionId][condition.property] != undefined) {
                        if (condition.value == mergedValues[conditionId][condition.property]) {
                            //console.log('repeater conditions if', mergedValues, conditional.type, conditional.ifTrue);
                            passes = ifTrueShowMatches;
                        } else {
                            //console.log('repeater conditions else 1', field, conditional.type, conditional.ifTrue);
                            if (conditional.type == 'and') {
                                //console.log('repeater conditions else 2', field, conditional.type, conditional.ifTrue);
                                //console.log('repeater return', (conditional.ifTrue != 'show'));
                                return ifTrueShowNoMatch;
                            }
                        }
                    } else {
                        if (conditional.type == 'and') {
                            return ifTrueShowNoMatch;
                        } else {
                            passes = ifTrueShowNoMatch;
                        }
                    }
                } else {
                    if (currentValues[conditionId] != undefined && currentValues[conditionId][condition.property] != undefined) {
                        if (condition.value == currentValues[conditionId][condition.property]) {
                            passes = ifTrueShowMatches;
                        } else {
                            if (conditional.type == 'and') {
                                return ifTrueShowNoMatch;
                            }
                        }
                    }
                }
            }
        }

        return passes;
    },

    /**
     * Wraps finished CSS in a style tag. Useful because later on we can use this function to concatenate all extra CSS
     * and therefore save a fully rendered CSS tag in meta or even a file, rather than having it all inline.
     *
     * @param css
     * @param id
     * @param className
     * @returns {XML}
     */
    wrapCSSInStyleTag: function wrapCSSInStyleTag(css) {
        var id = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
        var className = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';

        if (id && className) {
            var exists = window.OffsproutPageStyle.find(function (style) {
                return style.id == id && style.className == className;
            });
            //if that combination of id and className doesn't exist, then create it, otherwise, overwrite
            if (!exists) {
                window.OffsproutPageStyle = window.OffsproutPageStyle.concat({
                    id: id,
                    className: className,
                    css: css
                });
            } else {
                window.OffsproutPageStyle = window.OffsproutPageStyle.map(function (style) {
                    if (style.id == id && style.className == className) {
                        style.css = css;
                        return style;
                    }
                    return style;
                });
            }
        }

        return _react2.default.createElement('style', { className: 'ocb-page-css-style-tag', dangerouslySetInnerHTML: { __html: css } });
    },

    camelCaseToDash: function camelCaseToDash(str) {
        return str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();
    },

    /**
     * Wrap multiple properties passed in an object
     *
     * @param id string without #
     * @param className string with .
     * @param properties object
     * @param type
     * @returns {*}
     */
    wrapCSSProperties: function wrapCSSProperties(id, className, properties) {
        var type = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'module';

        var css = '';

        for (var key in properties) {
            if (properties.hasOwnProperty(key)) {
                var property = SettingsHelpers.camelCaseToDash(key);
                css += property + ':' + properties[key] + ';';
            }
        }

        //Need ocb-tree to distinguish between items in the workspace and object templates
        return SettingsHelpers.wrapCSS(id, className, css, type);
        //return `.ocb-tree #${type}-${id} ${className}{${css}}`;
    },

    /**
     * Wrap a single property and value
     *
     * @param id
     * @param className
     * @param property
     * @param value
     * @param type
     * @returns {*}
     */
    wrapCSSProperty: function wrapCSSProperty(id, className, property, value) {
        var type = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 'module';

        var css = property + ':' + value + ';';
        //Need ocb-tree to distinguish between items in the workspace and object templates
        return SettingsHelpers.wrapCSS(id, className, css, type);
    },

    /**
     * Wrap, adding any necessary parent selectors
     *
     * @param id
     * @param className
     * @param css
     * @param type
     * @returns {*}
     */
    wrapCSS: function wrapCSS(id, className, css) {
        var type = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'module';

        if (!css) return '';

        var theId = id;

        if (id.charAt(0) != '#' && id.charAt(0) != '.') {
            theId = '#' + type + '-' + id;
        }

        //Need ocb-tree to distinguish between items in the workspace and object templates
        return '.ocb-tree ' + theId + ' ' + className + '{' + css + '}';
    },

    /**
     * Will wrap a bunch of CSS in the appropriate @media calls
     *
     * @param object - the full object
     * @param which - settings/standard
     * @param args
     * - valueProp - ex: shape_height
     * - valueValidationSubprop - ex: useDefault
     * - validationValue - ex: custom
     * - valueSubprop - ex: value
     * - valueUnits - ex: units
     * - valueBefore - string before the value ex: calc(
     * - valueAfter - string after the value ex: + 1.3px)
     * - className - ex: .class-name
     * - property - ex: height
     * - type - ex: module
     * @returns {string}
     */
    wrapMaybeDeviceCSSProperty: function wrapMaybeDeviceCSSProperty(object, which, args) {
        var deviceLock = object.deviceLock != undefined ? object.deviceLock : true;
        var settings = object[which] != undefined ? object[which] : false;

        if (!settings) return '';

        var defaults = {
            valueProp: '',
            valueValidationSubprop: 'useDefault',
            validationValue: 'custom',
            valueSubprop: 'value',
            valueUnits: 'units',
            valueBefore: '',
            valueAfter: '',
            className: '',
            property: ''
        };

        var finalArgs = Object.assign(defaults, args);

        //destructure the object properties, turning each into its own variable
        var valueProp = finalArgs.valueProp,
            valueValidationSubprop = finalArgs.valueValidationSubprop,
            validationValue = finalArgs.validationValue,
            valueSubprop = finalArgs.valueSubprop,
            valueUnits = finalArgs.valueUnits,
            valueBefore = finalArgs.valueBefore,
            valueAfter = finalArgs.valueAfter,
            className = finalArgs.className,
            property = finalArgs.property;


        var linkedSettings = settings.linked != undefined ? settings.linked : false;
        var laptopSettings = settings.laptop != undefined ? settings.laptop : false;
        var tabletSettings = settings.tablet != undefined ? settings.tablet : false;
        var phoneSettings = settings.phone != undefined ? settings.phone : false;

        var laptopBreakpoint = SettingsHelpers.getLaptopBreakpoint();
        var tabletBreakpoint = SettingsHelpers.getTabletBreakpoint();
        var laptopBreakpointUnder = laptopBreakpoint - 1;
        var tabletBreakpointUnder = tabletBreakpoint - 1;

        var style = '';

        if (deviceLock) {

            if (linkedSettings && linkedSettings[valueProp] != undefined && linkedSettings[valueProp][valueValidationSubprop] == validationValue) {
                var linkedValue = linkedSettings[valueProp] != undefined && linkedSettings[valueProp][valueSubprop] != undefined ? linkedSettings[valueProp][valueSubprop] : false;

                if (linkedValue) {
                    linkedValue += linkedSettings[valueProp][valueUnits] != undefined ? linkedSettings[valueProp][valueUnits] : '';
                    style += SettingsHelpers.wrapCSSProperty(object.id, className, property, valueBefore + linkedValue + valueAfter, object.type);
                }
            }
        } else {

            if (laptopSettings && laptopSettings[valueProp] != undefined && laptopSettings[valueProp][valueValidationSubprop] == validationValue) {
                var laptopValue = laptopSettings[valueProp] != undefined && laptopSettings[valueProp][valueSubprop] != undefined ? laptopSettings[valueProp][valueSubprop] : false;

                if (laptopValue) {
                    laptopValue += laptopSettings[valueProp][valueUnits] != undefined ? laptopSettings[valueProp][valueUnits] : '';
                    var tempLaptopCSS = SettingsHelpers.wrapCSSProperty(object.id, className, property, valueBefore + laptopValue + valueAfter, object.type);
                    style += '@media (min-width:' + laptopBreakpoint + 'px){' + tempLaptopCSS + '}';
                }
            }

            if (tabletSettings && tabletSettings[valueProp] != undefined && tabletSettings[valueProp][valueValidationSubprop] == validationValue) {
                var tabletValue = tabletSettings[valueProp] != undefined && tabletSettings[valueProp][valueSubprop] != undefined ? tabletSettings[valueProp][valueSubprop] : false;

                if (tabletValue) {
                    tabletValue += tabletSettings[valueProp][valueUnits] != undefined ? tabletSettings[valueProp][valueUnits] : '';
                    var tempTabletCSS = SettingsHelpers.wrapCSSProperty(object.id, className, property, valueBefore + tabletValue + valueAfter, object.type);
                    style += '@media (min-width:' + tabletBreakpoint + 'px) and (max-width:' + laptopBreakpointUnder + 'px){' + tempTabletCSS + '}';
                }
            }

            if (phoneSettings && phoneSettings[valueProp] != undefined && phoneSettings[valueProp][valueValidationSubprop] == validationValue) {
                var phoneValue = phoneSettings[valueProp] != undefined && phoneSettings[valueProp][valueSubprop] != undefined ? phoneSettings[valueProp][valueSubprop] : false;

                if (phoneValue) {
                    phoneValue += phoneSettings[valueProp][valueUnits] != undefined ? phoneSettings[valueProp][valueUnits] : '';
                    var tempPhoneCSS = SettingsHelpers.wrapCSSProperty(object.id, className, property, valueBefore + phoneValue + valueAfter, object.type);
                    style += '@media (max-width:' + tabletBreakpointUnder + 'px){' + tempPhoneCSS + '}';
                }
            }
        }

        return style;
    },

    getObjectOuterClasses: function getObjectOuterClasses(object) {
        var objectClasses = '';

        if (object.standard == undefined || object.standard.linked == undefined) {
            return objectClasses;
        } else {
            object = object.standard.linked;
        }

        if (object.entrance_animation != undefined && object.entrance_animation.choice != undefined) {
            objectClasses += ' animated wow ' + object.entrance_animation.choice;
        }

        if (object.classes != undefined && object.classes.text != undefined) {
            objectClasses += ' ' + object.classes.text;
        }

        if (object.border != undefined && object.border.color != 'default' && object.border.color != 'custom') {
            objectClasses += ' ' + object.border.color + '-border-color';
        }

        if (object.device_hide != undefined && object.device_hide.choices != undefined && object.device_hide.choices.length) {
            object.device_hide.choices.forEach(function (choice) {
                objectClasses += ' ocb-hide-' + choice;
            });
        }

        return objectClasses;
    },

    /*getObjectStandardStyleClasses: (object, settingsActive = false) => {
         let defaultStandard = DefaultStandard();
        let objectStandard = object.standard;
        let fullProps = {};
         if( objectStandard == undefined ) objectStandard = {};
        if( objectStandard.linked == undefined ) objectStandard.linked = {};
         //objectStandard linked is an empty array, and defaultStandard default is an object so defaultStandard is getting overwritten
        if( Array.isArray( objectStandard.linked ) ){
            if( objectStandard.linked.length == 0 ){
                objectStandard.linked = {};
            }
        }
         fullProps.linked = DeepMerge(defaultStandard.default, objectStandard.linked );
         if( object.deviceLock != undefined && object.deviceLock == false ){
            let classes = '';
            let parentClasses = '';
             let style = ['laptop', 'tablet', 'phone'].map((device, index) => {
                if( objectStandard[device] == undefined ) objectStandard[device] = {};
                objectStandard[device] = DeepMerge(fullProps.linked, objectStandard[device]);
                classes += SettingsHelpers.renderClasses(objectStandard[device]);
                parentClasses += SettingsHelpers.renderParentClasses(objectStandard[device]);
                return (
                    <div key={ index } className="ocb-save-remove-element">
                        { SettingsHelpers.renderStyle(objectStandard[device], object, device, settingsActive) }
                    </div>
                );
            });
            return { style, classes, parentClasses }
        } else {
            return {
                style: SettingsHelpers.renderStyle(fullProps.linked, object, false, settingsActive),
                classes: SettingsHelpers.renderClasses(fullProps.linked, object),
                parentClasses: SettingsHelpers.renderParentClasses(fullProps.linked, object)
            };
        }
     },*/

    renderParentClasses: function renderParentClasses(settings, object) {
        var device = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

        var classes = '';

        if (settings.border != undefined && settings.border.color != 'default' && settings.border.color != 'custom') {
            classes += ' ' + settings.border.color + '-border-color';
        }
        if (settings.constrain_background != undefined && settings.constrain_background.yes) {
            classes += ' ocb-constrained-background';
        }

        return classes;
    },

    renderBackgroundWrapClasses: function renderBackgroundWrapClasses(settings, object) {
        var device = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

        var classes = '';

        if (settings.constrain_background != undefined && settings.constrain_background.yes) {
            classes += ' ocb-row-inner-background';
        }

        return classes;
    },

    renderClasses: function renderClasses(settings, object) {
        var device = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

        var classes = '';

        if (settings.color.color != 'default' && settings.color.color != 'custom') {
            classes += ' ' + settings.color.color + '-color';
        }
        if (settings.text_align.choice != 'none') {
            classes += ' text-' + settings.text_align.choice;
        }
        if (settings.text_font.choice != 'default') {
            classes += ' ocb-' + settings.text_font.choice + '_font';
        }
        if (settings.font_weight.useDefault != 'default') {
            classes += ' ocb-weight-' + settings.font_weight.value;
        }
        if (settings.text_transform.choice) {
            classes += ' ocb-text-transform-' + settings.text_transform.choice;
        }

        return classes;
    },

    renderStyle: function renderStyle(settings, object) {
        var device = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
        var settingsActive = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
        var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};

        var customCSS = '';
        var customCSSInner = '';
        var extraCSS = '';
        var returnType = options.returnType != undefined ? options.returnType : 'tag';
        var skinId = options.skinId != undefined && options.skinId ? options.skinId : false;
        var selectorParent = skinId ? '.' + skinId + '-parent' : '#' + object.type + '-' + object.id + '-parent';
        var selectorChild = skinId ? '.' + skinId : '#' + object.type + '-' + object.id;

        if (settings.background.color == 'custom') {
            customCSS += 'background: ' + settings.background.customColor + ';';
        }
        if (settings.color.color == 'custom') {
            customCSS += 'color: ' + settings.color.customColor + ' !important;';
        }
        if (settings.padding.useDefault != 'default') {
            var sp = settings.padding;
            var pu = sp.units;
            if (settings.constrain_background != undefined && settings.constrain_background.yes && settings.inner_background_padding.useDefault == 'custom') {
                var ibp = settings.inner_background_padding;
                var ibpu = ibp.units;
                customCSSInner += 'padding: calc(' + sp.top + pu + ' + ' + ibp.top + ibpu + ') calc(' + sp.right + pu + ' + ' + ibp.right + ibpu + ') calc(' + sp.bottom + pu + ' + ' + ibp.bottom + ibpu + ') calc(' + sp.left + pu + ' + ' + ibp.left + ibpu + ');';
            } else {
                customCSSInner += 'padding: ' + sp.top + pu + ' ' + sp.right + pu + ' ' + sp.bottom + pu + ' ' + sp.left + pu + ';';
            }
        } else {
            if (settings.constrain_background != undefined && settings.constrain_background.yes && settings.inner_background_padding.useDefault == 'custom') {
                var _ibp = settings.inner_background_padding;
                var _ibpu = _ibp.units;
                customCSSInner += 'padding: ' + _ibp.top + _ibpu + ' ' + _ibp.right + _ibpu + ' ' + _ibp.bottom + _ibpu + ' ' + _ibp.left + _ibpu + ';';
            }
        }
        if (settings.border_radius.useDefault != 'default') {
            var borderRadiusUnits = settings.border_radius.units;
            customCSSInner += 'border-radius: ' + settings.border_radius.top + borderRadiusUnits + ' ' + settings.border_radius.right + borderRadiusUnits + ' ' + settings.border_radius.bottom + borderRadiusUnits + ' ' + settings.border_radius.left + borderRadiusUnits + ';';
        }
        if (settings.border.useDefault != 'default') {
            var borderUnits = settings.border.units;
            var borderColor = settings.border.color == 'default' ? '#000000' : settings.border.color == 'custom' ? settings.border.customColor : '';
            customCSS += 'border-style: ' + settings.border.type + ';';
            customCSS += 'border-width: ' + settings.border.top + borderUnits + ' ' + settings.border.right + borderUnits + ' ' + settings.border.bottom + borderUnits + ' ' + settings.border.left + borderUnits + ';';
            customCSS += borderColor ? 'border-color: ' + borderColor + ';' : '';
            //customCSSInner += `border-style: ${settings.border.type};`;
            //customCSSInner += `border-width: ${settings.border.top}${borderUnits} ${settings.border.right}${borderUnits} ${settings.border.bottom}${borderUnits} ${settings.border.left}${borderUnits};`;
            //customCSSInner += borderColor ? `border-color: ${borderColor};` : '';
        }
        if (settings.box_shadow.useDefault == 'custom') {
            var shad = settings.box_shadow;
            customCSS += 'box-shadow: ' + shad.horizontal + 'px ' + shad.vertical + 'px ' + shad.blur + 'px ' + shad.spread + 'px ' + shad.color + ';';
        }
        if (settings.text_shadow.useDefault == 'custom') {
            var tshad = settings.text_shadow;
            customCSS += 'text-shadow: ' + tshad.horizontal + 'px ' + tshad.vertical + 'px ' + tshad.blur + 'px ' + tshad.color + ';';
        }
        if (settings.base_font_size.useDefault != 'default') {
            customCSSInner += 'font-size: ' + settings.base_font_size.value + settings.base_font_size.units + ';';
        }
        if (settings.font_weight.useDefault != 'default') {
            customCSSInner += 'font-weight: ' + settings.font_weight.value + ';';
        }
        if (settings.letter_spacing.useDefault != 'default') {
            customCSSInner += 'letter-spacing: ' + settings.letter_spacing.value + settings.letter_spacing.units + ';';
        }
        if (settings.line_height.useDefault != 'default') {
            customCSSInner += 'line-height: ' + settings.line_height.value + settings.line_height.units + ';';
        }
        var maxWidth = '';
        if (settings.margin.useDefault != 'default') {
            var marginUnits = settings.margin.units;
            var marginTop = settings.margin.top + marginUnits;
            var marginRight = settings.margin.right + marginUnits;
            var marginBottom = settings.margin.bottom + marginUnits;
            var marginLeft = settings.margin.left + marginUnits;
            if (settings.max_width.useDefault != 'default') {
                if (object.inlineModuleAlign == undefined || object.inlineModuleAlign == null) {
                    if (settings.object_align == undefined || settings.object_align.choice == 'left' || settings.object_align.choice == 'center') {
                        marginRight = 'auto';
                    }
                    if (settings.object_align == undefined || settings.object_align.choice == 'right' || settings.object_align.choice == 'center') {
                        marginLeft = 'auto';
                    }
                }
                maxWidth += 'max-width: ' + settings.max_width.value + settings.max_width.units + ';';
            }
            maxWidth += 'margin: ' + marginTop + ' ' + marginRight + ' ' + marginBottom + ' ' + marginLeft + ';';
        } else {
            if (settings.max_width.useDefault != 'default') {
                maxWidth += 'max-width: ' + settings.max_width.value + settings.max_width.units + ';';
            }
            if (settings.object_align != undefined) {
                switch (settings.object_align.choice) {
                    case 'left':
                        maxWidth += 'margin-right:auto';
                        break;
                    case 'right':
                        maxWidth += 'margin-left:auto';
                        break;
                    default:
                        maxWidth += 'margin-left:auto;margin-right:auto;';
                        break;
                }
            } else {
                maxWidth += 'margin-left:auto;margin-right:auto;';
            }
        }

        if (settings.z_index.useDefault != 'default') {
            if (object.type == 'module') {
                extraCSS += '.ocb-tree ' + selectorParent + '{z-index:' + settings.z_index.value + '}';
            } else {
                customCSS += 'z-index:' + settings.z_index.value + ';';
            }
        }

        if (object.type == 'row') {
            customCSSInner += maxWidth;
        } else {
            customCSS += maxWidth;
        }

        var hTags = ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'];

        if (customCSS) {
            //Need ocb-tree to distinguish between items in the workspace and object templates
            customCSS = '.ocb-tree ' + selectorChild + '{' + customCSS + '}';
        }

        if (customCSSInner) {
            //Need ocb-tree to distinguish between items in the workspace and object templates
            customCSSInner = '.ocb-tree ' + selectorChild + ' > .ocb-' + object.type + '-inner{' + customCSSInner + '}';
        }

        var innerBackgroundCSS = '';
        if (settings.constrain_background != undefined && settings.constrain_background.yes) {
            var mobileBackgroundCSS = '';
            var mobileMaxWidth = '999px';
            if (settings.max_width.useDefault != 'default') {
                if (settings.padding.useDefault != 'default') {
                    innerBackgroundCSS += 'max-width: calc(' + settings.max_width.value + settings.max_width.units + ' - ' + settings.padding.right + settings.padding.units + ' - ' + settings.padding.left + settings.padding.units + ');';
                    mobileBackgroundCSS += 'max-width: ' + settings.max_width.value + settings.max_width.units + ';';
                    innerBackgroundCSS += 'margin-left: calc((' + settings.max_width.value + settings.max_width.units + ' - ' + settings.padding.right + settings.padding.units + ' - ' + settings.padding.left + settings.padding.units + ') / 2 * -1);';
                } else {
                    innerBackgroundCSS += 'max-width: ' + settings.max_width.value + settings.max_width.units + ';';
                    innerBackgroundCSS += 'margin-left: calc(' + settings.max_width.value + settings.max_width.units + ' / 2 * -1);';
                }
                if (settings.max_width.units == 'px') {
                    mobileMaxWidth = settings.max_width.value - 1 + settings.max_width.units;
                }
                innerBackgroundCSS += 'left: 50%;';
                mobileBackgroundCSS += 'width: 100%;';
                mobileBackgroundCSS += 'margin-left: 0; left: 0;';
            } else {
                if (settings.padding.useDefault != 'default') {
                    innerBackgroundCSS += 'width: calc(1000px - ' + settings.padding.right + settings.padding.units + ' - ' + settings.padding.left + settings.padding.units + ');';
                    innerBackgroundCSS += 'margin-left: calc((1000px - ' + settings.padding.right + settings.padding.units + ' - ' + settings.padding.left + settings.padding.units + ') / 2 * -1);';
                    mobileBackgroundCSS += 'width: 100%;';
                    mobileBackgroundCSS += 'margin-left: 0;';
                }
            }
            if (settings.padding.useDefault != 'default') {
                innerBackgroundCSS += 'height: calc(100% - ' + settings.padding.top + settings.padding.units + ' - ' + settings.padding.bottom + settings.padding.units + ');';
                innerBackgroundCSS += 'top: ' + settings.padding.top + settings.padding.units + ';';
            }
            //Need ocb-tree to distinguish between items in the workspace and object templates
            innerBackgroundCSS = '.ocb-tree ' + selectorChild + ' > .ocb-' + object.type + '-inner-background{' + innerBackgroundCSS + '}';

            if (mobileBackgroundCSS) {
                innerBackgroundCSS += '@media (max-width:' + mobileMaxWidth + '){.ocb-tree ' + selectorChild + ' > .ocb-' + object.type + '-inner-background{' + mobileBackgroundCSS + '}}';
            }
        }

        //Do color separately because it needs to be more specific
        if (settings.color.color == 'custom') {
            var colorCSS = 'color: ' + settings.color.customColor + ' !important;';
            ['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'p', 'li'].forEach(function (tag) {
                customCSS += '.ocb-tree ' + selectorChild + ' ' + tag + '{' + colorCSS + '}';
            });
        }

        var fullCSSString = customCSS + customCSSInner + innerBackgroundCSS + extraCSS;
        var laptopBreakpoint = SettingsHelpers.getLaptopBreakpoint();
        var laptopBreakpointUnder = laptopBreakpoint - 1;
        var tabletBreakpoint = SettingsHelpers.getTabletBreakpoint();
        var tabletBreakpointUnder = tabletBreakpoint - 1;

        if (device) {
            switch (device) {
                case 'laptop':
                    if (settingsActive) {
                        customCSS = customCSS ? '.ocb-device-laptop ' + customCSS : '';
                        customCSSInner = customCSSInner ? '.ocb-device-laptop ' + customCSSInner : '';
                        fullCSSString = customCSS + customCSSInner;
                    } else {
                        fullCSSString = '@media (min-width:' + laptopBreakpoint + 'px){' + fullCSSString + '}';
                    }
                    break;
                case 'tablet':
                    if (settingsActive) {
                        customCSS = customCSS ? '.ocb-device-tablet ' + customCSS : '';
                        customCSSInner = customCSSInner ? '.ocb-device-tablet ' + customCSSInner : '';
                        fullCSSString = customCSS + customCSSInner;
                    } else {
                        fullCSSString = '@media (min-width:' + tabletBreakpoint + 'px) and (max-width:' + laptopBreakpointUnder + 'px){' + fullCSSString + '}';
                    }
                    break;
                case 'phone':
                    if (settingsActive) {
                        customCSS = customCSS ? '.ocb-device-phone ' + customCSS : '';
                        customCSSInner = customCSSInner ? '.ocb-device-phone ' + customCSSInner : '';
                        fullCSSString = customCSS + customCSSInner;
                    } else {
                        fullCSSString = '@media (max-width:' + tabletBreakpointUnder + 'px){' + fullCSSString + '}';
                    }
                    break;
            }
        }

        if (customCSS || customCSSInner) {

            if (returnType == 'style') {
                return fullCSSString;
            }

            /*return (
             <style key={ device } dangerouslySetInnerHTML={{__html: `
             ${fullCSSString}
             `}}/>
             );*/
            return SettingsHelpers.wrapCSSInStyleTag(fullCSSString, object.id, 'ocb-' + object.type + '-inner');
        } else {
            return null;
        }
    },


    /**
     * Can quickly generate classes and CSS from well-formed settings ID
     *
     * @param getIn array of style types to check against
     * @param settings
     * @param id
     * @param className
     * @param includes
     * @param style
     * @param styleHover
     * @param styleActive
     * @returns {{styleTag: *, classes: *}}
     */
    getClassesAndCSS: function getClassesAndCSS(getIn, settings, id, className) {
        var includes = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;
        var style = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : '';
        var styleHover = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : '';
        var styleActive = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : '';
        var compiledStyle = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : '';
        var options = arguments.length > 9 && arguments[9] !== undefined ? arguments[9] : {};

        if (getIn === true) {
            getIn = ['color', 'padding', 'margin', 'border', 'border-radius', 'font'];
        }

        var colorStyleObject = { style: '', styleHover: '', styleActive: '' };
        var colorClasses = '';

        var borderStyleObject = { style: '', styleHover: '', styleActive: '' };
        var borderClasses = '';

        var borderRadiusStyleObject = { style: '', styleHover: '', styleActive: '' };
        var borderRadiusClasses = '';

        var paddingStyleObject = { style: '', styleHover: '', styleActive: '' };
        var paddingClasses = '';

        var marginStyleObject = { style: '', styleHover: '', styleActive: '' };
        var marginClasses = '';

        var fontStyleObject = { style: '', styleHover: '', styleActive: '' };
        var fontClasses = '';

        var boxShadowStyleObject = { style: '', styleHover: '', styleActive: '' };
        var boxShadowClasses = '';

        var styleTag = null;

        if (getIn.includes('color')) {
            var noBorder = getIn.includes('border') ? true : false;
            var colorProperties = SettingsHelpers.getAnyPropertiesOfType('color', settings, includes, noBorder);
            colorStyleObject = SettingsHelpers.getAnyCustomColorCSS(settings, colorProperties, options);
            colorClasses = SettingsHelpers.getAnyColorClasses(settings, colorProperties);
        }

        if (getIn.includes('padding')) {
            var paddingProperties = SettingsHelpers.getAnyPropertiesOfType('padding', settings, includes);
            paddingStyleObject = SettingsHelpers.getAnyCustomPaddingCSS(settings, paddingProperties);
            paddingClasses = SettingsHelpers.getAnyPaddingClasses(settings, paddingProperties);
        }

        if (getIn.includes('margin')) {
            var marginProperties = SettingsHelpers.getAnyPropertiesOfType('margin', settings, includes);
            marginStyleObject = SettingsHelpers.getAnyCustomMarginCSS(settings, marginProperties);
            marginClasses = SettingsHelpers.getAnyMarginClasses(settings, marginProperties);
        }

        if (getIn.includes('border')) {
            var borderProperties = SettingsHelpers.getAnyPropertiesOfType('border', settings, includes);
            borderStyleObject = SettingsHelpers.getAnyCustomBorderCSS(settings, borderProperties);
            borderClasses = SettingsHelpers.getAnyBorderClasses(settings, borderProperties);
        }

        if (getIn.includes('border-radius')) {
            var borderRadiusProperties = SettingsHelpers.getAnyPropertiesOfType('border_radius', settings, includes);
            borderRadiusStyleObject = SettingsHelpers.getAnyCustomBorderRadiusCSS(settings, borderRadiusProperties);
            borderRadiusClasses = SettingsHelpers.getAnyBorderRadiusClasses(settings, borderRadiusProperties);
        }

        if (getIn.includes('font')) {
            var fontProperties = SettingsHelpers.getAnyPropertiesOfType('font', settings, includes);
            fontStyleObject = SettingsHelpers.getAnyCustomFontCSS(settings, fontProperties);
            fontClasses = SettingsHelpers.getAnyFontClasses(settings, fontProperties);
        }

        if (getIn.includes('box-shadow')) {
            var boxShadowProperties = SettingsHelpers.getAnyPropertiesOfType('box_shadow', settings, includes);
            boxShadowStyleObject = SettingsHelpers.getAnyCustomBoxShadowCSS(settings, boxShadowProperties);
            boxShadowClasses = SettingsHelpers.getAnyBoxShadowClasses(settings, boxShadowProperties);
        }

        var styleObject = {
            style: colorStyleObject.style + borderStyleObject.style + borderRadiusStyleObject.style + paddingStyleObject.style + marginStyleObject.style + fontStyleObject.style + boxShadowStyleObject.style,
            styleHover: colorStyleObject.styleHover + borderStyleObject.styleHover + borderRadiusStyleObject.styleHover + paddingStyleObject.styleHover + marginStyleObject.styleHover + fontStyleObject.styleHover + boxShadowStyleObject.styleHover,
            styleActive: colorStyleObject.styleActive + borderStyleObject.styleActive + borderRadiusStyleObject.styleActive + paddingStyleObject.styleActive + marginStyleObject.styleActive + fontStyleObject.styleActive + boxShadowStyleObject.styleActive
        };

        if (styleObject.style || style || styleObject.styleHover || styleHover || styleObject.styleActive || styleActive || compiledStyle) {
            var fullStyle = '';
            var moduleSelector = id.startsWith('skin') ? '.' + id : '#module-' + id;
            if (styleObject.style || style) {
                //Need ocb-tree to distinguish between items in the workspace and object templates
                fullStyle += '.ocb-tree ' + moduleSelector + ' ' + className + '{' + styleObject.style + style + '}';
            }
            if (styleObject.styleHover || styleHover) {
                //Need ocb-tree to distinguish between items in the workspace and object templates
                fullStyle += '.ocb-tree ' + moduleSelector + ' ' + className + ':hover{' + styleObject.styleHover + styleHover + '}';
            }
            if (styleObject.styleActive || styleActive) {
                //Need ocb-tree to distinguish between items in the workspace and object templates
                fullStyle += '.ocb-tree ' + moduleSelector + ' ' + className + '.active{' + styleObject.styleActive + styleActive + '}';
            }
            if (compiledStyle) {
                fullStyle += compiledStyle;
            }

            if (options.returnType != undefined && options.returnType == 'css') {
                styleTag = fullStyle;
            } else {
                styleTag = SettingsHelpers.wrapCSSInStyleTag(fullStyle, id, className);
            }
        } else if (options.returnType != undefined && options.returnType == 'css') {
            //make sure we're not sending back null if we want a string of css
            styleTag = '';
        }

        var classes = colorClasses + borderClasses + borderRadiusClasses + paddingClasses + marginClasses + fontClasses + boxShadowClasses;

        return { styleTag: styleTag, classes: classes };
    },

    /**
     * Will grab color classes from a bunch of settings
     *
     * @param type
     * @param settings
     * @param includes pass this in to make sure that the settings key includes this string
     * @returns {Array}
     */
    getAnyPropertiesOfType: function getAnyPropertiesOfType(type, settings) {
        var includes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
        var noBorder = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;

        var fields = [];

        for (var key in settings) {
            if (!settings.hasOwnProperty(key)) continue;
            if (includes && !key.includes(includes)) continue;

            //Don't include borderRadius, border_radius, borderradius, etc.
            if (type == 'border' && key.includes('adius')) continue;

            if (key.includes(type)) {
                if (noBorder && key.includes('border')) continue;
                fields = fields.concat(key);
            }
        }

        return fields;
    },

    /**
     * This function will generate color CSS from an array of settings and field IDs
     *
     * Note that this is a fairly brittle function in that it requires the field IDs to be formatted in a very specific way
     *
     * @param settings
     * @param fields
     * @param options
     */
    getAnyCustomColorCSS: function getAnyCustomColorCSS(settings, fields, options) {
        var style = '';
        var styleHover = '';
        var styleActive = '';

        fields.forEach(function (field) {
            if (settings[field] != undefined && settings[field].color == 'custom') {
                if (options.excludeCSS == undefined || !options.excludeCSS.includes(field)) {
                    var property = '';

                    if (field.includes('background')) {
                        property = 'background:';
                    } else if (field.includes('border_top')) {
                        property = 'border-top-color:';
                    } else if (field.includes('border_right')) {
                        property = 'border-right-color:';
                    } else if (field.includes('border_bottom')) {
                        property = 'border-bottom-color:';
                    } else if (field.includes('border_left')) {
                        property = 'border-left-color:';
                    } else if (field.includes('border')) {
                        property = 'border-color:';
                    } else {
                        property = 'color:';
                    }

                    if (field.includes('hover')) {
                        styleHover += property + settings[field].customColor + ';';
                    } else if (field.includes('active')) {
                        styleActive += property + settings[field].customColor + ';';
                    } else {
                        style += property + settings[field].customColor + ';';
                    }
                }
            }
        });

        return { style: style, styleHover: styleHover, styleActive: styleActive };
    },

    /**
     * This function will generate color CSS classes from an array of settings and field IDs
     *
     * Note that this is a fairly brittle function in that it requires the field IDs to be formatted in a very specific way
     *
     * @param settings
     * @param fields
     */
    getAnyColorClasses: function getAnyColorClasses(settings, fields) {
        var classes = '';

        fields.forEach(function (field) {
            if (settings[field].color != 'custom') {
                var property = '';
                var condition = '';

                if (field.includes('background')) {
                    property = '-background';
                } else if (field.includes('border_top')) {
                    property = '-border-top-color';
                } else if (field.includes('border_right')) {
                    property = '-border-right-color';
                } else if (field.includes('border_bottom')) {
                    property = '-border-bottom-color';
                } else if (field.includes('border_left')) {
                    property = '-border-left-color';
                } else if (field.includes('border')) {
                    property = '-border-color';
                } else {
                    property = '-color';
                }

                if (field.includes('hover')) {
                    condition = '-hover';
                } else if (field.includes('active')) {
                    condition = '-active';
                }

                classes += settings[field].color + property + condition + ' ';
            }
        });

        return classes;
    },

    /**
     * This function will generate padding CSS from an array of settings and field IDs
     *
     * Note that this is a fairly brittle function in that it requires the field IDs to be formatted in a very specific way
     *
     * @param settings
     * @param fields
     */
    getAnyCustomPaddingCSS: function getAnyCustomPaddingCSS(settings, fields) {
        var style = '';
        var styleHover = '';
        var styleActive = '';

        fields.forEach(function (field) {
            if (settings[field] != undefined) {
                if (settings[field].useDefault == 'custom') {
                    var property = 'padding:';
                    var value = settings[field].top + settings[field].units + ' ' + settings[field].right + settings[field].units + ' ' + settings[field].bottom + settings[field].units + ' ' + settings[field].left + settings[field].units;

                    if (field.includes('hover')) {
                        styleHover += property + value + ';';
                    } else if (field.includes('active')) {
                        styleActive += property + value + ';';
                    } else {
                        style += property + value + ';';
                    }
                }
            }
        });

        return { style: style, styleHover: styleHover, styleActive: styleActive };
    },

    /**
     * This function will generate padding CSS classes from an array of settings and field IDs
     *
     * Note that this is a fairly brittle function in that it requires the field IDs to be formatted in a very specific way
     *
     * @param settings
     * @param fields
     */
    getAnyPaddingClasses: function getAnyPaddingClasses(settings, fields) {
        var classes = '';

        //leave this blank for now - we may have padding classes later

        return classes;
    },

    /**
     * This function will generate margin CSS from an array of settings and field IDs
     *
     * Note that this is a fairly brittle function in that it requires the field IDs to be formatted in a very specific way
     *
     * @param settings
     * @param fields
     */
    getAnyCustomMarginCSS: function getAnyCustomMarginCSS(settings, fields) {
        var style = '';
        var styleHover = '';
        var styleActive = '';

        fields.forEach(function (field) {
            if (settings[field] != undefined) {
                if (settings[field].useDefault == 'custom') {
                    var property = 'margin:';
                    var value = settings[field].top + settings[field].units + ' ' + settings[field].right + settings[field].units + ' ' + settings[field].bottom + settings[field].units + ' ' + settings[field].left + settings[field].units;

                    if (field.includes('hover')) {
                        styleHover += property + value + ';';
                    } else if (field.includes('active')) {
                        styleActive += property + value + ';';
                    } else {
                        style += property + value + ';';
                    }
                }
            }
        });

        return { style: style, styleHover: styleHover, styleActive: styleActive };
    },

    /**
     * This function will generate margin CSS classes from an array of settings and field IDs
     *
     * Note that this is a fairly brittle function in that it requires the field IDs to be formatted in a very specific way
     *
     * @param settings
     * @param fields
     */
    getAnyMarginClasses: function getAnyMarginClasses(settings, fields) {
        var classes = '';

        //leave this blank for now - we may have margin classes later

        return classes;
    },

    /**
     * This function will generate padding CSS from an array of settings and field IDs
     *
     * Note that this is a fairly brittle function in that it requires the field IDs to be formatted in a very specific way
     *
     * @param settings
     * @param fields
     */
    getAnyCustomBorderCSS: function getAnyCustomBorderCSS(settings, fields) {
        var style = '';
        var styleHover = '';
        var styleActive = '';

        fields.forEach(function (field) {
            if (settings[field] != undefined) {
                if (settings[field].useDefault == 'custom') {
                    var borderStyle = '';
                    var borderWidth = '';
                    var borderColor = '';
                    if (settings[field].type != undefined) {
                        borderStyle = 'border-style:' + settings[field].type + ';';
                    }
                    if (settings[field].top == undefined && settings[field].right == undefined && settings[field].bottom == undefined && settings[field].left == undefined) {
                        //do nothing
                    } else {
                        borderWidth = 'border-width:' + settings[field].top + settings[field].units + ' ' + settings[field].right + settings[field].units + ' ' + settings[field].bottom + settings[field].units + ' ' + settings[field].left + settings[field].units + ';';
                    }

                    if (settings[field].color == 'custom') {
                        borderColor = 'border-color:' + settings[field].customColor + ';';
                    }

                    if (field.includes('hover')) {
                        styleHover += borderStyle + borderWidth + borderColor;
                    } else if (field.includes('active')) {
                        styleActive += borderStyle + borderWidth + borderColor;
                    } else {
                        style += borderStyle + borderWidth + borderColor;
                    }
                }
            }
        });

        return { style: style, styleHover: styleHover, styleActive: styleActive };
    },

    /**
     * This function will generate padding CSS classes from an array of settings and field IDs
     *
     * Note that this is a fairly brittle function in that it requires the field IDs to be formatted in a very specific way
     *
     * @param settings
     * @param fields
     */
    getAnyBorderClasses: function getAnyBorderClasses(settings, fields) {
        var classes = '';

        fields.forEach(function (field) {
            if (settings[field].color != 'custom' && settings[field].useDefault == 'custom') {
                var property = '-border-color';
                var condition = '';

                if (field.includes('hover')) {
                    condition = '-hover';
                } else if (field.includes('active')) {
                    condition = '-active';
                }

                classes += settings[field].color + property + condition + ' ';
            }
        });

        return classes;
    },

    /**
     * This function will generate padding CSS from an array of settings and field IDs
     *
     * Note that this is a fairly brittle function in that it requires the field IDs to be formatted in a very specific way
     *
     * @param settings
     * @param fields
     */
    getAnyCustomBorderRadiusCSS: function getAnyCustomBorderRadiusCSS(settings, fields) {
        var style = '';
        var styleHover = '';
        var styleActive = '';

        fields.forEach(function (field) {
            if (settings[field] != undefined) {
                if (settings[field].useDefault == 'custom') {
                    var styleString = 'border-radius:' + settings[field].value + settings[field].units + ';';

                    if (field.includes('hover')) {
                        styleHover += styleString;
                    } else if (field.includes('active')) {
                        styleActive += styleString;
                    } else {
                        style += styleString;
                    }
                }
            }
        });

        return { style: style, styleHover: styleHover, styleActive: styleActive };
    },

    /**
     * This function will generate padding CSS classes from an array of settings and field IDs
     *
     * Note that this is a fairly brittle function in that it requires the field IDs to be formatted in a very specific way
     *
     * @param settings
     * @param fields
     */
    getAnyBorderRadiusClasses: function getAnyBorderRadiusClasses(settings, fields) {
        var classes = '';

        return classes;
    },

    /**
     * This function will generate font CSS from an array of settings and field IDs
     *
     * Note that this is a fairly brittle function in that it requires the field IDs to be formatted in a very specific way
     *
     * @param settings
     * @param fields
     */
    getAnyCustomFontCSS: function getAnyCustomFontCSS(settings, fields) {
        var style = '';
        var styleHover = '';
        var styleActive = '';

        fields.forEach(function (field) {
            if (settings[field] != undefined) {
                if (settings[field].useDefault == 'custom') {
                    var property = '';
                    var value = '';

                    if (field.includes('font_size')) {
                        property = 'font-size:';
                        value = settings[field].value + settings[field].units;
                    }

                    if (value) {
                        if (field.includes('hover')) {
                            styleHover += property + value + ';';
                        } else if (field.includes('active')) {
                            styleActive += property + value + ';';
                        } else {
                            style += property + value + ';';
                        }
                    }
                }
            }
        });

        return { style: style, styleHover: styleHover, styleActive: styleActive };
    },

    /**
     * This function will generate font CSS classes from an array of settings and field IDs
     *
     * Note that this is a fairly brittle function in that it requires the field IDs to be formatted in a very specific way
     *
     * @param settings
     * @param fields
     */
    getAnyFontClasses: function getAnyFontClasses(settings, fields) {
        var classes = '';

        //leave this blank for now - we may have padding classes later

        return classes;
    },

    /**
     * This function will generate font CSS from an array of settings and field IDs
     *
     * Note that this is a fairly brittle function in that it requires the field IDs to be formatted in a very specific way
     *
     * @param settings
     * @param fields
     */
    getAnyCustomBoxShadowCSS: function getAnyCustomBoxShadowCSS(settings, fields) {
        var style = '';
        var styleHover = '';
        var styleActive = '';

        fields.forEach(function (field) {
            if (settings[field] != undefined) {
                if (settings[field].useDefault == 'custom') {
                    var property = 'box-shadow:';
                    var value = settings[field].horizontal + 'px ' + settings[field].vertical + 'px ' + settings[field].blur + 'px ' + settings[field].spread + 'px ' + settings[field].color;

                    if (field.includes('hover')) {
                        styleHover += property + value + ';';
                    } else if (field.includes('active')) {
                        styleActive += property + value + ';';
                    } else {
                        style += property + value + ';';
                    }
                }
            }
        });

        return { style: style, styleHover: styleHover, styleActive: styleActive };
    },

    /**
     * This function will generate font CSS classes from an array of settings and field IDs
     *
     * Note that this is a fairly brittle function in that it requires the field IDs to be formatted in a very specific way
     *
     * @param settings
     * @param fields
     */
    getAnyBoxShadowClasses: function getAnyBoxShadowClasses(settings, fields) {
        var classes = '';

        //leave this blank for now - we may have padding classes later

        return classes;
    },

    /**
     * If there isn't any featured image, we still want to return an image
     * This is especially important for structures, since they will never have a featured image,
     *  but are a great usecase for featured image backgrounds
     * @param size
     * @returns {*}
     */
    getFeaturedImageUrl: function getFeaturedImageUrl() {
        var size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'large';

        var image = OCBGlobalSettings.featuredImage[size];

        if (image == undefined || image == null || !image) {
            if (OCBGlobalSettings.featuredImageFallback != undefined && OCBGlobalSettings.featuredImageFallback) {
                image = OCBGlobalSettings.featuredImageFallback;
            } else {
                image = 'https://s3-us-west-2.amazonaws.com/s.cdpn.io/142996/slider-2.jpg';
            }
        }

        return image;
    },


    getImageURL: function getImageURL(url) {
        var image = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
        var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'src';

        if (url.startsWith('internal:')) {
            url = url.replace('internal:', OCBGlobalSettings.stockUrl);
        }
        if (image) {
            if (image.useWhich == 'featured') {
                if (type == 'src') {
                    url = SettingsHelpers.getFeaturedImageUrl(image.size);
                } else if (type == 'background') {
                    url = SettingsHelpers.getFeaturedImageUrl(image.size) + '?featured_image=' + image.size;
                }
            }
        }
        if (url.includes('http:') && OCBGlobalSettings.isSSL) {
            url = url.replace('http:', 'https:');
        }
        //Replace the stock SVG image url color with the color of the current site - NOTE: will not update on pages without first loading in builder mode
        if (url.includes('offsprout-svg.herokuapp.com') && image && image.useWhich == 'svg') {
            if (image.svgColor != 'default' && image.svgColor != 'custom' && image.svgColor != undefined) {
                var theColor = window.OffsproutSiteSettings[image.svgColor + '_color'].customColor;
                theColor = SettingsHelpers.rgb2hex(theColor);
                theColor = theColor.replace('#', '');
                url = url.replace(image.svgCustomColor, theColor);
            }
        }

        return url;
    },

    getFeaturedImageClass: function getFeaturedImageClass(image) {
        return image.useWhich == 'featured' ? 'ocb-use-featured-image' : '';
    },

    getFeaturedImageReplace: function getFeaturedImageReplace(image) {
        return '{{ocbr:featuredImage:' + image.size + '}}';
    },

    /**
     * Will get CSS for an image based on some standard options
     * 
     * @param theSettings - the settings from the module
     * @param id - the Module ID
     * @param wrapClass - the class for the div around the image
     * @param imgClass - the class on the image
     * @param options - additional options to control the return
     * @returns {*}
     */
    getImageCSS: function getImageCSS(theSettings, id, wrapClass, imgClass) {
        var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};

        var newSettings = {};
        var settings = JSON.parse(JSON.stringify(theSettings));

        for (var setting in settings) {
            if (!settings.hasOwnProperty(setting)) continue;

            var newSettingName = setting.replace('image_', '');
            newSettings[newSettingName] = settings[setting];
        }

        //Defaults - should match the defaults in the image module
        settings = (0, _deepmerge2.default)({
            image: {
                url: 'https://s3-us-west-2.amazonaws.com/s.cdpn.io/142996/slider-2.jpg', //https://cfl.dropboxstatic.com/static/images/business/homepage/screenshots/tiburon/scale-business-growth-vflR2-zZ7.png',
                object: {},
                size: 'full'
            },
            width_bleed: {
                choice: 'none'
            },
            align: {
                choice: 'left'
            },
            border: {
                useDefault: 'default',
                units: 'px',
                top: 1,
                left: 1,
                right: 1,
                bottom: 1,
                type: 'solid',
                color: 'default'
            },
            box_shadow: {
                useDefault: 'default',
                horizontal: 0,
                vertical: 0,
                blur: 20,
                spread: 5,
                color: 'rgba(151,151,151,1)'
            },
            border_radius: {
                value: 0,
                units: '%',
                useDefault: 'default'
            },
            display: {
                choice: 'normal'
            },
            max_width: {
                value: 700,
                units: 'px',
                useDefault: 'default'
            },
            size: {
                value: 250,
                units: 'px',
                useDefault: 'default'
            },
            height: {
                value: 250,
                units: 'px',
                useDefault: 'default'
            },
            width: {
                value: 250,
                units: 'px',
                useDefault: 'default'
            },
            vertical_align: {
                value: 50,
                units: '%',
                useDefault: 'default'
            },
            horizontal_align: {
                value: 50,
                units: '%',
                useDefault: 'default'
            }
        }, newSettings);

        var url = settings.image.url;
        var align = settings.align.choice;

        var additionalCSS = '';
        var additionalCSSImgProps = {};
        var additionalCSSWrapProps = {};

        if (settings.width_bleed != 'full') {

            if (settings.border_radius.useDefault == 'custom') {
                var borderRadius = settings.border_radius.value + settings.border_radius.units;
                additionalCSSImgProps.borderRadius = borderRadius;
                additionalCSSWrapProps.borderRadius = borderRadius;
            }

            if (settings.display.choice == 'normal' && settings.max_width.useDefault == 'custom') {

                additionalCSSWrapProps.maxWidth = settings.max_width.value + settings.max_width.units;
            } else if ((settings.display.choice == 'square' || settings.display.choice == 'circle') && settings.size.useDefault == 'custom') {

                var size = settings.size.value + settings.size.units;
                additionalCSSWrapProps.width = size;
                additionalCSSWrapProps.height = size;
                additionalCSSImgProps.width = size;
                additionalCSSImgProps.height = size;

                additionalCSS += SettingsHelpers.wrapCSSProperties(id, '.ocb-image-link', { width: size, height: size });
            } else if ((settings.display.choice == 'square' || settings.display.choice == 'circle') && settings.size.useDefault == 'default') {
                //This should have been added to CSS, but we changed the CSS after square images were already possible
                //And so adding it to the CSS would have screwed up square images already published
                additionalCSSImgProps.width = '250px';
            } else if (settings.display.choice == 'height') {

                var height = settings.height.value + settings.height.units;
                var width = settings.width.value + settings.width.units;
                var verticalAlign = settings.vertical_align.value + settings.vertical_align.units;
                var horizontalAlign = settings.horizontal_align.value + settings.horizontal_align.units;
                if (options.includeBackgroundImage == undefined || options.includeBackgroundImage != false) {
                    additionalCSSWrapProps.backgroundImage = 'url(' + SettingsHelpers.getImageURL(url, settings.image, 'background') + ')';
                }
                if (settings.height.useDefault == 'custom') additionalCSSWrapProps.height = height;
                if (settings.width.useDefault == 'custom') additionalCSSWrapProps.width = width;
                if (settings.vertical_align.useDefault == 'custom') additionalCSSWrapProps.backgroundPositionY = verticalAlign;
                if (settings.horizontal_align.useDefault == 'custom') additionalCSSWrapProps.backgroundPositionX = horizontalAlign;
            }

            //Translation percentage is dependent on the aspect ratio of the image so apply a formula here to center the image
            if (settings.display.choice == 'square' || settings.display.choice == 'circle') {
                if (settings.image.files != undefined && settings.image.files.height != undefined && settings.image.files.width != undefined) {
                    var fileHeight = parseInt(settings.image.files.height);
                    var fileWidth = parseInt(settings.image.files.width);
                    var translateValue = '25';
                    if (fileHeight > fileWidth) {
                        translateValue = Math.round((1 - fileWidth / fileHeight) / 2 * 100);
                        additionalCSS += SettingsHelpers.wrapCSSProperties(id, '.ocb-image-img', { transform: 'translate(0, -' + translateValue + '%)' });
                    } else if (fileWidth > fileHeight) {
                        translateValue = Math.round((1 - fileHeight / fileWidth) / 2 * 100);
                        additionalCSS += SettingsHelpers.wrapCSSProperties(id, '.ocb-image-img', { transform: 'translate(-' + translateValue + '%)' });
                    } else {
                        additionalCSS += SettingsHelpers.wrapCSSProperties(id, '.ocb-image-img', { transform: 'translate(0)' });
                    }
                }
            }

            if (settings.max_width.useDefault == 'custom' && settings.display.choice == 'normal' || settings.display.choice == 'square' || settings.display.choice == 'circle') {
                if (align == 'center') {
                    additionalCSSWrapProps.margin = '0 auto';
                } else if (align == 'right') {
                    additionalCSSWrapProps.margin = '0 0 0 auto';
                }
            }

            if (settings.display.choice == 'circle') {
                additionalCSSImgProps.borderRadius = '50%';
                additionalCSSWrapProps.borderRadius = '50%';
            }
        }

        if (settings.border.useDefault == 'custom') {
            var sB = settings.border;
            var bU = sB.units;
            additionalCSSImgProps.borderWidth = sB.top + bU + ' ' + sB.right + bU + ' ' + sB.bottom + bU + ' ' + sB.left + bU;
            additionalCSSImgProps.borderStyle = sB.type;
            additionalCSSImgProps.borderColor = sB.color;
        }

        if (settings.box_shadow.useDefault == 'custom') {
            var bS = settings.box_shadow;
            additionalCSSImgProps.boxShadow = bS.horizontal + 'px ' + bS.vertical + 'px ' + bS.blur + 'px ' + bS.spread + 'px ' + bS.color + ';';
        }

        additionalCSS += SettingsHelpers.wrapCSSProperties(id, wrapClass, additionalCSSWrapProps);
        additionalCSS += SettingsHelpers.wrapCSSProperties(id, imgClass, additionalCSSImgProps);

        if (additionalCSS && options.returnType != undefined && options.returnType == 'css') return additionalCSS;

        if (additionalCSS) return SettingsHelpers.wrapCSSInStyleTag(additionalCSS, id, wrapClass);

        return null;
    },

    getLaptopBreakpoint: function getLaptopBreakpoint() {
        return 1200;
    },

    getTabletBreakpoint: function getTabletBreakpoint() {
        return 768;
    },

    getCloneFromID: function getCloneFromID(id) {
        var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'module';
        var insideIframe = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

        var clone = void 0;
        var itemId = '#' + type + '-' + id;
        if (!insideIframe) {
            clone = jQuery('#ocb-workspace-iframe').contents().find(itemId).clone();
        } else {
            clone = jQuery(itemId).clone();
        }

        return clone;
    },

    /**
     * Will return a single Promise.all() with all of the saves
     * that can then be parsed to figure out what saved successfully
     */
    saveCurrent: function saveCurrent(stateProps) {
        var publish = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

        /*const iframe = jQuery('#ocb-workspace-iframe');
         //Save the state as meta
         //Clean the content
        let content = iframe.contents().find('#treeContent').clone();
        let pageCSS = SettingsHelpers.getPageCSS(content);
        let html = SettingsHelpers.cleanHTML(content);
        let skinsUsed = SettingsHelpers.getSkinsUsed( stateProps.treeContent );
         //Make a cleaner backup for if Offsprout is disabled
        //let cleanBackup = SettingsHelpers.makeCleanBackup(html);
        //console.log('cleanBackup', cleanBackup);
         const siteCSS = iframe.contents().find('#ocb-site-css').html();
         const siteSave = OAPI.doRequest('updateSetting', stateProps.siteState, { setting: 'ocb_site_settings' });
        const siteCSSSave = OAPI.doRequest('updateSetting', { value: siteCSS }, { setting: 'ocb_site_css' });
        const siteSkinSave = OAPI.doRequest('updateSetting', { value: stateProps.skinState }, { setting: 'ocb_site_skins' });
         const htmlSave = publish
            ? OAPI.doRequest('update', {
                status: 'publish',
                content: html
            })
            : OAPI.doRequest('update', {
                content: html
            });
         const pageCSSSave = OAPI.doRequest('updateMeta', { metaValue: pageCSS }, { metaKey: 'ocb_page_css' });
        const pageSkinSave = OAPI.doRequest('updateMeta', { metaValue: skinsUsed }, { metaKey: 'ocb_skins_used' });
        const pageSave = OAPI.doRequest('updateMeta', stateProps.treeContent, { metaKey: 'ocb_tree_content' });
         //Bundle all of the promises together into an array
        let promises = [];
        let promisesObject = {htmlSave, pageSave, pageCSSSave, pageSkinSave, siteSave, siteCSSSave, siteSkinSave};*/

        //Bundle all of the promises together into an array
        var promises = [];
        var promisesObject = {
            htmlSave: SettingsHelpers.saveCurrentHTML(stateProps, publish),
            pageSave: SettingsHelpers.saveCurrentPage(stateProps, publish),
            pageCSSSave: SettingsHelpers.saveCurrentPageCSS(stateProps, publish),
            pageSkinSave: SettingsHelpers.saveCurrentPageSkin(stateProps, publish),
            siteSave: SettingsHelpers.saveCurrentSite(stateProps, publish),
            siteCSSSave: SettingsHelpers.saveCurrentSiteCSS(stateProps, publish),
            siteSkinSave: SettingsHelpers.saveCurrentSiteSkin(stateProps, publish)
        };

        Object.keys(promisesObject).forEach(function (promise) {
            promises.push(new Promise(function (resolve, reject) {
                promisesObject[promise].then(function (result) {
                    return resolve({ id: promise, value: true, result: result });
                }).catch(function (error) {
                    return resolve({ id: promise, value: false, result: error });
                });
            }));
        });

        //Wait a second and then save a backup separately
        setTimeout(function () {
            SettingsHelpers.saveCurrentPageBackup(stateProps, publish);
        }, 1000);

        return Promise.all(promises);
    },

    saveCurrentHTML: function saveCurrentHTML(stateProps) {
        var publish = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

        var iframe = jQuery('#ocb-workspace-iframe');
        var content = iframe.contents().find('#treeContent').clone();
        var html = SettingsHelpers.cleanHTML(content);

        return publish ? _api_helpers2.default.doRequest('update', {
            status: 'publish',
            content: html
        }) : _api_helpers2.default.doRequest('update', {
            content: html
        });
    },

    saveCurrentPage: function saveCurrentPage(stateProps) {
        var publish = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

        return _api_helpers2.default.doRequest('updateMeta', stateProps.treeContent, { metaKey: 'ocb_tree_content' });
    },

    saveCurrentPageBackup: function saveCurrentPageBackup(stateProps) {
        var publish = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

        return _api_helpers2.default.doRequest('updateMeta', stateProps.treeContent, { metaKey: 'ocb_tree_content_backup' });
    },

    saveCurrentPageCSS: function saveCurrentPageCSS(stateProps) {
        var publish = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

        var iframe = jQuery('#ocb-workspace-iframe');
        var content = iframe.contents().find('#treeContent').clone();
        var pageCSS = SettingsHelpers.getPageCSS(content);
        return _api_helpers2.default.doRequest('updateMeta', { metaValue: pageCSS }, { metaKey: 'ocb_page_css' });
    },

    saveCurrentPageSkin: function saveCurrentPageSkin(stateProps) {
        var publish = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

        var skinsUsed = SettingsHelpers.getSkinsUsed(stateProps.treeContent);
        return _api_helpers2.default.doRequest('updateMeta', { metaValue: skinsUsed }, { metaKey: 'ocb_skins_used' });
    },

    saveCurrentSite: function saveCurrentSite(stateProps) {
        var publish = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

        return _api_helpers2.default.doRequest('updateSetting', stateProps.siteState, { setting: 'ocb_site_settings' });
    },

    saveCurrentSiteCSS: function saveCurrentSiteCSS(stateProps) {
        var publish = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

        var iframe = jQuery('#ocb-workspace-iframe');
        var siteCSS = iframe.contents().find('#ocb-site-css').html();
        return _api_helpers2.default.doRequest('updateSetting', { value: siteCSS }, { setting: 'ocb_site_css' });
    },

    saveCurrentSiteSkin: function saveCurrentSiteSkin(stateProps) {
        var publish = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

        return _api_helpers2.default.doRequest('updateSetting', { value: stateProps.skinState }, { setting: 'ocb_site_skins' });
    },

    getSaveResult: function getSaveResult(result) {
        var theResult = true;
        var count = 0;

        result.forEach(function (each) {
            if (!each.value) {
                theResult = false;
                count++;
            }
        });

        if (count == result.length) {
            return 'Error';
        } else if (!theResult) {
            return 'Mixed';
        } else {
            return 'Success';
        }
    },

    getSaveSummary: function getSaveSummary(result) {
        if (!result.length) return null;

        return result.map(function (each) {
            var text = '';
            var iconClass = each.value ? 'fa-check' : 'fa-remove';
            var iconResult = each.value ? 'ocb-success' : 'ocb-error';
            var saveResult = each.value ? 'Saved!' : 'Not Saved';
            var retry = false;

            switch (each.id) {
                case 'htmlSave':
                    text = 'HTML Content';
                    if (!each.value) {
                        retry = null;
                    }
                    break;
                case 'siteSave':
                    text = 'Site Settings';
                    break;
                case 'siteCSSSave':
                    text = 'Site CSS';
                    break;
                case 'siteSkinSave':
                    text = 'Site Skins';
                    break;
                case 'pageCSSSave':
                    text = 'Post CSS';
                    break;
                case 'pageSkinSave':
                    text = 'Post Skins';
                    break;
                case 'pageSave':
                    text = 'Page Builder';
                    break;
            }

            if (retry === false) {
                retry = null;
            } else {
                retry = _react2.default.createElement('div', { className: 'ocb-save-result-retry' });
            }

            return _react2.default.createElement(
                'div',
                { className: 'ocb-save-result mb-1' },
                _react2.default.createElement('i', { className: 'fa ocb-admin-step-icon ' + iconClass + ' ' + iconResult }),
                _react2.default.createElement(
                    'span',
                    null,
                    text + ' ' + saveResult + ' ' + retry
                )
            );
        });
    },

    cleanHTML: function cleanHTML(content) {
        //Clean the content
        content.find('.react-draggable').removeClass('react-draggable');
        //Make sure that menus aren't open
        content.find('.ocb-hamburger').removeClass('active');
        content.find('.ocb-menu-mobile').removeClass('mobile-active');
        //Old slider classes (Can remove if we're not using swiper)
        content.find('.swiper-no-swiping').removeClass('swiper-no-swiping');
        content.find('.ocb-menu-visible').removeClass('ocb-menu-visible');
        content.find('.ocb-has-skin').each(function () {
            var classes = jQuery(this).attr('class');
            var newClasses = classes.replace(/--- ocb-has-skin[a-zA-Z0-9-_\s]*/g, '');
            jQuery(this).attr('class', newClasses);
        });
        content.find('.ocb-module-content').each(function () {
            var shortcode = '[ocb_content_module]';
            var contentClasses = jQuery(this).attr('class').replace('ocb-module-content', '');
            jQuery(this).closest('.module-content').addClass(contentClasses);
            jQuery(this).replaceWith(shortcode);
        });
        content.find('.ocbreplace').each(function () {
            var attr = jQuery(this).attr('data-ocbreplace-attr');
            var val = jQuery(this).attr('data-ocbreplace-value');
            jQuery(this).attr(attr, val);
            jQuery(this).removeClass('ocbreplace');
            jQuery(this).removeAttr('data-ocbreplace-attr');
            jQuery(this).removeAttr('data-ocbreplace-value');
        });
        content.find('.ocb-use-featured-image').each(function () {
            var classes = jQuery(this).attr('class');
            var id = jQuery(this).attr('id');
            var alt = jQuery(this).attr('alt');
            var title = jQuery(this).attr('title');
            var src = jQuery(this).attr('src');
            var size = jQuery(this).attr('data-image-size');
            var shortcode = '[ocb_featured_image classes="' + classes + '" id="' + id + '" alt="' + alt + '" title="' + title + '" src="' + src + '" size="' + size + '"]';
            jQuery(this).replaceWith(shortcode);
        });
        content.find('.ocb-use-featured-image-swap').each(function () {
            //Swap out the src for a placeholder that's found in processing
            var src = jQuery(this).attr('src');
        });
        content.find('.ocb-lazy').each(function () {
            jQuery(this).removeAttr('src');
            if (jQuery(this).hasClass('ocb-image-custom-background')) {
                jQuery(this).removeAttr('style');
            }
            if (jQuery(this).hasClass('ocb-video-muted')) {
                jQuery(this).attr('muted', 1);
            }
            jQuery(this).find('source').each(function () {
                jQuery(this).removeAttr('src');
            });
        });
        content.find('.ocb-global').each(function () {
            var templateId = jQuery(this).data('ocb-global-id');
            var id = jQuery(this).data('ocb-id');
            var type = jQuery(this).data('ocb-type');
            var classes = '',
                stickyStart = '',
                stickyStop = '',
                stickyWidth = '',
                stickyOffset = 0,
                target = '',
                overlay = '',
                width = '';

            if (type == 'row') {
                var row = jQuery(this).find('.ocb-row').first();
                classes = row.attr('class');
                stickyStart = row.attr('data-ocb-sticky-start');
                stickyStart = stickyStart ? ' sticky_start="' + stickyStart + '"' : '';
                stickyStop = row.attr('data-ocb-sticky-stop');
                stickyStop = stickyStop ? ' sticky_stop="' + stickyStop + '"' : '';
                stickyOffset = row.attr('data-ocb-sticky-offset');
                stickyOffset = stickyOffset ? ' sticky_offset="' + stickyOffset + '"' : '';
                stickyWidth = row.attr('data-ocb-sticky-width');
                stickyWidth = stickyWidth ? ' sticky_width="' + stickyWidth + '"' : '';
                target = row.attr('data-ocb-target');
                target = target ? ' target="' + target + '"' : '';
                overlay = row.attr('data-ocb-overlay');
                overlay = overlay ? ' overlay="' + overlay + '"' : '';
            } else {
                var globalObject = content.hasClass('ocb-object') ? content : jQuery(this).find('.ocb-object').first();
                if (type == 'module') {
                    globalObject = jQuery(this).find('.ocb-module').first();
                } else if (type == 'column') {
                    globalObject = jQuery(this).find('.ocb-column').first();
                }
                classes = globalObject.attr('class');
                classes = classes.replace('ocb-module-controls-top', '');

                stickyOffset = '';
            }

            classes = classes.trim();

            if (type == 'column') {
                width = jQuery(this).css('width');
                width = ' width="' + width + '"';
            }

            var shortcode = '[ocb_global_template template_id="' + templateId + '" id="' + id + '" type="' + type + '" row_class="' + classes + '"' + stickyStart + stickyStop + stickyOffset + stickyWidth + target + overlay + width + ']';

            jQuery(this).replaceWith(shortcode);
        });
        //For forms, nav manu, blog, etc. - allows setting of classes from outside of the shortcode
        // so that the shortcode can be responsible solely for rendering content
        content.find('[data-ocb-remaining-class]').each(function () {
            var childRemainingClass = jQuery(this).data('ocb-remaining-class');
            jQuery(this).attr('class', '').addClass(childRemainingClass);
        });
        content.find('div').removeAttr('data-id').removeAttr('data-ocb-id').removeAttr('data-ocb-type').removeAttr('data-ocb-module-type').removeAttr('data-ocb-module-contains-items').removeAttr('data-ocb-depth-overall').removeAttr('data-ocb-depth-row').removeAttr('data-ocb-inline-module').removeAttr('data-ocb-depth-column').removeAttr('data-ocb-global-id');
        content.find('.ocb-replaced-shortcode').each(function () {
            var theShortcode = jQuery(this).data('shortcode');
            var theShortcodeContent = jQuery(this).attr('data-shortcode-content');
            var theShortcodeEnd = jQuery(this).attr('data-shortcode-end');
            theShortcode = theShortcode.replace('OCBREPLACED', '');
            if (theShortcodeContent) theShortcode += jQuery(this).html();
            if (theShortcodeEnd) theShortcode += theShortcodeEnd;

            jQuery(this).replaceWith(theShortcode);
        });
        content.find('.ocb-replaced-shortcode-prop').each(function () {
            var property = jQuery(this).attr('data-ocb-property');
            jQuery(this).attr(property, jQuery(this).data('shortcode'));
        });
        content.find('.ocb-replaced-embed').each(function () {
            jQuery(this).replaceWith('<p>' + jQuery(this).data('embedUrl') + '</p>');
        });
        content.find('.ocb-module-selector-group').remove();
        content.find('.ocb-image-crop-icon').remove();
        content.find('.ocb-button-text').removeAttr('contenteditable');
        content.find('div').css('touch-action', '').css('transform', '');
        content.find('.ocb-object').removeAttr('style');
        content.find('.ocb-module-hover').removeClass('ocb-module-hover');
        content.find('.ocb-module-controls-top').removeClass('ocb-module-controls-top');
        content.find('.ocb-column-hover').removeClass('ocb-column-hover');
        content.find('.ocb-row-hover').removeClass('ocb-row-hover');
        content.find('.ocb-save-remove-contents').html('').removeClass('ocb-save-remove-contents');
        content.find('.sticky-wrapper').each(function () {
            var $sticky = jQuery(this).find('.ocb-sticky');
            $sticky.css('width', '').css('max-width', '');
            jQuery(this).replaceWith(jQuery(this).html());
        });

        content.find('.ocb-page-css-style-tag').remove();
        content.find('.ocb-save-remove-element').remove();

        return content.html();
    },

    makeCleanBackup: function makeCleanBackup(content) {
        var newDiv = jQuery('<div></div>');
        jQuery(content).find('.ocb-module-inner > div:not(.module-tabs, .ocb-object)').appendTo(newDiv);
        return newDiv.html();
    },

    getPageCSS: function getPageCSS(content) {
        var global = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

        //find each page style tag, grab the CSS from that tag, and then delete them all
        var pageCSS = '';
        content.find('.ocb-page-css-style-tag').each(function (index, element) {
            //Don't add global CSS unless this is a global template being saved
            //If the content module is within a global, we still get css
            if (!global && (!jQuery(element).closest('.ocb-global').length || jQuery(element).closest('.ocb-global').find('#treeContent').length) || global) {
                //can use jQuery(element).html()) or element.innerHTML
                if (!pageCSS.includes(element.innerHTML)) {
                    var css = element.innerHTML.replaceAll('.ocb-tree ', '');
                    pageCSS += css;
                }
            }
        });

        return pageCSS;
    },

    /**
     * Gets page or object templates
     *
     * First gets internal templates
     * Then creates a Promise so that we can return those templates with results from template sites if needed
     * We try to get template sites from remote one if template remote one is set.
     * Then we try to get template sites from remote two if template remote two is set.
     *
     * We also cache these retrievals separately since they may have different cache times
     *
     * Have to do all of these steps individually instead of a Promise.all because we want to be able to retrieve templates
     *  from one remote even if retrieving from the other remote fails
     *
     * The initial request to get templates will try to get cached versions of remotes one and two and if found,
     *  won't try to retrieve those again
     *
     * @param type
     * @param options
     * @returns {Promise}
     */
    getTemplates: function getTemplates() {
        var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'page';
        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

        var templates = void 0,
            templates1 = void 0,
            templates2 = void 0;

        //Retrieve internal templates, passing in whether or not we're retrieving remote, and retrieving remote from cache if so
        if (type == 'page') {
            templates = _api_helpers2.default.doRequest('getTemplates', {
                type: 'page',
                template_remote_1: OCBGlobalSettings.remoteTemplates[0],
                template_remote_2: OCBGlobalSettings.remoteTemplates[1],
                tax_query: SettingsHelpers.getTemplateTaxQuery(0)
            });
        } else {
            templates = _api_helpers2.default.doRequest('getTemplates', {
                template_remote_1: OCBGlobalSettings.remoteTemplates[0],
                template_remote_2: OCBGlobalSettings.remoteTemplates[1],
                tax_query: SettingsHelpers.getTemplateTaxQuery(0)
            });
        }

        //If there are no cached templates and we're supposed to be retrieving them, retrieve them from remotes
        return new Promise(function (resolve, reject) {
            if (OCBGlobalSettings.useRemoteTemplates) {
                templates.then(function (result) {
                    if (!result.template_remote_1.length && OCBGlobalSettings.remoteTemplates[0] != undefined && OCBGlobalSettings.remoteTemplates[0] != false) {

                        templates1 = SettingsHelpers.getRemoteTemplates(type, 1);

                        if (!result.template_remote_2.length && OCBGlobalSettings.remoteTemplates[1] != undefined && OCBGlobalSettings.remoteTemplates[1] != false) {
                            templates1.then(function (temp1Result) {

                                //Cache the templates from remote site 1
                                SettingsHelpers.cacheRemoteTemplates(temp1Result, 0, type);

                                templates2 = SettingsHelpers.getRemoteTemplates(type, 2);

                                templates2.then(function (temp2Result) {

                                    //Cache the templates from remote site 2
                                    SettingsHelpers.cacheRemoteTemplates(temp2Result, 1, type);

                                    resolve(result.internal.concat(temp2Result).concat(temp1Result));
                                }).catch(function (temp2Error) {
                                    resolve(result.internal.concat(temp1Result));
                                });
                            }).catch(function (temp1Error) {

                                templates2 = SettingsHelpers.getRemoteTemplates(type, 2);

                                templates2.then(function (temp2Result) {

                                    //Cache the templates from remote site 2
                                    SettingsHelpers.cacheRemoteTemplates(temp2Result, 1, type);

                                    resolve(result.internal.concat(temp2Result));
                                }).catch(function (temp2Error) {
                                    resolve(result.internal);
                                });
                            });
                        } else {
                            templates1.then(function (temp1Result) {

                                //Cache the templates from remote site 1
                                SettingsHelpers.cacheRemoteTemplates(temp1Result, 0, type);

                                resolve(result.internal.concat(temp1Result));
                            }).catch(function (temp1Error) {
                                resolve(templates);
                            });
                        }
                    } else {
                        //If template site 1 is already cached

                        var _templates = result.template_remote_2;

                        if (!result.template_remote_2.length && OCBGlobalSettings.remoteTemplates[1] != undefined && OCBGlobalSettings.remoteTemplates[1] != false) {
                            _templates = SettingsHelpers.getRemoteTemplates(type, 2);

                            _templates.then(function (temp2Result) {

                                //Cache the templates from remote site 2
                                SettingsHelpers.cacheRemoteTemplates(temp2Result, 1, type);

                                resolve(result.internal.concat(temp2Result).concat(result.template_remote_1));
                            }).catch(function (temp2Error) {
                                resolve(result.internal.concat(result.template_remote_1));
                            });
                        } else {
                            resolve(result.internal.concat(result.template_remote_1).concat(result.template_remote_2));
                        }
                    }
                }).catch(function (noInternal) {
                    resolve([]);
                });
            } else {
                templates.then(function (result) {
                    resolve(result.internal);
                });
            }
        });
    },
    getTemplatePacks: function getTemplatePacks() {
        return _api_helpers2.default.doRequest('getRemoteTemplatePacks', {});
    },
    getAllTemplatesSkins: function getAllTemplatesSkins() {
        var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'page';
        var folder = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
        var pluck = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
        var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};


        var templateMem = SettingsHelpers.getTemplateMemory();

        var templatePromise = SettingsHelpers.getAllTemplatesChunk(type, folder, [], 0, templateMem, 1, options);
        var skinsPromise = SettingsHelpers.getAllTemplateSkins();

        var promises = [templatePromise, skinsPromise];

        return Promise.all(promises);
    },
    getRenamedTemplateSkins: function getRenamedTemplateSkins(skins) {
        var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

        //Prepend the name of the skins with the name of the template
        var renamedSkins = {};

        if (name == false) {
            name = window.OCBGlobalSettings.templates != undefined && window.OCBGlobalSettings.templates.theme != undefined ? window.OCBGlobalSettings.templates.theme : 'Custom';
        }

        Object.keys(skins).map(function (skinId) {
            renamedSkins[skinId] = skins[skinId];
            renamedSkins[skinId].name = name + ': ' + skins[skinId].name;
        });

        return renamedSkins;
    },


    /**
     * Easier way to retrieve all of the templates
     * The drawback of this method is that it has to wait for all of the templates to be retrieved
     *  before it can send any back.
     * Leverages the caching of getTemplateChunks
     *
     * @param type
     * @param pluck
     */
    getAllTemplates: function getAllTemplates() {
        var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'page';
        var folder = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
        var pluck = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;


        return SettingsHelpers.getAllTemplatesChunk(type, folder);
    },


    /**
     * Will retrieve all of the template skins from the remote template site
     * Will be compared to the current template skins and new skins will be added to the skins object
     * Skins will then be saved when the save button is clicked, but will not be saved if the save button isn't clicked
     */
    getAllTemplateSkins: function getAllTemplateSkins() {

        return _api_helpers2.default.doRequest('getRemoteSkins1', {});
    },


    /**
     * Recursive function that returns a promise with
     *  1) if there are more templates: the result of this function with additional templates in theTemplates
     *  2) if there are no more templates: whatever is currently in theTemplates
     *
     * @param type
     * @param folder
     * @param theTemplates
     * @param location
     * @param number
     * @param chunk
     * @returns {Promise}
     */
    getAllTemplatesChunk: function getAllTemplatesChunk(type, folder) {
        var theTemplates = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];
        var location = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;
        var number = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 10;
        var chunk = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 1;
        var options = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : {};


        //If we're getting a specific location and this is not it, just recurse
        if (options.location != undefined && options.location != location && location < 3) {
            return new Promise(function (resolve) {
                var recurse = SettingsHelpers.getAllTemplatesChunk(type, folder, theTemplates, location + 1, number, 1, options);

                //And resolve the result of it
                recurse.then(function (result) {
                    resolve(result);
                });
            });
        }

        var offset = (chunk - 1) * number;

        //Get the templates promise
        var templates = SettingsHelpers.getTemplateChunks(type, location, { number: number, offset: offset, chunk: chunk, folder: folder });

        //templates variable can return false but we always want to return a promise from this function
        if (templates == false) {
            return new Promise(function (resolve) {
                resolve(theTemplates);
            });
        }

        //Return a promise that resolves 1) with a recursion of this function or 2) with the full list of templates
        return new Promise(function (resolve) {

            var newTemplates = theTemplates;

            //See if there are templates
            templates.then(function (response) {

                //If there are templates, add them to the template list
                //As long as there are more templates, they'll keep getting added to newTemplates through recursion
                //If there are templates add them to the templates in state and then keep trying to retrieve more
                if (response.length && chunk < 50) {

                    newTemplates = newTemplates.concat(response);

                    if (response.length != number) {
                        location++;

                        //If we're going to the next location, make sure to reset chunk to 1
                        chunk = 1;
                    } else {
                        chunk++;
                    }

                    //Then run this function again
                    var recursive = SettingsHelpers.getAllTemplatesChunk(type, folder, newTemplates, location, number, chunk);

                    //And resolve the result of it
                    recursive.then(function (result) {
                        resolve(result);
                    });

                    //If there are no templates, go to the next location up to location 3, which does not exist
                } else {

                    if (location < 3) {
                        var recursive2 = SettingsHelpers.getAllTemplatesChunk(type, folder, newTemplates, location + 1, number, 1);

                        //And resolve the result of it
                        recursive2.then(function (result) {
                            resolve(result);
                        });
                    } else {
                        resolve(newTemplates);
                    }
                }
            }).catch(function (error) {

                //If there was an error or are no templates, go to the next location up to location 3, which does not exist
                if (location < 3) {
                    var recursive3 = SettingsHelpers.getAllTemplatesChunk(type, folder, newTemplates, location + 1, number, 1);

                    //And resolve the result of it
                    recursive3.then(function (result) {
                        resolve(result);
                    });
                } else {
                    resolve(newTemplates);
                }
            });
        });
    },


    /**
     * Retrieve a subset of the templates
     *
     * It would be good if when we get a 'no cache' result, we're locked into retrieving fresh templates
     * and when we get a cache result we're locked into retrieving cached templates
     *
     * @param type page/row
     * @param location internal/1/2
     * @param options
     */
    getTemplateChunks: function getTemplateChunks() {
        var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'page';

        var _this = this;

        var location = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
        var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : { number: 20, offset: 0, chunk: 1 };

        var templates = false;
        var wait = false;

        if (location > 0 && !OCBGlobalSettings.useRemoteTemplates) {
            return new Promise(function (resolve) {
                setTimeout(function () {
                    resolve([]);
                }, 50);
            });
        }

        //let taxQuery = SettingsHelpers.getTemplateTaxQuery( location );
        var taxQuery = SettingsHelpers.getTemplateTaxQuery(0);

        //Retrieve internal templates
        if (location == 0) {

            templates = _api_helpers2.default.doRequest('getTemplates', { type: type, number: options.number, offset: options.offset, tax_query: taxQuery });
        } else if (location == 1 && OCBGlobalSettings.remoteTemplates[0] != undefined && OCBGlobalSettings.remoteTemplates[0] != false || location == 2 && OCBGlobalSettings.remoteTemplates[1] != undefined && OCBGlobalSettings.remoteTemplates[1] != false) {

            //Wait for the result of the cache retrieval before returning the Promise
            wait = true;

            //try to get templates from local site's cache first
            templates = _api_helpers2.default.doRequest('getTemplates', {
                type: type,
                cache: 1,
                location: location,
                chunk: options.chunk,
                number: options.number,
                tax_query: taxQuery,
                template_remote_1: OCBGlobalSettings.remoteTemplates[0],
                template_remote_2: OCBGlobalSettings.remoteTemplates[1]
            });
        }

        //We always want to return a promise that results in an array of templates
        // but if we're retrieving remote templates, we have to wait to see if we can get them from cache
        if (wait) {
            return new Promise(function (resolve, reject) {

                templates.then(function (result) {

                    //If the result is no cache, then that means there either was never cache or the cache has expired
                    // so let's grab the templates from the template remote
                    if (result == 'no cache') {

                        templates = _this.getRemoteTemplateChunks(type, location, options);

                        templates.then(function (noCacheResult) {
                            resolve(noCacheResult);
                        }).catch(function (err) {
                            resolve([]);
                        });
                    } else {
                        resolve(result);
                    }
                }).catch(function (error) {

                    templates = _this.getRemoteTemplateChunks(type, location, options);

                    templates.then(function (errResult) {
                        resolve(errResult);
                    }).catch(function (err) {
                        resolve([]);
                    });
                });
            });
        }

        return templates;
    },
    getRemoteTemplateChunks: function getRemoteTemplateChunks() {
        var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'page';
        var location = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;
        var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : { number: 20, offset: 0, chunk: 1 };

        var templates = void 0;

        //if there's nothing in the local site's cache, do an API call
        if (type == 'page') {
            templates = _api_helpers2.default.doRequest('getRemotePageTemplates' + location, { number: options.number, offset: options.offset, tax_query: SettingsHelpers.getTemplateTaxQuery() });
        } else {
            templates = _api_helpers2.default.doRequest('getRemoteTemplates' + location, { number: options.number, offset: options.offset, tax_query: SettingsHelpers.getTemplateTaxQuery() });
        }

        //cache remote templates
        templates.then(function (result) {
            SettingsHelpers.cacheRemoteTemplates(result, location - 1, type, options);
        }).catch(function (error) {
            console.log('could not retrieve remote templates from location ' + location, error);
        });

        return templates;
    },
    getRemoteTemplates: function getRemoteTemplates(type, index) {
        var templates = void 0;

        if (type == 'page') {
            templates = _api_helpers2.default.doRequest('getRemotePageTemplates' + index, { tax_query: SettingsHelpers.getTemplateTaxQuery() });
        } else {
            templates = _api_helpers2.default.doRequest('getRemoteTemplates' + index, { tax_query: SettingsHelpers.getTemplateTaxQuery() });
        }

        return templates;
    },


    /**
     * Get a WordPress-formated tax_query to get a subset of the templates
     * @returns {*}
     */
    getTemplateTaxQuery: function getTemplateTaxQuery() {
        var location = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;

        //We probably don't want local templates to be restricted by Theme/Industry
        if (!location) return false;

        var theme = window.OffsproutSiteSettings.template_theme != undefined && window.OffsproutSiteSettings.template_theme.choice != undefined ? window.OffsproutSiteSettings.template_theme.choice : false;
        var industry = window.OffsproutSiteSettings.template_industry != undefined && window.OffsproutSiteSettings.template_industry.choice != undefined ? window.OffsproutSiteSettings.template_industry.choice : false;

        var taxQuery = theme || industry ? [] : false;

        if (theme && theme != '_all_') {
            taxQuery = taxQuery.concat({
                taxonomy: 'ocb_template_theme',
                field: 'name',
                terms: theme
            });
        }

        if (industry && industry != '_all_') {
            taxQuery = taxQuery.concat({
                taxonomy: 'ocb_template_industry',
                field: 'name',
                terms: industry
            });
        }

        return taxQuery;
    },
    cacheRemoteTemplates: function cacheRemoteTemplates(templates, remoteIndex, type) {
        var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;

        var request = {
            action: 'cacheRemoteTemplates',
            templates: templates,
            url: OCBGlobalSettings.remoteTemplates[remoteIndex],
            type: type,
            tax_query: SettingsHelpers.getTemplateTaxQuery()
        };

        if (options !== false) {
            if (options.chunk != undefined && options.chunk) {
                request.chunk = options.chunk;
            }
            if (options.number != undefined && options.number) {
                request.number = options.number;
            }
        }

        _api_helpers2.default.doRequest('runUtility', request);
    },


    /**
     * Retrieves the template memory from Site Settings
     * and uses the default memory from global in class-offsprout-builder as fallback
     * @returns {number}
     */
    getTemplateMemory: function getTemplateMemory() {

        var templateMemory = 25;

        if (parent.OffsproutSiteSettings != undefined && parent.OffsproutSiteSettings.template_memory != undefined && parent.OffsproutSiteSettings.template_memory.choice != undefined && !isNaN(parent.OffsproutSiteSettings.template_memory.choice)) {
            templateMemory = parent.OffsproutSiteSettings.template_memory.choice;
        } else if (OCBGlobalSettings.templateMemoryAuto != undefined) {
            templateMemory = OCBGlobalSettings.templateMemoryAuto;
        }

        if (templateMemory != 'max') templateMemory = parseInt(templateMemory);

        return templateMemory;
    },


    /**
     * Gets all of the different module types in the tree, removes duplicates, and checks the requirements
     *
     * @param tree
     */
    getModuleTypeRequirements: function getModuleTypeRequirements(tree) {

        var moduleTypes = SettingsHelpers.getAllModuleTypes(tree);

        //Remove duplicates
        moduleTypes = moduleTypes.filter(function (elem, pos, arr) {
            return arr.indexOf(elem) == pos;
        });

        var requirements = OffsproutFilter.apply('moduleRequirements', []);
        var requirementsList = [];

        if (requirements.length) {
            moduleTypes.forEach(function (type) {
                var requirement = requirements.find(function (requirement) {
                    return requirement.moduleTypes == type;
                });
                //If there's a requirement
                if (requirement != undefined) {
                    if (requirementsList.length && requirementsList.find(function (currentRequirement) {
                        return currentRequirement.permission == requirement.permission;
                    }) != undefined) {
                        //If we've already added the permission, we just need to add the module type
                        requirementsList = requirementsList.map(function (currentRequirement) {
                            currentRequirement.moduleTypes = currentRequirement.moduleTypes.concat(requirement.moduleTypes);
                            return currentRequirement;
                        });
                    } else {
                        //If the permission is not found
                        requirement.moduleTypes = [requirement.moduleTypes];
                        requirementsList = requirementsList.concat(requirement);
                    }
                }
            });
        }

        return requirementsList;
    },

    /**
     * Goes through the tree to get every module type, with duplicates
     *
     * @param tree
     * @returns {Array}
     */
    getAllModuleTypes: function getAllModuleTypes(tree) {
        var modules = [];

        if (tree.items != undefined && tree.items != false) {
            var _iteratorNormalCompletion = true;
            var _didIteratorError = false;
            var _iteratorError = undefined;

            try {
                for (var _iterator = tree.items[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                    var each = _step.value;

                    if (each.type != undefined && each.type == 'module') {
                        modules = modules.concat(each.moduleType);
                    }
                    if (each.items != undefined) {
                        modules = modules.concat(SettingsHelpers.getAllModuleTypes(each));
                    }
                }
            } catch (err) {
                _didIteratorError = true;
                _iteratorError = err;
            } finally {
                try {
                    if (!_iteratorNormalCompletion && _iterator.return) {
                        _iterator.return();
                    }
                } finally {
                    if (_didIteratorError) {
                        throw _iteratorError;
                    }
                }
            }
        }

        return modules;
    },

    /**
     * Taken from save_template.js
     * Saves an object template
     *
     * @param object
     * @param templateOptions
     * @param newUpdate
     * @param jQueryObject
     * @param deleteCache
     * @returns {*}
     */
    doSaveTemplate: function doSaveTemplate(object, _ref) {
        var title = _ref.title,
            folder = _ref.folder,
            theme = _ref.theme,
            industry = _ref.industry,
            templateGlobal = _ref.templateGlobal;
        var newUpdate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'update';
        var jQueryObject = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
        var deleteCache = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;

        //Make sure the object being saved as a template/global has the right designation
        var objectCopy = JSON.parse(JSON.stringify(object));
        objectCopy.template = templateGlobal;

        //Get HTML
        var content = jQueryObject ? jQueryObject : jQuery('#' + objectCopy.type + '-' + objectCopy.id).clone();

        //Get CSS
        var css = SettingsHelpers.getPageCSS(content, true);

        console.log('global css', css);

        //Strip HTML
        var html = SettingsHelpers.cleanHTML(content);

        var type = objectCopy.type;
        var moduleType = objectCopy.moduleType != undefined ? objectCopy.moduleType : false;
        var moduleGlobal = templateGlobal == 'global' ? 'yes' : 'no';
        var requirements = SettingsHelpers.getModuleTypeRequirements(objectCopy);

        //Delete the template cache global
        if (deleteCache) {
            parent.OffsproutSiteSettings.template_cache_object = false;
        }

        //Save the template
        var theTemplate = void 0;

        if (newUpdate == 'new') {
            theTemplate = _api_helpers2.default.doRequest('createCustom', {
                post_type: 'ocb_template',
                title: title,
                content: html,
                status: 'publish',
                meta: {
                    ocb_tree_content: objectCopy,
                    ocb_object_css: css,
                    ocb_template_requirements: requirements
                },
                taxonomies: {
                    ocb_template_type: type,
                    ocb_template_module_type: moduleType,
                    ocb_template_global: moduleGlobal,
                    ocb_template_folder: folder,
                    ocb_template_theme: theme,
                    ocb_template_industry: industry
                }
            });

            return theTemplate;
        } else {
            theTemplate = _api_helpers2.default.doRequest('updateCustom', {
                id: title, //should be post ID
                post: {
                    post_content: html
                },
                meta: {
                    ocb_tree_content: objectCopy,
                    ocb_object_css: css,
                    ocb_template_requirements: requirements
                },
                taxonomies: {
                    ocb_template_type: type,
                    ocb_template_module_type: moduleType,
                    ocb_template_theme: theme,
                    ocb_template_industry: industry
                }
            });

            return theTemplate;
        }
    },

    updateTemplate: function updateTemplate(object) {
        var customId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

        //Get HTML
        var content = object.type == 'module' ? jQuery('#' + object.type + '-' + object.id).closest('.ocb-object').clone() : jQuery('#' + object.type + '-' + object.id).clone();

        //Get CSS
        var css = SettingsHelpers.getPageCSS(content, true);

        //Get Skins
        var skins = SettingsHelpers.getSkinsUsed(object);

        //Strip HTML
        var html = SettingsHelpers.cleanHTML(content);

        if (!customId) {
            customId = object.templateId;
        }

        if (!customId) return false;

        //Save the template
        return _api_helpers2.default.doRequest('updateTemplate', { object: object, html: html, css: css, skins: skins }, { customId: customId });
    },

    giveAllNewIds: function giveAllNewIds(object) {
        object.id = SettingsHelpers.generateId(object.type);

        return SettingsHelpers.recursiveGiveChildrenNewIds(object);
    },

    /**
     * Used with duplicate object - make sure that the child objects all have new IDs so that there are no duplicates
     * @param object
     */
    recursiveGiveChildrenNewIds: function recursiveGiveChildrenNewIds(object) {
        if (object.items != undefined && object.items != false) {
            if (object.type == 'module' && object.moduleType == 'side_by_side' && object.items != undefined && object.items.length) {
                //object.settings.linked.modules.items[index].id was getting changed for all instances of the global because somehow the objects were linked
                // This allows us to save a global that includes side_by_side as regular when there is another instance of the same global on the page
                // May want to have this at the top and do it automatically for every EACH when we run this function
                object = JSON.parse(JSON.stringify(object));

                //foreach of those items, record the id, find corresponding items in the object's items property, and update both
                object.settings.linked.modules.items.forEach(function (module, index) {
                    var newId = SettingsHelpers.generateId('mod');
                    var oldId = module.id;
                    var itemIndex = object.items.findIndex(function (item) {
                        return item.id == oldId;
                    });
                    object.settings.linked.modules.items[index].id = newId;
                    object.items[itemIndex].id = newId;
                });

                object.id = SettingsHelpers.generateId('mod');

                if (object.templateUnique != undefined && object.templateUnique) {
                    object.templateUnique = SettingsHelpers.generateId('mod');
                }

                return object;
            }

            return _extends({}, object, { items: object.items.map(function (each) {
                    var idStart = 'mod';

                    if (each.type == 'row') {
                        idStart = 'row';
                    } else if (each.type == 'column') {
                        idStart = 'col';
                    } else if (each.type == 'container') {
                        idStart = 'cont';
                    }

                    //Add extra logic to make sure that modules that have container items have those containers line up with settings values.
                    // What was happening was that tabs settings.linked.tabs.items had IDs from the original object,
                    // but the container IDs were being replaced by _recursiveGiveChildrenNewIds, so those IDs didn't line up with the items property.
                    // Further, because settings.linked.tabs.items had the same IDs from the original object,
                    // that componentDidMount was overwriting the original tabs module's items
                    // This solution relies on using the items field type, which automatically adds
                    if (each.type == 'module' && each.containsItems && each.items != undefined && each.items.length && each.items[0].type == 'container') {
                        Object.keys(each.settings.linked).forEach(function (key) {
                            //find the key of the setting that has itemType of container
                            if (each.settings.linked[key].itemType != undefined && each.settings.linked[key].itemType == 'container' && each.settings.linked[key].items != undefined && each.settings.linked[key].items.length) {
                                //foreach of those items, record the id, find corresponding items in the object's items property, and update both
                                each.settings.linked[key].items.forEach(function (container, index) {
                                    var newId = SettingsHelpers.generateId('cont');
                                    var oldId = container.id;
                                    var itemIndex = each.items.findIndex(function (item) {
                                        return item.id == oldId;
                                    });
                                    each.settings.linked[key].items[index].id = newId;
                                    each.items[itemIndex].id = newId;
                                });
                            }
                        });
                    }

                    if (each.type == 'module' && each.moduleType == 'side_by_side' && each.items != undefined && each.items.length) {
                        //each.settings.linked.modules.items[index].id was getting changed for all instances of the global because somehow the objects were linked
                        // This allows us to save a global that includes side_by_side as regular when there is another instance of the same global on the page
                        // May want to have this at the top and do it automatically for every EACH when we run this function
                        each = JSON.parse(JSON.stringify(each));

                        //foreach of those items, record the id, find corresponding items in the object's items property, and update both
                        each.settings.linked.modules.items.forEach(function (module, index) {
                            var newId = SettingsHelpers.generateId('mod');
                            var oldId = module.id;
                            var itemIndex = each.items.findIndex(function (item) {
                                return item.id == oldId;
                            });
                            each.settings.linked.modules.items[index].id = newId;
                            each.items[itemIndex].id = newId;
                        });
                    }

                    //Because we're dealing with container objects above (in the parent module), don't replace the id here
                    if (each.type != 'container') {
                        each.id = SettingsHelpers.generateId(idStart);

                        if (each.templateUnique != undefined && each.templateUnique) {
                            each.templateUnique = SettingsHelpers.generateId(idStart);
                        }
                    }

                    //Because we're dealing with side by side above, don't do it here
                    if (each.items != undefined && each.items.length > 0 && each.moduleType != 'side_by_side') {
                        return SettingsHelpers.recursiveGiveChildrenNewIds(each);
                    }
                    return each;
                }) });
        }

        return object;
    },

    getConnectionShortcode: function getConnectionShortcode(type, key) {
        var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

        var shortcode = '[ocbconnect ' + type + ':' + key;
        if (options) {
            Object.keys(options).forEach(function (prop) {
                shortcode += ' ' + prop + '="' + options[prop] + '"';
            });
        }
        shortcode += ']';

        return shortcode;
    },

    getStandard: function getStandard(object) {
        if (object.template == undefined || object.template == false) {
            return object.standard;
        }
    },

    getSettings: function getSettings(object) {
        if (object.template == undefined || object.template == false) {
            return object.settings;
        }
    },

    getButtonStyle: function getButtonStyle(settings) {
        var style = '';
        var styleHover = '';
        var outerStyle = '';
        var outerStyleHover = '';

        if (settings.font_size != undefined && settings.font_size.useDefault == 'custom') {
            style += 'font-size:' + settings.font_size.value + settings.font_size.units + ';';
        }

        if (settings.letter_spacing != undefined && settings.letter_spacing.useDefault == 'custom') {
            style += 'letter-spacing:' + settings.letter_spacing.value + settings.letter_spacing.units + ';';
        }

        if (settings.uppercase != undefined && settings.uppercase.yes) {
            style += 'text-transform:uppercase;';
        }

        if (settings.bold != undefined && settings.bold.yes) {
            style += 'font-weight:700;';
        }

        if (settings.color != undefined && settings.color.color == 'custom') {
            style += 'color:' + settings.color.customColor + ';';
        }

        if (settings.color_hover != undefined && settings.color_hover.color == 'custom') {
            styleHover += 'color:' + settings.color_hover.customColor + ';';
        }

        if (settings.width != undefined && settings.width.useDefault == 'custom') {
            style += 'width:' + settings.width.value + settings.width.units + ';';
        }

        if (settings.padding != undefined && settings.padding.useDefault == 'custom') {
            style += 'padding:' + settings.padding.top + settings.padding.units + ' ' + settings.padding.right + settings.padding.units + ' ' + settings.padding.bottom + settings.padding.units + ' ' + settings.padding.left + settings.padding.units + ';';
        }

        if (settings.background != undefined && settings.background.color == 'custom') {
            outerStyle += 'background:' + settings.background.customColor + ';';
        }

        if (settings.background_hover != undefined && settings.background_hover.color == 'custom') {
            outerStyleHover += 'background:' + settings.background_hover.customColor + ';';
        }

        if (settings.border != undefined && settings.border.useDefault == 'custom') {
            outerStyle += 'border-top-width:' + settings.border.top + settings.border.units + ';';
            outerStyle += 'border-right-width:' + settings.border.right + settings.border.units + ';';
            outerStyle += 'border-bottom-width:' + settings.border.bottom + settings.border.units + ';';
            outerStyle += 'border-left-width:' + settings.border.left + settings.border.units + ';';
            outerStyle += 'border-style:' + settings.border.type + ';';

            if (settings.border.color == 'custom') {
                outerStyle += 'border-color:' + settings.border.customColor + ';';
            }
        }

        if (settings.border_radius != undefined && settings.border_radius.useDefault == 'custom') {
            outerStyle += 'border-radius:' + settings.border_radius.value + settings.border_radius.units + ';';
        }

        if (settings.box_shadow != undefined && settings.box_shadow.useDefault == 'custom') {
            outerStyle += 'box-shadow:' + settings.box_shadow.horizontal + 'px ' + settings.box_shadow.vertical + 'px ' + settings.box_shadow.blur + 'px ' + settings.box_shadow.spread + 'px ' + settings.box_shadow.color + ';';
        }

        return { style: style, styleHover: styleHover, outerStyle: outerStyle, outerStyleHover: outerStyleHover };
    },

    /**
     * Get the content width Site Setting
     */
    getContentWidth: function getContentWidth() {
        return window.OffsproutSiteSettings != undefined && window.OffsproutSiteSettings.content_width != undefined && window.OffsproutSiteSettings.content_width.useDefault == 'custom' ? window.OffsproutSiteSettings.content_width.value + window.OffsproutSiteSettings.content_width.units : '1000px';
    },

    getDefaultTestimonial: function getDefaultTestimonial() {
        return {};
    },

    getDefaultForm: function getDefaultForm() {
        return {
            inputs: [{
                name: 'Name',
                type: 'text',
                size: 50,
                mobileSize: 100,
                placeholder: 'Your Name',
                label: '',
                defaultValue: '',
                options: ['one', 'two', 'three'],
                required: 1,
                value: ''
            }, {
                name: 'Email',
                type: 'email',
                size: 50,
                mobileSize: 100,
                placeholder: 'Your Email',
                label: '',
                defaultValue: '',
                options: ['one', 'two', 'three'],
                required: 1,
                value: ''
            }, {
                name: 'Message',
                type: 'textarea',
                size: 100,
                mobileSize: 100,
                placeholder: 'Your Message',
                label: '',
                defaultValue: '',
                options: ['one', 'two', 'three'],
                required: 1,
                value: ''
            }],
            notifications: [{
                name: 'Admin',
                toEmail: 'youremail@yourdomain.com',
                replyToEmail: '{{Email}}',
                fromEmail: 'contact@yourdomain.com',
                fromName: '{{Name}}',
                subject: 'New Contact Form Submission from {{Name}}',
                message: '{{All}}'
            }],
            submit: {
                type: 'message',
                message: 'Thanks! We will be in touch shortly.',
                url: ''
            },
            settings: {
                title: 'Form Submission from {{Name}}',
                submitText: 'Submit'
            }

        };
    },

    getDefaultFormInput: function getDefaultFormInput() {
        return {
            name: 'Text',
            type: 'text',
            size: 100,
            mobileSize: 100,
            placeholder: 'Enter text...',
            label: '',
            defaultValue: '',
            options: ['one', 'two', 'three'],
            required: 1,
            value: ''
        };
    },

    createDefaultForm: function createDefaultForm() {
        var newForm = _api_helpers2.default.doRequest('createCustom', {
            post_type: 'ocb_form',
            title: 'New Form',
            status: 'publish',
            content: '<form class="ocb-form ocb-form-submit-message" data-message="Thanks! We will be in touch shortly." enctype="multipart/form-data" method="post"><div class="ocb-form-wrap ocb-form-wrap"><div class="ocb-form-fields"><div class="ocb-item-field ocb-item-field-text ocb-item-field-50 ocb-item-field-mobile-100 ocb-item-field-begin  ocb-item-field-begin-mobile ocb-item-field-end-mobile"><div class="ocb-item-field-field"><div class="ocb-item-field-label-above"></div><input type="text" class="ocb-form-input ocb-form-text" name="ocb_form[field][0]" placeholder="Your Name" required="" value=""><div class="ocb-item-field-label-below"></div></div><input type="hidden" name="ocb_form[name][0]" value="Name"></div><div class="ocb-item-field ocb-item-field-email ocb-item-field-50 ocb-item-field-mobile-100  ocb-item-field-end ocb-item-field-begin-mobile ocb-item-field-end-mobile"><div class="ocb-item-field-field"><div class="ocb-item-field-label-above"></div><input type="email" class="ocb-form-input ocb-form-email" name="ocb_form[field][1]" placeholder="Your Email" required="" value=""><div class="ocb-item-field-label-below"></div></div><input type="hidden" name="ocb_form[name][1]" value="Email"></div><div class="ocb-item-field ocb-item-field-textarea ocb-item-field-100 ocb-item-field-mobile-100 ocb-item-field-begin ocb-item-field-end ocb-item-field-begin-mobile ocb-item-field-end-mobile"><div class="ocb-item-field-field"><div class="ocb-item-field-label-above"></div><textarea class="ocb-form-input ocb-form-textarea" name="ocb_form[field][2]" placeholder="Your Message" required=""></textarea><div class="ocb-item-field-label-below"></div></div><input type="hidden" name="ocb_form[name][2]" value="Message"></div><input type="hidden" name="ocb_form[id]" value="708"></div><div class="ocb-form-submit"><span class="ocb-item-button-wrap "><span class="ocb-item-button  text-center text-md-center"><span class="ocb-button  d-inline-flex d-md-inline-flex justify-content-center  action-background action-background-hover default-border-color"><input type="submit" class="ocb-button-input  white-color white-color-hover" value="Submit"></span></span></span></div></div></form>',
            meta: {
                ocb_form_config: {
                    inputs: [{
                        defaultValue: '',
                        label: '',
                        mobileSize: 100,
                        name: 'Name',
                        options: ['one', 'two', 'three'],
                        placeholder: 'Your Name',
                        required: 1,
                        size: 50,
                        type: 'text',
                        value: ''
                    }, {
                        defaultValue: '',
                        label: '',
                        mobileSize: 100,
                        name: 'Email',
                        options: ['one', 'two', 'three'],
                        placeholder: 'Your Email',
                        required: 1,
                        size: 50,
                        type: 'email',
                        value: ''
                    }, {
                        defaultValue: '',
                        label: '',
                        mobileSize: 100,
                        name: 'Message',
                        options: ['one', 'two', 'three'],
                        placeholder: 'Your Message',
                        required: 1,
                        size: 100,
                        type: 'textarea',
                        value: ''
                    }],
                    notifications: [{
                        fromEmail: '',
                        fromName: '{{Name}}',
                        message: '{{All}}',
                        name: 'Admin',
                        replyToEmail: '{{Email}}',
                        subject: 'New Contact Form Submission from {{Name}}',
                        toEmail: ''
                    }],
                    settings: {
                        submitText: 'Send',
                        title: 'Form Submission from {{Name}}'
                    },
                    submit: {
                        message: 'Thanks! We will be in touch shortly.',
                        type: 'message',
                        url: ''
                    }
                }
            }
        });
    },

    saveForm: function saveForm(id, formId) {
        var formTitle = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
        var form = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;

        //Get HTML
        var content = SettingsHelpers.getCloneFromID(id);
        content = content.find('.ocb-replaced-shortcode'); //this is the direct parent of form.ocb-form

        //Strip HTML
        var html = SettingsHelpers.cleanHTML(content);

        var update = {
            id: formId,
            post: {
                post_content: html
            }
        };

        if (formTitle) {
            update.post.post_title = formTitle;
        }

        if (form) {
            update.meta = {};
            update.meta.ocb_form_config = form;
        }

        return _api_helpers2.default.doRequest('updateCustom', update);
    },

    saveNavigationMenu: function saveNavigationMenu(id, menuId) {
        var menuTitle = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
        var menu = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
        var htmlObject = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;

        var content = htmlObject;

        if (!content) {
            content = SettingsHelpers.getCloneFromID(id);
            content = content.find('.ocb-menu-replace');
        }

        //Strip HTML
        var html = SettingsHelpers.cleanHTML(content);

        var update = {
            id: menuId,
            post: {
                post_content: html
            }
        };

        if (menuTitle) {
            update.post.post_title = menuTitle;
        }

        if (menu) {
            update.meta = {};
            update.meta.ocb_menu_config = menu;
        }

        return _api_helpers2.default.doRequest('updateCustom', update);
    },

    saveStructureDefaults: function saveStructureDefaults(customId) {
        var defaults = {
            default: customId,
            archive: customId,
            post: customId,
            404: customId
        };

        return _api_helpers2.default.doRequest('updateSetting', defaults, { setting: 'ocb_structure_defaults' });
    },

    getSkinsUsed: function getSkinsUsed(tree) {
        var skinsUsed = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];

        if (tree.skinId != undefined && tree.skinId) {
            skinsUsed = skinsUsed.concat([tree.skinId]);
        }
        if (tree.items != undefined && tree.items.length) {
            tree.items.forEach(function (item) {
                skinsUsed = SettingsHelpers.getSkinsUsed(item, skinsUsed);
            });
        }

        return skinsUsed;
    }
};

exports.default = SettingsHelpers;

/***/ }),

/***/ 233:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactTinymce = __webpack_require__(80);

var _reactTinymce2 = _interopRequireDefault(_reactTinymce);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ActualTextEditor = function (_Component) {
    _inherits(ActualTextEditor, _Component);

    function ActualTextEditor() {
        _classCallCheck(this, ActualTextEditor);

        return _possibleConstructorReturn(this, (ActualTextEditor.__proto__ || Object.getPrototypeOf(ActualTextEditor)).apply(this, arguments));
    }

    _createClass(ActualTextEditor, [{
        key: 'shouldComponentUpdate',
        value: function shouldComponentUpdate() {
            return false;
        }
    }, {
        key: 'shouldStopEditing',
        value: function shouldStopEditing(e) {
            //If the connector is open, don't act on the blur
            if (jQuery(window.parent.document).find('.ocb-connector-inline').length) return;

            //If the media library is open, don't act on the blur
            var mediaModal = jQuery(window.parent.document).find('.media-modal-backdrop').closest('div');
            if (mediaModal.length && mediaModal.css('display') == 'block') return;

            var stopEditing = this.props.treeProps != undefined && this.props.treeProps.inlineEdit != undefined ? this.props.treeProps.inlineEdit.stopEditing : false;

            stopEditing();
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var options = {
                inline: true,
                menubar: false,
                statusbar: false,
                selector: 'div.ocb-module-text',
                plugins: this.props.plugins != undefined ? this.props.plugins : 'link',
                toolbar: this.props.toolbar != undefined ? this.props.toolbar : 'styleselect | bold italic strikethrough | alignleft aligncenter alignright',
                style_formats: [{ title: 'H1', block: 'h1' }, { title: 'H2', block: 'h2' }, { title: 'H3', block: 'h3' }, { title: 'H4', block: 'h4' }, { title: 'H5', block: 'h5' }, { title: 'H6', block: 'h6' }, { title: 'Paragraph', block: 'p' }, { title: 'Pre', block: 'pre' }, { title: 'Code', inline: 'code' }],
                apply_source_formatting: true,
                entity_encoding: 'named',
                entities: '169,copy,8482,trade,ndash,8212,mdash,8216,lsquo,8217,rsquo,8220,ldquo,8221,rdquo,8364,euro',
                paste_preprocess: function paste_preprocess(plugin, args) {
                    args.content = args.content.replace(new RegExp('<br />', 'g'), '');
                    args.content = args.content.replace(new RegExp('<span style="font-weight: 400;">', 'g'), '');
                    args.content = args.content.replace(new RegExp('</span>', 'g'), '');
                    args.content = args.content.replace(new RegExp(' style="font-weight: 400;"', 'g'), '');
                },
                init_instance_callback: function init_instance_callback(editor) {
                    editor.focus();
                },
                setup: this.props.setup != undefined && this.props.setup != false ? this.props.setup : null
            };

            if (this.props.editType != undefined && this.props.editType == 'headingarea') {
                options.forced_root_block = false;
                options.invalid_elements = 'div,p';
                options.extended_valid_elements = 'span[class][style]';
            }

            return _react2.default.createElement(_reactTinymce2.default, {
                content: this.props.value,
                config: options,
                onChange: function onChange(e) {
                    return _this2.props.update(e);
                },
                onBlur: function onBlur(e) {
                    return _this2.shouldStopEditing(e);
                }
            });
        }
    }]);

    return ActualTextEditor;
}(_react.Component);

exports.default = ActualTextEditor;

/***/ }),

/***/ 235:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactColor = __webpack_require__(99);

var _color_dropdown = __webpack_require__(356);

var _color_dropdown2 = _interopRequireDefault(_color_dropdown);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ColorCombined = function (_Component) {
    _inherits(ColorCombined, _Component);

    function ColorCombined(props) {
        _classCallCheck(this, ColorCombined);

        var _this = _possibleConstructorReturn(this, (ColorCombined.__proto__ || Object.getPrototypeOf(ColorCombined)).call(this, props));

        _this.state = _this.props.values;
        return _this;
    }

    _createClass(ColorCombined, [{
        key: 'update',
        value: function update(_update) {
            _update = Object.assign(this.state, _update);
            this.setState(_update);
            this.props.update(_update);
        }
    }, {
        key: 'changeCustomValue',
        value: function changeCustomValue(color, event) {
            var update = void 0;
            if (this.props.colorType != undefined && this.props.colorType == 'hex') {
                update = { customColor: color.hex };
            } else {
                update = { customColor: 'rgba(' + color.rgb.r + ',' + color.rgb.g + ',' + color.rgb.b + ',' + color.rgb.a + ')' };
            }
            this.update(update);
        }
    }, {
        key: 'changeDropdownValue',
        value: function changeDropdownValue(value) {
            var update = { color: value };
            this.update(update);
        }
    }, {
        key: 'render',
        value: function render() {
            var settings = this.state;
            var colorPicker = null;
            var dropdown = null;

            if (settings.color == 'custom' || this.props.noDropdown) {
                if (settings.customColor) {
                    colorPicker = _react2.default.createElement(_reactColor.SketchPicker, { color: settings.customColor, onChange: this.changeCustomValue.bind(this) });
                } else {
                    colorPicker = _react2.default.createElement(_reactColor.SketchPicker, { onChange: this.changeCustomValue.bind(this) });
                }
            }

            if (this.props.noDropdown == undefined || !this.props.noDropdown) {
                dropdown = _react2.default.createElement(
                    'div',
                    { className: 'mb-3' },
                    _react2.default.createElement(_color_dropdown2.default, { value: settings.color, onlyCustom: this.props.onlyCustom, withGradient: this.props.withGradient, changeFunction: this.changeDropdownValue.bind(this) })
                );
            }

            return _react2.default.createElement(
                'div',
                { className: 'ocb-sf-color-combined' },
                dropdown,
                colorPicker
            );
        }
    }]);

    return ColorCombined;
}(_react.Component);

exports.default = ColorCombined;

/***/ }),

/***/ 236:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _settings_helpers = __webpack_require__(2);

var _settings_helpers2 = _interopRequireDefault(_settings_helpers);

var _radio_toggle = __webpack_require__(18);

var _radio_toggle2 = _interopRequireDefault(_radio_toggle);

var _api_helpers = __webpack_require__(6);

var _api_helpers2 = _interopRequireDefault(_api_helpers);

var _reactMoment = __webpack_require__(166);

var _reactMoment2 = _interopRequireDefault(_reactMoment);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ConnectorScreen = function (_Component) {
    _inherits(ConnectorScreen, _Component);

    function ConnectorScreen(props) {
        _classCallCheck(this, ConnectorScreen);

        var _this = _possibleConstructorReturn(this, (ConnectorScreen.__proto__ || Object.getPrototypeOf(ConnectorScreen)).call(this, props));

        var activeFieldKey = _this.props.connection != undefined ? _this.props.connection.key : '';
        var activeFieldType = _this.props.connection != undefined ? _this.props.connection.type : '';

        var activeField = _this.getAvailableFields().find(function (field) {
            return field.key != undefined && field.key == activeFieldKey && field.type == activeFieldType;
        });

        _this.state = {
            activeField: activeField != undefined ? activeField : false,
            options: _this.props.connection != undefined && _this.props.connection.options != undefined ? _this.props.connection.options : {},
            filter: '',
            fields: [],
            type: '',
            key: '',
            taxonomies: {}
        };

        _this.insertShortcode.bind(_this);
        _this.connectField.bind(_this);
        return _this;
    }

    _createClass(ConnectorScreen, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            this.loadTaxonomies();
        }
    }, {
        key: 'componentDidUpdate',
        value: function componentDidUpdate(prevProps, prevState) {
            this.loadTaxonomies();
        }
    }, {
        key: 'loadTaxonomies',
        value: function loadTaxonomies() {
            var _this2 = this;

            if (!Object.keys(this.state.taxonomies).length && this.state.activeField && this.state.activeField.key == 'post_terms') {
                _api_helpers2.default.doRequest('getTaxonomies').then(function (result) {
                    _this2.setState({ taxonomies: result });
                }).catch(function (error) {});
            }
        }
    }, {
        key: 'getAvailableFields',
        value: function getAvailableFields() {
            var myDate = new Date();
            var dateFormats = [{
                name: 'Choose a format...',
                value: ''
            }, {
                name: _react2.default.createElement(
                    _reactMoment2.default,
                    { format: 'MM-DD-YYYY', element: 'string' },
                    myDate
                ),
                value: 'm-d-Y'
            }, {
                name: _react2.default.createElement(
                    _reactMoment2.default,
                    { format: 'MM.DD.YYYY', element: 'string' },
                    myDate
                ),
                value: 'm.d.Y'
            }, {
                name: _react2.default.createElement(
                    _reactMoment2.default,
                    { format: 'DD-MM-YYYY', element: 'string' },
                    myDate
                ),
                value: 'd-m-Y'
            }, {
                name: _react2.default.createElement(
                    _reactMoment2.default,
                    { format: 'DD.MM.YYYY', element: 'string' },
                    myDate
                ),
                value: 'd.m.Y'
            }, {
                name: _react2.default.createElement(
                    _reactMoment2.default,
                    { format: 'dddd, MMMM D, YYYY', element: 'string' },
                    myDate
                ),
                value: 'l, F j, Y'
            }, {
                name: _react2.default.createElement(
                    _reactMoment2.default,
                    { format: 'MMMM D, YYYY', element: 'string' },
                    myDate
                ),
                value: 'F j, Y'
            }, {
                name: _react2.default.createElement(
                    _reactMoment2.default,
                    { format: 'MMMM Do, YYYY', element: 'string' },
                    myDate
                ),
                value: 'F jS, Y'
            }, {
                name: _react2.default.createElement(
                    _reactMoment2.default,
                    { format: 'MMMM, YYYY', element: 'string' },
                    myDate
                ),
                value: 'F, Y'
            }, {
                name: _react2.default.createElement(
                    _reactMoment2.default,
                    { format: 'MMMM D', element: 'string' },
                    myDate
                ),
                value: 'F j'
            }, {
                name: _react2.default.createElement(
                    _reactMoment2.default,
                    { format: 'MMMM Do', element: 'string' },
                    myDate
                ),
                value: 'F jS'
            }, {
                name: _react2.default.createElement(
                    _reactMoment2.default,
                    { format: 'YYYY', element: 'string' },
                    myDate
                ),
                value: 'Y'
            }];

            return [{
                name: 'Post',
                type: 'separator'
            }, {
                name: 'Post Title',
                type: 'post',
                key: 'post_title'
            }, {
                name: 'Post Excerpt',
                type: 'post',
                key: 'post_excerpt'
            }, {
                name: 'Post Date',
                type: 'post',
                key: 'post_date',
                options: [{
                    name: 'Format',
                    key: 'format',
                    type: 'select',
                    options: dateFormats
                }]
            }, {
                name: 'Post Modified Date',
                type: 'post',
                key: 'post_modified_date',
                options: [{
                    name: 'Format',
                    key: 'format',
                    type: 'select',
                    options: dateFormats
                }]
            }, {
                name: 'Post Link',
                type: 'post',
                key: 'post_link',
                options: [{
                    name: 'Link Text',
                    key: 'text',
                    type: 'select',
                    options: [{
                        name: 'Choose the link text...',
                        value: ''
                    }, {
                        name: 'Post Title',
                        value: 'title'
                    }, {
                        name: 'Post Link',
                        value: 'link'
                    }, {
                        name: 'Custom',
                        value: 'custom'
                    }]
                }, {
                    name: 'Custom Text',
                    key: 'custom_text',
                    type: 'text'
                }]
            }, {
                name: 'Post Featured Image',
                type: 'post',
                key: 'post_featured_image',
                options: [{
                    name: 'Align',
                    key: 'align',
                    type: 'select',
                    options: [{
                        name: 'Choose what to display...',
                        value: ''
                    }, {
                        name: 'Left',
                        value: 'left'
                    }, {
                        name: 'Center',
                        value: 'center'
                    }, {
                        name: 'Right',
                        value: 'right'
                    }]
                }, {
                    name: 'display',
                    key: 'display',
                    type: 'select',
                    options: [{
                        name: 'Choose what to display...',
                        value: ''
                    }, {
                        name: 'Image',
                        value: 'image'
                    }, {
                        name: 'URL',
                        value: 'url'
                    }, {
                        name: 'Alt Text',
                        value: 'alt'
                    }, {
                        name: 'Title',
                        value: 'title'
                    }, {
                        name: 'Caption',
                        value: 'caption'
                    }, {
                        name: 'Description',
                        value: 'description'
                    }]
                }, {
                    name: 'Size',
                    key: 'size',
                    type: 'select',
                    options: [{
                        name: 'Choose what to display...',
                        value: ''
                    }, {
                        name: 'Thumbnail',
                        value: 'thumb'
                    }, {
                        name: 'Medium',
                        value: 'medium'
                    }, {
                        name: 'Medium Large',
                        value: 'mediumlarge'
                    }, {
                        name: 'Large',
                        value: 'large'
                    }, {
                        name: 'Full',
                        value: 'full'
                    }]
                }, {
                    name: 'Linked',
                    key: 'linked',
                    type: 'switch'
                }]
            }, {
                name: 'Post Terms',
                type: 'post',
                key: 'post_terms',
                options: [{
                    name: 'Taxonomy',
                    key: 'taxonomy',
                    type: 'taxonomies',
                    options: [{
                        name: 'Choose a taxonomy...',
                        value: ''
                    }, {
                        name: 'Category',
                        value: 'category'
                    }, {
                        name: 'Tags',
                        value: 'tags'
                    }]
                }, {
                    name: 'Separator',
                    key: 'separator',
                    type: 'text'
                }]
            }, {
                name: 'Post Comments Number',
                type: 'post',
                key: 'post_comments_number'
            }, {
                name: 'Post Custom Field',
                type: 'post',
                key: 'post_custom',
                options: [{
                    name: 'Field',
                    key: 'field',
                    type: 'text'
                }, {
                    name: 'Type',
                    key: 'type',
                    type: 'select',
                    options: [{
                        name: 'Custom field type...',
                        value: ''
                    }, {
                        name: 'Text',
                        value: 'text'
                    }, {
                        name: 'Link URL',
                        value: 'link'
                    }, {
                        name: 'Image URL',
                        value: 'image'
                    }]
                }, {
                    name: 'Anchor Text',
                    key: 'anchor',
                    type: 'text',
                    conditional: {
                        conditions: [{
                            key: 'type',
                            value: 'link'
                        }]
                    }
                }, {
                    name: 'Custom HTML Attributes',
                    key: 'custom_attributes',
                    type: 'text',
                    conditional: {
                        type: 'or',
                        conditions: [{
                            key: 'type',
                            value: 'link'
                        }, {
                            key: 'type',
                            value: 'image'
                        }]
                    }
                }]
            }, {
                name: 'Author',
                type: 'separator'
            }, {
                name: 'Author',
                type: 'post',
                key: 'author_name',
                options: [{
                    name: 'Show',
                    key: 'show',
                    type: 'select',
                    options: [{
                        name: 'Choose a display type...',
                        value: ''
                    }, {
                        name: 'Display Name',
                        value: 'display'
                    }, {
                        name: 'First Name',
                        value: 'first'
                    }, {
                        name: 'Last Name',
                        value: 'last'
                    }, {
                        name: 'First and Last Name',
                        value: 'firstlast'
                    }, {
                        name: 'Nickname',
                        value: 'nickname'
                    }, {
                        name: 'Username',
                        value: 'username'
                    }]
                }]
            }, {
                name: 'Author Bio',
                type: 'post',
                key: 'author_bio'
            }, {
                name: 'Author URL',
                type: 'post',
                key: 'author_url',
                options: [{
                    name: 'Type',
                    key: 'type',
                    type: 'select',
                    options: [{
                        name: 'Choose the URL...',
                        value: ''
                    }, {
                        name: 'Post Archive',
                        value: 'archive'
                    }, {
                        name: 'Author Website',
                        value: 'website'
                    }]
                }]
            }, {
                name: 'Author Image',
                type: 'post',
                key: 'author_image',
                options: [{
                    name: 'Size',
                    key: 'size',
                    type: 'number'
                }, {
                    name: 'Link',
                    key: 'link',
                    type: 'switch'
                }, {
                    name: 'Link Type',
                    key: 'link_type',
                    type: 'select',
                    options: [{
                        name: 'Choose a link type...',
                        value: ''
                    }, {
                        name: 'Post Archive',
                        value: 'archive'
                    }, {
                        name: 'Author Website',
                        value: 'website'
                    }]
                }]
            }, {
                name: 'Author Meta',
                type: 'post',
                key: 'author_meta',
                options: [{
                    name: 'Field',
                    key: 'field',
                    type: 'text'
                }]
            }, {
                name: 'Site',
                type: 'separator'
            }, {
                name: 'Site Title',
                type: 'site',
                key: 'site_title',
                options: [{
                    name: 'Link to Home',
                    key: 'linked',
                    type: 'switch'
                }]
            }, {
                name: 'Site Tagline',
                type: 'site',
                key: 'site_tagline'
            }, {
                name: 'Utility',
                type: 'separator'
            }, {
                name: 'Current Year',
                type: 'utility',
                key: 'year'
            }, {
                name: 'Current Month',
                type: 'utility',
                key: 'month',
                options: [{
                    name: 'Format',
                    key: 'format',
                    type: 'select',
                    options: [{
                        name: 'Choose a format...',
                        value: ''
                    }, {
                        name: _react2.default.createElement(
                            _reactMoment2.default,
                            { format: 'M', element: 'string' },
                            myDate
                        ),
                        value: 'n'
                    }, {
                        name: _react2.default.createElement(
                            _reactMoment2.default,
                            { format: 'MM', element: 'string' },
                            myDate
                        ),
                        value: 'm'
                    }, {
                        name: _react2.default.createElement(
                            _reactMoment2.default,
                            { format: 'MMM', element: 'string' },
                            myDate
                        ),
                        value: 'M'
                    }, {
                        name: _react2.default.createElement(
                            _reactMoment2.default,
                            { format: 'MMMM', element: 'string' },
                            myDate
                        ),
                        value: 'F'
                    }]
                }]
            }, {
                name: 'Current Day',
                type: 'utility',
                key: 'day',
                options: [{
                    name: 'Format',
                    key: 'format',
                    type: 'select',
                    options: [{
                        name: 'Choose a format...',
                        value: ''
                    }, {
                        name: _react2.default.createElement(
                            _reactMoment2.default,
                            { format: 'D', element: 'string' },
                            myDate
                        ),
                        value: 'j'
                    }, {
                        name: _react2.default.createElement(
                            _reactMoment2.default,
                            { format: 'DD', element: 'string' },
                            myDate
                        ),
                        value: 'd'
                    }, {
                        name: _react2.default.createElement(
                            _reactMoment2.default,
                            { format: 'Do', element: 'string' },
                            myDate
                        ),
                        value: 'jS'
                    }, {
                        name: _react2.default.createElement(
                            _reactMoment2.default,
                            { format: 'dddd', element: 'string' },
                            myDate
                        ),
                        value: 'l'
                    }]
                }]
            }];
        }
    }, {
        key: 'insertShortcode',
        value: function insertShortcode(field) {
            var shortcode = _settings_helpers2.default.getConnectionShortcode(field.type, field.key, this.state.options);
            this.props.editor.insertContent(shortcode);
        }
    }, {
        key: 'connectField',
        value: function connectField(field) {
            var options = this.state.options;

            if (field.options == undefined) options = {};

            //Update the field
            this.props.connectionUpdate({
                type: field.type,
                key: field.key,
                name: field.name,
                options: options
            });
        }
    }, {
        key: 'configureField',
        value: function configureField(field) {
            this.setState({ activeField: field, options: {} });
        }
    }, {
        key: 'getFieldOptions',
        value: function getFieldOptions(options) {
            var _this3 = this;

            return options.map(function (option, index) {
                if (option.conditional != undefined) {
                    var condType = 'and';
                    var conds = option.conditional.conditions != undefined ? option.conditional.conditions : [];

                    if (option.conditional.type != undefined) condType = option.conditional.type;

                    var show = null;

                    conds.forEach(function (cond) {
                        if (condType == 'and' && show === false || condType == 'or' && show === true) {
                            //we're done
                        } else {
                            show = _this3.state.options[cond.key] == cond.value;
                        }
                    });

                    if (!show) return null;
                }

                return _react2.default.createElement(
                    'div',
                    { key: index, className: 'ocb-sf-modal-field' },
                    _react2.default.createElement(
                        'div',
                        { className: 'ocb-sf-modal-field-label mt-2 mb-1' },
                        option.name
                    ),
                    _this3.getFieldOption(option)
                );
            });
        }
    }, {
        key: 'getFieldOption',
        value: function getFieldOption(option) {
            var _this4 = this;

            var theOption = null;
            var defaultValue = this.state.options[option.key] != undefined ? this.state.options[option.key] : '';

            switch (option.type) {
                case 'text':
                    theOption = _react2.default.createElement('input', { type: 'text',
                        name: option.key,
                        defaultValue: defaultValue,
                        onChange: function onChange(e) {
                            return _this4.updateFieldOption(option.key, e.target.value);
                        } });
                    break;
                case 'number':
                    theOption = _react2.default.createElement('input', { type: 'number',
                        name: option.key,
                        defaultValue: defaultValue,
                        onChange: function onChange(e) {
                            return _this4.updateFieldOption(option.key, e.target.value);
                        } });
                    break;
                case 'select':
                    theOption = _react2.default.createElement(
                        'select',
                        { name: option.key,
                            defaultValue: defaultValue,
                            onChange: function onChange(e) {
                                return _this4.updateFieldOption(option.key, e.target.value);
                            } },
                        option.options.map(function (item, key) {
                            return _react2.default.createElement(
                                'option',
                                { key: key, value: item.value },
                                item.name
                            );
                        })
                    );
                    break;
                case 'taxonomies':
                    theOption = _react2.default.createElement(
                        'select',
                        { name: option.key,
                            defaultValue: defaultValue,
                            onChange: function onChange(e) {
                                return _this4.updateFieldOption(option.key, e.target.value);
                            } },
                        Object.keys(this.state.taxonomies).length ? Object.keys(this.state.taxonomies).map(function (tax, index) {
                            return _react2.default.createElement(
                                'option',
                                { key: index, value: _this4.state.taxonomies[tax].slug },
                                _this4.state.taxonomies[tax].name
                            );
                        }) : option.options.map(function (item, key) {
                            return _react2.default.createElement(
                                'option',
                                { key: key, value: item.value },
                                item.name
                            );
                        })
                    );
                    break;
                case 'switch':
                    theOption = _react2.default.createElement(_radio_toggle2.default, { update: function update(value) {
                            return _this4.updateFieldOption(option.key, value);
                        }, items: [{ name: 'No', value: 0 }, { name: 'Yes', value: 1 }], value: defaultValue, flex: true });
                    break;
            }

            return theOption;
        }
    }, {
        key: 'updateFieldOption',
        value: function updateFieldOption(key, value) {
            this.setState({
                options: _extends({}, this.state.options, _defineProperty({}, key, value))
            });
        }
    }, {
        key: 'closeConnector',
        value: function closeConnector() {
            this.setState({ activeField: false });
        }
    }, {
        key: 'render',
        value: function render() {
            var _this5 = this;

            var fields = OffsproutFilter.apply('connectorFields', this.getAvailableFields());
            var theScreen = null;
            var searchBox = null;

            if (this.state.activeField) {

                var insertButton = null;
                var connectButton = null;

                if (this.props.noInsert == undefined || !this.props.noInsert) {
                    insertButton = _react2.default.createElement(
                        'div',
                        { className: 'ocb-sf-button ocb-sf-button-regular', onClick: function onClick() {
                                return _this5.insertShortcode(_this5.state.activeField);
                            } },
                        'Insert'
                    );
                }

                if (this.props.noConnect == undefined || !this.props.noConnect) {
                    connectButton = _react2.default.createElement(
                        'div',
                        { className: 'ocb-sf-button ocb-sf-button-regular ml-1', onClick: function onClick() {
                                return _this5.connectField(_this5.state.activeField);
                            } },
                        'Connect'
                    );
                }

                //activeField will always have options set - otherwise it is immediately inserted as a shortcode or connection
                theScreen = _react2.default.createElement(
                    'div',
                    null,
                    this.getFieldOptions(this.state.activeField.options),
                    _react2.default.createElement(
                        'div',
                        { className: 'mt-3 d-flex' },
                        insertButton,
                        connectButton
                    )
                );

                searchBox = _react2.default.createElement(
                    'div',
                    { className: 'ocb-sf-modal-back', onClick: function onClick() {
                            return _this5.closeConnector();
                        } },
                    _react2.default.createElement('i', { className: 'fa fa-chevron-left mr-2' }),
                    ' Back'
                );
            } else {

                theScreen = fields.map(function (field, index) {
                    if (_this5.state.filter && !field.name.toLowerCase().includes(_this5.state.filter.toLowerCase())) return null;

                    if (field.type == 'separator') {
                        return _react2.default.createElement(
                            'div',
                            { key: index, className: 'ocb-sf-connector-wrap ocb-sf-row' },
                            _react2.default.createElement(
                                'div',
                                { className: 'ocb-sf-connector-separator' },
                                field.name
                            )
                        );
                    }

                    var insertButton = null;
                    var connectButton = null;

                    if (_this5.props.noInsert == undefined || !_this5.props.noInsert) {
                        insertButton = _react2.default.createElement(
                            'div',
                            { className: 'ocb-sf-button ocb-sf-button-regular', onClick: function onClick() {
                                    return _this5.insertShortcode(field);
                                } },
                            'Insert'
                        );
                    }

                    if (_this5.props.noConnect == undefined || !_this5.props.noConnect) {
                        connectButton = _react2.default.createElement(
                            'div',
                            { className: 'ocb-sf-button ocb-sf-button-regular ml-1', onClick: function onClick() {
                                    return _this5.connectField(field);
                                } },
                            'Connect'
                        );
                    }

                    var buttons = _react2.default.createElement(
                        'div',
                        { className: 'ocb-sf-row-50 d-flex' },
                        insertButton,
                        connectButton
                    );

                    if (field.options != undefined) {
                        buttons = _react2.default.createElement(
                            'div',
                            { className: 'ocb-sf-row-50 d-flex' },
                            _react2.default.createElement(
                                'div',
                                { className: 'ocb-sf-button ocb-sf-button-regular', onClick: function onClick() {
                                        return _this5.configureField(field);
                                    } },
                                'Configure'
                            )
                        );
                    }

                    return _react2.default.createElement(
                        'div',
                        { key: index, className: 'ocb-sf-connector-wrap ocb-sf-row' },
                        _react2.default.createElement(
                            'div',
                            { className: 'ocb-sf-row-50' },
                            field.name
                        ),
                        buttons
                    );
                });

                searchBox = _react2.default.createElement(
                    'div',
                    { className: 'ocb-sf-modal-search' },
                    _react2.default.createElement('input', { ref: 'modal_search', placeholder: 'search for a field...', onChange: function onChange(e) {
                            return _this5.setState({ filter: e.target.value });
                        } })
                );
            }

            return _react2.default.createElement(
                'div',
                { className: 'ocb-sf-modal ocb-sf-modal-small ' + window.OffsproutEffect },
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-sf-modal-heading' },
                    _react2.default.createElement('i', { className: 'fa fa-remove', onClick: function onClick() {
                            return _this5.props.close();
                        } })
                ),
                searchBox,
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-sf-modal-body' },
                    theScreen
                )
            );
        }
    }]);

    return ConnectorScreen;
}(_react.Component);

exports.default = ConnectorScreen;

/***/ }),

/***/ 237:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var UseDefault = function (_Component) {
    _inherits(UseDefault, _Component);

    function UseDefault(props) {
        _classCallCheck(this, UseDefault);

        var _this = _possibleConstructorReturn(this, (UseDefault.__proto__ || Object.getPrototypeOf(UseDefault)).call(this, props));

        _this.state = { useDefault: _this.props.useDefault };
        return _this;
    }

    _createClass(UseDefault, [{
        key: 'changeDefault',
        value: function changeDefault(useDefault) {
            this.setState({ useDefault: useDefault });
            this.props.update({ useDefault: useDefault });
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var baseRadioClass = 'ocb-sf-radio';
            var defaultRadioClass = this.state.useDefault == 'default' ? baseRadioClass + ' active' : baseRadioClass;
            var customRadioClass = this.state.useDefault == 'custom' ? baseRadioClass + ' active' : baseRadioClass;

            return _react2.default.createElement(
                'div',
                { className: 'ocb-sf-radio-group' },
                _react2.default.createElement(
                    'div',
                    { className: defaultRadioClass, onClick: function onClick() {
                            return _this2.changeDefault('default');
                        } },
                    _react2.default.createElement('i', { className: 'fa fa-remove' })
                ),
                _react2.default.createElement(
                    'div',
                    { className: customRadioClass, onClick: function onClick() {
                            return _this2.changeDefault('custom');
                        } },
                    _react2.default.createElement('i', { className: 'fa fa-check' })
                )
            );
        }
    }]);

    return UseDefault;
}(_react.Component);

exports.default = UseDefault;

/***/ }),

/***/ 238:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactRedux = __webpack_require__(5);

var _redux = __webpack_require__(7);

var _index = __webpack_require__(8);

var _menu_item = __webpack_require__(238);

var _menu_item2 = _interopRequireDefault(_menu_item);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var MainMenu = function (_Component) {
    _inherits(MainMenu, _Component);

    function MainMenu() {
        _classCallCheck(this, MainMenu);

        return _possibleConstructorReturn(this, (MainMenu.__proto__ || Object.getPrototypeOf(MainMenu)).apply(this, arguments));
    }

    _createClass(MainMenu, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var menuOpen = function menuOpen() {
                return _this2.props.menuOpen(_this2.props.item);
            };

            if (this.props.which == 'sub') {
                menuOpen = function menuOpen() {
                    return _this2.props.menuOpen(_this2.props.topItem, _this2.props.item);
                };
            }

            var icon = _react2.default.createElement('i', { className: 'fa fa-chevron-right pull-right' });
            var title = _react2.default.createElement(
                'span',
                { className: 'ocb-admin-menu-item-title' },
                this.props.item.title
            );

            var titleRow = _react2.default.createElement(
                'span',
                null,
                title,
                icon
            );

            if (this.props.item.link != undefined) {
                menuOpen = null;
                icon = _react2.default.createElement('i', { className: 'fa fa-external-link pull-right' });
                titleRow = _react2.default.createElement(
                    'a',
                    { href: this.props.item.link, target: '_blank' },
                    title,
                    icon
                );
            }

            return _react2.default.createElement(
                'div',
                {
                    className: 'ocb-admin-menu-item ocb-admin-menu-' + this.props.which + '-item ocb-admin-menu-' + this.props.which + '-' + this.props.item.id + ' ' + this.props.active,
                    onClick: menuOpen
                },
                titleRow
            );
        }
    }]);

    return MainMenu;
}(_react.Component);

function mapStateToProps(_ref) {
    var menuState = _ref.menuState;

    return { menuState: menuState };
}
function mapDispatchToProps(dispatch) {
    return (0, _redux.bindActionCreators)({ menuOpen: _index.menuOpen }, dispatch);
}
exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(MainMenu);

/***/ }),

/***/ 24:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _tree = __webpack_require__(82);

var _tree2 = _interopRequireDefault(_tree);

var _reactRedux = __webpack_require__(5);

var _redux = __webpack_require__(7);

var _api_helpers = __webpack_require__(6);

var _api_helpers2 = _interopRequireDefault(_api_helpers);

var _settings_helpers = __webpack_require__(2);

var _settings_helpers2 = _interopRequireDefault(_settings_helpers);

var _index = __webpack_require__(8);

var _deepmerge = __webpack_require__(9);

var _deepmerge2 = _interopRequireDefault(_deepmerge);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

//https://github.com/KyleAMathews/deepmerge
var SiteOptionsRender = function (_Component) {
    _inherits(SiteOptionsRender, _Component);

    function SiteOptionsRender(props) {
        _classCallCheck(this, SiteOptionsRender);

        var _this = _possibleConstructorReturn(this, (SiteOptionsRender.__proto__ || Object.getPrototypeOf(SiteOptionsRender)).call(this, props));

        _this.state = {};
        return _this;
    }

    _createClass(SiteOptionsRender, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _this2 = this;

            if (this.props.siteState.defaultUsed) {
                var contentFromAPIPromise = _api_helpers2.default.doRequest('getSetting', false, { setting: 'ocb_site_settings' });
                contentFromAPIPromise.then(function (response, error) {
                    _this2.props.updateSiteStateFromAPI(response);
                });
            }
        }
    }, {
        key: 'buildButtonStyle',
        value: function buildButtonStyle(siteSettings, settings) {
            var style = '';
            var styleHover = '';
            var inputStyle = '';
            var inputStyleHover = '';
            var defaults = OffsproutFieldMixinRegistry.find(function (mixin) {
                return mixin.id == 'button';
            }).defaults;

            settings = (0, _deepmerge2.default)(defaults, settings);

            if (settings.font_size.useDefault == 'custom') {
                style += 'font-size:' + settings.font_size.value + settings.font_size.units + ';';
            }

            if (settings.letter_spacing.useDefault == 'custom') {
                style += 'letter-spacing:' + settings.letter_spacing.value + settings.letter_spacing.units + ';';
            }

            if (settings.uppercase.yes) {
                style += 'text-transform:uppercase;';
            }

            if (settings.bold.yes) {
                style += 'font-weight:700;';
            }

            if (settings.padding.useDefault == 'custom') {
                style += 'padding:' + settings.padding.top + settings.padding.units + ' ' + settings.padding.right + settings.padding.units + ' ' + settings.padding.bottom + settings.padding.units + ' ' + settings.padding.left + settings.padding.units + ';';
            }

            //We want to grab the actual color from the site settings if color is set to something like "primary"
            if (settings.color.color == 'custom') {
                style += 'color:' + settings.color.customColor + ';';
            } else {
                style += 'color:' + siteSettings[settings.color.color + '_color'].customColor + ';';
            }

            if (settings.color_hover.color == 'custom') {
                styleHover += 'color:' + settings.color_hover.customColor + ';';
            } else {
                styleHover += 'color:' + siteSettings[settings.color_hover.color + '_color'].customColor + ';';
            }

            inputStyle = style;
            inputStyleHover = styleHover;

            if (settings.background.color == 'custom') {
                style += 'background:' + settings.background.customColor + ';';
            } else {
                style += 'background:' + siteSettings[settings.background.color + '_color'].customColor + ';';
            }

            if (settings.background_hover.color == 'custom') {
                styleHover += 'background:' + settings.background_hover.customColor + ';';
            } else {
                styleHover += 'background:' + siteSettings[settings.background_hover.color + '_color'].customColor + ';';
            }

            if (settings.border.useDefault == 'custom') {
                style += 'border-top-width:' + settings.border.top + settings.border.units + ';';
                style += 'border-right-width:' + settings.border.right + settings.border.units + ';';
                style += 'border-bottom-width:' + settings.border.bottom + settings.border.units + ';';
                style += 'border-left-width:' + settings.border.left + settings.border.units + ';';
                style += 'border-style:' + settings.border.type + ';';

                if (settings.border.color == 'custom') {
                    style += 'border-color:' + settings.border.customColor + ';';
                } else {
                    style += 'border-color:' + siteSettings[settings.border.color + '_color'].customColor + ';';
                }
            }

            if (settings.border_radius.useDefault == 'custom') {
                style += 'border-radius:' + settings.border_radius.value + settings.border_radius.units + ';';
            }

            if (settings.box_shadow.useDefault == 'custom') {
                style += 'box-shadow:' + settings.box_shadow.horizontal + 'px ' + settings.box_shadow.vertical + 'px ' + settings.box_shadow.blur + 'px ' + settings.box_shadow.spread + 'px ' + settings.box_shadow.color + ';';
            }

            return { style: style, styleHover: styleHover, inputStyle: inputStyle, inputStyleHover: inputStyleHover };
        }
    }, {
        key: 'buildCommentsStyle',
        value: function buildCommentsStyle(siteSettings) {

            var style = '';
            var allStyle = '';
            var nameStyle = '';
            var imageStyle = '';

            if (siteSettings.comment_border_radius.useDefault == 'custom') {
                allStyle += 'border-radius:' + siteSettings.comment_border_radius.value + siteSettings.comment_border_radius.units + ';';
            }

            if (siteSettings.comment_box_shadow.useDefault == 'custom') {
                allStyle += 'box-shadow:' + siteSettings.comment_box_shadow.horizontal + 'px ' + siteSettings.comment_box_shadow.vertical + 'px ' + siteSettings.comment_box_shadow.blur + 'px ' + siteSettings.comment_box_shadow.spread + 'px ' + siteSettings.comment_box_shadow.color + ';';
            }

            if (siteSettings.comment_name_font_size.useDefault == 'custom') {
                nameStyle += 'font-size:' + siteSettings.comment_name_font_size.value + siteSettings.comment_name_font_size.units + ';';
            }

            if (siteSettings.comment_image_border_radius.useDefault == 'custom') {
                imageStyle += 'border-radius:' + siteSettings.comment_image_border_radius.value + siteSettings.comment_image_border_radius.units + ';';
            }

            var buttonObject = this.buildButtonObjectWithPrefix(siteSettings, 'comment_button_');
            var buttonStyle = this.buildButtonStyle(siteSettings, buttonObject);

            ['top', 'second', 'other', 'author'].forEach(function (each) {
                var thisStyle = '';
                var thisNameStyle = '';

                if (siteSettings['comment_' + each + '_text_color'].color == 'custom') {
                    thisStyle += 'color:' + siteSettings['comment_' + each + '_text_color'].customColor + ';';
                } else if (siteSettings['comment_' + each + '_text_color'].color != 'default') {
                    thisStyle += 'color:' + siteSettings[siteSettings['comment_' + each + '_text_color'].color + '_color'].customColor + ';';
                }
                if (siteSettings['comment_' + each + '_name_text_color'].color == 'custom') {
                    thisNameStyle += 'color:' + siteSettings['comment_' + each + '_name_text_color'].customColor + ';';
                } else if (siteSettings['comment_' + each + '_name_text_color'].color != 'default') {
                    thisNameStyle += 'color:' + siteSettings[siteSettings['comment_' + each + '_name_text_color'].color + '_color'].customColor + ';';
                }
                if (siteSettings['comment_' + each + '_background_color'].color == 'custom') {
                    thisStyle += 'background:' + siteSettings['comment_' + each + '_background_color'].customColor + ';';
                } else if (siteSettings['comment_' + each + '_background_color'].color != 'default') {
                    thisStyle += 'background:' + siteSettings[siteSettings['comment_' + each + '_background_color'].color + '_color'].customColor + ';';
                }
                if (each != 'author' && siteSettings['comment_' + each + '_border'].useDefault == 'custom') {
                    thisStyle += 'border-top-width:' + siteSettings['comment_' + each + '_border'].top + siteSettings['comment_' + each + '_border'].units + ';';
                    thisStyle += 'border-right-width:' + siteSettings['comment_' + each + '_border'].right + siteSettings['comment_' + each + '_border'].units + ';';
                    thisStyle += 'border-bottom-width:' + siteSettings['comment_' + each + '_border'].bottom + siteSettings['comment_' + each + '_border'].units + ';';
                    thisStyle += 'border-left-width:' + siteSettings['comment_' + each + '_border'].left + siteSettings['comment_' + each + '_border'].units + ';';
                    thisStyle += 'border-style:' + siteSettings['comment_' + each + '_border'].type + ';';

                    if (siteSettings['comment_' + each + '_border'].color == 'custom') {
                        thisStyle += 'border-color:' + siteSettings['comment_' + each + '_border'].customColor + ';';
                    } else if (siteSettings['comment_' + each + '_border'].color != 'default') {
                        thisStyle += 'border-color:' + siteSettings[siteSettings['comment_' + each + '_border'].color + '_color'].customColor + ';';
                    }
                }
                if (each == 'author' && siteSettings.comment_author_top_strip.color == 'custom') {
                    style += '#comments .bypostauthor:after{background:' + siteSettings.comment_author_top_strip.customColor + ';}';
                } else if (each == 'author' && siteSettings.comment_author_top_strip.color != 'default') {
                    style += '#comments .bypostauthor:after{background:' + siteSettings[siteSettings.comment_author_top_strip.color + '_color'].customColor + ';}';
                }

                switch (each) {
                    case 'top':
                        if (thisStyle) style += '#comments .depth-1{' + thisStyle + '}';
                        if (thisNameStyle) style += '#comments .depth-1 .comment-author .url{' + thisNameStyle + '}';
                        break;
                    case 'second':
                        if (thisStyle) style += '#comments .depth-2{' + thisStyle + '}';
                        if (thisNameStyle) style += '#comments .depth-2 .comment-author .url{' + thisNameStyle + '}';
                        break;
                    case 'other':
                        if (thisStyle) style += '#comments .depth-3 .comment-body, #comments .depth-4 .comment-body, #comments .depth-5 .comment-body, #comments .depth-6 .comment-body, #comments .depth-7 .comment-body{' + thisStyle + '}';
                        if (thisNameStyle) style += '#comments .depth-3 .comment-author .url, #comments .depth-4 .comment-author .url, #comments .depth-5 .comment-author .url, #comments .depth-6 .comment-author .url, #comments .depth-7 .comment-author .url{' + thisNameStyle + '}';
                        break;
                    case 'author':
                        if (thisStyle) style += '#comments .depth-1.bypostauthor, #comments .depth-2.bypostauthor, #comments .depth-3.bypostauthor .comment-body, #comments .depth-4.bypostauthor .comment-body, #comments .depth-5.bypostauthor .comment-body, #comments .depth-6.bypostauthor .comment-body, #comments .depth-7.bypostauthor .comment-body{' + thisStyle + '}';
                        if (thisNameStyle) style += '#comments .bypostauthor .comment-author .url{' + thisNameStyle + '}';
                        break;
                }
            });

            if (imageStyle) style += '#comments .avatar{' + imageStyle + '}';
            if (nameStyle) style += '#comments .comment-author{' + nameStyle + '}';
            if (allStyle) style += '#comments .comment.depth-1, #comments .comment.depth-2, #comments .depth-3 .comment-body, #comments .depth-4 .comment-body, #comments .depth-5 .comment-body, #comments .depth-6 .comment-body, #comments .depth-7 .comment-body{' + allStyle + '}';
            if (buttonStyle) style += '#comments .submit{' + buttonStyle.style + '}';
            if (buttonStyle) style += '#comments .submit:hover{' + buttonStyle.styleHover + '}';

            return style;
        }
    }, {
        key: 'buildCommentStyle',
        value: function buildCommentStyle(siteSettings, which) {}
    }, {
        key: 'rowGetGradientDirection',
        value: function rowGetGradientDirection(direction) {
            switch (direction) {
                case 'vertical':
                    return 'to bottom';
                    break;
                case 'horizontal':
                    return 'to right';
                    break;
                case 'diag_up':
                    return '45deg';
                    break;
                case 'diag_down':
                    return '135deg';
                    break;
                case 'radial':
                    return 'ellipse at center';
                    break;
            }

            return false;
        }
    }, {
        key: 'rowGetGradient2',
        value: function rowGetGradient2(settings) {
            var screen = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
            var opacity = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

            var screenAdd = '';

            if (screen) {
                screenAdd = '_screen';
            }

            var gradient1 = settings['gradient_1' + screenAdd].customColor;
            var gradient2 = settings['gradient_2' + screenAdd].customColor;
            var gradientDirection = this.rowGetGradientDirection(settings.gradient_angle.choice);
            var gradientType = 'linear-gradient';

            if (gradientDirection == 'ellipse at center') {
                gradientType = 'radial-gradient';
            }

            var css = 'background:' + gradientType + '(' + gradientDirection + ', ' + gradient1 + ' 0%, ' + gradient2 + ' 100%);';

            if (opacity !== false) {
                css += 'opacity:' + opacity + ';';
            }
            return css;
        }
    }, {
        key: 'rowGetGradient3',
        value: function rowGetGradient3(settings) {
            var screen = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
            var opacity = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

            var screenAdd = '';

            if (screen) {
                screenAdd = '_screen';
            }

            var gradient1 = settings['gradient_1' + screenAdd].customColor;
            var gradient2 = settings['gradient_2' + screenAdd].customColor;
            var gradient3 = settings['gradient_3' + screenAdd].customColor;
            var gradientDirection = this.rowGetGradientDirection(settings.gradient_angle.choice);
            var gradientType = 'linear-gradient';

            if (gradientDirection == 'ellipse at center') {
                gradientType = 'radial-gradient';
            }

            var css = 'background:' + gradientType + '(' + gradientDirection + ', ' + gradient1 + ' 0%, ' + gradient2 + ' 50%, ' + gradient3 + ' 100%);';

            if (opacity !== false) {
                css += 'opacity:' + opacity + ';';
            }
            return css;
        }
    }, {
        key: 'rowGetImage',
        value: function rowGetImage(settings) {
            var imageUrl = _settings_helpers2.default.getImageURL(settings.background_image.url);
            var css = 'background-image:url(' + imageUrl + ');background-repeat:no-repeat;background-size:cover;background-position:' + settings.background_image_vertical.choice + ' ' + settings.background_image_horizontal.choice + ';';

            if (settings.background_parallax.choice == 'fixed') {
                css += 'background-attachment:fixed;';
            }

            return css;
        }
    }, {
        key: 'rowGetColor',
        value: function rowGetColor(siteSettings, settings) {
            var screen = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
            var opacity = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;

            var screenAdd = '';

            if (screen) {
                screenAdd = '_screen';
            }

            var style = {};
            var css = '';

            if (settings['background' + screenAdd].color == 'custom') {
                css += 'background-color:' + settings['background' + screenAdd].customColor + ';';
            } else if (settings['background' + screenAdd].color != 'default' && settings['background' + screenAdd].color != 'none') {
                css += 'background-color:' + siteSettings[settings['background' + screenAdd].color + '_color'].customColor + ';';
            }

            if (opacity !== false) {
                css += 'opacity:' + opacity + ';';
            }

            return css;
        }
    }, {
        key: 'buildRowStyle',
        value: function buildRowStyle(siteSettings, settings) {
            var customCSS = '';
            var customCSSInner = '';
            var colorCSS = '';

            var defaults = OffsproutFieldMixinRegistry.find(function (mixin) {
                return mixin.id == 'row';
            }).defaults;

            settings = (0, _deepmerge2.default)(defaults, settings);

            if (settings.background.color == 'custom') {
                customCSS += 'background: ' + settings.background.customColor + ';';
            } else if (settings.background.color != 'default') {
                customCSS += 'background:' + siteSettings[settings.background.color + '_color'].customColor + ';';
            }
            if (settings.color.color == 'custom') {
                colorCSS = 'color: ' + settings.color.customColor + ' !important;';
                customCSS += colorCSS;
            } else if (settings.color.color != 'default') {
                colorCSS = 'color:' + siteSettings[settings.color.color + '_color'].customColor + ' !important;';
                customCSS += colorCSS;
            }
            if (settings.padding.useDefault != 'default') {
                var paddingUnits = settings.padding.units;
                customCSSInner += 'padding: ' + settings.padding.top + paddingUnits + ' ' + settings.padding.right + paddingUnits + ' ' + settings.padding.bottom + paddingUnits + ' ' + settings.padding.left + paddingUnits + ';';
            }
            if (settings.border_radius.useDefault != 'default') {
                var borderRadiusUnits = settings.border_radius.units;
                customCSSInner += 'border-radius: ' + settings.border_radius.top + borderRadiusUnits + ' ' + settings.border_radius.right + borderRadiusUnits + ' ' + settings.border_radius.bottom + borderRadiusUnits + ' ' + settings.border_radius.left + borderRadiusUnits + ';';
            }
            if (settings.border.useDefault != 'default') {
                var borderUnits = settings.border.units;
                var borderColor = settings.border.color == 'default' ? '#000000' : settings.border.color == 'custom' ? settings.border.customColor : '';
                customCSS += 'border-style: ' + settings.border.type + ';';
                customCSS += 'border-width: ' + settings.border.top + borderUnits + ' ' + settings.border.right + borderUnits + ' ' + settings.border.bottom + borderUnits + ' ' + settings.border.left + borderUnits + ';';
                if (borderColor) {
                    customCSS += 'border-color: ' + borderColor + ';';
                } else {
                    customCSS += 'border-color: ' + siteSettings[settings.border.color + '_color'].customColor + ';';
                }
            }
            if (settings.base_font_size.useDefault != 'default') {
                customCSSInner += 'font-size: ' + settings.base_font_size.value + settings.base_font_size.units + ';';
            }
            if (settings.letter_spacing.useDefault != 'default') {
                customCSSInner += 'letter-spacing: ' + settings.letter_spacing.value + settings.letter_spacing.units + ';';
            }
            if (settings.line_height.useDefault != 'default') {
                customCSSInner += 'line-height: ' + settings.line_height.value + settings.line_height.units + ';';
            }
            var maxWidth = '';
            if (settings.margin.useDefault != 'default') {
                var marginUnits = settings.margin.units;
                var marginTop = settings.margin.top + marginUnits;
                var marginRight = settings.margin.right + marginUnits;
                var marginBottom = settings.margin.bottom + marginUnits;
                var marginLeft = settings.margin.left + marginUnits;
                if (settings.max_width.useDefault != 'default') {
                    if (object.inlineModuleAlign == undefined || object.inlineModuleAlign == null) {
                        marginRight = 'auto';
                        marginLeft = 'auto';
                    }
                    maxWidth += 'max-width: ' + settings.max_width.value + settings.max_width.units + ';';
                }
                maxWidth += 'margin: ' + marginTop + ' ' + marginRight + ' ' + marginBottom + ' ' + marginLeft + ';';
            } else {
                if (settings.max_width.useDefault != 'default') {
                    maxWidth += 'max-width: ' + settings.max_width.value + settings.max_width.units + '; margin-left: auto; margin-right: auto;';
                }
            }

            customCSSInner += maxWidth;

            var customCSSBackground = '';
            var customCSSBackgroundScreen = '';

            switch (settings.background_type.choice) {
                case 'color':
                    customCSSBackground += this.rowGetColor(siteSettings, settings);
                    break;
                case 'gradient_2':
                    customCSSBackground += this.rowGetGradient2(settings);
                    break;
                case 'gradient_3':
                    customCSSBackground += this.rowGetGradient3(settings);
                    break;
                case 'image':
                    customCSSBackground += this.rowGetImage(settings);
                    break;
            }

            if (settings.background_type.choice == 'image' && settings.background_type_screen.choice != 'default') {
                var opacity = settings.screen_opacity.useDefault != 'default' ? parseInt(settings.screen_opacity.value) / 100 : 0.7;
                switch (settings.background_type_screen.choice) {
                    case 'color':
                        customCSSBackgroundScreen += this.rowGetColor(siteSettings, settings, true, opacity);
                        break;
                    case 'gradient_2':
                        customCSSBackgroundScreen += this.rowGetGradient2(settings, true, opacity);
                        break;
                    case 'gradient_3':
                        customCSSBackgroundScreen += this.rowGetGradient3(settings, true, opacity);
                        break;
                }
            }

            return { customCSS: customCSS, customCSSInner: customCSSInner, colorCSS: colorCSS, customCSSBackground: customCSSBackground, customCSSBackgroundScreen: customCSSBackgroundScreen };
        }
    }, {
        key: 'buildButtonObjectWithPrefix',
        value: function buildButtonObjectWithPrefix(settings, prefix) {
            var settingsCopy = JSON.parse(JSON.stringify(settings));
            var newSettings = {};

            for (var key in settingsCopy) {
                if (!settingsCopy.hasOwnProperty(key)) continue;

                if (key.includes(prefix)) {
                    var newKey = key.replace(prefix, '');
                    newSettings[newKey] = settingsCopy[key];
                }
            }

            return newSettings;
        }
    }, {
        key: 'buildSkinObjectWithPrefix',
        value: function buildSkinObjectWithPrefix(settings, prefix) {
            var settingsCopy = JSON.parse(JSON.stringify(settings));
            var newSettings = {};

            for (var key in settingsCopy) {
                if (!settingsCopy.hasOwnProperty(key)) continue;

                if (key.includes(prefix)) {
                    var newKey = key.replace(prefix, '');
                    newSettings[newKey] = settingsCopy[key];
                }
            }

            return newSettings;
        }
    }, {
        key: 'shadeBlendConvert',
        value: function shadeBlendConvert(p, from, to) {
            if (typeof p != "number" || p < -1 || p > 1 || typeof from != "string" || from[0] != 'r' && from[0] != '#' || typeof to != "string" && typeof to != "undefined") return null; //ErrorCheck
            if (!this.sbcRip) this.sbcRip = function (d) {
                var l = d.length,
                    RGB = new Object();
                if (l > 9) {
                    d = d.split(",");
                    if (d.length < 3 || d.length > 4) return null; //ErrorCheck
                    RGB[0] = i(d[0].slice(4)), RGB[1] = i(d[1]), RGB[2] = i(d[2]), RGB[3] = d[3] ? parseFloat(d[3]) : -1;
                } else {
                    if (l == 8 || l == 6 || l < 4) return null; //ErrorCheck
                    if (l < 6) d = "#" + d[1] + d[1] + d[2] + d[2] + d[3] + d[3] + (l > 4 ? d[4] + "" + d[4] : ""); //3 digit
                    d = i(d.slice(1), 16), RGB[0] = d >> 16 & 255, RGB[1] = d >> 8 & 255, RGB[2] = d & 255, RGB[3] = l == 9 || l == 5 ? r((d >> 24 & 255) / 255 * 10000) / 10000 : -1;
                }
                return RGB;
            };
            var i = parseInt,
                r = Math.round,
                h = from.length > 9,
                h = typeof to == "string" ? to.length > 9 ? true : to == "c" ? !h : false : h,
                b = p < 0,
                p = b ? p * -1 : p,
                to = to && to != "c" ? to : b ? "#000000" : "#FFFFFF",
                f = this.sbcRip(from),
                t = this.sbcRip(to);
            if (!f || !t) return null; //ErrorCheck
            if (h) return "rgb(" + r((t[0] - f[0]) * p + f[0]) + "," + r((t[1] - f[1]) * p + f[1]) + "," + r((t[2] - f[2]) * p + f[2]) + (f[3] < 0 && t[3] < 0 ? ")" : "," + (f[3] > -1 && t[3] > -1 ? r(((t[3] - f[3]) * p + f[3]) * 10000) / 10000 : t[3] < 0 ? f[3] : t[3]) + ")");else return "#" + (0x100000000 + (f[3] > -1 && t[3] > -1 ? r(((t[3] - f[3]) * p + f[3]) * 255) : t[3] > -1 ? r(t[3] * 255) : f[3] > -1 ? r(f[3] * 255) : 255) * 0x1000000 + r((t[0] - f[0]) * p + f[0]) * 0x10000 + r((t[1] - f[1]) * p + f[1]) * 0x100 + r((t[2] - f[2]) * p + f[2])).toString(16).slice(f[3] > -1 || t[3] > -1 ? 1 : 3);
        }
    }, {
        key: 'componentDidUpdate',
        value: function componentDidUpdate(prevProps) {
            return;

            var prev = prevProps.siteState;
            var next = this.props.siteState;

            var tags = ['body_font', 'h1_font', 'h2_font', 'h3_font', 'h4_font', 'h5_font', 'h6_font'];
            var fontsToLoad = [];
            tags.forEach(function (tag) {
                if (next[tag] != undefined && (prev[tag] == undefined || prev[tag] != next[tag]) && !fontsToLoad.includes(next[tag].choice) && (next[tag].source == undefined || next[tag].source != 'builtIn')) {
                    fontsToLoad.push(next[tag].choice);
                }
            });
            if (fontsToLoad.length && next.use_google_fonts != undefined && next.use_google_fonts.yes) {
                WebFont.load({
                    google: {
                        families: fontsToLoad
                    }
                });
            }
        }
    }, {
        key: 'render',
        value: function render() {
            var _this3 = this;

            var properties = ['background', 'color', 'border-color', 'border-top-color', 'border-right-color', 'border-bottom-color', 'border-left-color'];
            var colors = ['none', 'primary', 'primary_light', 'primary_dark', 'action', 'action_light', 'action_dark', 'accent', 'accent_light', 'accent_dark', 'alt_accent', 'alt_accent_light', 'alt_accent_dark', 'positive', 'negative', 'grey', 'grey_light', 'grey_dark', 'black', 'white'];
            var buttons = ['action', 'info'];
            var rows = ['hero', 'content'];

            var a = this.props.siteState;
            window.OffsproutSiteSettings = a;

            //console.log('site options render siteState', a);

            var shadePercentage = a.shade_percentage != undefined ? a.shade_percentage.value / 100 : 0.3;
            var negativeShadePercentage = shadePercentage * -1;

            //Set some built-in colors
            a.primary_light_color = {};
            a.primary_light_color.customColor = this.shadeBlendConvert(shadePercentage, a.primary_color.customColor.replace('rgba', 'rgb')).replace('rgb', 'rgba');
            a.primary_dark_color = {};
            a.primary_dark_color.customColor = this.shadeBlendConvert(negativeShadePercentage, a.primary_color.customColor.replace('rgba', 'rgb')).replace('rgb', 'rgba');
            a.action_light_color = {};
            a.action_light_color.customColor = this.shadeBlendConvert(shadePercentage, a.action_color.customColor.replace('rgba', 'rgb')).replace('rgb', 'rgba');
            a.action_dark_color = {};
            a.action_dark_color.customColor = this.shadeBlendConvert(negativeShadePercentage, a.action_color.customColor.replace('rgba', 'rgb')).replace('rgb', 'rgba');
            a.accent_light_color = {};
            a.accent_light_color.customColor = this.shadeBlendConvert(shadePercentage, a.accent_color.customColor.replace('rgba', 'rgb')).replace('rgb', 'rgba');
            a.accent_dark_color = {};
            a.accent_dark_color.customColor = this.shadeBlendConvert(negativeShadePercentage, a.accent_color.customColor.replace('rgba', 'rgb')).replace('rgb', 'rgba');
            a.alt_accent_light_color = {};
            a.alt_accent_light_color.customColor = this.shadeBlendConvert(shadePercentage, a.alt_accent_color.customColor.replace('rgba', 'rgb')).replace('rgb', 'rgba');
            a.alt_accent_dark_color = {};
            a.alt_accent_dark_color.customColor = this.shadeBlendConvert(negativeShadePercentage, a.alt_accent_color.customColor.replace('rgba', 'rgb')).replace('rgb', 'rgba');
            a.black_color = {};
            a.black_color.customColor = '#000000';
            a.white_color = {};
            a.white_color.customColor = '#ffffff';
            a.grey_light_color = {};
            a.grey_light_color.customColor = '#f0f3f7';
            a.grey_color = {};
            a.grey_color.customColor = '#cccccc';
            a.grey_dark_color = {};
            a.grey_dark_color.customColor = '#444444';
            a.default_color = {};
            a.default_color.customColor = 'transparent';
            a.none_color = {};
            a.none_color.customColor = 'transparent';

            var fullCSSString = '';
            var fontTags = ['body', 'body_header', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6'];

            var fonts = ['body_font', 'body_header_font', 'h1_font', 'h2_font', 'h3_font', 'h4_font', 'h5_font', 'h6_font', 'accent_font'];
            var fontsToLoad = [];
            fonts.forEach(function (tag) {
                if (a[tag] != undefined && a[tag].choice != 'default') {
                    if (!fontsToLoad.includes(a[tag].choice)) {
                        var variants = '';

                        if (a[tag].variants != undefined) {
                            variants += ':';
                            a[tag].variants.forEach(function (variant) {
                                variants += variant + ',';
                            });
                            //remove the last comma
                            variants = variants.slice(0, -1);
                        }

                        if (a[tag].source == undefined || a[tag].source == 'google') {
                            fontsToLoad.push(a[tag].choice + variants);
                        }
                    }

                    var fallback = a[tag].fallback != undefined ? ', ' + a[tag].fallback : '';
                    var fontCSS = '"' + a[tag].choice + '"' + fallback;

                    if (!a.use_google_fonts.yes && a[tag].source != undefined && a[tag].source == 'google') {
                        fontCSS = 'Arial, sans-serif';
                    }

                    //CSS for objects using custom font setting in Standard settings
                    fullCSSString += 'body .ocb-' + tag + ',.ocb-' + tag + ' h1,.ocb-' + tag + ' h2,.ocb-' + tag + ' h3,.ocb-' + tag + ' h4,.ocb-' + tag + ' h5,.ocb-' + tag + ' h6{font-family:' + fontCSS + ' !important}';
                }
            });

            if (fontsToLoad.length && a.use_google_fonts != undefined && a.use_google_fonts.yes) {
                setTimeout(function () {
                    WebFont.load({
                        google: {
                            families: fontsToLoad
                        }
                    });
                }, 500);
            }

            fontTags.forEach(function (tag) {
                var cssTag = tag;
                if (tag == 'body_header') {
                    cssTag = 'h1,h2,h3,h4,h5,h6';
                }

                if (a[tag + '_font'] != undefined && a[tag + '_font'].choice != 'default') {
                    var fontWeight = a[tag + '_font'].variant ? a[tag + '_font'].variant : '400';
                    var italic = '';
                    if (fontWeight.includes('italic')) {
                        fontWeight = fontWeight.replace('italic', '');
                        italic = 'font-style:italic !important;';
                    }
                    var fallback = a[tag + '_font'].fallback != undefined ? ', ' + a[tag + '_font'].fallback : '';
                    var fontCSS = '"' + a[tag + '_font'].choice + '"' + fallback;

                    if (!a.use_google_fonts.yes && a[tag + '_font'].source != undefined && a[tag + '_font'].source == 'google') {
                        fontCSS = 'Arial, sans-serif';
                    }

                    fullCSSString += cssTag + '{font-family:' + fontCSS + ' !important;font-weight:' + fontWeight + ' !important;' + italic + '}';
                }
            });

            if (a.body_font != undefined && a.body_font.variants != undefined && a.body_font.variants.includes('700')) {
                fullCSSString += 'b, strong{font-weight: 700;}';
            }

            //Font colors
            fontTags.forEach(function (tag) {
                var cssTag = tag;
                if (tag == 'body_header') {
                    cssTag = 'h1,h2,h3,h4,h5,h6';
                }
                if (a[tag + '_color'] != undefined && a[tag + '_color'].color != 'default') {
                    var color = a[tag + '_color'].customColor;

                    if (a[tag + '_color'].color != 'custom') {
                        var colorSetting = a[tag + '_color'].color;
                        color = a[colorSetting + '_color'].customColor;
                    }

                    fullCSSString += cssTag + '{color:' + color + '}';
                }
            });

            if (a['a_color'] != undefined && a['a_color'].color != 'default') {
                var aColor = a['a_color'].customColor;

                if (a['a_color'].color != 'custom') {
                    var colorSetting = a['a_color'].color;
                    aColor = a[colorSetting + '_color'].customColor;
                }

                fullCSSString += 'a, a:visited{color:' + aColor + '}';
            }

            //Fonts
            var headerTags = ['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'p'];
            if (a['base_font_size'] != undefined && a['base_font_size'].useDefault != 'default') {
                fullCSSString += 'body{font-size:' + a['base_font_size'].value + a['base_font_size'].units + ' !important}';
            }
            headerTags.forEach(function (tag) {
                if (a[tag + '_size'] != undefined && a[tag + '_size'].useDefault != 'default') {
                    fullCSSString += 'body ' + tag + '{font-size:' + a[tag + '_size'].value + a[tag + '_size'].units + '}';
                }
                if (a[tag + '_size'] != undefined && a[tag + '_size'].useDefault != 'default') {
                    fullCSSString += 'body ' + tag + '{font-size:' + a[tag + '_size'].value + a[tag + '_size'].units + '}';
                }
            });

            //Colors
            colors.forEach(function (color) {
                properties.forEach(function (cssProp) {
                    if (a[color + '_color'] != undefined && a[color + '_color'].customColor != undefined) {
                        if (cssProp == 'color') {
                            headerTags.forEach(function (tag) {
                                fullCSSString += '.' + color + '-' + cssProp + ' ' + tag + '{' + cssProp + ':' + a[color + '_color'].customColor + ';}';
                                fullCSSString += '.' + color + '-' + cssProp + '-hover:hover ' + tag + '{' + cssProp + ':' + a[color + '_color'].customColor + ';}';
                                fullCSSString += '.' + color + '-' + cssProp + '-active.active ' + tag + '{' + cssProp + ':' + a[color + '_color'].customColor + ';}';
                            });
                            fullCSSString += '.' + color + '-' + cssProp + '{' + cssProp + ':' + a[color + '_color'].customColor + ';}';
                            fullCSSString += '.' + color + '-' + cssProp + ' path{fill:' + a[color + '_color'].customColor + ';}';
                            fullCSSString += '.' + color + '-' + cssProp + '-hover:hover{' + cssProp + ':' + a[color + '_color'].customColor + ';}';
                            fullCSSString += '.' + color + '-' + cssProp + '-active.active{' + cssProp + ':' + a[color + '_color'].customColor + ';}';
                        } else {
                            fullCSSString += '.' + color + '-' + cssProp + '{' + cssProp + ':' + a[color + '_color'].customColor + ';}';
                            fullCSSString += '.' + color + '-' + cssProp + '-hover:hover{' + cssProp + ':' + a[color + '_color'].customColor + ';}';
                            fullCSSString += '.' + color + '-' + cssProp + '-active.active{' + cssProp + ':' + a[color + '_color'].customColor + ';}';
                        }
                    } else {
                        console.log('color undefined', color);
                    }
                });
                fullCSSString += '.' + color + '-color a, a.' + color + '-color, a.' + color + '-color:visited{color:' + a[color + '_color'].customColor + ';}';
                fullCSSString += '.' + color + '-color-hover:hover a, a.' + color + '-color-hover:hover{color:' + a[color + '_color'].customColor + ';}';
                fullCSSString += '.' + color + '-color-active.active a, a.' + color + '-color-active.active{color:' + a[color + '_color'].customColor + ';}';
                fullCSSString += '.mce-' + color + '-color:after{background:' + a[color + '_color'].customColor + ';}';
            });

            //Inherit from ocb-specific, ocb-module-inner, ocb-column-inner, ocb-row-inner in that order
            var inheritanceOrder = ['.ocb-row-inner', '.ocb-column-inner', '.ocb-the-module', '.ocb-the-module ', '.ocb-module-inner', '.ocb-module-inner ', '.ocb-specific-color'];
            inheritanceOrder.forEach(function (inheritanceClass) {
                var notSelector = '';
                if (inheritanceClass == '.ocb-module-inner ') {
                    notSelector = ':not(.ocb-row-inner):not(.ocb-column-inner):not(.ocb-module-inner)';
                }

                colors.forEach(function (color) {
                    if (a[color + '_color'] != undefined && a[color + '_color'].customColor != undefined) {
                        headerTags.forEach(function (tag) {
                            fullCSSString += inheritanceClass + '.' + color + '-color' + notSelector + '{color:' + a[color + '_color'].customColor + ';}';
                            fullCSSString += inheritanceClass + '.' + color + '-color-hover' + notSelector + ':hover{color:' + a[color + '_color'].customColor + ';}';
                            fullCSSString += inheritanceClass + '.' + color + '-color-active' + notSelector + '.active{color:' + a[color + '_color'].customColor + ';}';

                            if (inheritanceClass != '.ocb-module-inner ' && inheritanceClass != '.ocb-the-module ') {
                                fullCSSString += inheritanceClass + '.' + color + '-color ' + tag + '{color:' + a[color + '_color'].customColor + ';}';
                                fullCSSString += inheritanceClass + '.' + color + '-color-hover:hover ' + tag + '{color:' + a[color + '_color'].customColor + ';}';
                                fullCSSString += inheritanceClass + '.' + color + '-color-active.active ' + tag + '{color:' + a[color + '_color'].customColor + ';}';
                            }
                        });
                        if (inheritanceClass == '.ocb-specific-color') {
                            fullCSSString += inheritanceClass + '.' + color + '-background{background:' + a[color + '_color'].customColor + ';}';
                            fullCSSString += inheritanceClass + '.' + color + '-background-hover:hover{background:' + a[color + '_color'].customColor + ';}';
                            fullCSSString += inheritanceClass + '.' + color + '-background-active.active{background:' + a[color + '_color'].customColor + ';}';
                            fullCSSString += inheritanceClass + '.' + color + '-border-color{border-color:' + a[color + '_color'].customColor + ';}';
                            fullCSSString += inheritanceClass + '.' + color + '-border-color-hover:hover{border-color:' + a[color + '_color'].customColor + ';}';
                            fullCSSString += inheritanceClass + '.' + color + '-border-color-active.active{border-color:' + a[color + '_color'].customColor + ';}';
                        }
                    }
                });
            });

            //Gradients
            var gradients = ['primary', 'action', 'accent'];

            gradients.forEach(function (gradient) {
                var theGradient = a[gradient + '_gradient'];
                var gradientColor1 = _typeof(theGradient.color1) == 'object' ? 'rgba(' + theGradient.color1.r + ',' + theGradient.color1.g + ',' + theGradient.color1.b + ',' + theGradient.color1.a + ')' : theGradient.color1;
                var gradientColor2 = _typeof(theGradient.color2) == 'object' ? 'rgba(' + theGradient.color2.r + ',' + theGradient.color2.g + ',' + theGradient.color2.b + ',' + theGradient.color2.a + ')' : theGradient.color2;
                var gradientColor3 = _typeof(theGradient.color3) == 'object' ? 'rgba(' + theGradient.color3.r + ',' + theGradient.color3.g + ',' + theGradient.color3.b + ',' + theGradient.color3.a + ')' : theGradient.color3;
                var gradientColor4 = _typeof(theGradient.color4) == 'object' ? 'rgba(' + theGradient.color4.r + ',' + theGradient.color4.g + ',' + theGradient.color4.b + ',' + theGradient.color4.a + ')' : theGradient.color4;

                var gradientCSS = 'linear-gradient(' + theGradient.angle + 'deg, ' + gradientColor1 + ' ' + theGradient.color1Start + '%, ' + gradientColor2 + ' ' + theGradient.color2Start + '%';

                if (theGradient.number == 3 || theGradient.number == 4) {
                    gradientCSS += ', ' + gradientColor3 + ' ' + theGradient.color3Start + '%';
                }

                if (theGradient.number == 4) {
                    gradientCSS += ', ' + gradientColor4 + ' ' + theGradient.color4Start + '%';
                }

                gradientCSS += ')';

                var fullGradientString = '.' + gradient + 'Gradient-background{background:' + gradientCSS + '}';

                fullCSSString += fullGradientString;
            });

            //Other design
            if (a.content_width != undefined && a.content_width.useDefault == 'custom') {
                var negativeHalfContentWidth = parseInt(a.content_width.value) / 2 * -1;
                fullCSSString += '.ocb-row .ocb-row-inner{max-width:' + a.content_width.value + 'px;}';
                fullCSSString += '@media (min-width: ' + a.content_width.value + 'px){.ocb-row .ocb-row-inner-background{max-width:' + a.content_width.value + 'px;margin-left:' + negativeHalfContentWidth + 'px;}}';
            }
            if (a.default_row_horizontal_padding != undefined && a.default_row_horizontal_padding.useDefault == 'custom') {
                fullCSSString += '.ocb-row .ocb-row-inner{padding-left:' + a.default_row_horizontal_padding.value + a.default_row_horizontal_padding.units + ';padding-right:' + a.default_row_horizontal_padding.value + a.default_row_horizontal_padding.units + ';}';
            } else {
                //Add padding on depth-0 rows above the content width (use 1025px because 1000 is the default and we should start a little before that)
                if (a.content_width != undefined && a.content_width.useDefault == 'custom') {
                    fullCSSString += '@media (min-width: ' + a.content_width.value + 'px){.ocb-row > .ocb-row-inner{padding-left: 0;padding-right: 0;}}';
                } else {
                    fullCSSString += '@media (min-width: 1025px){.ocb-row > .ocb-row-inner{padding-left: 0;padding-right: 0;}}';
                }
            }
            if (a.default_row_vertical_padding != undefined && a.default_row_vertical_padding.useDefault == 'custom') {
                fullCSSString += '.ocb-row .ocb-row-inner{padding-top:' + a.default_row_vertical_padding.value + a.default_row_vertical_padding.units + ';padding-bottom:' + a.default_row_vertical_padding.value + a.default_row_vertical_padding.units + ';}';
            }
            if (a.default_column_gap != undefined && a.default_column_gap.useDefault == 'custom') {
                var halfGap = a.default_column_gap.value / 2;
                fullCSSString += '.ocb-column:first-child > .ocb-column-inner{padding-right:' + a.default_column_gap.value + a.default_column_gap.units + ';}';
                fullCSSString += '.ocb-column > .ocb-column-inner{padding:0 ' + halfGap + a.default_column_gap.units + ';}';
                fullCSSString += '.ocb-column:last-child > .ocb-column-inner{padding-left:' + a.default_column_gap.value + a.default_column_gap.units + ';}';
                fullCSSString += '.ocb-column:only-child > .ocb-column-inner{padding-right: 0;padding-left: 0;}';
            }

            //Buttons
            buttons.forEach(function (button) {
                var newSettings = _this3.buildButtonObjectWithPrefix(a, button + '_button_');
                var fullCSS = _this3.buildButtonStyle(a, newSettings);
                fullCSSString += '.ocb-button-skin-' + button + ' .ocb-button{' + fullCSS.style + '}';
                fullCSSString += '.ocb-button-skin-' + button + ' .ocb-button:hover{' + fullCSS.styleHover + '}';
                fullCSSString += '.ocb-button-skin-' + button + ' .ocb-button-input{' + fullCSS.inputStyle + '}';
                fullCSSString += '.ocb-button-skin-' + button + ' .ocb-button-input:hover{' + fullCSS.inputStyleHover + '}';
                if (newSettings.icon_font_size != undefined && newSettings.icon_font_size.useDefault == 'custom') {
                    fullCSSString += '.ocb-button-skin-' + button + ' .ocb-button-icon{font-size:' + newSettings.icon_font_size.value + newSettings.icon_font_size.units + '}';
                }
            });

            //Rows
            rows.forEach(function (row) {
                var newSettings = _this3.buildSkinObjectWithPrefix(a, row + '_row_');
                var fullCSS = _this3.buildRowStyle(a, newSettings);

                fullCSSString += '.ocb-row-skin-' + row + '.ocb-row{' + fullCSS.customCSS + '}';
                fullCSSString += '.ocb-row-skin-' + row + '.ocb-row .ocb-row-inner{' + fullCSS.customCSSInner + '}';
                ['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'p', 'li'].forEach(function (tag) {
                    fullCSSString += '.ocb-row-skin-' + row + '.ocb-row ' + tag + '{' + fullCSS.colorCSS + '}';
                });
                fullCSSString += '.ocb-row-skin-' + row + '.ocb-row .ocb-row-skin-background{' + fullCSS.customCSSBackground + '}';
                fullCSSString += '.ocb-row-skin-' + row + '.ocb-row .ocb-row-skin-background-screen{' + fullCSS.customCSSBackgroundScreen + '}';
            });

            //Logo
            if (a.logo != undefined || a.logo.url != undefined) {
                var logoImageUrl = _settings_helpers2.default.getImageURL(a.logo.url);

                fullCSSString += '.ocb-logo-image{background-image:url(\'' + logoImageUrl + '\')}';
            }

            //Comments
            if (OCBGlobalSettings.permissions.has_theme) {
                fullCSSString += this.buildCommentsStyle(a);
            }

            if (window.ocbGlobals == undefined) {
                window.ocbGlobals = {};
            }

            window.ocbGlobals = a;

            if (a.testimonials != undefined && a.testimonials.items != undefined) {
                window.ocbGlobals.Testimonials = a.testimonials.items;
            }

            fullCSSString += a.global_css != undefined && a.global_css.text != undefined ? a.global_css.text : '';

            fullCSSString = OffsproutFilter.apply('siteCSS', fullCSSString, a);

            return _react2.default.createElement('style', { type: 'text/css', id: 'ocb-site-css', dangerouslySetInnerHTML: { __html: fullCSSString } });
        }
    }]);

    return SiteOptionsRender;
}(_react.Component);

function mapStateToProps(_ref) {
    var siteState = _ref.siteState;

    //will show up as props inside of Tree
    return { siteState: siteState };
}

function mapDispatchToProps(dispatch) {
    return (0, _redux.bindActionCreators)({ updateSiteStateFromAPI: _index.updateSiteStateFromAPI }, dispatch);
}

//We pass null for the first value because we don't need a mapStateToProps since props are being passed up from below into state
//http://stackoverflow.com/questions/35443167/dispatch-is-not-a-function-when-argument-to-maptodispatchtoprops-in-redux
exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(SiteOptionsRender);

/***/ }),

/***/ 27:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
var URLHelpers = {
    getSearchParameters: function getSearchParameters() {
        var prmstr = window.location.search.substr(1);
        return prmstr != null && prmstr != "" ? URLHelpers.transformToAssocArray(prmstr) : {};
    },

    transformToAssocArray: function transformToAssocArray(prmstr) {
        var params = {};
        var prmarr = prmstr.split("&");
        for (var i = 0; i < prmarr.length; i++) {
            var tmparr = prmarr[i].split("=");
            params[tmparr[0]] = tmparr[1];
        }
        return params;
    },

    insertParam: function insertParam(key, value) {
        key = encodeURIComponent(key);value = encodeURIComponent(value);
        var url = '';
        var kvp = document.location.search.substr(1).split('&');

        if (kvp == '') {
            url = '?' + key + '=' + value;
        } else {

            var i = kvp.length;var x;while (i--) {
                x = kvp[i].split('=');

                if (x[0] == key) {
                    x[1] = value;
                    kvp[i] = x.join('=');
                    break;
                }
            }

            if (i < 0) {
                kvp[kvp.length] = [key, value].join('=');
            }

            //this will reload the page, it's likely better to store this until finished
            url = kvp.join('&');
        }

        return url;
    },

    removeParam: function removeParam(key, sourceURL) {
        var rtn = sourceURL.split("?")[0],
            param,
            params_arr = [],
            queryString = sourceURL.indexOf("?") !== -1 ? sourceURL.split("?")[1] : "";
        if (queryString !== "") {
            params_arr = queryString.split("&");
            for (var i = params_arr.length - 1; i >= 0; i -= 1) {
                param = params_arr[i].split("=")[0];
                if (param === key) {
                    params_arr.splice(i, 1);
                }
            }
            rtn = rtn + "?" + params_arr.join("&");
        }
        return rtn;
    },

    addParam: function addParam(url, key, value) {
        key = encodeURIComponent(key);value = encodeURIComponent(value);

        if (url.indexOf(key + '=' + value) !== -1) return url;

        //Param is already in the URL so let's remove it first
        if (url.indexOf(key + '=') !== -1) {
            url = URLHelpers.removeParam(key, url);
        }

        if (url.indexOf('?') === -1) {
            url += '?';
        } else {
            url += '&';
        }

        url += key + '=' + value;

        return url;
    },

    /**
     * Will turn a permalink into a pageEdit=1 link
     */
    makePageEditLink: function makePageEditLink(url) {
        return URLHelpers.addParam(url, 'pageEdit', 1);
    },


    /**
     * Will return true for domains and subdomains, and false for https:// or http://
     * @param domain
     * @returns {*}
     */
    checkIsValidDomain: function checkIsValidDomain(domain) {
        var re = new RegExp(/^((?:(?:(?:\w[\.\-\+]?)*)\w)+)((?:(?:(?:\w[\.\-\+]?){0,62})\w)+)\.(\w{2,6})$/);
        return domain.match(re);
    }
};

exports.default = URLHelpers;

/***/ }),

/***/ 28:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _default_standard = __webpack_require__(16);

var _default_standard2 = _interopRequireDefault(_default_standard);

var _settings_helpers = __webpack_require__(2);

var _settings_helpers2 = _interopRequireDefault(_settings_helpers);

var _immutabilityHelper = __webpack_require__(41);

var _immutabilityHelper2 = _interopRequireDefault(_immutabilityHelper);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var TreeReducerFunctions = {

    /**
     * Update settings, standard, or any other property in an object
     * @param each
     * @param objectId
     * @param theUpdate
     * @param type
     * @returns {*}
     */
    _recursiveUpdate: function _recursiveUpdate(each, objectId, theUpdate, type) {
        var found = false;
        if (each.id != undefined && each.id == objectId) {
            switch (type) {
                case 'UPDATE_OBJECT_PROPERTY':
                    /*Object.keys(theUpdate).forEach(key => {
                        each = update(each, { [key]: { $set: theUpdate[key] } });
                    });
                    return each;*/
                    return _extends({}, each, theUpdate);
                    break;
                case 'UPDATE_OBJECT_SETTINGS':
                    //return { ...each, settings: theUpdate };
                    return (0, _immutabilityHelper2.default)(each, { settings: { $set: theUpdate } });
                    break;
                case 'UPDATE_OBJECT_STANDARD':
                    //return { ...each, standard: theUpdate };
                    return (0, _immutabilityHelper2.default)(each, { standard: { $set: theUpdate } });
                    break;
            }
            return each;
        } else {
            if (each.items != undefined && each.items) {
                found = each.items.map(function (child) {
                    return TreeReducerFunctions._recursiveUpdate(child, objectId, theUpdate, type);
                });
            }

            if (found != undefined && type == 'get') return found;

            if (found != undefined) {
                return _extends({}, each, { items: found });
            }
        }
    },

    /*_recursiveUpdate: (each, objectId, theUpdate, type ) => {
        let found = false;
        if (each.id != undefined && each.id == objectId) {
            switch (type) {
                case 'UPDATE_OBJECT_PROPERTY':
                    Object.keys(theUpdate).forEach(key => {
                        each = update(each, { [key]: { $set: theUpdate[key] } });
                    });
                    return each;
                    break;
                case 'UPDATE_OBJECT_SETTINGS':
                    return update(each, { settings: { $set: theUpdate } });
                    break;
                case 'UPDATE_OBJECT_STANDARD':
                    return update(each, { standard: { $set: theUpdate } });
                    break;
            }
            return each;
        } else {
            if( each.items != undefined && each.items ) {
                found = each.items.map((child) => {
                    return TreeReducerFunctions._recursiveUpdate(child, objectId, theUpdate, type);
                });
            }
             if (found != undefined && type == 'get') return found;
             if (found != undefined) {
                return update( each, { items: { $set: found } } );
            }
        }
         return each;
     },*/

    /**
     * NOT CURRENTLY IN USE
     *
     * Update every instance of a global template with a unique templateUnique id
     * @param tree
     * @param object
     * @private
     */
    _recursiveUpdateTemplateUniques: function _recursiveUpdateTemplateUniques(tree, object) {
        var newId = TreeReducerFunctions.generateId(object.type);
        return tree.items.map(function (each, index) {
            if (each.id != undefined && each.id == object.id) {
                (0, _immutabilityHelper2.default)(each, { templateUnique: newId });
                return each;
            } else {
                if (each.items != undefined && each.items.length) {
                    return TreeReducerFunctions._recursiveUpdateTemplateUniques(tree, object);
                }
            }
        });
    },

    /**
     * Update global template object with a temporary ID
     * @param each
     * @param templateUnique
     * @returns {*}
     */
    _recursiveTemplateUnique: function _recursiveTemplateUnique(each, templateUnique) {
        var found = false;
        if (each.templateUnique != undefined && each.templateUnique == templateUnique) {
            return (0, _immutabilityHelper2.default)(each, { id: { $set: templateUnique } });
        } else {
            if (each.items != undefined && each.items) {
                found = each.items.map(function (child) {
                    return TreeReducerFunctions._recursiveTemplateUnique(child, templateUnique);
                });
            }

            if (found != undefined) {
                return _extends({}, each, { items: found });
            }
        }
    },

    _recursiveGetTemplateUnique: function _recursiveGetTemplateUnique(tree, objectID) {
        if (tree.templateUnique == objectID) {
            return tree;
        }

        if (tree.items != undefined && tree.items != false) {
            var _iteratorNormalCompletion = true;
            var _didIteratorError = false;
            var _iteratorError = undefined;

            try {
                for (var _iterator = tree.items[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                    var each = _step.value;

                    var found = TreeReducerFunctions._recursiveGetTemplateUnique(each, objectID);
                    if (found) return found;
                }
            } catch (err) {
                _didIteratorError = true;
                _iteratorError = err;
            } finally {
                try {
                    if (!_iteratorNormalCompletion && _iterator.return) {
                        _iterator.return();
                    }
                } finally {
                    if (_didIteratorError) {
                        throw _iteratorError;
                    }
                }
            }
        }

        return false;
    },

    _assignChildTemplateNewIds: function _assignChildTemplateNewIds(tree, object) {
        var extra = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

        var remove = extra.remove != undefined ? extra.remove : false;
        var fullObject = TreeReducerFunctions._recursiveGetTemplateUnique(tree, object.templateUnique);

        //When saving the navigation module in a global, it seemed like this was being triggered multiple times, sometimes with fullObject returning false
        // If fullObject is false, then there's nothing left to do
        if (!fullObject) return tree;

        fullObject = TreeReducerFunctions._recursiveChildTemplateNewIds(fullObject, remove);

        tree = _extends({}, tree, { items: tree.items.map(function (each) {
                return TreeReducerFunctions._recursiveUpdate(each, object.id, { items: fullObject.items }, 'UPDATE_OBJECT_PROPERTY');
            }) });

        return tree;
    },

    _recursiveChildTemplateNewIds: function _recursiveChildTemplateNewIds(object) {
        var remove = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

        if (remove) {
            object = (0, _immutabilityHelper2.default)(object, { templateUnique: { $set: '' } });
        } else {
            var newId = TreeReducerFunctions.generateId(object.type);
            object = (0, _immutabilityHelper2.default)(object, { templateUnique: { $set: newId } });
        }

        if (object.items != undefined && object.items) {
            object.items = object.items.map(function (child) {
                return TreeReducerFunctions._recursiveChildTemplateNewIds(child, remove);
            });
        }

        return object;
    },

    _updateObject: function _updateObject(tree, objectId, theUpdate, type) {
        if (tree.items != undefined && tree.items != false) {
            /*return { ...tree, items: state.items.map((each) => {
                return TreeReducerFunctions._recursiveUpdate(each, objectId, theUpdate, type);
            }) };*/
            return (0, _immutabilityHelper2.default)(tree, { items: { $set: state.items.map(function (each) {
                        return TreeReducerFunctions._recursiveUpdate(each, objectId, theUpdate, type);
                    }) } });
        }

        return tree;
    },

    /**
     * Delete an object by ID
     * @param each
     * @param deleteId
     * @returns {*} array.items
     */
    _recursiveDelete: function _recursiveDelete(tree, deleteId) {
        if (tree.items != undefined && tree.items != false) {
            return _extends({}, tree, { items: tree.items.map(function (each) {
                    if (each.id != deleteId) {
                        if (each.items != undefined && each.items.length > 0) {
                            return TreeReducerFunctions._recursiveDelete(each, deleteId);
                        }
                        return each;
                    }
                }).filter(function (newEach) {
                    return newEach != undefined;
                })
            });
        }

        return tree;
    },

    _deleteObject: function _deleteObject(tree, object) {
        if (typeof object == 'string') object = TreeReducerFunctions._recursiveGet(tree, object);
        var module = TreeReducerFunctions._recursiveGetClosestParent(tree, object.id, 'module', false, tree);
        var column = TreeReducerFunctions._recursiveGetClosestParent(tree, object.id, 'column', false, tree);
        var row = TreeReducerFunctions._recursiveGetClosestParent(tree, object.id, 'row', false, tree);
        var isThisOnlyModuleInColumn = null;
        var isThisOnlyColumnInRow = null;

        switch (object.type) {
            case 'module':
                if (module && module.moduleType == 'text') {
                    return TreeReducerFunctions._recursiveDelete(tree, object.id);
                }
                isThisOnlyModuleInColumn = column.items.length == 1;
                isThisOnlyColumnInRow = row.items.length == 1;
                if (isThisOnlyModuleInColumn && isThisOnlyColumnInRow) {
                    tree = TreeReducerFunctions._deleteObject(tree, row);
                    //console.log('deleting a row');
                } else if (isThisOnlyModuleInColumn) {
                    tree = TreeReducerFunctions._deleteObject(tree, column);
                    //console.log('deleting a column');
                } else {
                    tree = TreeReducerFunctions._recursiveDelete(tree, object.id);
                    //console.log('deleting a module');
                }
                break;
            case 'column':
                row = TreeReducerFunctions._recursiveGetClosestParent(tree, object.id, 'row', false, tree);
                if (row.items == undefined) {
                    //console.log('row', row, object, tree);
                }
                isThisOnlyColumnInRow = row.items.length == 1;
                if (isThisOnlyColumnInRow) {
                    return TreeReducerFunctions._deleteObject(tree, row);
                } else {
                    tree = TreeReducerFunctions._recursiveDelete(tree, object.id);
                    row = TreeReducerFunctions._recursiveGet(tree, row.id);
                    tree = TreeReducerFunctions._equalizeColumnWidths(tree, row);
                }
                break;
            case 'row':
                tree = TreeReducerFunctions._recursiveDelete(tree, object.id);
                break;
        }

        tree = TreeReducerFunctions._flattenColumnRowIntoParentRow(tree, row, object, { id: null }, false, false).tree;
        tree = TreeReducerFunctions._flattenColumnsIntoParentRow(tree, column, object);
        return tree;
    },

    _recursiveDuplicate: function _recursiveDuplicate(tree, object) {
        var newObject = JSON.parse(JSON.stringify(object));
        newObject = TreeReducerFunctions._recursiveGiveChildrenNewIds(newObject);

        var idStart = 'mod';

        if (newObject.type == 'row') {
            idStart = 'row';
        } else if (newObject.type == 'column') {
            idStart = 'col';
        } else if (newObject.type == 'container') {
            idStart = 'cont';
        }

        if (newObject.templateUnique != undefined) newObject.templateUnique = TreeReducerFunctions.generateId(idStart);

        //Add extra logic to make sure that tabs modules have fresh containers.
        // What was happening was that tabs settings.linked.tabs.items had IDs from the original object,
        // but the container IDs were being replaced by _recursiveGiveChildrenNewIds, so those IDs didn't line up with the items property.
        // Further, because settings.linked.tabs.items had the same IDs from the original object,
        // that componentDidMount was overwriting the original tabs module's items
        /*if( newObject.type == 'module' && newObject.containsItems != undefined && newObject.containsItems == 1 && newObject.moduleType != 'text' ){
            newObject.items = [];
            newObject.settings.linked.tabs.items = newObject.settings.linked.tabs.items.map((item) => {
                item.id = TreeReducerFunctions.generateId('cont');
                return item;
            })
        }*/

        switch (object.type) {
            case 'row':
                newObject.id = TreeReducerFunctions.generateId('row');
                return TreeReducerFunctions._recursiveAdd(tree, newObject, object, 'bottom');
                break;
            case 'column':
                newObject.id = TreeReducerFunctions.generateId('col');
                tree = TreeReducerFunctions._recursiveAdd(tree, newObject, object, 'right');
                var row = TreeReducerFunctions._recursiveGetClosestParent(tree, object.id, 'row');
                return TreeReducerFunctions._equalizeColumnWidths(tree, row);
                break;
            case 'module':
                newObject.id = TreeReducerFunctions.generateId('mod');
                return TreeReducerFunctions._recursiveAdd(tree, newObject, object, 'bottom');
                break;
        }
    },

    /**
     * Used with duplicate object - make sure that the child objects all have new IDs so that there are no duplicates
     * @param object
     */
    _recursiveGiveChildrenNewIds: function _recursiveGiveChildrenNewIds(object) {
        return _settings_helpers2.default.recursiveGiveChildrenNewIds(object);
    },
    /*_recursiveGiveChildrenNewIds: (object) => {
        if( object.items != undefined && object.items != false ) {
            if(
                object.type == 'module'
                && object.moduleType == 'side_by_side'
                && object.items != undefined
                && object.items.length
            ){
                //object.settings.linked.modules.items[index].id was getting changed for all instances of the global because somehow the objects were linked
                // This allows us to save a global that includes side_by_side as regular when there is another instance of the same global on the page
                // May want to have this at the top and do it automatically for every EACH when we run this function
                object = JSON.parse(JSON.stringify(object));
                 //foreach of those items, record the id, find corresponding items in the object's items property, and update both
                object.settings.linked.modules.items.forEach((module, index) => {
                    let newId = TreeReducerFunctions.generateId('mod');
                    let oldId = module.id;
                    let itemIndex = object.items.findIndex((item) => item.id == oldId);
                    object.settings.linked.modules.items[index].id = newId;
                    object.items[itemIndex].id = newId;
                });
                 object.id = TreeReducerFunctions.generateId('mod');
                 if( object.templateUnique != undefined && object.templateUnique ){
                    object.templateUnique = TreeReducerFunctions.generateId('mod');
                }
                 return object;
            }
             return { ...object, items: object.items.map((each) => {
                let idStart = 'mod';
                 if( each.type == 'row' ){ idStart = 'row'; }
                else if( each.type == 'column' ){ idStart = 'col'; }
                else if( each.type == 'container' ){ idStart = 'cont'; }
                 //Add extra logic to make sure that modules that have container items have those containers line up with settings values.
                // What was happening was that tabs settings.linked.tabs.items had IDs from the original object,
                // but the container IDs were being replaced by _recursiveGiveChildrenNewIds, so those IDs didn't line up with the items property.
                // Further, because settings.linked.tabs.items had the same IDs from the original object,
                // that componentDidMount was overwriting the original tabs module's items
                // This solution relies on using the items field type, which automatically adds
                if(
                    each.type == 'module'
                    && each.containsItems
                    && each.items != undefined
                    && each.items.length
                    && each.items[0].type == 'container'
                ){
                    Object.keys(each.settings.linked).forEach(function(key) {
                        //find the key of the setting that has itemType of container
                        if(
                            each.settings.linked[key].itemType != undefined
                            && each.settings.linked[key].itemType == 'container'
                            && each.settings.linked[key].items != undefined
                            && each.settings.linked[key].items.length
                        ){
                            //foreach of those items, record the id, find corresponding items in the object's items property, and update both
                            each.settings.linked[key].items.forEach((container, index) => {
                                let newId = TreeReducerFunctions.generateId('cont');
                                let oldId = container.id;
                                let itemIndex = each.items.findIndex((item) => item.id == oldId);
                                each.settings.linked[key].items[index].id = newId;
                                each.items[itemIndex].id = newId;
                            })
                        }
                    });
                }
                 if(
                    each.type == 'module'
                    && each.moduleType == 'side_by_side'
                    && each.items != undefined
                    && each.items.length
                ){
                    //each.settings.linked.modules.items[index].id was getting changed for all instances of the global because somehow the objects were linked
                    // This allows us to save a global that includes side_by_side as regular when there is another instance of the same global on the page
                    // May want to have this at the top and do it automatically for every EACH when we run this function
                    each = JSON.parse(JSON.stringify(each));
                     //foreach of those items, record the id, find corresponding items in the object's items property, and update both
                    each.settings.linked.modules.items.forEach((module, index) => {
                        let newId = TreeReducerFunctions.generateId('mod');
                        let oldId = module.id;
                        let itemIndex = each.items.findIndex((item) => item.id == oldId);
                        each.settings.linked.modules.items[index].id = newId;
                        each.items[itemIndex].id = newId;
                    });
                }
                 //Because we're dealing with container objects above (in the parent module), don't replace the id here
                if( each.type != 'container' ) {
                    each.id = TreeReducerFunctions.generateId(idStart);
                     if( each.templateUnique != undefined && each.templateUnique ){
                        each.templateUnique = TreeReducerFunctions.generateId(idStart);
                    }
                }
                 //Because we're dealing with side by side above, don't do it here
                if (each.items != undefined && each.items.length > 0 && each.moduleType != 'side_by_side') {
                    return TreeReducerFunctions._recursiveGiveChildrenNewIds(each);
                }
                return each;
            })};
        }
         return object;
    },*/

    /**
     * Add an {object} either before or after {objectTo} depending on {direction}
     * @param tree
     * @param object
     * @param objectTo
     * @param direction top, bottom, left, or right
     * @param newObjectToValue
     * @param newObjectToValue2
     * @returns {{items: *}}
     */
    _recursiveAdd: function _recursiveAdd(tree, object, objectTo, direction, newObjectToValue, newObjectToValue2) {
        if (tree.items != undefined && tree.items != false) {
            var index = tree.items.findIndex(function (item) {
                return item.id == objectTo.id;
            });
            if (index >= 0) {
                if (direction == 'top' || direction == 'left') {
                    tree.items.splice(index, 0, object);
                    TreeReducerFunctions._debugLog('add it top/left at index ' + index, tree);
                } else {
                    tree.items.splice(index + 1, 0, object);
                    TreeReducerFunctions._debugLog('add it other at index ' + (index + 1), tree);
                }
            } else {
                tree.items = tree.items.map(function (item) {
                    return TreeReducerFunctions._recursiveAdd(item, object, objectTo, direction, newObjectToValue, newObjectToValue2);
                });
            }
        }

        return _extends({}, tree, { items: tree.items });
    },

    _recursiveGet: function _recursiveGet(tree, objectID) {
        if (tree.id == objectID) {
            return tree;
        }

        if (tree.items != undefined && tree.items != false) {
            var _iteratorNormalCompletion2 = true;
            var _didIteratorError2 = false;
            var _iteratorError2 = undefined;

            try {
                for (var _iterator2 = tree.items[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
                    var each = _step2.value;

                    var found = TreeReducerFunctions._recursiveGet(each, objectID);
                    if (found) return found;
                }
            } catch (err) {
                _didIteratorError2 = true;
                _iteratorError2 = err;
            } finally {
                try {
                    if (!_iteratorNormalCompletion2 && _iterator2.return) {
                        _iterator2.return();
                    }
                } finally {
                    if (_didIteratorError2) {
                        throw _iteratorError2;
                    }
                }
            }
        }

        return false;
    },

    /**
     * Useful utility for figuring out the stuff that needs to be cleaned up
     * @param tree
     * @param objectID
     * @param type row/column
     * @param useFullTree - if we're going two levels up (module to column),
     *    tree won't contain that object anymore, so we need the original full tree
     * @param fullTree
     * @returns {*}
     */
    _recursiveGetClosestParent: function _recursiveGetClosestParent(tree, objectID, type) {
        var useFullTree = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
        var fullTree = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;
        var directParent = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;

        if (useFullTree) tree = fullTree;
        if (tree != undefined) {
            if (tree.items != undefined && tree.items != false) {
                var index = tree.items.findIndex(function (item) {
                    return item.id == objectID;
                });
                if (index >= 0) {
                    if (tree.type == type) {
                        return tree;
                    } else if (directParent == false) {
                        return TreeReducerFunctions._recursiveGetClosestParent(tree, tree.id, type, true, fullTree, directParent);
                    }
                } else {
                    var _iteratorNormalCompletion3 = true;
                    var _didIteratorError3 = false;
                    var _iteratorError3 = undefined;

                    try {
                        for (var _iterator3 = tree.items[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
                            var each = _step3.value;

                            var found = TreeReducerFunctions._recursiveGetClosestParent(each, objectID, type, false, fullTree, directParent);
                            if (found) return found;
                        }
                    } catch (err) {
                        _didIteratorError3 = true;
                        _iteratorError3 = err;
                    } finally {
                        try {
                            if (!_iteratorNormalCompletion3 && _iterator3.return) {
                                _iterator3.return();
                            }
                        } finally {
                            if (_didIteratorError3) {
                                throw _iteratorError3;
                            }
                        }
                    }
                }
            }
        }
        return false;
    },

    /**
     * Give it a tree and a row and it will equalize the width of all of the columns
     * @param tree
     * @param row
     * @returns {*}
     */
    _equalizeColumnWidths: function _equalizeColumnWidths(tree, row) {
        if (typeof row == 'string') row = TreeReducerFunctions._recursiveGet(tree, row);

        if (row != undefined && row.items != undefined) {
            (function () {
                var numItems = row.items.length;
                var newWidth = 100 / numItems;

                var _loop = function _loop(column) {
                    tree = _extends({}, tree, { items: tree.items.map(function (each) {
                            return TreeReducerFunctions._recursiveUpdate(each, column.id, { width: newWidth }, 'UPDATE_OBJECT_PROPERTY');
                        }) });
                };

                var _iteratorNormalCompletion4 = true;
                var _didIteratorError4 = false;
                var _iteratorError4 = undefined;

                try {
                    for (var _iterator4 = row.items[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {
                        var column = _step4.value;

                        _loop(column);
                    }
                } catch (err) {
                    _didIteratorError4 = true;
                    _iteratorError4 = err;
                } finally {
                    try {
                        if (!_iteratorNormalCompletion4 && _iterator4.return) {
                            _iterator4.return();
                        }
                    } finally {
                        if (_didIteratorError4) {
                            throw _iteratorError4;
                        }
                    }
                }
            })();
        }
        return tree;
    },

    _wrapColumn: function _wrapColumn(module) {
        var width = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100;

        return {
            type: 'column',
            id: TreeReducerFunctions.generateId('col'),
            width: width,
            standard: {
                linked: (0, _default_standard2.default)().default
            },
            items: [module]
        };
    },

    _wrapRow: function _wrapRow() {
        var module = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
        var columns = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

        if (columns == false) {
            columns = [TreeReducerFunctions._wrapColumn(module)
            /*{
                type: 'column',
                id: TreeReducerFunctions.generateId('col'),
                width: 100,
                items: [module]
            }*/
            ];
        }

        return {
            type: 'row',
            id: TreeReducerFunctions.generateId('row'),
            settings: {
                verticalAlign: 'top'
            },
            standard: {
                linked: (0, _default_standard2.default)().default
            },
            items: columns
        };
    },

    _rowNoPadding: function _rowNoPadding(row) {
        row.standard.linked.padding = {
            top: 0,
            bottom: 0,
            left: 0,
            right: 0,
            useDefault: 'custom',
            units: 'em'
        };

        return row;
    },

    _wrapRowsInColumn: function _wrapRowsInColumn(rows) {
        return {
            type: 'column',
            id: TreeReducerFunctions.generateId('col'),
            width: 100,
            standard: {
                linked: (0, _default_standard2.default)().default
            },
            items: rows
        };
    },

    _wrapColumnsInRow: function _wrapColumnsInRow(columns) {
        return TreeReducerFunctions._wrapRow(false, columns);
        /*return {
            type: 'row',
            id: TreeReducerFunctions.generateId('row'),
            items: columns
        }*/
    },

    _isThisOnlyModuleInOriginationColumn: function _isThisOnlyModuleInOriginationColumn(tree, object) {
        var originationColumn = TreeReducerFunctions._recursiveGetClosestParent(tree, object.id, 'column');
        return originationColumn.items.length == 1;
    },

    _isThisOnlyColumnInOriginationRow: function _isThisOnlyColumnInOriginationRow(tree, object) {
        var originationRow = TreeReducerFunctions._recursiveGetClosestParent(tree, object.id, 'row');
        return originationRow.items.length == 1;
    },

    _flattenColumnRowIntoParentRow: function _flattenColumnRowIntoParentRow(tree, originationRow, object, objectTo, direction, doRecursiveAdd) {
        //If we deleted a column from a row inside another column and now there's only one column left
        //we should flatten that column and row into the parent column
        originationRow = TreeReducerFunctions._recursiveGet(tree, originationRow.id);
        if (originationRow && originationRow.items && originationRow.items.length == 1) {
            TreeReducerFunctions._debugLog('2.1');
            //Modules that can hold other modules will still have a column parent, even though we shouldn't be reaching this so we need a
            //direct parent function to make sure we're not skipping when we don't want to
            var originationParentColumn = TreeReducerFunctions._recursiveGetClosestParent(tree, originationRow.id, 'column', false, tree, true);
            if (originationParentColumn) {
                TreeReducerFunctions._debugLog('2.2');
                //If the objectTo is the row that we're about to delete, then we should add back the object now
                if (originationRow.id == objectTo.id) {
                    TreeReducerFunctions._debugLog('2.2.1');
                    tree = TreeReducerFunctions._recursiveAdd(tree, object, objectTo, direction);
                    doRecursiveAdd = false;
                }
                var _iteratorNormalCompletion5 = true;
                var _didIteratorError5 = false;
                var _iteratorError5 = undefined;

                try {
                    for (var _iterator5 = originationRow.items[0].items[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {
                        var module = _step5.value;

                        tree = TreeReducerFunctions._recursiveAdd(tree, module, originationRow, 'left');
                    }
                } catch (err) {
                    _didIteratorError5 = true;
                    _iteratorError5 = err;
                } finally {
                    try {
                        if (!_iteratorNormalCompletion5 && _iterator5.return) {
                            _iterator5.return();
                        }
                    } finally {
                        if (_didIteratorError5) {
                            throw _iteratorError5;
                        }
                    }
                }

                tree = TreeReducerFunctions._recursiveDelete(tree, originationRow.id);
            }
        }

        return { tree: tree, doRecursiveAdd: doRecursiveAdd };
    },

    _flattenColumnsIntoParentRow: function _flattenColumnsIntoParentRow(tree, originationColumn, objectTo) {
        var deletedARow = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;

        //If we deleted a row, then we may have to flatten remaining columns into the parent row
        //get it again
        //Or, if we deleted a module from a column, we're not adding it back to that column,
        //and now there's only one row with columns left inside the parent column
        //we should flatten that row and columns into the parent row
        originationColumn = TreeReducerFunctions._recursiveGet(tree, originationColumn.id);
        if (originationColumn && originationColumn.items && originationColumn.items.length == 1 && (deletedARow || originationColumn.items[0].type == 'row' && objectTo.id != originationColumn.items[0].id)) {
            TreeReducerFunctions._debugLog('3.1');
            //Flatten if there is only 1 remaining row because that means the row with columns is an unnecessary construct
            //and the columns can actually be a part of the parent row
            if (originationColumn.items[0].type == 'row') {
                TreeReducerFunctions._debugLog('3.2');
                //let parentRow = recursiveGetClosestParent(tree, originationColumn.id, 'row', false, tree);
                //originationColumn.items[0].items.reverse();
                var _iteratorNormalCompletion6 = true;
                var _didIteratorError6 = false;
                var _iteratorError6 = undefined;

                try {
                    for (var _iterator6 = originationColumn.items[0].items[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {
                        var column = _step6.value;

                        //update the widths
                        var childColWidth = column.width;
                        var newWidth = childColWidth / 100 * originationColumn.width;
                        column.width = newWidth;
                        tree = TreeReducerFunctions._recursiveAdd(tree, column, originationColumn, 'left');
                    }
                } catch (err) {
                    _didIteratorError6 = true;
                    _iteratorError6 = err;
                } finally {
                    try {
                        if (!_iteratorNormalCompletion6 && _iterator6.return) {
                            _iterator6.return();
                        }
                    } finally {
                        if (_didIteratorError6) {
                            throw _iteratorError6;
                        }
                    }
                }

                tree = TreeReducerFunctions._recursiveDelete(tree, originationColumn.id);
            }
        }

        return tree;
    },

    _debugLog: function _debugLog(where) {
        //console.log(where, other);

        var other = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
    },

    _moveObject: function _moveObject(tree, object, objectTo, direction, newObjectToValue, newObjectToValue2) {

        /*console.log('move object', {
            tree,
            object,
            objectTo,
            direction,
            newObjectToValue,
            newObjectToValue2
        });*/

        switch (object.type) {
            case 'module':
                return TreeReducerFunctions._moveModule(tree, object, objectTo, direction, newObjectToValue, newObjectToValue2);
                break;
            case 'column':
                return TreeReducerFunctions._moveColumn(tree, object, objectTo, direction, newObjectToValue, newObjectToValue2);
                break;
            case 'row':
                return TreeReducerFunctions._moveRow(tree, object, objectTo, direction, newObjectToValue, newObjectToValue2);
                break;
        }

        return tree;
    },

    /**
     *
     * @param tree
     * @param object
     * @param objectTo
     * @param direction
     * @param newObjectToValue
     * @param newObjectToValue2
     * @returns {*}
     *
     * @todo need to eventually put cleanup into its own function that goes through the entire tree
     */
    _moveModule: function _moveModule(tree, object, objectTo, direction, newObjectToValue, newObjectToValue2) {
        var equalizeOrigination = false;
        var equalizeDestination = false;
        var deletedARow = false;
        var deletedRowColumn = false;
        var doRecursiveAdd = true;
        var originationModule = TreeReducerFunctions._recursiveGetClosestParent(tree, object.id, 'module', false, tree);
        var originationColumn = TreeReducerFunctions._recursiveGetClosestParent(tree, object.id, 'column', false, tree);
        var originationColumnId = originationColumn.id;
        var originationRow = TreeReducerFunctions._recursiveGetClosestParent(tree, object.id, 'row', false, tree);
        TreeReducerFunctions._debugLog('originationModule');
        TreeReducerFunctions._debugLog(originationModule);
        TreeReducerFunctions._debugLog(originationColumn);
        TreeReducerFunctions._debugLog(originationRow);
        TreeReducerFunctions._debugLog(object.id);
        var destinationColumn = '';
        var destinationRow = objectTo.type == 'row' ? objectTo : TreeReducerFunctions._recursiveGetClosestParent(tree, objectTo.id, 'row', false, tree);
        var isThisOnlyModuleInOriginationColumn = '';
        var isThisOnlyColumnInOriginationRow = '';
        var isThisOnlyColumnInDestinationRow = destinationRow.items.length == 1;
        var newObjectTo = JSON.parse(JSON.stringify(objectTo));
        var newObjectTo2 = JSON.parse(JSON.stringify(objectTo));
        var newDirection = direction == 'topNew' || direction == 'bottomNew';

        if (object.inlineModuleAlign != undefined && object.inlineModuleAlign != null) {
            object.inlineModuleAlign = null;
            object.standard.linked.max_width = { value: 100, units: '%', useDefault: 'default' };
            object.standard.linked.margin = { top: 0, right: 0, left: 0, bottom: 1, units: 'em', useDefault: 'default' };
        }

        //If we're adding in between paragraphs in a text module we're always going to want to add below
        if (newObjectToValue && newObjectToValue2 && direction == 'top') {
            direction = 'bottom';
        }

        //Delete the module if we need to - don't need to delete if we're adding a brand new module
        if (object.gettingAdded == undefined || object.gettingAdded == false) {
            isThisOnlyModuleInOriginationColumn = originationModule && originationModule.moduleType == 'text' ? false : originationColumn.items.length == 1;
            isThisOnlyColumnInOriginationRow = originationModule && originationModule.moduleType == 'text' ? false : originationRow.items.length == 1;
            /*console.log('originationColumn', originationColumn);
            console.log('originationRow', originationRow);
            console.log('isThisOnlyModuleInOriginationColumn', isThisOnlyModuleInOriginationColumn);
            console.log('isThisOnlyColumnInOriginationRow', isThisOnlyColumnInOriginationRow);
            console.log('originationColumn.items.length', originationColumn.items.length);
            console.log('originationRow.items.length', originationRow.items.length);*/
            if (isThisOnlyModuleInOriginationColumn && isThisOnlyColumnInOriginationRow) {
                TreeReducerFunctions._debugLog('1.1 module');
                //If it's the only module and column, but we're adding it back to the same row, cancel
                if (objectTo.id == originationRow.id || objectTo.id == originationColumn.id) {
                    return tree;
                }

                //Delete the original row if we're moving the only item from that row
                tree = TreeReducerFunctions._recursiveDelete(tree, originationRow.id);
                deletedARow = true;
            } else if (isThisOnlyModuleInOriginationColumn) {
                TreeReducerFunctions._debugLog('1.2 module');

                //If it's the only module, but we're adding it back to the same column, cancel
                if (objectTo.id == originationColumn.id) {
                    return tree;
                }

                if (originationRow.id != destinationRow.id || objectTo.type != 'column') {
                    TreeReducerFunctions._debugLog('1.2.1 module');
                    tree = TreeReducerFunctions._recursiveDelete(tree, originationColumn.id);
                    equalizeOrigination = true;
                } else {
                    TreeReducerFunctions._debugLog('1.2.2 module');
                    if (originationColumn.id == objectTo.id) {
                        //In this case we're not actually moving anything
                        return tree;
                    } else {
                        //In this case we want to just rearrange a column
                        tree = TreeReducerFunctions._recursiveDelete(tree, originationColumn.id);

                        // We're now adding a module to the left or right of a module or a column
                        // If we're adding to a column, we can just return an add
                        // Otherwise,
                        return TreeReducerFunctions._recursiveAdd(tree, originationColumn, objectTo, direction);
                    }
                }
            } else {
                TreeReducerFunctions._debugLog('1.3 module');
                tree = TreeReducerFunctions._recursiveDelete(tree, object.id);
            }

            var result = TreeReducerFunctions._flattenColumnRowIntoParentRow(tree, originationRow, object, objectTo, direction, doRecursiveAdd);
            tree = result.tree;
            doRecursiveAdd = result.doRecursiveAdd;

            tree = TreeReducerFunctions._flattenColumnsIntoParentRow(tree, originationColumn, objectTo, deletedARow);
        }

        //We don't need the gettingAdded property anymore
        if (object.gettingAdded != undefined) delete object.gettingAdded;

        if (objectTo.type == 'column') {
            TreeReducerFunctions._debugLog('4.1 module');
            object = TreeReducerFunctions._wrapColumn(object);
            equalizeDestination = true;

            destinationColumn = TreeReducerFunctions._recursiveGetClosestParent(tree, objectTo.id, 'column', false, tree);
            if (destinationColumn && destinationColumn.items.length <= 1) {
                tree = TreeReducerFunctions._flattenColumnsIntoParentRow(tree, originationColumn, objectTo, true);
            }
        }

        if (objectTo.type == 'row') {
            TreeReducerFunctions._debugLog('4.2 module');

            //If we're doing topNew or bottomNew, we're going to handle wrapping below
            if (!newDirection) {

                //If the row is in a column, we don't need to wrap it
                var destinationParentColumn = TreeReducerFunctions._recursiveGetClosestParent(tree, objectTo.id, 'column', false, tree);

                if (!destinationParentColumn) {
                    //If the row has only one column, then add to the column after the last module, don't create another row
                    if (objectTo.items.length == 1) {
                        TreeReducerFunctions._debugLog('4.2.1 module');
                        object = TreeReducerFunctions._wrapRow(object);
                        doRecursiveAdd = true;
                        /*let lastModuleIndex = objectTo.items[0].items.length - 1;
                         objectTo = objectTo.items[0].items[lastModuleIndex];*/
                    } else {
                        TreeReducerFunctions._debugLog('4.2.2 module');
                        object = TreeReducerFunctions._wrapRow(object);
                    }
                }

                //If the row has a container as a direct parent, then we DO need to wrap it.
                var destinationParentContainer = TreeReducerFunctions._recursiveGetClosestParent(tree, objectTo.id, 'container', false, tree, true);

                if (destinationParentContainer) {
                    if (objectTo.items.length == 1) {
                        TreeReducerFunctions._debugLog('4.2.3 module');
                        object = TreeReducerFunctions._wrapRow(object);
                        doRecursiveAdd = true;
                    } else {
                        TreeReducerFunctions._debugLog('4.2.4 module');
                        object = TreeReducerFunctions._wrapRow(object);
                    }
                }
            }

            //If we're doing topAdd or bottomAdd, then we're going to need to modify objectTo by wrapping its existing columns in a new row
            // and then adding our new object row above or below that row by updating the existing objectTo row items
            // and at that point, we will have already added so we can set doRecursiveAdd to false
            if (newDirection) {
                TreeReducerFunctions._debugLog('4.2.5 module');

                //If we're moving a module from the target row, we have to delete it from objectTo
                // Even though we deleted it from tree above, we're rebuilding objectTo here
                objectTo = TreeReducerFunctions._recursiveDelete(objectTo, object.id);

                //If there is only one column, we only need to add this new object to the top or bottom - we don't need to create a new row
                if (objectTo.items.length > 1) {
                    TreeReducerFunctions._debugLog('4.2.5.1 module');

                    var newRow = TreeReducerFunctions._wrapRow(false, objectTo.items);
                    newRow = TreeReducerFunctions._rowNoPadding(newRow);
                    var newColumn = false;
                    if (direction == 'topNew') {
                        newColumn = TreeReducerFunctions._wrapRowsInColumn([object, newRow]);
                    } else {
                        newColumn = TreeReducerFunctions._wrapRowsInColumn([newRow, object]);
                    }

                    tree = _extends({}, tree, { items: tree.items.map(function (each) {
                            return TreeReducerFunctions._recursiveUpdate(each, objectTo.id, { items: [newColumn] }, 'UPDATE_OBJECT_PROPERTY');
                        }) });
                } else {
                    TreeReducerFunctions._debugLog('4.2.5.2 module');

                    var newColumnItems = objectTo.items[0].items;
                    if (direction == 'topNew') {
                        newColumnItems = [object].concat(newColumnItems);
                    } else {
                        newColumnItems = newColumnItems.concat(object);
                    }

                    tree = _extends({}, tree, { items: tree.items.map(function (each) {
                            return TreeReducerFunctions._recursiveUpdate(each, objectTo.items[0].id, { items: newColumnItems }, 'UPDATE_OBJECT_PROPERTY');
                        }) });
                }

                doRecursiveAdd = false;
            }
        }

        //If the objectTo is a module and we're adding to the left or right, there's a lot of stuff we might have to do
        if (objectTo.type == 'module') {
            TreeReducerFunctions._debugLog('4.3 module');
            if (direction == 'left' || direction == 'right') {
                TreeReducerFunctions._debugLog('4.3.1 module');
                //Let's retrieve the origination column again just to make sure we're operating on fresh data
                destinationColumn = TreeReducerFunctions._recursiveGetClosestParent(tree, objectTo.id, 'column', false, tree);

                if (destinationColumn.items.length <= 1) {
                    TreeReducerFunctions._debugLog('4.3.2 module');
                    //If the module is the only module in a column, then we need to create another column and add that column after
                    object = TreeReducerFunctions._wrapColumn(object);
                    objectTo = destinationColumn;
                    equalizeDestination = true;

                    //If the module is added next to a module in a row within a column, and that row is the only item in the column, flatten it
                    tree = TreeReducerFunctions._flattenColumnsIntoParentRow(tree, originationColumn, objectTo, true);
                } else {
                    TreeReducerFunctions._debugLog('4.3.3 module');
                    //If the module is one of several modules in a column, then we need to wrap that module in a column,
                    //wrap this module in a column, and wrap both columns in a row.
                    var originalDestinationId = objectTo.id;

                    //Retrieve objectTo again because it may be a module that just had an item deleted if we're moving from inline in text to left/right of same text
                    objectTo = TreeReducerFunctions._recursiveGet(tree, objectTo.id);
                    objectTo = TreeReducerFunctions._wrapColumn(objectTo, 50);
                    object = TreeReducerFunctions._wrapColumn(object, 50);
                    if (direction == 'left') {
                        TreeReducerFunctions._debugLog('4.3.3.1 module');
                        object = TreeReducerFunctions._wrapColumnsInRow([object, objectTo]);
                    } else {
                        TreeReducerFunctions._debugLog('4.3.3.2 module');
                        object = TreeReducerFunctions._wrapColumnsInRow([objectTo, object]);
                    }

                    tree = _extends({}, tree, { items: tree.items.map(function (each) {
                            return TreeReducerFunctions._recursiveUpdate(each, originalDestinationId, object, 'UPDATE_OBJECT_PROPERTY');
                        }) });

                    doRecursiveAdd = false;
                }
            }
        }

        if (doRecursiveAdd) {
            TreeReducerFunctions._debugLog('5.1 module');
            tree = TreeReducerFunctions._recursiveAdd(tree, object, objectTo, direction);
        }

        if (equalizeOrigination) {
            TreeReducerFunctions._debugLog('5.2 module');
            //Need to pass ID so that we're getting the row again after deletes
            tree = TreeReducerFunctions._equalizeColumnWidths(tree, originationRow.id);
        }

        if (equalizeDestination) {
            TreeReducerFunctions._debugLog('5.3 module');
            var destinationStillExists = TreeReducerFunctions._recursiveGet(tree, destinationRow.id);
            if (destinationStillExists == false) {
                TreeReducerFunctions._debugLog('5.3.1 module');
                destinationRow = TreeReducerFunctions._recursiveGetClosestParent(tree, objectTo.id, 'row', false, tree);
            }
            tree = TreeReducerFunctions._equalizeColumnWidths(tree, destinationRow.id);
        }

        //If we're adding into a text module between paragraphs, we'll have additional newObjectTo and newObjectTo2 properties
        if (newObjectToValue && newObjectToValue2) {
            TreeReducerFunctions._debugLog('6.1 module');
            //Create a copy of objectTo that we'll eventually update with newObjectToValue2

            //We don't ever want newObjectTo2 to have items
            if (newObjectTo2.items != undefined && newObjectTo2.items.length) {
                TreeReducerFunctions._debugLog('6.1.1 module');
                delete newObjectTo2.items;
            }

            //Update existing objectTo with newObjectToValue
            newObjectTo.settings.linked.text.text = newObjectToValue;
            tree = TreeReducerFunctions._recursiveUpdate(tree, objectTo.id, newObjectTo.settings, 'UPDATE_OBJECT_SETTINGS');

            //Give the copy a new id
            newObjectTo2.id = TreeReducerFunctions.generateId('mod');

            //Update the copy's value with newObjectToValue2
            newObjectTo2.settings.linked.text.text = newObjectToValue2;

            //If inlineLeft or inlineRight, we need to add the object we're moving as an item in newObjectTo2
            if (direction == 'inlineLeft' || direction == 'inlineRight') {
                TreeReducerFunctions._debugLog('6.1.2 module');
                //Since we've already added it into the tree, let's delete it here
                tree = TreeReducerFunctions._recursiveDelete(tree, object.id);

                //Now let's add it as an item
                newObjectTo2.items = [object];

                //Set object inlineModuleAlign
                if (direction == 'inlineLeft') {
                    object.inlineModuleAlign = 'left';
                    object.standard.linked.margin = { left: 0, right: 30 };
                } else {
                    object.inlineModuleAlign = 'right';
                    object.standard.linked.margin = { right: 0, left: 30 };
                }

                object.standard.linked.margin.top = 0;
                object.standard.linked.margin.bottom = 30;
                object.standard.linked.margin.units = 'rem';
                object.standard.linked.margin.useDefault = 'default';
                object.standard.linked.max_width = { value: 50, units: '%', useDefault: 'default' };

                //Add newObjectTo2 after objectTo
                tree = TreeReducerFunctions._recursiveAdd(tree, newObjectTo2, objectTo, 'bottom');
            } else {
                TreeReducerFunctions._debugLog('6.1.3 module');
                //Add the copy after the object (the item that we just moved)
                tree = TreeReducerFunctions._recursiveAdd(tree, newObjectTo2, object, 'bottom');
            }
        } else if ((direction == 'inlineLeft' || direction == 'inlineRight') && objectTo.type == 'module') {
            TreeReducerFunctions._debugLog('6.2 module');
            //We can still be adding inline without breaking up the objectTo into newObjectTo and newObjectTo2
            //if we're adding to the top of a text module

            tree = TreeReducerFunctions._recursiveDelete(tree, object.id);

            //Set object inlineModuleAlign
            if (direction == 'inlineLeft') {
                object.inlineModuleAlign = 'left';
                object.standard.linked.margin = { left: 0, right: 30 };
            } else {
                object.inlineModuleAlign = 'right';
                object.standard.linked.margin = { right: 0, left: 30 };
            }

            object.standard.linked.margin.top = 0;
            object.standard.linked.margin.bottom = 30;
            object.standard.linked.margin.units = 'px';
            object.standard.linked.margin.useDefault = 'default';
            object.standard.linked.max_width = { value: 50, units: '%', useDefault: 'default' };

            tree = TreeReducerFunctions._recursiveUpdate(tree, objectTo.id, { items: [object] }, 'UPDATE_OBJECT_PROPERTY');
        }

        return tree;
    },

    _moveColumn: function _moveColumn(tree, object, objectTo, direction) {
        var doRecursiveAdd = true;
        var originationRow = TreeReducerFunctions._recursiveGetClosestParent(tree, object.id, 'row', false, tree);
        var destinationRow = TreeReducerFunctions._recursiveGetClosestParent(tree, objectTo.id, 'row', false, tree);
        var isThisOnlyColumnInOriginationRow = originationRow.items != undefined ? originationRow.items.length == 1 : false;

        //Don't need to delete if we're adding a new column (like from a template)
        if (isThisOnlyColumnInOriginationRow && (object.gettingAdded == undefined || object.gettingAdded == false)) {
            //Delete the original row if we're moving the only column from that row
            tree = TreeReducerFunctions._recursiveDelete(tree, originationRow.id);
            TreeReducerFunctions._debugLog('1.1 column');
        } else {
            tree = TreeReducerFunctions._recursiveDelete(tree, object.id);
            TreeReducerFunctions._debugLog('1.2 column');
        }

        //If this is a template being added, but not a global template, replace all of the IDs of the children
        if (object.template && object.template != 'global' && object.gettingAdded != undefined && object.gettingAdded == true) {
            object = TreeReducerFunctions._recursiveGiveChildrenNewIds(object);
        }

        //We don't need the gettingAdded property anymore
        if (object.gettingAdded != undefined) delete object.gettingAdded;

        //If we deleted a column from a row inside another column and now there's only one column left
        //we should flatten that column and row into the parent column
        //unless the row's parent is a container which means the flattening should be contained
        originationRow = TreeReducerFunctions._recursiveGet(tree, originationRow.id);
        var originationContainer = TreeReducerFunctions._recursiveGetClosestParent(tree, originationRow.id, 'container', false, tree, true);
        if (originationRow && originationRow.items.length == 1 && originationRow.id != destinationRow.id && originationContainer == false) {
            TreeReducerFunctions._debugLog('2.1 column');
            var originationParentColumn = TreeReducerFunctions._recursiveGetClosestParent(tree, originationRow.id, 'column', false, tree);
            if (originationParentColumn) {
                TreeReducerFunctions._debugLog('2.1.1 column');
                //If the objectTo is the row that we're about to delete, then we should add back the object now
                if (originationRow.id == objectTo.id) {
                    TreeReducerFunctions._debugLog('2.1.1.1 column');
                    tree = TreeReducerFunctions._recursiveAdd(tree, object, objectTo, direction);
                    doRecursiveAdd = false;
                }
                var _iteratorNormalCompletion7 = true;
                var _didIteratorError7 = false;
                var _iteratorError7 = undefined;

                try {
                    for (var _iterator7 = originationRow.items[0].items[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {
                        var module = _step7.value;

                        TreeReducerFunctions._debugLog('2.1.1.2 column');
                        tree = TreeReducerFunctions._recursiveAdd(tree, module, originationRow, 'left');
                    }
                } catch (err) {
                    _didIteratorError7 = true;
                    _iteratorError7 = err;
                } finally {
                    try {
                        if (!_iteratorNormalCompletion7 && _iterator7.return) {
                            _iterator7.return();
                        }
                    } finally {
                        if (_didIteratorError7) {
                            throw _iteratorError7;
                        }
                    }
                }

                tree = TreeReducerFunctions._recursiveDelete(tree, originationRow.id);
            }
        }

        if (doRecursiveAdd) {
            TreeReducerFunctions._debugLog('3.1 column');
            tree = TreeReducerFunctions._recursiveAdd(tree, object, objectTo, direction);
        }

        if (originationRow.id != destinationRow.id) {
            tree = TreeReducerFunctions._equalizeColumnWidths(tree, originationRow.id);
            tree = TreeReducerFunctions._equalizeColumnWidths(tree, destinationRow.id);
        }

        return tree;
    },

    _moveRow: function _moveRow(tree, object, objectTo, direction, newObjectToValue, newObjectToValue2) {
        var newObjectTo = JSON.parse(JSON.stringify(objectTo));
        var newObjectTo2 = JSON.parse(JSON.stringify(objectTo));
        var newDirection = direction == 'topNew' || direction == 'bottomNew';
        var doRecursiveAdd = true;

        //If we're adding in between paragraphs in a text module we're always going to want to add below
        if (newObjectToValue && newObjectToValue2 && direction == 'top') {
            direction = 'bottom';
        }

        //Don't need to delete if we're adding a new row (like from a template)
        if (object.gettingAdded == undefined || object.gettingAdded == false) {
            tree = TreeReducerFunctions._recursiveDelete(tree, object.id);
        }

        //If this is a template being added, but not a global template, replace all of the IDs of the children
        if (object.template && object.template != 'global' && object.gettingAdded != undefined && object.gettingAdded == true) {
            //object.id = TreeReducerFunctions.generateId(object.type);
            object = TreeReducerFunctions._recursiveGiveChildrenNewIds(object);
        }

        //We don't need the gettingAdded property anymore
        if (object.gettingAdded != undefined) delete object.gettingAdded;

        //If we're doing topAdd or bottomAdd, then we're going to need to modify objectTo by wrapping its existing columns in a new row
        // and then adding our new object row above or below that row by updating the existing objectTo row items
        // and at that point, we will have already added so we can set doRecursiveAdd to false
        if (newDirection) {
            TreeReducerFunctions._debugLog('6.2.5 module');

            //If we're moving a module from the target row, we have to delete it from objectTo
            // Even though we deleted it from tree above, we're rebuilding objectTo here
            objectTo = TreeReducerFunctions._recursiveDelete(objectTo, object.id);

            //If there is only one column, we only need to add this new object to the top or bottom - we don't need to create a new row
            if (objectTo.items.length > 1) {
                TreeReducerFunctions._debugLog('6.2.5.1 module');

                var newRow = TreeReducerFunctions._wrapRow(false, objectTo.items);
                newRow = TreeReducerFunctions._rowNoPadding(newRow);
                var newColumn = false;
                if (direction == 'topNew') {
                    newColumn = TreeReducerFunctions._wrapRowsInColumn([object, newRow]);
                } else {
                    newColumn = TreeReducerFunctions._wrapRowsInColumn([newRow, object]);
                }

                tree = _extends({}, tree, { items: tree.items.map(function (each) {
                        return TreeReducerFunctions._recursiveUpdate(each, objectTo.id, { items: [newColumn] }, 'UPDATE_OBJECT_PROPERTY');
                    }) });
            } else {
                TreeReducerFunctions._debugLog('6.2.5.2 module');

                var newColumnItems = objectTo.items[0].items;
                if (direction == 'topNew') {
                    newColumnItems = [object].concat(newColumnItems);
                } else {
                    newColumnItems = newColumnItems.concat(object);
                }

                tree = _extends({}, tree, { items: tree.items.map(function (each) {
                        return TreeReducerFunctions._recursiveUpdate(each, objectTo.items[0].id, { items: newColumnItems }, 'UPDATE_OBJECT_PROPERTY');
                    }) });
            }

            doRecursiveAdd = false;
        }

        if (doRecursiveAdd) {
            tree = TreeReducerFunctions._recursiveAdd(tree, object, objectTo, direction);
        }

        //If we're adding into a text module between paragraphs, we'll have additional newObjectTo and newObjectTo2 properties
        if (newObjectToValue && newObjectToValue2) {
            TreeReducerFunctions._debugLog('6.1 module');
            //Create a copy of objectTo that we'll eventually update with newObjectToValue2

            //We don't ever want newObjectTo2 to have items
            if (newObjectTo2.items != undefined && newObjectTo2.items.length) {
                TreeReducerFunctions._debugLog('6.1.1 module');
                delete newObjectTo2.items;
            }

            //Update existing objectTo with newObjectToValue
            newObjectTo.settings.linked.text.text = newObjectToValue;
            tree = TreeReducerFunctions._recursiveUpdate(tree, objectTo.id, newObjectTo.settings, 'UPDATE_OBJECT_SETTINGS');

            //Give the copy a new id
            newObjectTo2.id = TreeReducerFunctions.generateId('mod');

            //Update the copy's value with newObjectToValue2
            newObjectTo2.settings.linked.text.text = newObjectToValue2;

            TreeReducerFunctions._debugLog('6.1.3 module');
            //Add the copy after the object (the item that we just moved)
            tree = TreeReducerFunctions._recursiveAdd(tree, newObjectTo2, object, 'bottom');
        }

        return tree;
    },

    _allModules: function _allModules(array) {
        var modules = [];

        var _iteratorNormalCompletion8 = true;
        var _didIteratorError8 = false;
        var _iteratorError8 = undefined;

        try {
            for (var _iterator8 = array[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {
                var each = _step8.value;

                if (each.type != undefined && each.type == 'module') {
                    modules = modules.concat(each);
                } else {
                    if (each.items != undefined) {
                        modules = modules.concat(TreeReducerFunctions._allModules(each.items));
                    }
                }
            }
        } catch (err) {
            _didIteratorError8 = true;
            _iteratorError8 = err;
        } finally {
            try {
                if (!_iteratorNormalCompletion8 && _iterator8.return) {
                    _iterator8.return();
                }
            } finally {
                if (_didIteratorError8) {
                    throw _iteratorError8;
                }
            }
        }

        return modules;
    },

    /**
     * Join adjacent text modules
     * @param tree
     * @param object
     */
    _joinObject: function _joinObject(tree, object) {
        var parentColumn = TreeReducerFunctions._recursiveGetClosestParent(tree, object.id, 'column', false, tree);
        var newTextValue = '';
        var adjacentModules = [];
        var breakLoop = false;
        var stop = false;
        var length = parentColumn.items.length;
        var newObjectTo = JSON.parse(JSON.stringify(object));

        var joinAdjacent = function joinAdjacent() {
            newObjectTo.settings.linked.text.text = newTextValue;
            tree = TreeReducerFunctions._recursiveUpdate(tree, object.id, newObjectTo.settings, 'UPDATE_OBJECT_SETTINGS');
            adjacentModules.forEach(function (adj) {
                if (adj.id != object.id) {
                    tree = TreeReducerFunctions._recursiveDelete(tree, adj.id);
                }
            });
        };

        parentColumn.items.forEach(function (mod, index) {
            if (stop) return;

            if (mod.moduleType == 'text' && (mod.items == undefined || mod.items == false || mod.items.length < 1)) {
                newTextValue += mod.settings.linked.text.text;
                adjacentModules.push(mod);

                //We've reached the last module so join what we have
                if (index + 1 == length) {
                    joinAdjacent();
                    stop = true;
                }
            } else {
                //if we've found the module that we're joining to, let's update that module with the newTextValue
                //delete the other modules, and break the loop by returning the tree
                if (breakLoop && adjacentModules.length > 1) {
                    //we've already passed the module where we clicked join and now we've reached a module that isn't joinable
                    //so join what we can and stop the loop
                    joinAdjacent();
                    stop = true;
                } else if (breakLoop && adjacentModules.length == 1) {
                    //we've already passed the module where we clicked join and there's nothing to join it with
                    stop = true;
                }

                if (mod.moduleType == 'text' && breakLoop == false) {
                    //this is a text module with an item and we can start with that and merge down if we find more text modules
                    newTextValue = mod.settings.linked.text.text;
                    adjacentModules = [mod];
                } else {
                    newTextValue = '';
                    adjacentModules = [];
                }
            }

            if (mod.id == object.id) {
                breakLoop = true;
            }
        });

        return tree;
    },

    _updateLastUpdated: function _updateLastUpdated(theState) {
        theState.lastUpdated = new Date();
        return theState;
    },

    doAction: function doAction(state, type) {
        var additional = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

        if (additional == null) {
            additional = {
                object: false,
                objectTo: false,
                direction: false,
                newObjectToValue: false,
                newObjectToValue2: false,
                update: false
            };
        }
        /*console.log('action type', type);
        console.log('addtional info', additional);
        console.log('addtional info object id', additional.object.id);
        console.log('addtional info module type', additional.object.moduleType);
        console.log('addtional info update', additional.update);*/
        switch (type) {
            case 'UPDATE_OBJECT_SETTINGS':
                return _extends({}, state, { items: state.items.map(function (each) {
                        return TreeReducerFunctions._recursiveUpdate(each, additional.object.id, additional.update, type);
                    }) });
                break;
            case 'UPDATE_OBJECT_STANDARD':
                return _extends({}, state, { items: state.items.map(function (each) {
                        return TreeReducerFunctions._recursiveUpdate(each, additional.object.id, additional.update, type);
                    }) });
                /*return update( state, { items: { $set: state.items.map((each) => {
                    return TreeReducerFunctions._recursiveUpdate(each, additional.object.id, additional.update, type);
                }) } } );*/
                break;
            case 'UPDATE_OBJECT_PROPERTY':
                return _extends({}, state, { items: state.items.map(function (each) {
                        return TreeReducerFunctions._recursiveUpdate(each, additional.object.id, additional.update, type);
                    }) });
                break;
            case 'UPDATE_TEMPLATE_UNIQUES':
                return TreeReducerFunctions._recursiveUpdateTemplateUniques(state, additional.object);
                break;
            case 'APPLY_TEMPLATE_UNIQUE':
                return _extends({}, state, { items: state.items.map(function (each) {
                        return TreeReducerFunctions._recursiveTemplateUnique(each, additional.object.templateUnique);
                    }) });
                break;
            case 'DELETE_OBJECT':
                window.ocbDoNeededInitializePlugins();
                return TreeReducerFunctions._deleteObject(state, additional.object);
                break;
            case 'DUPLICATE_OBJECT':
                return TreeReducerFunctions._recursiveDuplicate(state, additional.object);
                break;
            case 'ADD_OBJECT':
                return TreeReducerFunctions._recursiveAdd(state, additional.object, additional.objectTo, additional.direction, additional.newObjectToValue, additional.newObjectToValue2);
                break;
            case 'EQUALIZE_COLUMN_WIDTHS':
                return TreeReducerFunctions._equalizeColumnWidths(state, additional.object);
                break;
            case 'MOVE_OBJECT':
                return TreeReducerFunctions._moveObject(state, additional.object, additional.objectTo, additional.direction, additional.newObjectToValue, additional.newObjectToValue2);
                break;
            case 'JOIN_OBJECT':
                return TreeReducerFunctions._joinObject(state, additional.object);
                break;
            case 'ASSIGN_CHILD_TEMPLATE_UNIQUE_IDS':
                return TreeReducerFunctions._assignChildTemplateNewIds(state, additional.object, additional.extra);
                break;
            case 'REPLACE_CHILD_IDS':
                var newObject = TreeReducerFunctions._recursiveGiveChildrenNewIds(additional.object);
                return _extends({}, state, { items: state.items.map(function (each) {
                        return TreeReducerFunctions._recursiveUpdate(each, additional.object.id, { items: newObject.items }, 'UPDATE_OBJECT_PROPERTY');
                    }) });
                break;
            case 'RESET_ROW':
                return _extends({}, state, { items: state.items.map(function (row) {
                        if (row.id == action.row.id) {
                            return action.row;
                        } else {
                            return row;
                        }
                    }) });
        }
        return state;
    },

    isThisTheRightTree: function isThisTheRightTree(state, action) {
        var objectId = null;
        var objectToId = null;
        var parentTree = null;

        if (action != undefined) {
            if (action.object != undefined && action.object != false && (action.object.gettingAdded == undefined || action.object.gettingAdded == false)) {
                objectId = typeof action.object == 'string' ? action.object : action.object.id;
                parentTree = TreeReducerFunctions._recursiveGetClosestParent(state, objectId, 'tree', false, state);
            } else if (action.objectTo != undefined && action.objectTo != false) {
                objectToId = typeof action.objectTo == 'string' ? action.objectTo : action.objectTo.id;
                parentTree = TreeReducerFunctions._recursiveGetClosestParent(state, objectToId, 'tree', false, state);
            }
        }

        return parentTree ? true : false;

        //const objectId = typeof object == 'string' ? object : object.id;
        //const parentTree = TreeReducerFunctions._recursiveGetClosestParent(state, objectId, 'tree', false, state);
        //return parentTree ? true : false;
    },


    generateId: function generateId(type) {
        return type + (Date.now().toString(36) + Math.random().toString(36).substr(2, 9)).toLowerCase();
    }

};

exports.default = TreeReducerFunctions;

/***/ }),

/***/ 34:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactRedux = __webpack_require__(5);

var _redux = __webpack_require__(7);

var _api_helpers = __webpack_require__(6);

var _api_helpers2 = _interopRequireDefault(_api_helpers);

var _index = __webpack_require__(8);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
//import SettingsHelpers from '../../shared/helpers/settings_helpers';


//import DeepMerge from 'deepmerge';

//https://github.com/KyleAMathews/deepmerge
var SkinsRender = function (_Component) {
    _inherits(SkinsRender, _Component);

    function SkinsRender(props) {
        _classCallCheck(this, SkinsRender);

        var _this = _possibleConstructorReturn(this, (SkinsRender.__proto__ || Object.getPrototypeOf(SkinsRender)).call(this, props));

        _this.state = {};
        return _this;
    }

    _createClass(SkinsRender, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _this2 = this;

            //If this runs multiple times things get screwed up so make sure this is only running once
            if (this.props.templatePreview != undefined && this.props.templatePreview == true || Object.keys(this.props.skinState).length >= 1) return;

            var skins = _api_helpers2.default.doRequest('getSetting', false, { setting: 'ocb_site_skins' });
            skins.then(function (response) {
                _this2.props.updateSkinStateFromAPI(response);
            }).catch(function (error) {
                console.log('There are no skins to load');
            });
        }
    }, {
        key: 'componentDidUpdate',
        value: function componentDidUpdate(prevProps) {}
    }, {
        key: 'render',
        value: function render() {
            var fullCSSString = '';

            var skins = this.props.skins ? this.props.skins : this.props.skinState;

            Object.keys(skins).forEach(function (key) {
                fullCSSString += skins[key].css;
                fullCSSString += skins[key].standardCSS;
            });

            if (this.props.templatePreview != undefined && this.props.templatePreview == true) {
                if (this.props.pageTemplates != undefined && this.props.pageTemplates) {
                    fullCSSString = fullCSSString.replaceAll('.ocb-tree ', '.ocb-overlay-item ');
                } else if (this.props.regularTemplates != undefined && this.props.regularTemplates) {
                    fullCSSString = fullCSSString.replaceAll('.ocb-tree ', '.ocb-template ');
                } else {
                    fullCSSString = fullCSSString.replaceAll('.ocb-tree ', '.ocb-template-option ');
                }
            }

            return _react2.default.createElement('style', { type: 'text/css', id: 'ocb-skins-css', dangerouslySetInnerHTML: { __html: fullCSSString } });
        }
    }]);

    return SkinsRender;
}(_react.Component);

function mapStateToProps(_ref) {
    var skinState = _ref.skinState;

    //will show up as props inside of Tree
    return { skinState: skinState };
}

function mapDispatchToProps(dispatch) {
    return (0, _redux.bindActionCreators)({ updateSkinStateFromAPI: _index.updateSkinStateFromAPI }, dispatch);
}

//We pass null for the first value because we don't need a mapStateToProps since props are being passed up from below into state
//http://stackoverflow.com/questions/35443167/dispatch-is-not-a-function-when-argument-to-maptodispatchtoprops-in-redux
exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(SkinsRender);

/***/ }),

/***/ 35:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactDraggable = __webpack_require__(58);

var _reactDraggable2 = _interopRequireDefault(_reactDraggable);

var _column = __webpack_require__(129);

var _column2 = _interopRequireDefault(_column);

var _row = __webpack_require__(132);

var _row2 = _interopRequireDefault(_row);

var _module = __webpack_require__(131);

var _module2 = _interopRequireDefault(_module);

var _global_template = __webpack_require__(130);

var _global_template2 = _interopRequireDefault(_global_template);

var _object_controls = __webpack_require__(74);

var _object_controls2 = _interopRequireDefault(_object_controls);

var _item_background = __webpack_require__(106);

var _item_background2 = _interopRequireDefault(_item_background);

var _item_layer = __webpack_require__(127);

var _item_layer2 = _interopRequireDefault(_item_layer);

var _item_shape_divider = __webpack_require__(128);

var _item_shape_divider2 = _interopRequireDefault(_item_shape_divider);

var _settings_helpers = __webpack_require__(2);

var _settings_helpers2 = _interopRequireDefault(_settings_helpers);

var _standard_helpers = __webpack_require__(59);

var _standard_helpers2 = _interopRequireDefault(_standard_helpers);

var _index = __webpack_require__(8);

var _redux = __webpack_require__(7);

var _reactRedux = __webpack_require__(5);

var _deepmerge = __webpack_require__(9);

var _deepmerge2 = _interopRequireDefault(_deepmerge);

var _default_standard = __webpack_require__(16);

var _default_standard2 = _interopRequireDefault(_default_standard);

var _api_helpers = __webpack_require__(6);

var _api_helpers2 = _interopRequireDefault(_api_helpers);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ObjectWrap = function (_Component) {
    _inherits(ObjectWrap, _Component);

    function ObjectWrap(props) {
        _classCallCheck(this, ObjectWrap);

        var _this = _possibleConstructorReturn(this, (ObjectWrap.__proto__ || Object.getPrototypeOf(ObjectWrap)).call(this, props));

        _this.state = {
            top: 0,
            left: 0,
            moving: false,
            hover: false
        };
        return _this;
    }

    _createClass(ObjectWrap, [{
        key: 'shouldComponentUpdate',
        value: function shouldComponentUpdate(nextProps, nextState) {
            //For now, need columns and rows to update so that globals can be saved as regular
            if (this.props.object.type != 'module') return true;

            if (this.state.hover != nextState.hover || this.state.hover || this.state.moving != nextState.moving || this.state.moving || this.props.currentlyEditingObject && this.props.object.id == this.props.currentlyEditingObject.id || this.props.currentlyEditingObject != false && nextProps.currentlyEditingObject == false || this.props.currentlyEditingObject != false
            //&& ( this.props.object.type == 'column' || this.props.object.type == 'row' )
            && this.props.currentlyEditingObject != nextProps.currentlyEditingObject || this.props.undoRedoIndex != nextProps.undoRedoIndex || this.props.undoRedoLength != nextProps.undoRedoLength || this.props.object.skinId != nextProps.object.skinId || this.props.treeProps.resize.widthChanging != nextProps.treeProps.resize.widthChanging || this.props.treeProps.settings.settingsActive != nextProps.treeProps.settings.settingsActive || this.props.treeProps.templates.editingGlobal != nextProps.treeProps.templates.editingGlobal || this.props.object.template != nextProps.object.template || this.props.object.moduleType != undefined && this.props.object.moduleType == 'tabs' || this.props.object.moduleType != undefined && this.props.object.moduleType == 'side_by_side' || this.props.treeProps.templates.editingGlobal && this.props.treeProps.parentGlobal != undefined && this.props.treeProps.templates.editingGlobal == this.props.treeProps.parentGlobal.id) {
                //console.log('object.js shouldComponentUpdate', this.props.object.type, this.props.object.id, this.props.treeProps.templates.editingGlobal, this.props.object.moduleType);
                return true;
            } else {
                return false;
            }
        }
    }, {
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _this2 = this;

            if (this.props.object.template == 'global') {
                //Retrieve the globals from the API
                var theGlobal = _api_helpers2.default.doRequest('getTemplate', null, { customId: this.props.object.templateId });

                // update the templateGlobal store
                theGlobal.then(function (response, error) {
                    window.ocbMountTimeoutOrderTester('global did mount and retrieve');

                    //Update the tree as well
                    _this2.props.updateObjectProperty(_this2.props.object, {
                        settings: response.object.settings,
                        standard: response.object.standard,
                        items: response.object.items
                    });
                }).catch(function (error) {
                    //console.log('global mount error', error);
                });
            }
        }
    }, {
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps(nextProps) {
            if (this.props.treeProps.inlineEdit.editing != nextProps.treeProps.inlineEdit.editing || this.props.treeProps.move.state != nextProps.treeProps.move.state || this.props.treeProps.settings.settingsActive != nextProps.treeProps.settings.settingsActive) {
                this.setState({ hover: false });
            }
        }
    }, {
        key: 'getObjectControls',
        value: function getObjectControls() {
            var controlConfigDefault = {
                settings: true,
                standard: true,
                joinAdjacent: true,
                saveTemplate: true,
                delete: true,
                duplicate: true,
                move: true
            };
            var controlConfig = this.props.controlConfig != undefined ? Object.assign(controlConfigDefault, this.props.controlConfig) : controlConfigDefault;
            return _react2.default.createElement(_object_controls2.default, { object: this.props.object, parentRow: this.props.parentRow, parentColumn: this.props.parentColumn, treeProps: this.props.treeProps, controlConfig: controlConfig });
        }
    }, {
        key: 'startMoveFunction',
        value: function startMoveFunction() {
            var column = false;
            var row = false;

            if (this.props.object.type == 'column' || this.props.object.type == 'module') {
                row = this.props.treeProps.row;
            }

            if (this.props.object.type == 'module') {
                column = this.props.treeProps.column;
            }

            this.setState({ moving: true });
            this.props.treeProps.move.moveStart();
            this.props.treeProps.move.moveFrom(this.props.object, column, row);
        }
    }, {
        key: 'stopMoveFunction',
        value: function stopMoveFunction() {
            var _this3 = this;

            this.setState({
                top: 0,
                left: 0,
                moving: false
            });
            setTimeout(function () {
                _this3.props.treeProps.move.moveStop();
            }, 40);
        }
    }, {
        key: 'editOnRightClick',
        value: function editOnRightClick(e) {
            var noRightClick = ['tabs', 'side_by_side'];

            var moduleType = this.props.object.moduleType != undefined ? this.props.object.moduleType : false;
            if (moduleType && OCBGlobalSettings.permissions['edit_module_' + moduleType] != undefined && OCBGlobalSettings.permissions['edit_module_' + moduleType] == false) return;

            if (!this.props.treeProps.settings.settingsActive && !noRightClick.includes(this.props.object.moduleType)) {
                e.preventDefault();

                //If editable button text is double clicked, break out of this
                if (jQuery(e.target).hasClass('ocb-button-text')) {
                    return;
                }

                if (document.selection && document.selection.empty) {
                    document.selection.empty();
                } else if (window.getSelection) {
                    var sel = window.getSelection();
                    sel.removeAllRanges();
                }

                if (e.shiftKey && parent.OCBGlobalSettings.permissions.edit_modules_standard) {
                    this.props.treeProps.settings.makeSettingsActive(this.props.object, 'standard', this.props.parentRow, this.props.parentColumn);
                } else if (OCBGlobalSettings.permissions.edit_modules_settings) {
                    this.props.treeProps.settings.makeSettingsActive(this.props.object, 'settings', this.props.parentRow, this.props.parentColumn);
                }
            }
        }
    }, {
        key: 'shouldHaveObjectControls',
        value: function shouldHaveObjectControls(propsObject, treeProps) {
            var hoverClass = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

            //If is global and can't edit global
            if (propsObject.template != undefined && propsObject.template == 'global' && !OCBGlobalSettings.permissions.edit_globals) {
                return false;
            }

            //Hover
            //If settings panel is open, only let modules have hover
            //If settings panel is closed, let any type have hover
            //If object is currently being edited add hover
            if (this.state.hover == true && (treeProps.move.state == false || this.state.moving == true) && treeProps.resize.widthChanging == false && this.props.currentlyEditing && propsObject.type == 'module' || this.state.hover == true && (treeProps.move.state == false || this.state.moving == true) && treeProps.resize.widthChanging == false && !this.props.currentlyEditing || propsObject.id == this.props.currentlyEditing) {
                //Don't show controls if user doesn't have permissions for that object type
                if (propsObject.type == 'row' && (OCBGlobalSettings.permissions.move_rows || OCBGlobalSettings.permissions.duplicate_rows || OCBGlobalSettings.permissions.edit_rows_standard || OCBGlobalSettings.permissions.delete_rows) || propsObject.type == 'column' && (OCBGlobalSettings.permissions.move_columns || OCBGlobalSettings.permissions.duplicate_columns || OCBGlobalSettings.permissions.edit_columns_standard || OCBGlobalSettings.permissions.delete_columns) || propsObject.type == 'module' && (OCBGlobalSettings.permissions.move_modules || OCBGlobalSettings.permissions.duplicate_modules || OCBGlobalSettings.permissions.edit_modules_standard || OCBGlobalSettings.permissions.edit_modules_settings || OCBGlobalSettings.permissions.delete_modules) && (OCBGlobalSettings.permissions['edit_module_' + this.props.object.moduleType] || OCBGlobalSettings.permissions['edit_module_' + this.props.object.moduleType] == undefined)) {

                    //Don't give controls if this object is permission-locked
                    if (this.getBuilderRolePrevent(propsObject)) {
                        return false;
                    }

                    //No controls if global active and not within the global
                    if (!this.getIsWithinActiveGlobal(propsObject, treeProps)) {
                        return false;
                    }

                    if (hoverClass == false) {
                        //Prevent controls
                        var preventControls = this.getPreventControls(propsObject);

                        if (this.props.treeProps.templates.editingGlobal && preventControls != 'no' || this.props.treeProps.settings.settingsActive) {
                            return false;
                        }
                    }

                    return true;
                }
            }

            return false;
        }
    }, {
        key: 'getBuilderRolePrevent',
        value: function getBuilderRolePrevent(propsObject) {
            if (OCBGlobalSettings.builderRole && propsObject.standard.linked != undefined && propsObject.standard.linked.permission_lock != undefined && propsObject.standard.linked.permission_lock.choices != undefined && propsObject.standard.linked.permission_lock.choices.length > 0 && propsObject.standard.linked.permission_lock.choices.includes(OCBGlobalSettings.builderRole)) {
                return true;
            }

            return false;
        }
    }, {
        key: 'getPreventControls',
        value: function getPreventControls(propsObject) {
            var preventControls = this.props.preventControls;
            if (this.props.preventControls == false || this.props.preventControls == undefined) {
                if (this.props.treeProps.templates.editingGlobal && this.props.treeProps.templates.editingGlobal == propsObject.id) {
                    preventControls = 'no';
                }
            }
            return preventControls;
        }
    }, {
        key: 'getIsWithinActiveGlobal',
        value: function getIsWithinActiveGlobal(propsObject, treeProps) {
            var ifNoActiveGlobal = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;


            if (treeProps.templates != undefined && treeProps.templates.editingGlobal) {
                if (this.props.parentObjects != undefined) {

                    var global = treeProps.templates.editingGlobal;
                    if (global == propsObject.id || this.props.parentObjects.includes(global)) {
                        return true;
                    }
                } else {
                    //If it's a top level row the parentObjects prop may not be defined
                    if (treeProps.templates.editingGlobal == propsObject.id) {
                        return true;
                    }
                }
            }

            if (treeProps.templates == undefined || !treeProps.templates.editingGlobal) {
                return ifNoActiveGlobal;
            }

            return false;
        }
    }, {
        key: 'getRightClickFunction',
        value: function getRightClickFunction(propsObject, treeProps) {
            var _this4 = this;

            var rightClickFunction = null;

            if (this.getBuilderRolePrevent(propsObject)) {
                return null;
            }

            if (!this.getIsWithinActiveGlobal(propsObject, treeProps)) {
                return null;
            }

            if (propsObject.type == 'module') {
                rightClickFunction = this.editOnRightClick.bind(this);
            }

            if ((treeProps.move.state == false || this.state.moving == true) && treeProps.resize.widthChanging == false && this.props.currentlyEditing && propsObject.type == 'module' && propsObject.id != this.props.currentlyEditing && !this.props.editingSkin) {
                rightClickFunction = function rightClickFunction(e) {
                    e.preventDefault();
                    _this4.props.appMaybeSwitchActiveObjectGroup('maybe', propsObject, 'settings', _this4.props.parentColumn, _this4.props.parentRow);
                };
            }

            return rightClickFunction;
        }
    }, {
        key: 'getClickFunction',
        value: function getClickFunction(propsObject, treeProps) {
            var _this5 = this;

            var onClickFunction = null;

            if (this.getBuilderRolePrevent(propsObject)) {
                return null;
            }

            if (!this.getIsWithinActiveGlobal(propsObject, treeProps)) {
                return null;
            }

            //If the settings panel is open and you click on another module that is not currently being edited
            if ((treeProps.move.state == false || this.state.moving == true) && treeProps.resize.widthChanging == false && this.props.currentlyEditing && propsObject.type == 'module' && propsObject.id != this.props.currentlyEditing && !this.props.editingSkin) {
                onClickFunction = function onClickFunction() {
                    _this5.props.appMaybeSwitchActiveObjectGroup('maybe', propsObject, 'settings', _this5.props.parentColumn, _this5.props.parentRow);
                };
            }

            return onClickFunction;
        }
    }, {
        key: 'getStickyTarget',
        value: function getStickyTarget(settings) {
            var sticky = {
                stickyStop: null,
                stickyWidth: null,
                overlay: null,
                target: null
            };

            if (settings.sticky_or_target != undefined) {
                if (settings.sticky_or_target.choice == 'sticky') {
                    if (settings.unstick_when != undefined && settings.unstick_when.choice == 'target' && settings.unstick_when_target != undefined && settings.unstick_when_target.target != undefined) {
                        sticky.stickyStop = settings.unstick_when_target.target;
                    }
                    if (settings.stick_when_distance != undefined && settings.stick_when_distance.useDefault == 'custom') {
                        sticky.stickyOffset = settings.stick_when_distance.value;
                    } else {
                        sticky.stickyOffset = 0;
                    }
                    if (settings.minimum_sticky_width != undefined && settings.minimum_sticky_width.useDefault == 'custom') {
                        sticky.stickyWidth = settings.minimum_sticky_width.value;
                    } else {
                        sticky.stickyWidth = 768;
                    }
                }
                if (settings.sticky_or_target.choice == 'target') {
                    if (settings.target_name != undefined && settings.target_name.text) {
                        if (settings.row_display_type != undefined && settings.row_display_type.choice == 'overlay') {
                            sticky.overlay = settings.target_name.text;
                        }
                        sticky.target = settings.target_name.text;
                    }
                }
            }

            return sticky;
        }
    }, {
        key: 'render',
        value: function render() {
            var _this6 = this;

            //global templates get their settings from the templateGlobal state. They do not get their values from the tree. In fact, the tree values for the globals can be out of date
            /*if( this.props.object.template == 'global' && this.props.object.templateId && this.props.globals[this.props.object.templateId] != undefined ){
             this.props.object.settings = this.props.globals[this.props.object.templateId].settings;
             this.props.object.standard = this.props.globals[this.props.object.templateId].standard;
             if( this.props.globals[this.props.object.templateId].items != undefined && this.props.globals[this.props.object.templateId].items.length ) {
             this.props.object.items = this.props.globals[this.props.object.templateId].items;
             }
             }*/

            var propsObject = this.props.object;

            if (this.props.currentlyEditingObject && this.props.object.id == this.props.currentlyEditingObject.id) {
                propsObject = this.props.currentlyEditingObject;
                if (propsObject.moduleType == 'side_by_side') {
                    propsObject.items = this.props.object.items;
                }
                propsObject.deviceLock = this.props.object.deviceLock;
                propsObject.skinId = this.props.object.skinId;
            } else if (this.props.previouslyEditing && this.props.previouslyEditing.length) {
                //need this because some settings weren't being saved properly. Ex: edit a module standard settings like font size - then switch to parent column/row
                //tried to solve this by saving in app.js saveSettingsUpdate() but that wasn't enough - probably somehow has to do with shouldComponentUpdate
                var maybeObject = this.props.previouslyEditing.find(function (previous) {
                    return previous.editSettings.id == _this6.props.object.id;
                });
                if (maybeObject) propsObject = maybeObject.editSettings;
            }

            //We want to make sure that the appropriate parts of the object are initialized as objects
            // standard linked is sometimes an empty array, and defaultStandard default is an object so defaultStandard is getting overwritten
            var standard = propsObject.standard;
            if (standard == undefined) standard = {};
            if (standard.linked == undefined) standard.linked = {};
            if (Array.isArray(standard.linked)) {
                if (standard.linked.length == 0) {
                    standard.linked = {};
                }
            }

            standard.linked = (0, _deepmerge2.default)((0, _default_standard2.default)().default, standard.linked);

            //console.log('object.js this.props.object', this.props.object, this.props.currentlyEditingObject);

            var standardLinked = standard != undefined && standard.linked != undefined ? standard.linked : {};
            var type = propsObject.type;
            var treeProps = this.props.treeProps;
            var objectDivId = type + '-' + propsObject.id;
            var objectControls = null;
            var theObject = null;
            var moveClass = ".ocb-object-control-move-" + propsObject.id;
            var objectClass = 'ocb-object ocb-' + type + _standard_helpers2.default.get_nonskin_classes(this.props, propsObject, standardLinked);
            var skinId = propsObject.skinId != undefined && propsObject.skinId ? propsObject.skinId : false;
            var topShapeDivider = null;
            var bottomShapeDivider = null;
            var overlay = null;
            var overlayIndicator = null;

            var classesCSS = void 0;

            if (skinId && this.props.skinState[skinId] != undefined) {
                classesCSS = {
                    classes: this.props.skinState[skinId].standardClasses,
                    css: { additional: '' } //SettingsHelpers.wrapCSSInStyleTag( this.props.skinState[skinId].css, this.props.module.id, className )
                };
            } else {
                classesCSS = _standard_helpers2.default.get_style(standard, propsObject, skinId);
            }

            var theClasses = classesCSS.classes;
            var theCSS = classesCSS.css.additional;

            //Sticky
            var sticky = this.getStickyTarget(standardLinked);

            //Object Controls
            if (this.shouldHaveObjectControls(propsObject, treeProps)) {
                objectControls = this.getObjectControls();
            }

            //Hover Class
            if (this.shouldHaveObjectControls(propsObject, treeProps, true)) {
                objectClass += ' ocb-' + type + '-hover';
            }

            //OnClick
            var rightClickFunction = this.getRightClickFunction(propsObject, treeProps);
            var onClickFunction = this.getClickFunction(propsObject, treeProps);

            //Background Items
            var backgroundItem = _react2.default.createElement(_item_background2.default, { customId: propsObject.id, settings: standard.linked, object: propsObject, skinId: this.props.object.skinId });
            var backgroundItem2 = _react2.default.createElement(_item_background2.default, { customId: propsObject.id, settings: standard.linked, suffix: '_2', object: propsObject, skinId: this.props.object.skinId });
            var decoratorItem = _react2.default.createElement(_item_background2.default, { customId: propsObject.id, settings: standard.linked, suffix: '_3', object: propsObject, skinId: this.props.object.skinId });
            var decoratorItemBehind = null;

            //Row specific
            if (type == 'row') {
                if (standardLinked.row_display_type != undefined) {
                    switch (standardLinked.row_display_type.choice) {
                        case 'overlay':
                            overlayIndicator = _react2.default.createElement(
                                'div',
                                { className: 'ocb-overlay-indicator ocb-save-remove-element' },
                                'This row is an overlay. It is only displayed to visitors when it is triggered by something like a button click.'
                            );
                            break;
                    }
                }

                if (standardLinked.top_shape_include != undefined && standardLinked.top_shape_include.yes == 1) {
                    topShapeDivider = _react2.default.createElement(_item_shape_divider2.default, { settings: standardLinked, object: propsObject, position: 'top' });
                }
                if (standardLinked.bottom_shape_include != undefined && standardLinked.bottom_shape_include.yes == 1) {
                    bottomShapeDivider = _react2.default.createElement(_item_shape_divider2.default, { settings: standardLinked, object: propsObject, position: 'bottom' });
                }
            }

            //Column specific
            var colWidthResizer = null;
            var colWidthIndicator = null;
            if (type == 'column') {
                if (OCBGlobalSettings.permissions.edit_columns_width) {
                    var columnWidthActive = '';
                    var columnWidthSingleActive = '';
                    if (treeProps.resize.widthChanging) {
                        if (treeProps.resize.widthChangingColumn.id == propsObject.id) {
                            columnWidthSingleActive = 'active';
                            columnWidthActive = 'active';
                        } else if (treeProps.resize.widthChangingColumnLeft.id == propsObject.id) {
                            columnWidthSingleActive = 'active';
                        }
                    }

                    var colWidth = treeProps.resize.widthToFraction(propsObject.width);
                    colWidthIndicator = _react2.default.createElement(
                        'div',
                        { className: 'ocb-column-width-single-indicator ocb-save-remove-element ' + columnWidthSingleActive },
                        colWidth
                    );

                    if (treeProps.previousColumn != null) {
                        colWidthResizer = _react2.default.createElement(
                            'div',
                            { className: 'ocb-column-width-resize ocb-save-remove-element ' + columnWidthActive, onMouseDown: function onMouseDown(e) {
                                    return treeProps.resize.changeWidth(treeProps.previousColumn, _this6.props.object, treeProps.row, e);
                                } },
                            _react2.default.createElement('div', { className: 'ocb-column-width-indicator' })
                        );
                    }
                }
            }

            //Module specific
            var inlineModule = 0;
            var moduleType = propsObject.moduleType != undefined ? propsObject.moduleType : '';
            var moduleContainsItems = propsObject.containsItems != undefined ? propsObject.containsItems : 0;
            if (type == 'module') {
                if (propsObject.inlineModuleAlign == 'left' || propsObject.inlineModuleAlign == 'right') {
                    inlineModule = 1;
                }
            }

            //For passing down the tree
            if (propsObject.template != undefined && propsObject.template == 'global') {
                treeProps = _extends({}, treeProps, { parentGlobal: propsObject });
            }

            //Keep a list of all parents of the object
            var parentObjects = this.props.parentObjects;
            if (parentObjects == undefined || this.props.depth.overall == 0) {
                parentObjects = [];
            }

            parentObjects = parentObjects.concat(propsObject.id);

            var preventControls = this.getPreventControls(propsObject);

            //Get the actual object type
            switch (type) {
                case 'row':
                    theObject = _react2.default.createElement(_row2.default, { row: propsObject, treeProps: treeProps, depth: this.props.depth, preventControls: preventControls, classes: classesCSS.classes.standardClasses, parentObjects: parentObjects });
                    break;

                case 'column':
                    theObject = _react2.default.createElement(_column2.default, { column: propsObject, parentRow: this.props.parentRow, treeProps: treeProps, depth: this.props.depth, preventControls: preventControls, classes: classesCSS.classes.standardClasses, parentObjects: parentObjects });
                    break;

                case 'module':
                    theObject = _react2.default.createElement(_module2.default, { module: propsObject, parentRow: this.props.parentRow, parentColumn: this.props.parentColumn, treeProps: treeProps, depth: this.props.depth, preventControls: preventControls, classes: classesCSS.classes.standardClasses, parentObjects: parentObjects });

                    if (!inlineModule) {
                        var theModuleClass = 'ocb-the-module';
                        if (skinId) {
                            theModuleClass += ' ' + skinId;
                        }

                        theModuleClass += ' ' + theClasses.standardClasses;
                        theObject = _react2.default.createElement(
                            'div',
                            { id: objectDivId, className: theModuleClass },
                            backgroundItem2,
                            backgroundItem,
                            objectControls,
                            decoratorItemBehind,
                            theObject,
                            decoratorItem
                        );
                        objectDivId = objectDivId + '-parent';
                        objectControls = null;
                        backgroundItem = null;
                        backgroundItem2 = null;
                        decoratorItem = null;
                        decoratorItemBehind = null;
                    }
                    break;
            }

            var additionalCSS = _standard_helpers2.default.get_other_css(standard, propsObject, skinId);
            var additionalCSSTag = additionalCSS ? _settings_helpers2.default.wrapCSSInStyleTag(additionalCSS, propsObject.id) : null;
            var cssTag = theCSS ? _settings_helpers2.default.wrapCSSInStyleTag(theCSS, propsObject.id) : null;

            //We need the templateUnique ID as part of the div for the moving UI because this templateUnique is used to distinguish between instances of the same module ID in different globals
            var templateUniqueId = '';
            if (propsObject.templateUnique != undefined && propsObject.templateUnique && propsObject.template != 'global') {
                templateUniqueId = propsObject.templateUnique;
            }

            //Layers
            var layers = null;
            if (standard.linked.layers != undefined && standard.linked.layers.items != undefined && standard.linked.layers.items.length) {
                layers = standard.linked.layers.items.map(function (layer, index) {
                    if (layer.hide_layer != undefined && layer.hide_layer.yes == 1) return null;

                    var theKey = propsObject.id;
                    theKey += index;
                    theKey += layer.layer_type != undefined ? layer.layer_type.choice : '';
                    theKey += layer.layer_xy != undefined ? layer.layer_xy.x : '';
                    theKey += layer.layer_xy != undefined ? layer.layer_xy.y : '';
                    return _react2.default.createElement(_item_layer2.default, { key: theKey, objectId: propsObject.id, settings: layer, index: index, type: propsObject.type });
                }).filter(function (layer) {
                    return layer != null;
                });
                var layerClasses = '';
                if (standard.linked.overflow != undefined && standard.linked.overflow.choice == 'hidden') {
                    layerClasses += ' ocb-overflow-hidden';
                }
                if (layers.length) {
                    layers = _react2.default.createElement(
                        'div',
                        { id: 'layers-' + propsObject.id, className: 'ocb-item-layers' + layerClasses },
                        layers
                    );
                } else {
                    layers = null;
                }
            }

            //Build the object
            theObject = _react2.default.createElement(
                'div',
                { id: objectDivId,
                    className: objectClass + ' ' + theClasses.standardParentClasses,
                    'data-ocb-type': type,
                    'data-ocb-id': propsObject.id,
                    'data-ocb-template-unique': templateUniqueId,
                    'data-ocb-depth-overall': this.props.depth.overall,
                    'data-ocb-depth-row': this.props.depth.row,
                    'data-ocb-depth-column': this.props.depth.column,
                    'data-ocb-inline-module': inlineModule,
                    'data-ocb-module-type': moduleType,
                    'data-ocb-module-contains-items': moduleContainsItems,
                    'data-ocb-target': sticky.target,
                    'data-ocb-overlay': sticky.overlay,
                    'data-ocb-sticky-stop': sticky.stickyStop,
                    'data-ocb-sticky-offset': sticky.stickyOffset,
                    'data-ocb-sticky-width': sticky.stickyWidth,
                    onContextMenu: rightClickFunction,
                    onClick: onClickFunction,
                    onMouseMove: function onMouseMove() {
                        return treeProps.canAddControls() ? _this6.setState({ hover: true }) : null;
                    },
                    onMouseLeave: function onMouseLeave() {
                        return treeProps.canAddControls() ? _this6.setState({ hover: false }) : null;
                    }
                },
                cssTag,
                additionalCSSTag,
                colWidthResizer,
                backgroundItem2,
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-item-background ' + theClasses.backgroundWrapClasses },
                    backgroundItem
                ),
                topShapeDivider,
                bottomShapeDivider,
                objectControls,
                decoratorItemBehind,
                theObject,
                decoratorItem,
                layers,
                colWidthIndicator,
                overlayIndicator
            );

            //Wrap in Global if necessary
            if (propsObject.template != undefined && propsObject.template == 'global') {
                theObject = _react2.default.createElement(
                    _global_template2.default,
                    { object: propsObject, depth: this.props.depth, treeProps: treeProps },
                    theObject
                );
            }

            return _react2.default.createElement(
                _reactDraggable2.default,
                {
                    position: { x: this.state.left, y: this.state.top },
                    handle: moveClass,
                    defaultPosition: { x: 50, y: 50 },
                    onStart: this.startMoveFunction.bind(this),
                    onStop: this.stopMoveFunction.bind(this) },
                theObject
            );
        }
    }]);

    return ObjectWrap;
}(_react.Component);

function mapStateToProps(_ref) {
    var undoRedoState = _ref.undoRedoState,
        workspaceState = _ref.workspaceState,
        skinState = _ref.skinState;


    //console.log('mapStateToProps undoRedoState', undoRedoState.currentIndex);
    var defaultReturn = {
        currentlyEditing: false,
        currentlyEditingColumn: false,
        currentlyEditingRow: false,
        currentlyEditingObject: false,
        previouslyEditing: false,
        undoRedoIndex: undoRedoState.currentIndex,
        undoRedoLength: undoRedoState.states.length,
        skinState: skinState,
        editingSkin: workspaceState != undefined && workspaceState.editingSkin != undefined ? workspaceState.editingSkin : false
    };

    if (workspaceState == undefined) return defaultReturn;
    if (workspaceState.editSettings == undefined) return defaultReturn;
    if (workspaceState.editSettings.id == undefined) return defaultReturn;

    return {
        currentlyEditing: workspaceState.editSettings.id,
        currentlyEditingObject: workspaceState.editSettings,
        currentlyEditingColumn: workspaceState.parentColumn == undefined || workspaceState.parentColumn.id == undefined ? false : workspaceState.parentColumn.id,
        currentlyEditingRow: workspaceState.parentRow == undefined || workspaceState.parentRow.id == undefined ? false : workspaceState.parentRow.id,
        previouslyEditing: workspaceState.previousRevertSettings == undoRedoState || workspaceState.previousRevertSettings == false ? false : workspaceState.previousRevertSettings,
        undoRedoIndex: undoRedoState.currentIndex,
        undoRedoLength: undoRedoState.states.length,
        skinState: skinState,
        editingSkin: workspaceState.editingSkin
    };
}

//Anything returned from this function will end up as props on the Tree container
function mapDispatchToProps(dispatch) {
    //whenever update module standard or settings is called, the result should be passed to our reducers
    return (0, _redux.bindActionCreators)({ updateTemplateGlobals: _index.updateTemplateGlobals, updateObjectProperty: _index.updateObjectProperty, appMaybeSwitchActiveObjectGroup: _index.appMaybeSwitchActiveObjectGroup }, dispatch);
}

//Promote Tree from component to container - it needs to know about the new dispatch methods above, updateModuleStandard
//and updateModuleSettings
exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(ObjectWrap);

/***/ }),

/***/ 350:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _tree = __webpack_require__(82);

var _tree2 = _interopRequireDefault(_tree);

var _site_options_render = __webpack_require__(24);

var _site_options_render2 = _interopRequireDefault(_site_options_render);

var _skins_render = __webpack_require__(34);

var _skins_render2 = _interopRequireDefault(_skins_render);

var _footer_css_render = __webpack_require__(374);

var _footer_css_render2 = _interopRequireDefault(_footer_css_render);

var _reactRedux = __webpack_require__(5);

var _redux = __webpack_require__(7);

var _app_overlay = __webpack_require__(13);

var _app_overlay2 = _interopRequireDefault(_app_overlay);

var _api_helpers = __webpack_require__(6);

var _api_helpers2 = _interopRequireDefault(_api_helpers);

var _url_helpers = __webpack_require__(27);

var _url_helpers2 = _interopRequireDefault(_url_helpers);

var _settings_helpers = __webpack_require__(2);

var _settings_helpers2 = _interopRequireDefault(_settings_helpers);

var _default_structure = __webpack_require__(81);

var _default_structure2 = _interopRequireDefault(_default_structure);

var _index = __webpack_require__(8);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

if (window.OffsproutPageStyle == undefined) {
    window.OffsproutPageStyle = [];
}

//https://github.com/KyleAMathews/deepmerge

var Workspace = function (_Component) {
    _inherits(Workspace, _Component);

    function Workspace(props) {
        _classCallCheck(this, Workspace);

        var _this = _possibleConstructorReturn(this, (Workspace.__proto__ || Object.getPrototypeOf(Workspace)).call(this, props));

        _this.state = {
            settingsActive: false,
            settingsOrStandard: null,
            revertSettings: null,
            editSettings: null
        };
        return _this;
    }

    _createClass(Workspace, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            this.shouldForceSiteGrower();
            this.shouldCreateSite();
            this.shouldCreateStructure();
            this.shouldNotifyStructure();
        }

        /**
         * Prompts user to run the Site Grower if it looks like it's a new site
         *
         * Runs if has_theme, has 1 or fewer pages, and has no structures
         */

    }, {
        key: 'shouldForceSiteGrower',
        value: function shouldForceSiteGrower() {
            var _this2 = this;

            if (!OCBGlobalSettings.permissions.has_theme //true if doesn't have theme
            || !parseInt(OCBGlobalSettings.forceSiteGrower)) return;

            switch (parseInt(OCBGlobalSettings.forceSiteGrower)) {
                case 1:
                    setTimeout(function () {
                        var siteGrowerMenuItem = OffsproutFilter.apply('toolbarMenu', []).find(function (item) {
                            return item.id == 'site_grower';
                        });
                        if (siteGrowerMenuItem.id == undefined) {
                            _this2.props.menuOpen();
                        } else {
                            _this2.props.menuOpen(siteGrowerMenuItem);
                            var choice = {
                                id: 'newOne',
                                path: ['welcome', 'theme', 'pages', 'menu', 'delete'],
                                finishConfirm: function finishConfirm(settings) {
                                    var toDelete = [];
                                    var toDeleteWords = '';

                                    if (settings.delete != undefined && settings.delete.deletePosts) toDelete.push('posts');
                                    if (settings.delete != undefined && settings.delete.deletePages) toDelete.push('pages');

                                    if (toDelete.length) {
                                        toDeleteWords = toDelete.join(' and ');
                                    }

                                    var message = '';

                                    if (toDeleteWords) {
                                        message = 'You are about to delete all existing ' + toDeleteWords + '! Templates and structures will not be deleted. Are you sure you want to do this?';
                                    }

                                    return message;
                                }
                            };
                            _this2.props.updateSiteGrowerProps({ what: choice.id, path: choice.path, pathCurrent: 'welcome', finishConfirm: choice.finishConfirm, finish: choice.finish });
                        }
                    }, 100);
                    break;
                case 2:
                    setTimeout(function () {
                        var siteGrowerMenuItem = OffsproutFilter.apply('toolbarMenu', []).find(function (item) {
                            return item.id == 'site_grower';
                        });
                        if (siteGrowerMenuItem.id == undefined) {
                            _this2.props.menuOpen();
                        } else {
                            _this2.props.menuOpen(siteGrowerMenuItem);
                            var choice = {
                                id: 'newTwo',
                                path: ['welcome', 'header', 'footer', 'colors']
                            };
                            _this2.props.updateSiteGrowerProps({ what: choice.id, path: choice.path, pathCurrent: 'welcome', finishConfirm: choice.finishConfirm, finish: choice.finish });
                        }
                    }, 100);
                    break;
                case 3:
                    setTimeout(function () {
                        var siteGrowerMenuItem = OffsproutFilter.apply('toolbarMenu', []).find(function (item) {
                            return item.id == 'site_grower';
                        });
                        if (siteGrowerMenuItem.id == undefined) {
                            _this2.props.menuOpen();
                        } else {
                            _this2.props.menuOpen(siteGrowerMenuItem);
                            var choice = {
                                id: 'newThree',
                                path: ['welcome', 'logo', 'company', 'social']
                            };
                            _this2.props.updateSiteGrowerProps({ what: choice.id, path: choice.path, pathCurrent: 'welcome', finishConfirm: choice.finishConfirm, finish: choice.finish });
                        }
                    }, 100);
                    break;
                case 4:
                    setTimeout(function () {
                        var siteGrowerMenuItem = OffsproutFilter.apply('toolbarMenu', []).find(function (item) {
                            return item.id == 'site_grower';
                        });
                        if (siteGrowerMenuItem.id == undefined) {
                            _this2.props.menuOpen();
                        } else {
                            _this2.props.menuOpen(siteGrowerMenuItem);
                            var choice = {
                                id: 'newFour',
                                path: ['welcome', 'structureConfirm']
                            };
                            _this2.props.updateSiteGrowerProps({ what: choice.id, path: choice.path, pathCurrent: 'welcome', finishConfirm: choice.finishConfirm, finish: choice.finish });
                        }
                    }, 100);
                    break;
                default:
                    var customSiteGrower = OffsproutFilter.apply('customSiteGrower', false);

                    if (customSiteGrower) {

                        setTimeout(function () {
                            var siteGrowerMenuItem = OffsproutFilter.apply('toolbarMenu', []).find(function (item) {
                                return item.id == 'site_grower';
                            });
                            if (siteGrowerMenuItem.id == undefined) {
                                _this2.props.menuOpen();
                            } else {
                                _this2.props.menuOpen(siteGrowerMenuItem);
                                _this2.props.updateSiteGrowerProps({ what: customSiteGrower.id, path: customSiteGrower.path, pathCurrent: customSiteGrower.pathCurrent, finishConfirm: customSiteGrower.finishConfirm, finish: customSiteGrower.finish });
                            }
                        }, 500);
                    }
                    break;
            }
        }

        /**
         * Prompts user to run the Site Grower if it looks like it's a new site
         *
         * Runs if has_theme, has 1 or fewer pages, and has no structures
         */

    }, {
        key: 'shouldCreateSite',
        value: function shouldCreateSite() {
            var _this3 = this;

            if (!OCBGlobalSettings.permissions.has_theme //true if doesn't have theme
            || !OCBGlobalSettings.should_create_site //true if has structures and more than one page
            || !OCBGlobalSettings.should_create_structure //true if has structure(s)
            || parseInt(OCBGlobalSettings.forceSiteGrower)) return;

            var overlayOptions = [{
                classes: '',
                onClick: function onClick() {
                    return _this3.shouldCreateStructure(true);
                },
                text: 'Don\'t Run'
            }, {
                classes: 'ocb-success',
                onClick: this.doSiteGrower.bind(this),
                text: 'Run'
            }];

            var overlay = _react2.default.createElement(_app_overlay2.default, {
                title: 'New Site?',
                content: 'It looks like this might be a new site. It\'s recommended that you run the Site Grower to jump-start your work!',
                stacked: '1',
                overlayStyle: 'small',
                options: overlayOptions
            });

            this.props.updateAppState('overlay', overlay);
        }

        /**
         * Prompts user to create the site's first structure
         *
         * Runs if has_theme, has more than 1 page, and has no structures
         *
         */

    }, {
        key: 'shouldCreateStructure',
        value: function shouldCreateStructure() {
            var _this4 = this;

            var force = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

            if (force == false && (!OCBGlobalSettings.permissions.has_theme || !OCBGlobalSettings.should_create_structure || OCBGlobalSettings.should_create_site || parseInt(OCBGlobalSettings.forceSiteGrower))) return;

            var overlayOptions = [{
                classes: '',
                onClick: function onClick() {
                    return _this4.props.updateAppState('overlay', null);
                },
                text: 'Don\'t Create'
            }, {
                classes: 'ocb-success ocb-admin-button-load',
                onClick: this.doCreateStructure.bind(this),
                text: 'Create'
            }];

            var overlay = _react2.default.createElement(_app_overlay2.default, {
                title: 'No Structures Found',
                content: 'Structures are an important part of your site and allow you to create uniform headers, footers, and more. Each page is assigned a structure. Create your default structure?',
                stacked: '1',
                overlayStyle: 'small',
                options: overlayOptions
            });

            this.props.updateAppState('overlay', overlay);
        }

        /**
         * Will notify user that they're clicking on the structure and should go to edit the Structure if they
         * want to make changes
         */

    }, {
        key: 'shouldNotifyStructure',
        value: function shouldNotifyStructure() {
            //If theme installed and has ability to create Structures
            if (!OCBGlobalSettings.permissions.has_theme || !OCBGlobalSettings.permissions.create_structures) return;

            var newThis = this;

            //Initiate jQuery
            jQuery(document).ready(function ($) {

                var $workspace = $('.ocb-workspace');

                $workspace.on('click', '.ocb-module', function (e) {
                    if ($(this).closest('#treeContent').length //like a module in the workspace
                    || $(this).find('.module-content').length //like the content module
                    || newThis.props.workspaceState.settingsActive) {
                        return;
                    }

                    var overlayOptions = [{
                        classes: '',
                        link: OCBGlobalSettings.editStructureUrl,
                        text: 'Edit Structure'
                    }, {
                        classes: 'ocb-danger',
                        onClick: function onClick() {
                            return newThis.props.updateAppState('overlay', null);
                        },
                        text: 'Cancel'
                    }];

                    var overlay = _react2.default.createElement(_app_overlay2.default, {
                        title: 'Edit Structure?',
                        content: 'Site-wide content areas, like headers and footers, are editable within Structures. (\'Edit Structure\' can also be found by clicking the \'Edit\' button in the toolbar)',
                        stacked: '1',
                        overlayStyle: 'small',
                        options: overlayOptions
                    });

                    newThis.props.updateAppState('overlay', overlay);
                });
            });
        }
    }, {
        key: 'doSiteGrower',
        value: function doSiteGrower() {
            var _this5 = this;

            this.props.updateAppState('overlay', null);

            setTimeout(function () {
                var siteGrowerMenuItem = OffsproutFilter.apply('siteGrowerMenuItem', {});
                if (siteGrowerMenuItem.id == undefined) {
                    _this5.props.menuOpen();
                } else {
                    _this5.props.menuOpen(siteGrowerMenuItem);
                }
            }, 200);
            //this.props.updateSiteGrowerProps({pathCurrent: 'end'});
        }
    }, {
        key: 'doCreateStructure',
        value: function doCreateStructure() {
            var newStructure = _api_helpers2.default.doRequest('createCustom', {
                post_type: 'ocb_structure',
                title: 'Default',
                status: 'publish',
                meta: {
                    ocb_tree_content: (0, _default_structure2.default)()
                }
            });

            newStructure.then(function (response, error) {
                _settings_helpers2.default.saveStructureDefaults(response.customId).then(function (response2) {
                    var link = _url_helpers2.default.addParam(response.permalink, 'pageEdit', '1');
                    parent.window.location.href = _url_helpers2.default.addParam(link, 'returnOnSave', OCBGlobalSettings.postId);
                });
            });
        }

        /*makeSettingsActive( settings, which ){
            if( this.state.settingsActive ){
                this.revertSettings();
                setTimeout(() => {
                    this.makeSettingsActive(settings, which);
                }, 600);
            } else {
                //Clones the object - http://stackoverflow.com/questions/122102/what-is-the-most-efficient-way-to-deep-clone-an-object-in-javascript
                //will not clone functions so we have to be careful that no functions are in this object (probably fine)
                let revertSettings = JSON.parse(JSON.stringify(settings));
                this.setState({
                    settingsActive: true,
                    editSettings: settings,
                    revertSettings: revertSettings,
                    settingsOrStandard: which
                });
            }
        }
         makeSettingsInactive(){
            jQuery('body')
                .removeClass('ocb-device-laptop')
                .removeClass('ocb-device-tablet')
                .removeClass('ocb-device-phone');
            this.setState({settingsActive:false, editSettings: null, revertSettings: null, settingsOrStandard: null});
        }
         saveSettings(){
            this.makeSettingsInactive();
        }
         revertSettings(){
            if( this.state.settingsOrStandard == 'standard' ) {
                this.props.updateObjectStandard(this.state.editSettings, this.state.revertSettings[this.state.settingsOrStandard]);
            } else if( this.state.settingsOrStandard == 'settings' ){
                this.props.updateObjectSettings(this.state.editSettings, this.state.revertSettings[this.state.settingsOrStandard]);
            }
            this.makeSettingsInactive();
        }
         */

    }, {
        key: 'makeSettingsActive',
        value: function makeSettingsActive(object, which, parentRow, parentColumn) {
            var _this6 = this;

            var skin = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;

            if (object.skinId != undefined && object.skinId) {
                skin = this.props.skinState[object.skinId];
            }

            //This is inside of the iframe so just get html
            jQuery('html').addClass('ocb-html-settings-panel-active');
            if (this.props.workspaceState.settingsActive) {
                this.revertSettings();
                setTimeout(function () {
                    _this6.makeSettingsActive(object, which, parentRow, parentColumn, skin);
                }, 600);
            } else {
                this.props.appMakeSettingsActive(object, which, parentRow, parentColumn, skin);
            }
        }
    }, {
        key: 'revertSettings',
        value: function revertSettings() {
            if (this.props.workspaceState.settingsOrStandard == 'standard') {
                this.props.updateObjectStandard(this.props.workspaceState.editSettings, this.props.workspaceState.revertSettings[this.props.workspaceState.settingsOrStandard]);
            } else if (this.props.workspaceState.settingsOrStandard == 'settings') {
                this.props.updateObjectSettings(this.props.workspaceState.editSettings, this.props.workspaceState.revertSettings[this.props.workspaceState.settingsOrStandard]);
            }
            this.props.appMakeSettingsInactive();
        }
    }, {
        key: 'update',
        value: function update(device, property, _update) {
            var deviceShared = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;

            var newState = this.props.workspaceState.editSettings[this.props.workspaceState.settingsOrStandard];
            if (newState == undefined) {
                newState = {};
            }
            if (newState[device] == undefined) {
                newState[device] = {};
            }

            newState[device][property] = _update;
            if (this.props.workspaceState.settingsOrStandard == 'standard') {
                this.props.updateObjectStandard(this.props.workspaceState.editSettings, newState);
            } else if (this.state.settingsOrStandard == 'settings') {
                this.props.updateObjectSettings(this.props.workspaceState.editSettings, newState);
            }
        }

        /**
         * I DON'T THINK THIS IS CURRENTLY BEING USED - I THINK THE FUNCTION IN APP IS THE VERSION BEING USED
         *
         * @param object
         * @param update
         * @param device
         */

    }, {
        key: 'updateObjectProperty',
        value: function updateObjectProperty(object, update) {
            var device = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

            if (update.deviceLock != undefined && update.deviceLock === false && device) {
                jQuery('body').removeClass('ocb-device-laptop').removeClass('ocb-device-tablet').removeClass('ocb-device-phone').addClass('ocb-device-' + device);
            } else if (update.deviceLock === true) {
                jQuery('body').removeClass('ocb-device-laptop').removeClass('ocb-device-tablet').removeClass('ocb-device-phone');
            }
            this.props.updateObjectProperty(object, update);
        }
    }, {
        key: 'render',
        value: function render() {
            var appFunctions = {
                makeSettingsActive: this.makeSettingsActive.bind(this),
                makeSettingsInactive: this.props.appMakeSettingsInactive,
                isSettingsActive: this.props.settingsActive,
                saveSettings: this.props.appSaveSettings,
                revertSettings: this.revertSettings.bind(this),
                update: this.update.bind(this),
                updateObjectProperty: this.updateObjectProperty.bind(this)
            };

            var wrapClass = 'ocb-settings-panel-inactive';

            if (this.state.settingsActive) {
                wrapClass = 'ocb-settings-panel-active';
            }

            //Make sure that there's an ocb-device-laptop class on body to start (works with
            if (this.state.settingsActive) {
                var $body = jQuery('body');
                if (!$body.hasClass('ocb-device-laptop') && !$body.hasClass('ocb-device-tablet') && !$body.hasClass('ocb-device-phone')) {
                    $body.addClass('ocb-device-laptop');
                }
            }

            var treeContent = _react2.default.createElement(_tree2.default, { appFunctions: appFunctions, area: 'treeContent' });

            return _react2.default.createElement(
                'div',
                null,
                _react2.default.createElement(_site_options_render2.default, null),
                _react2.default.createElement(_skins_render2.default, null),
                _react2.default.createElement(
                    'div',
                    { id: 'treeContent' },
                    treeContent
                ),
                _react2.default.createElement(_footer_css_render2.default, null)
            );
        }
    }]);

    return Workspace;
}(_react.Component);

function mapStateToProps(_ref) {
    var workspaceState = _ref.workspaceState,
        skinState = _ref.skinState;

    //will show up as props inside of Tree
    return {
        workspaceState: workspaceState,
        skinState: skinState
    };
}
function mapDispatchToProps(dispatch) {
    return (0, _redux.bindActionCreators)({ updateObjectStandard: _index.updateObjectStandard, updateObjectSettings: _index.updateObjectSettings, updateObjectProperty: _index.updateObjectProperty, updateAppState: _index.updateAppState, appUpdateObjectProperty: _index.appUpdateObjectProperty, appUpdateObject: _index.appUpdateObject, appRevertSettings: _index.appRevertSettings, appSaveSettings: _index.appSaveSettings, appMakeSettingsInactive: _index.appMakeSettingsInactive, appMakeSettingsActive: _index.appMakeSettingsActive, updateSiteGrowerProps: _index.updateSiteGrowerProps, menuOpen: _index.menuOpen }, dispatch);
}

//We pass null for the first value because we don't need a mapStateToProps since props are being passed up from below into state
//http://stackoverflow.com/questions/35443167/dispatch-is-not-a-function-when-argument-to-maptodispatchtoprops-in-redux
exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(Workspace);

/***/ }),

/***/ 355:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

exports.default = function () {
    var siteSettings = {
        fields: [{
            id: 'content_heading',
            title: 'Content',
            description: 'Settings for sitewide content used by various modules',
            wrap: 'field_wrap',
            type: 'heading'
        }, {
            id: 'api_keys_group',
            title: 'API Keys',
            description: 'Enter API keys for the various services that you can connect to',
            wrap: 'field_group',
            items: ['google_maps']
        }, {
            id: 'google_maps',
            title: 'Google Maps API Key',
            description: 'This key is necessary to display google maps modules',
            wrap: 'field_wrap',
            type: 'text',
            placeholder: 'ex: AIzaSyCcLyX_FBfpwPg0y8hPpAidRYdLdH3cxKk',
            note: 'Create your API key <a target="_blank" href="https://developers.google.com/maps/documentation/javascript/get-api-key">here</a>. You will need a Google account. You can name the new project whatever you would like. You can find a key that you already made <a target="_blank" href="https://console.developers.google.com/apis/dashboard">here</a>. A full tutorial can be found <a target="_blank" href="https://pagebuilder.helpscoutdocs.com/article/121-setting-up-google-maps">here</a>. A free Google Maps account allows you to load 25,000 maps per day.'
        }, {
            id: 'site_content_group',
            title: 'Site Content',
            description: 'Options like logo',
            wrap: 'field_group',
            items: ['site_images_group']
        }, {
            id: 'site_images_group',
            title: 'Images',
            description: 'Options like logo',
            wrap: 'field_group',
            items: ['logo']
        }, {
            id: 'logo',
            title: 'Logo',
            description: 'Logo used by the logo module',
            wrap: 'field_wrap',
            type: 'media',
            configuration: {
                input: false,
                type: 'image'
            }
        }, {
            id: 'templates_group',
            title: 'Templates',
            description: 'Control the remote sites where additional templates are retrieved from',
            wrap: 'field_group',
            items: ['template_memory', 'use_template_remotes', 'template_remote_1', 'template_remote_2', 'template_theme', 'template_industry']
        }, {
            id: 'template_memory',
            title: 'Template Memory',
            description: 'If you are on a low-memory host, you can reduce the amount of memory that it takes to retrieve templates by retrieving them in chunks.',
            wrap: 'field_wrap',
            type: 'radio_toggle',
            options: [{
                name: 'Low (Shared Hosts)',
                value: 10
            }, {
                name: 'Medium (Managed Hosts)',
                value: 25
            }, {
                name: 'High (VPS)',
                value: 50
            }, {
                name: 'Very High (Dedicated Server)',
                value: 100
            }, {
                name: 'Maximum',
                value: 'max'
            }, {
                name: 'Automatic',
                value: 'auto'
            }]
        }, {
            id: 'use_template_remotes',
            title: 'Add Remote Templates',
            description: 'You can add templates from remote sites by switching this to "yes"',
            wrap: 'field_wrap',
            type: 'switch'
        }, {
            id: 'template_remote_1',
            title: 'Template Remote URL 1',
            description: 'The url of the site that you want to retrieve templates from',
            wrap: 'field_wrap',
            type: 'remote_templates_url',
            placeholder: 'https://basic.t.offsprout.com',
            note: 'You must save and reload for this to take effect.',
            conditional: {
                conditions: [{
                    id: 'use_template_remotes',
                    property: 'yes',
                    value: '1'
                }]
            }
        }, {
            id: 'template_remote_2',
            title: 'Template Remote URL 2',
            description: 'The url of the site that you want to retrieve templates from',
            wrap: 'field_wrap',
            type: 'remote_templates_url',
            placeholder: 'https://templates.yoursite.com',
            note: 'You must save and reload for this to take effect.',
            conditional: {
                conditions: [{
                    id: 'use_template_remotes',
                    property: 'yes',
                    value: '1'
                }]
            }
        },
        /*{
            id: 'template_theme',
            title: 'Template Theme',
            description: 'The design theme that you want to use for your templates',
            wrap: 'field_wrap',
            type: 'template_taxonomy',
            note: 'Choosing "All" is discouraged unless you are building a Personal Template Cloud. Choose "Generic" if you do not see a Theme you want.',
            conditional: {
                conditions: [
                    {
                        id: 'use_template_remotes',
                        property: 'yes',
                        value: '1'
                    }
                ]
            },
            options: [
                {
                    name: 'Choose a Theme...',
                    value: ''
                },
                {
                    name: 'All',
                    value: '_all_'
                }
            ],
            configuration: {
                taxonomy: 'ocb_template_theme'
            }
        },
        {
            id: 'template_industry',
            title: 'Template Industry',
            description: 'The industry of the site that you are building',
            wrap: 'field_wrap',
            type: 'template_taxonomy',
            note: 'Choosing "All" is discouraged unless you are building a Personal Template Cloud. Choose "Generic" if you do not see an Industry you want.',
            conditional: {
                conditions: [
                    {
                        id: 'use_template_remotes',
                        property: 'yes',
                        value: '1'
                    }
                ]
            },
            options: [
                {
                    name: 'Choose an Industry...',
                    value: ''
                },
                {
                    name: 'All',
                    value: '_all_'
                }
            ],
            configuration: {
                taxonomy: 'ocb_template_industry'
            }
        },*/
        {
            id: 'comments_group',
            title: 'Comments',
            description: 'Control the style of the comments section',
            wrap: 'field_group',
            permission: 'has_theme',
            items: ['comment_design_group', 'comment_top_level_group', 'comment_second_level_group', 'comment_other_levels_group', 'comment_author_group', 'comment_button_group']
        }, {
            id: 'comment_design_group',
            title: 'Comment Design',
            description: 'Control the text that goes in the various places in the comments section',
            wrap: 'field_group',
            items: ['comment_name_font_size', 'comment_image_size', 'comment_image_border_radius', 'comment_border_radius', 'comment_box_shadow']
        }, {
            id: 'comment_name_font_size',
            title: 'Author Font Size',
            description: 'The size of the font of the comment author',
            wrap: 'field_wrap',
            type: 'slider_control',
            configuration: [{ units: 'px', min: 8, max: 100, step: 1 }, { units: 'em', min: 0.5, max: 5, step: 0.1 }, { units: 'rem', min: 0.5, max: 5, step: 0.1 }]
        }, {
            id: 'comment_image_size',
            title: 'Image Size',
            description: 'The size of the comment author gravatar image',
            wrap: 'field_wrap',
            type: 'slider_control',
            configuration: [{ units: 'px', min: 32, max: 128, step: 1 }]
        }, {
            id: 'comment_image_border_radius',
            title: 'Image Border Radius',
            description: 'The curve of the image',
            wrap: 'field_wrap',
            type: 'slider_control',
            configuration: [{ units: '%', min: 0, max: 100, step: 1 }, { units: 'px', min: 0, max: 128, step: 5 }]
        }, {
            id: 'comment_border_radius',
            title: 'Comment Border Radius',
            description: 'The curve of the comment borders',
            wrap: 'field_wrap',
            type: 'slider_control',
            configuration: [{ units: '%', min: 0, max: 100, step: 1 }, { units: 'px', min: 0, max: 200, step: 5 }]
        }, {
            id: 'comment_box_shadow',
            title: 'Comment Box Shadow',
            description: 'Box shadow field example',
            wrap: 'field_wrap',
            type: 'box_shadow'
        }, {
            id: 'comment_top_level_group',
            title: 'Top Level Comments',
            description: 'Control the style of top level comments',
            wrap: 'field_group',
            items: ['comment_top_text_color', 'comment_top_name_text_color', 'comment_top_background_color', 'comment_top_border']
        }, {
            id: 'comment_top_text_color',
            title: 'Text Color',
            description: 'The color of the comment text',
            wrap: 'field_wrap',
            type: 'color'
        }, {
            id: 'comment_top_name_text_color',
            title: 'Name Text Color',
            description: 'The color of the commenter name text',
            wrap: 'field_wrap',
            type: 'color'
        }, {
            id: 'comment_top_background_color',
            title: 'Background Color',
            description: 'The background color of the comment',
            wrap: 'field_wrap',
            type: 'color'
        }, {
            id: 'comment_top_border',
            title: 'Border',
            description: 'The border around the comment',
            wrap: 'field_wrap',
            type: 'border',
            configuration: [{ units: 'px', min: 0, max: 40, step: 1 }]
        }, {
            id: 'comment_second_level_group',
            title: 'Second Level Comments',
            description: 'Control the style of second level comments',
            wrap: 'field_group',
            items: ['comment_second_text_color', 'comment_second_name_text_color', 'comment_second_background_color', 'comment_second_border']
        }, {
            id: 'comment_second_text_color',
            title: 'Text Color',
            description: 'The color of the comment text',
            wrap: 'field_wrap',
            type: 'color'
        }, {
            id: 'comment_second_name_text_color',
            title: 'Name Text Color',
            description: 'The color of the commenter name text',
            wrap: 'field_wrap',
            type: 'color'
        }, {
            id: 'comment_second_background_color',
            title: 'Background Color',
            description: 'The background color of the comment',
            wrap: 'field_wrap',
            type: 'color'
        }, {
            id: 'comment_second_border',
            title: 'Border',
            description: 'The border around the comment',
            wrap: 'field_wrap',
            type: 'border',
            configuration: [{ units: 'px', min: 0, max: 40, step: 1 }]
        }, {
            id: 'comment_other_levels_group',
            title: 'Other Level Comments',
            description: 'Control the style of other level comments',
            wrap: 'field_group',
            items: ['comment_other_text_color', 'comment_other_name_text_color', 'comment_other_background_color', 'comment_other_border']
        }, {
            id: 'comment_other_text_color',
            title: 'Text Color',
            description: 'The color of the comment text',
            wrap: 'field_wrap',
            type: 'color'
        }, {
            id: 'comment_other_name_text_color',
            title: 'Name Text Color',
            description: 'The color of the commenter name text',
            wrap: 'field_wrap',
            type: 'color'
        }, {
            id: 'comment_other_background_color',
            title: 'Background Color',
            description: 'The background color of the comment',
            wrap: 'field_wrap',
            type: 'color'
        }, {
            id: 'comment_other_border',
            title: 'Border',
            description: 'The border around the comment',
            wrap: 'field_wrap',
            type: 'border',
            configuration: [{ units: 'px', min: 0, max: 40, step: 1 }]
        }, {
            id: 'comment_author_group',
            title: 'Post Author Comments',
            description: 'Control the style of post author comments',
            wrap: 'field_group',
            items: ['comment_author_text_color', 'comment_author_name_text_color', 'comment_author_background_color', 'comment_author_top_strip']
        }, {
            id: 'comment_author_text_color',
            title: 'Text Color',
            description: 'The color of the comment text',
            wrap: 'field_wrap',
            type: 'color'
        }, {
            id: 'comment_author_name_text_color',
            title: 'Name Text Color',
            description: 'The color of the commenter name text',
            wrap: 'field_wrap',
            type: 'color'
        }, {
            id: 'comment_author_background_color',
            title: 'Background Color',
            description: 'The background color of the comment',
            wrap: 'field_wrap',
            type: 'color'
        }, {
            id: 'comment_author_top_strip',
            title: 'Top Strip',
            description: 'A special strip at the top to signify this is the comment author',
            wrap: 'field_wrap',
            type: 'color'
        }, {
            id: 'comment_button_group',
            title: 'Comment Submit Button',
            description: 'Control the style of comment submit button',
            wrap: 'field_group',
            items: ['comment_button_font_size', 'comment_button_letter_spacing', 'comment_button_uppercase', 'comment_button_bold', 'comment_button_background', 'comment_button_background_hover', 'comment_button_color', 'comment_button_color_hover', 'comment_button_border', 'comment_button_padding', 'comment_button_border_radius', 'comment_button_box_shadow']
        }, {
            id: 'comment_button_font_size',
            title: 'Font Size',
            description: 'The size of the button font',
            wrap: 'field_wrap',
            type: 'slider_control',
            configuration: [{ units: 'px', min: 8, max: 100, step: 1 }, { units: 'em', min: 0.2, max: 10, step: 0.1 }, { units: 'rem', min: 0.2, max: 10, step: 0.1 }]
        }, {
            id: 'comment_button_letter_spacing',
            title: 'Letter Spacing',
            description: 'The space in between the letters',
            wrap: 'field_wrap',
            type: 'slider_control',
            configuration: [{ units: 'px', min: -5, max: 5, step: 1 }]
        }, {
            id: 'comment_button_uppercase',
            title: 'Uppercase',
            description: 'Make all of the letters uppercase',
            wrap: 'field_wrap',
            type: 'switch'
        }, {
            id: 'comment_button_bold',
            title: 'Bold',
            description: 'Make the button text bold',
            wrap: 'field_wrap',
            type: 'switch'
        }, {
            id: 'comment_button_background',
            title: 'Background',
            description: 'The background color of the button',
            wrap: 'field_wrap',
            type: 'color'
        }, {
            id: 'comment_button_background_hover',
            title: 'Background Hover',
            description: 'The background color of the button when a mouse is hovering over it',
            wrap: 'field_wrap',
            type: 'color'
        }, {
            id: 'comment_button_color',
            title: 'Text Color',
            description: 'The text color of the button',
            wrap: 'field_wrap',
            type: 'color'
        }, {
            id: 'comment_button_color_hover',
            title: 'Text Color Hover',
            description: 'The text color of the button when a mouse is hovering over it',
            wrap: 'field_wrap',
            type: 'color'
        }, {
            id: 'comment_button_border',
            title: 'Border',
            description: 'Border field example',
            wrap: 'field_wrap',
            type: 'border',
            deviceSpecific: true,
            configuration: [{ units: 'px', min: 0, max: 40, step: 1 }]
        }, {
            id: 'comment_button_padding',
            title: 'Padding',
            description: 'The space around the text in the button',
            wrap: 'field_wrap',
            type: 'linked_sliders',
            configuration: [{ units: 'px', min: 0, max: 200, step: 1 }, { units: '%', min: 0, max: 100, step: 1 }, { units: 'em', min: 0, max: 30, step: 0.1 }, { units: 'rem', min: 0, max: 30, step: 0.1 }]
        }, {
            id: 'comment_button_border_radius',
            title: 'Border Radius',
            description: 'The curve in the corners of the button',
            wrap: 'field_wrap',
            type: 'slider_control',
            configuration: [{ units: '%', min: 0, max: 100, step: 1 }, { units: 'px', min: 0, max: 200, step: 1 }]
        }, {
            id: 'comment_button_box_shadow',
            title: 'Box Shadow',
            description: 'Add a shadow effect to the button',
            wrap: 'field_wrap',
            type: 'box_shadow'
        },
        /*{
            id: 'testimonials',
            title: 'Testimonials',
            description: 'Add testimonials here and be able to reference them in the testimonials module',
            wrap: 'field_repeater',
            itemName: 'Testimonial',
            itemNameField: 'attribution',
            itemDescription: 'Options for the testimonial',
            items: {
                fields: [
                    {
                        id: 'title',
                        title: 'Title',
                        description: 'The title of this testimonial',
                        wrap: 'field_wrap',
                        type: 'text'
                    },
                    {
                        id: 'attribution',
                        title: 'Attribution',
                        description: 'The source of this testimonial',
                        wrap: 'field_wrap',
                        type: 'text'
                    },
                    {
                        id: 'attribution_description',
                        title: 'Attribution Description',
                        description: 'The description of the source such as "Current Client" or "Executive VP"',
                        wrap: 'field_wrap',
                        type: 'text'
                    },
                    {
                        id: 'testimonial',
                        title: 'Testimonial',
                        description: 'The actual testimonial content',
                        wrap: 'field_wrap',
                        type: 'texteditor',
                        configuration: {
                            toolbar: 'styleselect | undo redo | bold italic | link unlink | code'
                        }
                    },
                    {
                        id: 'image',
                        title: 'Image',
                        description: 'An image for the person who gave the testimonial',
                        wrap: 'field_wrap',
                        type: 'media',
                        configuration: {
                            type: 'image'
                        }
                    },
                    {
                        id: 'category_name',
                        title: 'Category Name',
                        description: 'Set a category name for testimonials to group them by category. Useful if you only want to display a subset of testimonials from a particular category',
                        wrap: 'field_wrap',
                        type: 'text'
                    }
                ],
                default: {
                    title: {
                        text: 'Great Job!'
                    },
                    attribution: {
                        text: 'John Doe'
                    },
                    attribution_description: {
                        text: 'Current Client'
                    },
                    testimonial: {
                        text: '<p>Great job! Keep it up!</p>'
                    },
                    image: {
                        url: ''
                    },
                    category_name: {
                        text: 'Standard'
                    }
                }
            }
        },*/
        {
            id: 'design_heading',
            title: 'Overall Design',
            description: 'Control colors and fonts',
            wrap: 'field_wrap',
            type: 'heading'
        }, {
            id: 'color_group',
            title: 'Colors',
            description: 'Set colors for your site',
            wrap: 'field_group',
            items: ['shade_percentage', 'primary_color', 'action_color', 'accent_color', 'alt_accent_color', 'positive_color', 'negative_color']
        }, {
            id: 'shade_percentage',
            title: 'Shade Percentage',
            description: 'The amount of shading done to get lighter and darker variations of the below colors',
            wrap: 'field_wrap',
            type: 'slider_control',
            configuration: [{ units: '%', min: 5, max: 50, step: 1 }]
        }, {
            id: 'primary_color',
            title: 'Primary Color',
            description: 'Recommended for backgrounds of main elements',
            wrap: 'field_wrap',
            type: 'color',
            properties: {
                color: false
            }
        }, {
            id: 'action_color',
            title: 'Action Color',
            description: 'Recommended for action items like buttons or links',
            wrap: 'field_wrap',
            type: 'color',
            properties: {
                color: false
            }
        }, {
            id: 'accent_color',
            title: 'Accent Color',
            description: 'Recommended for border accents or accented text',
            wrap: 'field_wrap',
            type: 'color',
            properties: {
                color: false
            }
        }, {
            id: 'alt_accent_color',
            title: 'Alternate Accent Color',
            description: 'Recommended for border accents or accented text',
            wrap: 'field_wrap',
            type: 'color',
            properties: {
                color: false
            }
        }, {
            id: 'positive_color',
            title: 'Positive Color',
            description: 'Recommended for elements that you want to give a positive connotation',
            wrap: 'field_wrap',
            type: 'color',
            properties: {
                color: false
            }
        }, {
            id: 'negative_color',
            title: 'Negative Color',
            description: 'Recommended for elements that you want to give a positive connotation',
            wrap: 'field_wrap',
            type: 'color',
            properties: {
                color: false
            }
        }, {
            id: 'gradient_group',
            title: 'Gradients',
            description: 'Set colors for your site',
            wrap: 'field_group',
            items: ['primary_gradient', 'action_gradient', 'accent_gradient']
        }, {
            id: 'primary_gradient',
            title: 'Primary Gradient',
            description: 'The most commonly used gradient, likely for backgrounds',
            wrap: 'field_wrap',
            type: 'gradient'
        }, {
            id: 'action_gradient',
            title: 'Action Gradient',
            description: 'The most commonly used gradient, likely for backgrounds',
            wrap: 'field_wrap',
            type: 'gradient'
        }, {
            id: 'accent_gradient',
            title: 'Accent Gradient',
            description: 'The most commonly used gradient, likely for backgrounds',
            wrap: 'field_wrap',
            type: 'gradient'
        }, {
            id: 'font_group',
            title: 'Fonts',
            description: 'Set font styles and sizes for your site',
            wrap: 'field_group',
            items: ['use_google_fonts', 'google_fonts_info', 'base_font_group', 'base_font_size', 'body_header_font', 'body_header_color', 'p_size', 'body_font', 'body_color', 'a_color', 'h1_font_group', 'h1_size', 'h1_font', 'h1_color', 'h2_font_group', 'h2_size', 'h2_font', 'h2_color', 'h3_font_group', 'h3_size', 'h3_font', 'h3_color', 'h4_font_group', 'h4_size', 'h4_font', 'h4_color', 'h5_font_group', 'h5_size', 'h5_font', 'h5_color', 'h6_font_group', 'h6_size', 'h6_font', 'h6_color', 'accent_font_group', 'accent_font']
        }, {
            id: 'use_google_fonts',
            title: 'Use Google Fonts',
            description: 'If you want to manage fonts here, set this as "Yes"',
            wrap: 'field_wrap',
            type: 'switch'
        }, {
            id: 'google_fonts_info',
            title: 'Font Warning',
            description: '',
            wrap: 'field_wrap',
            type: 'note',
            note: 'It is not recommended that you use more than 2 different fonts due to page load speed. Only load the variants that you need. You can see previews of all of the fonts <a target="_blank" href="https://fonts.google.com/">here</a>.',
            conditional: {
                conditions: [{
                    id: 'use_google_fonts',
                    property: 'yes',
                    value: '1'
                }]
            }
        }, {
            id: 'base_font_group',
            title: 'Base Font',
            description: 'Control the base font of the site',
            wrap: 'field_group',
            items: ['base_font_size', 'p_size', 'body_font', 'body_header_font', 'body_header_color', 'body_color', 'a_color']
        }, {
            id: 'base_font_size',
            title: 'Base Font Size',
            description: 'This is the base font size that all of the other font sizes are relative to',
            wrap: 'field_wrap',
            type: 'slider_control',
            configuration: [{ units: 'px', min: 8, max: 30, step: 1 }]
        }, {
            id: 'body_font',
            title: 'Base Font',
            description: 'The font used in normal text throughout the site',
            wrap: 'field_wrap',
            type: 'google_font'
        }, {
            id: 'body_header_font',
            title: 'Base Header Font',
            description: 'The font used in normal headers throughout the site. Can be overwritten in each type of header.',
            wrap: 'field_wrap',
            type: 'google_font'
        }, {
            id: 'p_size',
            title: 'P Size',
            description: 'The default size of all paragraph tag text',
            wrap: 'field_wrap',
            type: 'slider_control',
            configuration: [{ units: 'em', min: 0.5, max: 10, step: 0.1 }]
        }, {
            id: 'body_color',
            title: 'Base Font Color',
            description: 'The base color of all text',
            wrap: 'field_wrap',
            type: 'color'
        }, {
            id: 'body_header_color',
            title: 'Base Header Color',
            description: 'The base color of all header text. Can be overwritten in each type of header.',
            wrap: 'field_wrap',
            type: 'color'
        }, {
            id: 'a_color',
            title: 'Link Font Color',
            description: 'The color of hyperlinks',
            wrap: 'field_wrap',
            type: 'color'
        }, {
            id: 'h1_font_group',
            title: 'H1 Font',
            description: 'Control the base font of the site',
            wrap: 'field_group',
            items: ['h1_size', 'h1_font', 'h1_color']
        }, {
            id: 'h1_size',
            title: 'H1 Size',
            description: 'The default size of all header 1 tag text',
            wrap: 'field_wrap',
            type: 'slider_control',
            configuration: [{ units: 'em', min: 0.5, max: 10, step: 0.1 }]
        }, {
            id: 'h1_font',
            title: 'H1 Font',
            description: 'The font used in h1 text throughout the site',
            wrap: 'field_wrap',
            type: 'google_font'
        }, {
            id: 'h1_color',
            title: 'H1 Color',
            description: 'The  color of all H1 tag text',
            wrap: 'field_wrap',
            type: 'color'
        }, {
            id: 'h2_font_group',
            title: 'H2 Font',
            description: 'Control the base font of the site',
            wrap: 'field_group',
            items: ['h2_size', 'h2_font', 'h2_color']
        }, {
            id: 'h2_size',
            title: 'H2 Size',
            description: 'The default size of all header 2 tag text',
            wrap: 'field_wrap',
            type: 'slider_control',
            configuration: [{ units: 'em', min: 0.5, max: 10, step: 0.1 }]
        }, {
            id: 'h2_font',
            title: 'H2 Font',
            description: 'The font used in h2 text throughout the site',
            wrap: 'field_wrap',
            type: 'google_font'
        }, {
            id: 'h2_color',
            title: 'H2 Color',
            description: 'The color of all H2 tag text',
            wrap: 'field_wrap',
            type: 'color'
        }, {
            id: 'h3_font_group',
            title: 'H3 Font',
            description: 'Control the base font of the site',
            wrap: 'field_group',
            items: ['h3_size', 'h3_font', 'h3_color']
        }, {
            id: 'h3_size',
            title: 'H3 Size',
            description: 'The default size of all header 3 tag text',
            wrap: 'field_wrap',
            type: 'slider_control',
            configuration: [{ units: 'em', min: 0.5, max: 10, step: 0.1 }]
        }, {
            id: 'h3_font',
            title: 'H3 Font',
            description: 'The font used in h3 text throughout the site',
            wrap: 'field_wrap',
            type: 'google_font'
        }, {
            id: 'h3_color',
            title: 'H3 Color',
            description: 'The color of all H3 tag text',
            wrap: 'field_wrap',
            type: 'color'
        }, {
            id: 'h4_font_group',
            title: 'H4 Font',
            description: 'Control the base font of the site',
            wrap: 'field_group',
            items: ['h4_size', 'h4_font', 'h4_color']
        }, {
            id: 'h4_size',
            title: 'H4 Size',
            description: 'The default size of all header 4 tag text',
            wrap: 'field_wrap',
            type: 'slider_control',
            configuration: [{ units: 'em', min: 0.5, max: 10, step: 0.1 }]
        }, {
            id: 'h4_font',
            title: 'H4 Font',
            description: 'The font used in h4 text throughout the site',
            wrap: 'field_wrap',
            type: 'google_font'
        }, {
            id: 'h4_color',
            title: 'H4 Color',
            description: 'The color of all H4 tag text',
            wrap: 'field_wrap',
            type: 'color'
        }, {
            id: 'h5_font_group',
            title: 'H5 Font',
            description: 'Control the base font of the site',
            wrap: 'field_group',
            items: ['h5_size', 'h5_font', 'h5_color']
        }, {
            id: 'h5_size',
            title: 'H5 Size',
            description: 'The default size of all header 5 tag text',
            wrap: 'field_wrap',
            type: 'slider_control',
            configuration: [{ units: 'em', min: 0.5, max: 10, step: 0.1 }]
        }, {
            id: 'h5_font',
            title: 'H5 Font',
            description: 'The font used in h5 text throughout the site',
            wrap: 'field_wrap',
            type: 'google_font'
        }, {
            id: 'h5_color',
            title: 'H5 Color',
            description: 'The color of all H5 tag text',
            wrap: 'field_wrap',
            type: 'color'
        }, {
            id: 'h6_font_group',
            title: 'H6 Font',
            description: 'Control the base font of the site',
            wrap: 'field_group',
            items: ['h6_size', 'h6_font', 'h6_color']
        }, {
            id: 'h6_size',
            title: 'H6 Size',
            description: 'The default size of all header 6 tag text',
            wrap: 'field_wrap',
            type: 'slider_control',
            configuration: [{ units: 'em', min: 0.5, max: 10, step: 0.1 }]
        }, {
            id: 'h6_font',
            title: 'H6 Font',
            description: 'The font used in h6 text throughout the site',
            wrap: 'field_wrap',
            type: 'google_font'
        }, {
            id: 'h6_color',
            title: 'H6 Color',
            description: 'The color of all H6 tag text',
            wrap: 'field_wrap',
            type: 'color'
        }, {
            id: 'accent_font_group',
            title: 'Accent Font',
            description: 'Accent font is accessible in each module and row\'s standard text settings',
            wrap: 'field_group',
            items: ['accent_font_note', 'accent_font']
        }, {
            id: 'accent_font_note',
            title: 'Accent Note',
            description: '',
            wrap: 'field_wrap',
            type: 'note',
            note: 'You must be using Google fonts to use accent fonts.',
            conditional: {
                conditions: [{
                    id: 'use_google_fonts',
                    property: 'yes',
                    value: '0'
                }]
            }
        }, {
            id: 'accent_font',
            title: 'Accent Font',
            description: 'The font used in accent font text throughout the site',
            wrap: 'field_wrap',
            type: 'google_font'
        }, {
            id: 'css_group',
            title: 'CSS',
            description: 'Set custom global css for your site',
            wrap: 'field_group',
            items: ['global_css']
        }, {
            id: 'global_css',
            title: 'Global CSS',
            description: 'Set custom global css',
            wrap: 'field_wrap',
            type: 'text',
            placeholder: 'body{ color: red }',
            configuration: {
                inputType: 'textarea',
                textareaSize: 'large'
            }
        }, {
            id: 'icons_group',
            title: 'Icons',
            description: 'Allows you to include additional sets of icons',
            wrap: 'field_group',
            permission: 'subscription_only_options',
            items: ['linea_icons']
        }, {
            id: 'linea_icons',
            title: 'Include Linea Icons',
            description: 'Will add the ability to use linea icons in fields that use icons',
            wrap: 'field_wrap',
            type: 'switch',
            note: 'You will need to switch this setting to include, then save and then refresh the page to gain access to the new Linea icons tab in the icon selector'
        }, {
            id: 'other_group',
            title: 'Other',
            description: 'Other site design options',
            wrap: 'field_group',
            items: ['content_width', 'default_row_horizontal_padding', 'default_row_vertical_padding', 'default_column_gap']
        }, {
            id: 'content_width',
            title: 'Content Width',
            description: 'The default width of content inside rows',
            wrap: 'field_wrap',
            type: 'slider_control',
            configuration: [{ units: 'px', min: 400, max: 1400, step: 10 }]
        }, {
            id: 'default_row_horizontal_padding',
            title: 'Default Row Horizontal Padding',
            description: 'Adjust the default padding for this object',
            wrap: 'field_wrap',
            type: 'slider_control',
            configuration: [{ units: 'px', min: 0, max: 200, step: 5 }, { units: 'em', min: 0, max: 5, step: 0.5 }]
        }, {
            id: 'default_row_vertical_padding',
            title: 'Default Row Vertical Padding',
            description: 'Adjust the default padding for this object',
            wrap: 'field_wrap',
            type: 'slider_control',
            configuration: [{ units: 'px', min: 0, max: 200, step: 5 }, { units: 'em', min: 0, max: 5, step: 0.5 }]
        }, {
            id: 'default_column_gap',
            title: 'Default Column Padding',
            description: 'Adjust the default space in between columns',
            wrap: 'field_wrap',
            type: 'slider_control',
            configuration: [{ units: 'px', min: 0, max: 200, step: 5 }, { units: 'em', min: 0, max: 5, step: 0.5 }]
        }
        /*{
            id: 'element_heading',
            title: 'Element Design Skins',
            description: 'Control "skins" for various module types so that designs can be changed here and affect all modules using that skin',
            wrap: 'field_wrap',
            type: 'heading'
        }*/
        /*{
            id: 'hero_row_group',
            title: 'Row: Hero',
            description: 'Create a standard style for information buttons that can be applied to any button module',
            wrap: 'field_group',
            items: ['hero_row_mixin']
        },
            {
                id: 'hero_row_mixin',
                wrap: 'field_mixin',
                mixin: 'row',
                prefix: 'hero_row_',
                individualConditionals: true,
                group: 'hero_row_group'
            },
        {
            id: 'content_row_group',
            title: 'Row: Content',
            description: 'Create a standard style for information buttons that can be applied to any button module',
            wrap: 'field_group',
            items: ['content_row_mixin']
        },
            {
                id: 'content_row_mixin',
                wrap: 'field_mixin',
                mixin: 'row',
                prefix: 'content_row_',
                individualConditionals: true,
                group: 'content_row_group'
            }*/
        /*{
            id: 'action_button_group',
            title: 'Button: Action',
            description: 'Create a standard style for call to action buttons that can be applied to any button module',
            wrap: 'field_group',
            items: ['action_button_mixin']
        },
            {
                id: 'action_button_mixin',
                wrap: 'field_mixin',
                mixin: 'button',
                prefix: 'action_button_',
                group: 'action_button_group'
            },
        {
            id: 'info_button_group',
            title: 'Button: Info',
            description: 'Create a standard style for information buttons that can be applied to any button module',
            wrap: 'field_group',
            items: ['info_button_mixin']
        },
            {
                id: 'info_button_mixin',
                wrap: 'field_mixin',
                mixin: 'button',
                prefix: 'info_button_',
                group: 'info_button_group'
            }*/
        ],
        default: {
            logo: {
                url: '',
                size: 'full'
            },
            template_memory: {
                choice: 'auto'
            },
            use_template_remotes: {
                yes: 1
            },
            template_remote_1: {
                text: 'https://basic.t.offsprout.com',
                cache: 24 * 60 * 60
            },
            template_remote_2: {
                text: '',
                cache: 24 * 60 * 60
            },
            comment_name_font_size: {
                value: 1,
                units: 'em',
                useDefault: 'default'
            },
            comment_image_size: {
                value: 128,
                units: 'px',
                useDefault: 'default'
            },
            comment_image_border_radius: {
                value: 50,
                units: '%',
                useDefault: 'default'
            },
            comment_border_radius: {
                value: 10,
                units: 'px',
                useDefault: 'default'
            },
            comment_box_shadow: {
                useDefault: 'default',
                horizontal: 0,
                vertical: 0,
                blur: 15,
                spread: 3,
                color: 'rgba(0,0,0,0.2)'
            },
            comment_top_text_color: {
                color: 'default',
                customColor: 'rgba(0,0,0,1)'
            },
            comment_top_name_text_color: {
                color: 'default',
                customColor: 'rgba(0,0,0,1)'
            },
            comment_top_background_color: {
                color: 'default',
                customColor: 'rgba(0,0,0,1)'
            },
            comment_top_border: {
                top: 1,
                left: 1,
                bottom: 1,
                right: 1,
                units: 'px',
                useDefault: 'default',
                type: 'solid',
                color: 'default',
                customColor: 'rgba(0,0,0,1)'
            },
            comment_second_text_color: {
                color: 'default',
                customColor: 'rgba(0,0,0,1)'
            },
            comment_second_name_text_color: {
                color: 'default',
                customColor: 'rgba(0,0,0,1)'
            },
            comment_second_background_color: {
                color: 'default',
                customColor: 'rgba(0,0,0,1)'
            },
            comment_second_border: {
                top: 1,
                left: 1,
                bottom: 1,
                right: 1,
                units: 'px',
                useDefault: 'default',
                type: 'solid',
                color: 'default',
                customColor: 'rgba(0,0,0,1)'
            },
            comment_other_text_color: {
                color: 'default',
                customColor: 'rgba(0,0,0,1)'
            },
            comment_other_name_text_color: {
                color: 'default',
                customColor: 'rgba(0,0,0,1)'
            },
            comment_other_background_color: {
                color: 'default',
                customColor: 'rgba(0,0,0,1)'
            },
            comment_other_border: {
                top: 1,
                left: 1,
                bottom: 1,
                right: 1,
                units: 'px',
                useDefault: 'default',
                type: 'solid',
                color: 'default',
                customColor: 'rgba(0,0,0,1)'
            },
            comment_author_text_color: {
                color: 'default',
                customColor: 'rgba(0,0,0,1)'
            },
            comment_author_name_text_color: {
                color: 'default',
                customColor: 'rgba(0,0,0,1)'
            },
            comment_author_background_color: {
                color: 'default',
                customColor: 'rgba(0,0,0,1)'
            },
            comment_author_top_strip: {
                color: 'action',
                customColor: 'rgba(0,0,0,1)'
            },
            comment_button_font_size: {
                value: 1,
                units: 'em',
                useDefault: 'default'
            },
            comment_button_letter_spacing: {
                value: 0,
                units: 'px',
                useDefault: 'default'
            },
            comment_button_uppercase: {
                yes: 0
            },
            comment_button_bold: {
                yes: 0
            },
            comment_button_background: {
                color: 'action'
            },
            comment_button_background_hover: {
                color: 'action'
            },
            comment_button_color: {
                color: 'white'
            },
            comment_button_color_hover: {
                color: 'white'
            },
            comment_button_border: {
                top: 1,
                left: 1,
                bottom: 1,
                right: 1,
                units: 'px',
                useDefault: 'default',
                type: 'solid',
                color: 'default',
                customColor: '#000000'
            },
            comment_button_padding: {
                top: 15,
                left: 30,
                right: 30,
                bottom: 15,
                units: 'px',
                useDefault: 'default'
            },
            comment_button_border_radius: {
                value: 0,
                units: '%',
                useDefault: 'default'
            },
            comment_button_box_shadow: {
                useDefault: 'default',
                horizontal: 0,
                vertical: 0,
                blur: 1,
                spread: 3,
                color: 'rgba(0,0,0,0.2)'
            },
            /*testimonials: {
                items: [{
                    title: {
                        text: 'Great Job!'
                    },
                    attribution: {
                        text: 'John Doe'
                    },
                    attribution_description: {
                        text: 'Current Client'
                    },
                    testimonial: {
                        text: '<p>Great job! Keep it up!</p>'
                    },
                    image: {
                        url: ''
                    },
                    category_name: {
                        text: 'Standard'
                    }
                }]
            },*/
            use_google_fonts: {
                yes: 0
            },
            base_font_size: {
                value: 14,
                units: 'px',
                useDefault: 'default'
            },
            body_font: {
                choice: 'default'
            },
            body_header_font: {
                choice: 'default'
            },
            h1_font: {
                choice: 'default'
            },
            h2_font: {
                choice: 'default'
            },
            h3_font: {
                choice: 'default'
            },
            h4_font: {
                choice: 'default'
            },
            h5_font: {
                choice: 'default'
            },
            h6_font: {
                choice: 'default'
            },
            accent_font: {
                choice: 'default'
            },
            body_color: {
                color: 'default',
                customColor: 'rgba(0,0,0,1)'
            },
            body_header_color: {
                color: 'default',
                customColor: 'rgba(0,0,0,1)'
            },
            h1_color: {
                color: 'default',
                customColor: 'rgba(0,0,0,1)'
            },
            h2_color: {
                color: 'default',
                customColor: 'rgba(0,0,0,1)'
            },
            h3_color: {
                color: 'default',
                customColor: 'rgba(0,0,0,1)'
            },
            h4_color: {
                color: 'default',
                customColor: 'rgba(0,0,0,1)'
            },
            h5_color: {
                color: 'default',
                customColor: 'rgba(0,0,0,1)'
            },
            h6_color: {
                color: 'default',
                customColor: 'rgba(0,0,0,1)'
            },
            p_color: {
                color: 'default',
                customColor: 'rgba(0,0,0,1)'
            },
            a_color: {
                color: 'default',
                customColor: 'rgba(0,0,0,1)'
            },
            h1_size: {
                value: 2,
                units: 'em',
                useDefault: 'default'
            },
            h2_size: {
                value: 1.8,
                units: 'em',
                useDefault: 'default'
            },
            h3_size: {
                value: 1.6,
                units: 'em',
                useDefault: 'default'
            },
            h4_size: {
                value: 1.4,
                units: 'em',
                useDefault: 'default'
            },
            h5_size: {
                value: 1.2,
                units: 'em',
                useDefault: 'default'
            },
            h6_size: {
                value: 1,
                units: 'em',
                useDefault: 'default'
            },
            p_size: {
                value: 1,
                units: 'em',
                useDefault: 'default'
            },
            shade_percentage: {
                value: 30,
                units: '%',
                useDefault: 'default'
            },
            primary_color: {
                customColor: '#091F39'
            },
            action_color: {
                customColor: '#4046DA'
            },
            accent_color: {
                customColor: '#E12149'
            },
            alt_accent_color: {
                customColor: '#8492A6'
            },
            positive_color: {
                customColor: '#58b847'
            },
            negative_color: {
                customColor: '#fe4444'
            },
            primary_gradient: {
                number: 4,
                color1: { r: 189, g: 16, b: 224, a: 1 },
                color2: { r: 111, g: 16, b: 195, a: 1 },
                color3: { r: 58, g: 95, b: 193, a: 1 },
                color4: { r: 10, g: 103, b: 194, a: 1 },
                color1Start: 0,
                color2Start: 40,
                color3Start: 80,
                color4Start: 100,
                color1Open: false,
                color2Open: false,
                color3Open: false,
                color4Open: false,
                angle: 160
            },
            action_gradient: {
                number: 4,
                color1: { r: 189, g: 16, b: 224, a: 1 },
                color2: { r: 111, g: 16, b: 195, a: 1 },
                color3: { r: 58, g: 95, b: 193, a: 1 },
                color4: { r: 10, g: 103, b: 194, a: 1 },
                color1Start: 0,
                color2Start: 40,
                color3Start: 80,
                color4Start: 100,
                color1Open: false,
                color2Open: false,
                color3Open: false,
                color4Open: false,
                angle: 160
            },
            accent_gradient: {
                number: 4,
                color1: { r: 189, g: 16, b: 224, a: 1 },
                color2: { r: 111, g: 16, b: 195, a: 1 },
                color3: { r: 58, g: 95, b: 193, a: 1 },
                color4: { r: 10, g: 103, b: 194, a: 1 },
                color1Start: 0,
                color2Start: 40,
                color3Start: 80,
                color4Start: 100,
                color1Open: false,
                color2Open: false,
                color3Open: false,
                color4Open: false,
                angle: 160
            },
            linea_icons: {
                yes: 0
            },
            content_width: {
                value: 1000,
                units: 'px',
                useDefault: 'default'
            },
            default_row_horizontal_padding: {
                value: 1.5,
                units: 'em',
                useDefault: 'default'
            },
            default_row_vertical_padding: {
                value: 0,
                units: 'em',
                useDefault: 'default'
            },
            default_column_gap: {
                value: 2.5,
                units: 'em',
                useDefault: 'default'
            },
            global_css: {
                text: ''
            },
            button_primary_background: {
                color: 'primary',
                customColor: '#F7882F'
            }
        }
    };

    //console.log(DevUtilities.getFieldDefaults( siteSettings.fields ));

    return OffsproutFilter.applyNewSettings('siteSettings', siteSettings);
};

var _dev_utilities = __webpack_require__(786);

var _dev_utilities2 = _interopRequireDefault(_dev_utilities);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

;

/***/ }),

/***/ 356:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactSelect = __webpack_require__(165);

var _reactSelect2 = _interopRequireDefault(_reactSelect);

var _color_option = __webpack_require__(792);

var _color_option2 = _interopRequireDefault(_color_option);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ColorDropdown = function (_Component) {
    _inherits(ColorDropdown, _Component);

    function ColorDropdown() {
        _classCallCheck(this, ColorDropdown);

        return _possibleConstructorReturn(this, (ColorDropdown.__proto__ || Object.getPrototypeOf(ColorDropdown)).apply(this, arguments));
    }

    _createClass(ColorDropdown, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            if (this.props.onlyCustom != undefined && this.props.onlyCustom) {
                return _react2.default.createElement(
                    'div',
                    { className: 'ocb-sf-color-dropdown' },
                    _react2.default.createElement(
                        'select',
                        { className: 'ocb-sf-color-dropdown-select', value: this.props.value, onChange: function onChange(e) {
                                return _this2.props.changeFunction(e.target.value);
                            } },
                        _react2.default.createElement(
                            'option',
                            { value: 'default' },
                            'Default'
                        ),
                        _react2.default.createElement(
                            'option',
                            { value: 'custom' },
                            'Custom'
                        )
                    )
                );
            }

            var normalSelect = _react2.default.createElement(
                'select',
                { className: 'ocb-sf-color-dropdown-select', value: this.props.value, onChange: function onChange(e) {
                        return _this2.props.changeFunction(e.target.value);
                    } },
                _react2.default.createElement(
                    'option',
                    { value: 'default' },
                    'Default'
                ),
                _react2.default.createElement(
                    'option',
                    { value: 'none' },
                    'None'
                ),
                _react2.default.createElement(
                    'option',
                    { value: 'custom' },
                    'Custom'
                ),
                _react2.default.createElement(
                    'option',
                    { value: 'primary' },
                    'Primary'
                ),
                _react2.default.createElement(
                    'option',
                    { value: 'primary_light' },
                    'Primary Light'
                ),
                _react2.default.createElement(
                    'option',
                    { value: 'primary_dark' },
                    'Primary Dark'
                ),
                _react2.default.createElement(
                    'option',
                    { value: 'action' },
                    'Action'
                ),
                _react2.default.createElement(
                    'option',
                    { value: 'action_light' },
                    'Action Light'
                ),
                _react2.default.createElement(
                    'option',
                    { value: 'action_dark' },
                    'Action Dark'
                ),
                _react2.default.createElement(
                    'option',
                    { value: 'accent' },
                    'Accent'
                ),
                _react2.default.createElement(
                    'option',
                    { value: 'accent_light' },
                    'Accent Light'
                ),
                _react2.default.createElement(
                    'option',
                    { value: 'accent_dark' },
                    'Accent Dark'
                ),
                _react2.default.createElement(
                    'option',
                    { value: 'alt_accent' },
                    'Alternate Accent'
                ),
                _react2.default.createElement(
                    'option',
                    { value: 'alt_accent_light' },
                    'Alternate Accent Light'
                ),
                _react2.default.createElement(
                    'option',
                    { value: 'alt_accent_dark' },
                    'Alternate Accent Dark'
                ),
                _react2.default.createElement(
                    'option',
                    { value: 'positive' },
                    'Positive'
                ),
                _react2.default.createElement(
                    'option',
                    { value: 'negative' },
                    'Negative'
                ),
                _react2.default.createElement(
                    'option',
                    { value: 'white' },
                    'White'
                ),
                _react2.default.createElement(
                    'option',
                    { value: 'grey' },
                    'Grey'
                ),
                _react2.default.createElement(
                    'option',
                    { value: 'grey_light' },
                    'Grey Light'
                ),
                _react2.default.createElement(
                    'option',
                    { value: 'grey_dark' },
                    'Grey Dark'
                ),
                _react2.default.createElement(
                    'option',
                    { value: 'black' },
                    'Black'
                )
            );

            var options = [{
                value: 'default',
                label: 'Default'
            }, {
                value: 'none',
                label: 'None'
            }, {
                value: 'custom',
                label: 'Custom'
            }, {
                value: 'primary',
                label: 'Primary'
            }, {
                value: 'primary_light',
                label: 'Primary Light'
            }, {
                value: 'primary_dark',
                label: 'Primary Dark'
            }, {
                value: 'action',
                label: 'Action'
            }, {
                value: 'action_light',
                label: 'Action Light'
            }, {
                value: 'action_dark',
                label: 'Action Dark'
            }, {
                value: 'accent',
                label: 'Accent'
            }, {
                value: 'accent_light',
                label: 'Accent Light'
            }, {
                value: 'accent_dark',
                label: 'Accent Dark'
            }, {
                value: 'alt_accent',
                label: 'Alternate Accent'
            }, {
                value: 'alt_accent_light',
                label: 'Alternate Accent Light'
            }, {
                value: 'alt_accent_dark',
                label: 'Alternate Accent Dark'
            }, {
                value: 'positive',
                label: 'Positive'
            }, {
                value: 'negative',
                label: 'Negative'
            }, {
                value: 'black',
                label: 'Black'
            }, {
                value: 'grey_dark',
                label: 'Grey Dark'
            }, {
                value: 'grey',
                label: 'Grey'
            }, {
                value: 'grey_light',
                label: 'Grey Light'
            }, {
                value: 'white',
                label: 'White'
            }];

            if (this.props.withGradient != undefined && this.props.withGradient) {
                options = options.concat({ value: 'primaryGradient', label: 'Primary Gradient', altValue: 'primary' });
                options = options.concat({ value: 'actionGradient', label: 'Action Gradient', altValue: 'action' });
                options = options.concat({ value: 'accentGradient', label: 'Accent Gradient', altValue: 'accent' });
            }

            var reactSelect = _react2.default.createElement(_reactSelect2.default, {
                value: this.props.value,
                onChange: function onChange(e) {
                    return _this2.props.changeFunction(e.value);
                },
                optionComponent: _color_option2.default,
                options: options
            });

            var colorClasses = _react2.default.createElement(
                'style',
                null,
                options.map(function (option) {
                    if (window.OffsproutSiteSettings[option.value + '_color'] != undefined) {
                        var theColor = window.OffsproutSiteSettings[option.value + '_color'].customColor;
                        return '.' + option.value + '-background{background: ' + theColor + ';}';
                    } else if (window.OffsproutSiteSettings[option.altValue + '_gradient'] != undefined) {
                        var theGradient = window.OffsproutSiteSettings[option.altValue + '_gradient'];
                        var gradientColor1 = _typeof(theGradient.color1) == 'object' ? 'rgba(' + theGradient.color1.r + ',' + theGradient.color1.g + ',' + theGradient.color1.b + ',' + theGradient.color1.a + ')' : theGradient.color1;
                        var gradientColor2 = _typeof(theGradient.color2) == 'object' ? 'rgba(' + theGradient.color2.r + ',' + theGradient.color2.g + ',' + theGradient.color2.b + ',' + theGradient.color2.a + ')' : theGradient.color2;
                        var gradientColor3 = _typeof(theGradient.color3) == 'object' ? 'rgba(' + theGradient.color3.r + ',' + theGradient.color3.g + ',' + theGradient.color3.b + ',' + theGradient.color3.a + ')' : theGradient.color3;
                        var gradientColor4 = _typeof(theGradient.color4) == 'object' ? 'rgba(' + theGradient.color4.r + ',' + theGradient.color4.g + ',' + theGradient.color4.b + ',' + theGradient.color4.a + ')' : theGradient.color4;

                        var gradientCSS = 'linear-gradient(' + theGradient.angle + 'deg, ' + gradientColor1 + ' ' + theGradient.color1Start + '%, ' + gradientColor2 + ' ' + theGradient.color2Start + '%';

                        if (theGradient.number == 3 || theGradient.number == 4) {
                            gradientCSS += ', ' + gradientColor3 + ' ' + theGradient.color3Start + '%';
                        }

                        if (theGradient.number == 4) {
                            gradientCSS += ', ' + gradientColor4 + ' ' + theGradient.color4Start + '%';
                        }

                        gradientCSS += ')';

                        return '.' + option.altValue + 'Gradient-background{background:' + gradientCSS + '}';
                    } else {
                        return '';
                    }
                })
            );

            reactSelect = options.map(function (option) {
                var active = _this2.props.value == option.value ? 'active' : '';
                return _react2.default.createElement(
                    'span',
                    { key: option.value, className: 'ocb-sf-color-option-circle ocb-tooltip-wrap ' + option.value + '-background ' + active, onClick: function onClick() {
                            return _this2.props.changeFunction(option.value);
                        } },
                    _react2.default.createElement(
                        'span',
                        { className: 'ocb-tooltip ocb-tooltip-color animated fast fadeIn' },
                        option.label
                    )
                );
            });

            return _react2.default.createElement(
                'div',
                { className: 'ocb-sf-color-dropdown' },
                colorClasses,
                reactSelect
            );
        }
    }]);

    return ColorDropdown;
}(_react.Component);

exports.default = ColorDropdown;

/***/ }),

/***/ 357:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var DropdownOption = function (_Component) {
    _inherits(DropdownOption, _Component);

    function DropdownOption() {
        _classCallCheck(this, DropdownOption);

        return _possibleConstructorReturn(this, (DropdownOption.__proto__ || Object.getPrototypeOf(DropdownOption)).apply(this, arguments));
    }

    _createClass(DropdownOption, [{
        key: 'handleMouseDown',
        value: function handleMouseDown(event) {
            event.preventDefault();
            event.stopPropagation();
            this.props.onSelect(this.props.option, event);
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var extraClass = this.props.option.className != undefined ? this.props.option.className : '';

            return _react2.default.createElement(
                'div',
                { className: 'ocb-sf-dropdown-option ' + extraClass, onMouseDown: function onMouseDown(e) {
                        return _this2.handleMouseDown(e);
                    } },
                this.props.option.label
            );
        }
    }]);

    return DropdownOption;
}(_react.Component);

exports.default = DropdownOption;

/***/ }),

/***/ 358:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var FieldNote = function (_Component) {
    _inherits(FieldNote, _Component);

    function FieldNote() {
        _classCallCheck(this, FieldNote);

        return _possibleConstructorReturn(this, (FieldNote.__proto__ || Object.getPrototypeOf(FieldNote)).apply(this, arguments));
    }

    _createClass(FieldNote, [{
        key: "render",
        value: function render() {
            return _react2.default.createElement("div", { className: "ocb-sf-note alert alert-warning mb-1 mt-1", dangerouslySetInnerHTML: { __html: this.props.note } });
        }
    }]);

    return FieldNote;
}(_react.Component);

exports.default = FieldNote;

/***/ }),

/***/ 359:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var IconSelector = function (_Component) {
    _inherits(IconSelector, _Component);

    function IconSelector(props) {
        _classCallCheck(this, IconSelector);

        var _this = _possibleConstructorReturn(this, (IconSelector.__proto__ || Object.getPrototypeOf(IconSelector)).call(this, props));

        _this.state = {
            filter: '',
            open: false,
            set: 'fontawesome'
        };
        return _this;
    }

    /**
     * Field element components like this should be passed the update function of the parent and use that to update the
     * actual data. However, they may need to set their own state like this function
     * @param merge
     */


    _createClass(IconSelector, [{
        key: 'update',
        value: function update(merge) {
            this.props.update(merge, this.props.index);
        }

        /**
         * Icon array retrieved from this answer: http://stackoverflow.com/questions/27992992/i-need-list-of-all-class-name-of-font-awesome
         * @returns []
         */

    }, {
        key: 'icons',
        value: function icons() {
            return ["fa-500px", "fa-address-book", "fa-address-book-o", "fa-address-card", "fa-address-card-o", "fa-adjust", "fa-adn", "fa-align-center", "fa-align-justify", "fa-align-left", "fa-align-right", "fa-amazon", "fa-ambulance", "fa-american-sign-language-interpreting", "fa-anchor", "fa-android", "fa-angellist", "fa-angle-double-down", "fa-angle-double-left", "fa-angle-double-right", "fa-angle-double-up", "fa-angle-down", "fa-angle-left", "fa-angle-right", "fa-angle-up", "fa-apple", "fa-archive", "fa-area-chart", "fa-arrow-circle-down", "fa-arrow-circle-left", "fa-arrow-circle-o-down", "fa-arrow-circle-o-left", "fa-arrow-circle-o-right", "fa-arrow-circle-o-up", "fa-arrow-circle-right", "fa-arrow-circle-up", "fa-arrow-down", "fa-arrow-left", "fa-arrow-right", "fa-arrow-up", "fa-arrows", "fa-arrows-alt", "fa-arrows-h", "fa-arrows-v", "fa-asl-interpreting", "fa-assistive-listening-systems", "fa-asterisk", "fa-at", "fa-audio-description", "fa-automobile", "fa-backward", "fa-balance-scale", "fa-ban", "fa-bandcamp", "fa-bank", "fa-bar-chart", "fa-bar-chart-o", "fa-barcode", "fa-bars", "fa-bath", "fa-bathtub", "fa-battery", "fa-battery-0", "fa-battery-1", "fa-battery-2", "fa-battery-3", "fa-battery-4", "fa-battery-empty", "fa-battery-full", "fa-battery-half", "fa-battery-quarter", "fa-battery-three-quarters", "fa-bed", "fa-beer", "fa-behance", "fa-behance-square", "fa-bell", "fa-bell-o", "fa-bell-slash", "fa-bell-slash-o", "fa-bicycle", "fa-binoculars", "fa-birthday-cake", "fa-bitbucket", "fa-bitbucket-square", "fa-bitcoin", "fa-black-tie", "fa-blind", "fa-bluetooth", "fa-bluetooth-b", "fa-bold", "fa-bolt", "fa-bomb", "fa-book", "fa-bookmark", "fa-bookmark-o", "fa-braille", "fa-briefcase", "fa-btc", "fa-bug", "fa-building", "fa-building-o", "fa-bullhorn", "fa-bullseye", "fa-bus", "fa-buysellads", "fa-cab", "fa-calculator", "fa-calendar", "fa-calendar-check-o", "fa-calendar-minus-o", "fa-calendar-o", "fa-calendar-plus-o", "fa-calendar-times-o", "fa-camera", "fa-camera-retro", "fa-car", "fa-caret-down", "fa-caret-left", "fa-caret-right", "fa-caret-square-o-down", "fa-caret-square-o-left", "fa-caret-square-o-right", "fa-caret-square-o-up", "fa-caret-up", "fa-cart-arrow-down", "fa-cart-plus", "fa-cc", "fa-cc-amex", "fa-cc-diners-club", "fa-cc-discover", "fa-cc-jcb", "fa-cc-mastercard", "fa-cc-paypal", "fa-cc-stripe", "fa-cc-visa", "fa-certificate", "fa-chain", "fa-chain-broken", "fa-check", "fa-check-circle", "fa-check-circle-o", "fa-check-square", "fa-check-square-o", "fa-chevron-circle-down", "fa-chevron-circle-left", "fa-chevron-circle-right", "fa-chevron-circle-up", "fa-chevron-down", "fa-chevron-left", "fa-chevron-right", "fa-chevron-up", "fa-child", "fa-chrome", "fa-circle", "fa-circle-o", "fa-circle-o-notch", "fa-circle-thin", "fa-clipboard", "fa-clock-o", "fa-clone", "fa-close", "fa-cloud", "fa-cloud-download", "fa-cloud-upload", "fa-cny", "fa-code", "fa-code-fork", "fa-codepen", "fa-codiepie", "fa-coffee", "fa-cog", "fa-cogs", "fa-columns", "fa-comment", "fa-comment-o", "fa-commenting", "fa-commenting-o", "fa-comments", "fa-comments-o", "fa-compass", "fa-compress", "fa-connectdevelop", "fa-contao", "fa-copy", "fa-copyright", "fa-creative-commons", "fa-credit-card", "fa-credit-card-alt", "fa-crop", "fa-crosshairs", "fa-css3", "fa-cube", "fa-cubes", "fa-cut", "fa-cutlery", "fa-dashboard", "fa-dashcube", "fa-database", "fa-deaf", "fa-deafness", "fa-dedent", "fa-delicious", "fa-desktop", "fa-deviantart", "fa-diamond", "fa-digg", "fa-dollar", "fa-dot-circle-o", "fa-download", "fa-dribbble", "fa-drivers-license", "fa-drivers-license-o", "fa-dropbox", "fa-drupal", "fa-edge", "fa-edit", "fa-eercast", "fa-eject", "fa-ellipsis-h", "fa-ellipsis-v", "fa-empire", "fa-envelope", "fa-envelope-o", "fa-envelope-open", "fa-envelope-open-o", "fa-envelope-square", "fa-envira", "fa-eraser", "fa-etsy", "fa-eur", "fa-euro", "fa-exchange", "fa-exclamation", "fa-exclamation-circle", "fa-exclamation-triangle", "fa-expand", "fa-expeditedssl", "fa-external-link", "fa-external-link-square", "fa-eye", "fa-eye-slash", "fa-eyedropper", "fa-fa", "fa-facebook", "fa-facebook-f", "fa-facebook-official", "fa-facebook-square", "fa-fast-backward", "fa-fast-forward", "fa-fax", "fa-feed", "fa-female", "fa-fighter-jet", "fa-file", "fa-file-archive-o", "fa-file-audio-o", "fa-file-code-o", "fa-file-excel-o", "fa-file-image-o", "fa-file-movie-o", "fa-file-o", "fa-file-pdf-o", "fa-file-photo-o", "fa-file-picture-o", "fa-file-powerpoint-o", "fa-file-sound-o", "fa-file-text", "fa-file-text-o", "fa-file-video-o", "fa-file-word-o", "fa-file-zip-o", "fa-files-o", "fa-film", "fa-filter", "fa-fire", "fa-fire-extinguisher", "fa-firefox", "fa-first-order", "fa-flag", "fa-flag-checkered", "fa-flag-o", "fa-flash", "fa-flask", "fa-flickr", "fa-floppy-o", "fa-folder", "fa-folder-o", "fa-folder-open", "fa-folder-open-o", "fa-font", "fa-font-awesome", "fa-fonticons", "fa-fort-awesome", "fa-forumbee", "fa-forward", "fa-foursquare", "fa-free-code-camp", "fa-frown-o", "fa-futbol-o", "fa-gamepad", "fa-gavel", "fa-gbp", "fa-ge", "fa-gear", "fa-gears", "fa-genderless", "fa-get-pocket", "fa-gg", "fa-gg-circle", "fa-gift", "fa-git", "fa-git-square", "fa-github", "fa-github-alt", "fa-github-square", "fa-gitlab", "fa-gittip", "fa-glass", "fa-glide", "fa-glide-g", "fa-globe", "fa-google", "fa-google-plus", "fa-google-plus-circle", "fa-google-plus-official", "fa-google-plus-square", "fa-google-wallet", "fa-graduation-cap", "fa-gratipay", "fa-grav", "fa-group", "fa-h-square", "fa-hacker-news", "fa-hand-grab-o", "fa-hand-lizard-o", "fa-hand-o-down", "fa-hand-o-left", "fa-hand-o-right", "fa-hand-o-up", "fa-hand-paper-o", "fa-hand-peace-o", "fa-hand-pointer-o", "fa-hand-rock-o", "fa-hand-scissors-o", "fa-hand-spock-o", "fa-hand-stop-o", "fa-handshake-o", "fa-hard-of-hearing", "fa-hashtag", "fa-hdd-o", "fa-header", "fa-headphones", "fa-heart", "fa-heart-o", "fa-heartbeat", "fa-history", "fa-home", "fa-hospital-o", "fa-hotel", "fa-hourglass", "fa-hourglass-1", "fa-hourglass-2", "fa-hourglass-3", "fa-hourglass-end", "fa-hourglass-half", "fa-hourglass-o", "fa-hourglass-start", "fa-houzz", "fa-html5", "fa-i-cursor", "fa-id-badge", "fa-id-card", "fa-id-card-o", "fa-ils", "fa-image", "fa-imdb", "fa-inbox", "fa-indent", "fa-industry", "fa-info", "fa-info-circle", "fa-inr", "fa-instagram", "fa-institution", "fa-internet-explorer", "fa-intersex", "fa-ioxhost", "fa-italic", "fa-joomla", "fa-jpy", "fa-jsfiddle", "fa-key", "fa-keyboard-o", "fa-krw", "fa-language", "fa-laptop", "fa-lastfm", "fa-lastfm-square", "fa-leaf", "fa-leanpub", "fa-legal", "fa-lemon-o", "fa-level-down", "fa-level-up", "fa-life-bouy", "fa-life-buoy", "fa-life-ring", "fa-life-saver", "fa-lightbulb-o", "fa-line-chart", "fa-link", "fa-linkedin", "fa-linkedin-square", "fa-linode", "fa-linux", "fa-list", "fa-list-alt", "fa-list-ol", "fa-list-ul", "fa-location-arrow", "fa-lock", "fa-long-arrow-down", "fa-long-arrow-left", "fa-long-arrow-right", "fa-long-arrow-up", "fa-low-vision", "fa-magic", "fa-magnet", "fa-mail-forward", "fa-mail-reply", "fa-mail-reply-all", "fa-male", "fa-map", "fa-map-marker", "fa-map-o", "fa-map-pin", "fa-map-signs", "fa-mars", "fa-mars-double", "fa-mars-stroke", "fa-mars-stroke-h", "fa-mars-stroke-v", "fa-maxcdn", "fa-meanpath", "fa-medium", "fa-medkit", "fa-meetup", "fa-meh-o", "fa-mercury", "fa-microchip", "fa-microphone", "fa-microphone-slash", "fa-minus", "fa-minus-circle", "fa-minus-square", "fa-minus-square-o", "fa-mixcloud", "fa-mobile", "fa-mobile-phone", "fa-modx", "fa-money", "fa-moon-o", "fa-mortar-board", "fa-motorcycle", "fa-mouse-pointer", "fa-music", "fa-navicon", "fa-neuter", "fa-newspaper-o", "fa-object-group", "fa-object-ungroup", "fa-odnoklassniki", "fa-odnoklassniki-square", "fa-opencart", "fa-openid", "fa-opera", "fa-optin-monster", "fa-outdent", "fa-pagelines", "fa-paint-brush", "fa-paper-plane", "fa-paper-plane-o", "fa-paperclip", "fa-paragraph", "fa-paste", "fa-pause", "fa-pause-circle", "fa-pause-circle-o", "fa-paw", "fa-paypal", "fa-pencil", "fa-pencil-square", "fa-pencil-square-o", "fa-percent", "fa-phone", "fa-phone-square", "fa-photo", "fa-picture-o", "fa-pie-chart", "fa-pied-piper", "fa-pied-piper-alt", "fa-pied-piper-pp", "fa-pinterest", "fa-pinterest-p", "fa-pinterest-square", "fa-plane", "fa-play", "fa-play-circle", "fa-play-circle-o", "fa-plug", "fa-plus", "fa-plus-circle", "fa-plus-square", "fa-plus-square-o", "fa-podcast", "fa-power-off", "fa-print", "fa-product-hunt", "fa-puzzle-piece", "fa-qq", "fa-qrcode", "fa-question", "fa-question-circle", "fa-question-circle-o", "fa-quora", "fa-quote-left", "fa-quote-right", "fa-ra", "fa-random", "fa-ravelry", "fa-rebel", "fa-recycle", "fa-reddit", "fa-reddit-alien", "fa-reddit-square", "fa-refresh", "fa-registered", "fa-remove", "fa-renren", "fa-reorder", "fa-repeat", "fa-reply", "fa-reply-all", "fa-resistance", "fa-retweet", "fa-rmb", "fa-road", "fa-rocket", "fa-rotate-left", "fa-rotate-right", "fa-rouble", "fa-rss", "fa-rss-square", "fa-rub", "fa-ruble", "fa-rupee", "fa-s15", "fa-safari", "fa-save", "fa-scissors", "fa-scribd", "fa-search", "fa-search-minus", "fa-search-plus", "fa-sellsy", "fa-send", "fa-send-o", "fa-server", "fa-share", "fa-share-alt", "fa-share-alt-square", "fa-share-square", "fa-share-square-o", "fa-shekel", "fa-sheqel", "fa-shield", "fa-ship", "fa-shirtsinbulk", "fa-shopping-bag", "fa-shopping-basket", "fa-shopping-cart", "fa-shower", "fa-sign-in", "fa-sign-language", "fa-sign-out", "fa-signal", "fa-signing", "fa-simplybuilt", "fa-sitemap", "fa-skyatlas", "fa-skype", "fa-slack", "fa-sliders", "fa-slideshare", "fa-smile-o", "fa-snapchat", "fa-snapchat-ghost", "fa-snapchat-square", "fa-snowflake-o", "fa-soccer-ball-o", "fa-sort", "fa-sort-alpha-asc", "fa-sort-alpha-desc", "fa-sort-amount-asc", "fa-sort-amount-desc", "fa-sort-asc", "fa-sort-desc", "fa-sort-down", "fa-sort-numeric-asc", "fa-sort-numeric-desc", "fa-sort-up", "fa-soundcloud", "fa-space-shuttle", "fa-spinner", "fa-spoon", "fa-spotify", "fa-square", "fa-square-o", "fa-stack-exchange", "fa-stack-overflow", "fa-star", "fa-star-half", "fa-star-half-empty", "fa-star-half-full", "fa-star-half-o", "fa-star-o", "fa-steam", "fa-steam-square", "fa-step-backward", "fa-step-forward", "fa-stethoscope", "fa-sticky-note", "fa-sticky-note-o", "fa-stop", "fa-stop-circle", "fa-stop-circle-o", "fa-street-view", "fa-strikethrough", "fa-stumbleupon", "fa-stumbleupon-circle", "fa-subscript", "fa-subway", "fa-suitcase", "fa-sun-o", "fa-superpowers", "fa-superscript", "fa-support", "fa-table", "fa-tablet", "fa-tachometer", "fa-tag", "fa-tags", "fa-tasks", "fa-taxi", "fa-telegram", "fa-television", "fa-tencent-weibo", "fa-terminal", "fa-text-height", "fa-text-width", "fa-th", "fa-th-large", "fa-th-list", "fa-themeisle", "fa-thermometer", "fa-thermometer-0", "fa-thermometer-1", "fa-thermometer-2", "fa-thermometer-3", "fa-thermometer-4", "fa-thermometer-empty", "fa-thermometer-full", "fa-thermometer-half", "fa-thermometer-quarter", "fa-thermometer-three-quarters", "fa-thumb-tack", "fa-thumbs-down", "fa-thumbs-o-down", "fa-thumbs-o-up", "fa-thumbs-up", "fa-ticket", "fa-times", "fa-times-circle", "fa-times-circle-o", "fa-times-rectangle", "fa-times-rectangle-o", "fa-tint", "fa-toggle-down", "fa-toggle-left", "fa-toggle-off", "fa-toggle-on", "fa-toggle-right", "fa-toggle-up", "fa-trademark", "fa-train", "fa-transgender", "fa-transgender-alt", "fa-trash", "fa-trash-o", "fa-tree", "fa-trello", "fa-tripadvisor", "fa-trophy", "fa-truck", "fa-try", "fa-tty", "fa-tumblr", "fa-tumblr-square", "fa-turkish-lira", "fa-tv", "fa-twitch", "fa-twitter", "fa-twitter-square", "fa-umbrella", "fa-underline", "fa-undo", "fa-universal-access", "fa-university", "fa-unlink", "fa-unlock", "fa-unlock-alt", "fa-unsorted", "fa-upload", "fa-usb", "fa-usd", "fa-user", "fa-user-circle", "fa-user-circle-o", "fa-user-md", "fa-user-o", "fa-user-plus", "fa-user-secret", "fa-user-times", "fa-users", "fa-vcard", "fa-vcard-o", "fa-venus", "fa-venus-double", "fa-venus-mars", "fa-viacoin", "fa-viadeo", "fa-viadeo-square", "fa-video-camera", "fa-vimeo", "fa-vimeo-square", "fa-vine", "fa-vk", "fa-volume-control-phone", "fa-volume-down", "fa-volume-off", "fa-volume-up", "fa-warning", "fa-wechat", "fa-weibo", "fa-weixin", "fa-whatsapp", "fa-wheelchair", "fa-wheelchair-alt", "fa-wifi", "fa-wikipedia-w", "fa-window-close", "fa-window-close-o", "fa-window-maximize", "fa-window-minimize", "fa-window-restore", "fa-windows", "fa-won", "fa-wordpress", "fa-wpbeginner", "fa-wpexplorer", "fa-wpforms", "fa-wrench", "fa-xing", "fa-xing-square", "fa-y-combinator", "fa-y-combinator-square", "fa-yahoo", "fa-yc", "fa-yc-square", "fa-yelp", "fa-yen", "fa-yoast", "fa-youtube", "fa-youtube-play", "fa-youtube-square"];
        }
    }, {
        key: 'linea_all_icons',
        value: function linea_all_icons() {
            var icons = [];
            icons = icons.concat(this.linea_arrows_icons());
            icons = icons.concat(this.linea_basic_icons());
            icons = icons.concat(this.linea_basic_elaboration_icons());
            icons = icons.concat(this.linea_ecommerce_icons());
            icons = icons.concat(this.linea_music_icons());
            icons = icons.concat(this.linea_software_icons());
            icons = icons.concat(this.linea_weather_icons());
            return icons;
        }
    }, {
        key: 'linea_arrows_icons',
        value: function linea_arrows_icons() {
            return ["icon-arrows-anticlockwise", "icon-arrows-anticlockwise-dashed", "icon-arrows-button-down", "icon-arrows-button-off", "icon-arrows-button-on", "icon-arrows-button-up", "icon-arrows-check", "icon-arrows-circle-check", "icon-arrows-circle-down", "icon-arrows-circle-downleft", "icon-arrows-circle-downright", "icon-arrows-circle-left", "icon-arrows-circle-minus", "icon-arrows-circle-plus", "icon-arrows-circle-remove", "icon-arrows-circle-right", "icon-arrows-circle-up", "icon-arrows-circle-upleft", "icon-arrows-circle-upright", "icon-arrows-clockwise", "icon-arrows-clockwise-dashed", "icon-arrows-compress", "icon-arrows-deny", "icon-arrows-diagonal", "icon-arrows-diagonal2", "icon-arrows-down", "icon-arrows-down-double", "icon-arrows-downleft", "icon-arrows-downright", "icon-arrows-drag-down", "icon-arrows-drag-down-dashed", "icon-arrows-drag-horiz", "icon-arrows-drag-left", "icon-arrows-drag-left-dashed", "icon-arrows-drag-right", "icon-arrows-drag-right-dashed", "icon-arrows-drag-up", "icon-arrows-drag-up-dashed", "icon-arrows-drag-vert", "icon-arrows-exclamation", "icon-arrows-expand", "icon-arrows-expand-diagonal1", "icon-arrows-expand-horizontal1", "icon-arrows-expand-vertical1", "icon-arrows-fit-horizontal", "icon-arrows-fit-vertical", "icon-arrows-glide", "icon-arrows-glide-horizontal", "icon-arrows-glide-vertical", "icon-arrows-hamburger1", "icon-arrows-hamburger-2", "icon-arrows-horizontal", "icon-arrows-info", "icon-arrows-keyboard-alt", "icon-arrows-keyboard-cmd", "icon-arrows-keyboard-delete", "icon-arrows-keyboard-down", "icon-arrows-keyboard-left", "icon-arrows-keyboard-return", "icon-arrows-keyboard-right", "icon-arrows-keyboard-shift", "icon-arrows-keyboard-tab", "icon-arrows-keyboard-up", "icon-arrows-left", "icon-arrows-left-double-32", "icon-arrows-minus", "icon-arrows-move", "icon-arrows-move2", "icon-arrows-move-bottom", "icon-arrows-move-left", "icon-arrows-move-right", "icon-arrows-move-top", "icon-arrows-plus", "icon-arrows-question", "icon-arrows-remove", "icon-arrows-right", "icon-arrows-right-double", "icon-arrows-rotate", "icon-arrows-rotate-anti", "icon-arrows-rotate-anti-dashed", "icon-arrows-rotate-dashed", "icon-arrows-shrink", "icon-arrows-shrink-diagonal1", "icon-arrows-shrink-diagonal2", "icon-arrows-shrink-horizonal2", "icon-arrows-shrink-horizontal1", "icon-arrows-shrink-vertical1", "icon-arrows-shrink-vertical2", "icon-arrows-sign-down", "icon-arrows-sign-left", "icon-arrows-sign-right", "icon-arrows-sign-up", "icon-arrows-slide-down1", "icon-arrows-slide-down2", "icon-arrows-slide-left1", "icon-arrows-slide-left2", "icon-arrows-slide-right1", "icon-arrows-slide-right2", "icon-arrows-slide-up1", "icon-arrows-slide-up2", "icon-arrows-slim-down", "icon-arrows-slim-down-dashed", "icon-arrows-slim-left", "icon-arrows-slim-left-dashed", "icon-arrows-slim-right", "icon-arrows-slim-right-dashed", "icon-arrows-slim-up", "icon-arrows-slim-up-dashed", "icon-arrows-square-check", "icon-arrows-square-down", "icon-arrows-square-downleft", "icon-arrows-square-downright", "icon-arrows-square-left", "icon-arrows-square-minus", "icon-arrows-square-plus", "icon-arrows-square-remove", "icon-arrows-square-right", "icon-arrows-square-up", "icon-arrows-square-upleft", "icon-arrows-square-upright", "icon-arrows-squares", "icon-arrows-stretch-diagonal1", "icon-arrows-stretch-diagonal2", "icon-arrows-stretch-diagonal3", "icon-arrows-stretch-diagonal4", "icon-arrows-stretch-horizontal1", "icon-arrows-stretch-horizontal2", "icon-arrows-stretch-vertical1", "icon-arrows-stretch-vertical2", "icon-arrows-switch-horizontal", "icon-arrows-switch-vertical", "icon-arrows-up", "icon-arrows-up-double-33", "icon-arrows-upleft", "icon-arrows-upright", "icon-arrows-vertical"];
        }
    }, {
        key: 'linea_basic_icons',
        value: function linea_basic_icons() {
            return ["icon-basic-accelerator", "icon-basic-alarm", "icon-basic-anchor", "icon-basic-anticlockwise", "icon-basic-archive", "icon-basic-archive-full", "icon-basic-ban", "icon-basic-battery-charge", "icon-basic-battery-empty", "icon-basic-battery-full", "icon-basic-battery-half", "icon-basic-bolt", "icon-basic-book", "icon-basic-book-pen", "icon-basic-book-pencil", "icon-basic-bookmark", "icon-basic-calculator", "icon-basic-calendar", "icon-basic-cards-diamonds", "icon-basic-cards-hearts", "icon-basic-case", "icon-basic-chronometer", "icon-basic-clessidre", "icon-basic-clock", "icon-basic-clockwise", "icon-basic-cloud", "icon-basic-clubs", "icon-basic-compass", "icon-basic-cup", "icon-basic-diamonds", "icon-basic-display", "icon-basic-download", "icon-basic-exclamation", "icon-basic-eye", "icon-basic-eye-closed", "icon-basic-female", "icon-basic-flag1", "icon-basic-flag2", "icon-basic-floppydisk", "icon-basic-folder", "icon-basic-folder-multiple", "icon-basic-gear", "icon-basic-geolocalize-01", "icon-basic-geolocalize-05", "icon-basic-globe", "icon-basic-gunsight", "icon-basic-hammer", "icon-basic-headset", "icon-basic-heart", "icon-basic-heart-broken", "icon-basic-helm", "icon-basic-home", "icon-basic-info", "icon-basic-ipod", "icon-basic-joypad", "icon-basic-key", "icon-basic-keyboard", "icon-basic-laptop", "icon-basic-life-buoy", "icon-basic-lightbulb", "icon-basic-link", "icon-basic-lock", "icon-basic-lock-open", "icon-basic-magic-mouse", "icon-basic-magnifier", "icon-basic-magnifier-minus", "icon-basic-magnifier-plus", "icon-basic-mail", "icon-basic-mail-multiple", "icon-basic-mail-open", "icon-basic-mail-open-text", "icon-basic-male", "icon-basic-map", "icon-basic-message", "icon-basic-message-multiple", "icon-basic-message-txt", "icon-basic-mixer2", "icon-basic-mouse", "icon-basic-notebook", "icon-basic-notebook-pen", "icon-basic-notebook-pencil", "icon-basic-paperplane", "icon-basic-pencil-ruler", "icon-basic-pencil-ruler-pen", "icon-basic-photo", "icon-basic-picture", "icon-basic-picture-multiple", "icon-basic-pin1", "icon-basic-pin2", "icon-basic-postcard", "icon-basic-postcard-multiple", "icon-basic-printer", "icon-basic-question", "icon-basic-rss", "icon-basic-server", "icon-basic-server2", "icon-basic-server-cloud", "icon-basic-server-download", "icon-basic-server-upload", "icon-basic-settings", "icon-basic-share", "icon-basic-sheet", "icon-basic-sheet-multiple", "icon-basic-sheet-pen", "icon-basic-sheet-pencil", "icon-basic-sheet-txt", "icon-basic-signs", "icon-basic-smartphone", "icon-basic-spades", "icon-basic-spread", "icon-basic-spread-bookmark", "icon-basic-spread-text", "icon-basic-spread-text-bookmark", "icon-basic-star", "icon-basic-tablet", "icon-basic-target", "icon-basic-todo", "icon-basic-todo-pen", "icon-basic-todo-pencil", "icon-basic-todo-txt", "icon-basic-todolist-pen", "icon-basic-todolist-pencil", "icon-basic-trashcan", "icon-basic-trashcan-full", "icon-basic-trashcan-refresh", "icon-basic-trashcan-remove", "icon-basic-upload", "icon-basic-usb", "icon-basic-video", "icon-basic-watch", "icon-basic-webpage", "icon-basic-webpage-img-txt", "icon-basic-webpage-multiple", "icon-basic-webpage-txt", "icon-basic-world"];
        }
    }, {
        key: 'linea_basic_elaboration_icons',
        value: function linea_basic_elaboration_icons() {
            return ["icon-basic-elaboration-bookmark-checck", "icon-basic-elaboration-bookmark-minus", "icon-basic-elaboration-bookmark-plus", "icon-basic-elaboration-bookmark-remove", "icon-basic-elaboration-briefcase-check", "icon-basic-elaboration-briefcase-download", "icon-basic-elaboration-briefcase-flagged", "icon-basic-elaboration-briefcase-minus", "icon-basic-elaboration-briefcase-plus", "icon-basic-elaboration-briefcase-refresh", "icon-basic-elaboration-briefcase-remove", "icon-basic-elaboration-briefcase-search", "icon-basic-elaboration-briefcase-star", "icon-basic-elaboration-briefcase-upload", "icon-basic-elaboration-browser-check", "icon-basic-elaboration-browser-download", "icon-basic-elaboration-browser-minus", "icon-basic-elaboration-browser-plus", "icon-basic-elaboration-browser-refresh", "icon-basic-elaboration-browser-remove", "icon-basic-elaboration-browser-search", "icon-basic-elaboration-browser-star", "icon-basic-elaboration-browser-upload", "icon-basic-elaboration-calendar-check", "icon-basic-elaboration-calendar-cloud", "icon-basic-elaboration-calendar-download", "icon-basic-elaboration-calendar-empty", "icon-basic-elaboration-calendar-flagged", "icon-basic-elaboration-calendar-heart", "icon-basic-elaboration-calendar-minus", "icon-basic-elaboration-calendar-next", "icon-basic-elaboration-calendar-noaccess", "icon-basic-elaboration-calendar-pencil", "icon-basic-elaboration-calendar-plus", "icon-basic-elaboration-calendar-previous", "icon-basic-elaboration-calendar-refresh", "icon-basic-elaboration-calendar-remove", "icon-basic-elaboration-calendar-search", "icon-basic-elaboration-calendar-star", "icon-basic-elaboration-calendar-upload", "icon-basic-elaboration-cloud-check", "icon-basic-elaboration-cloud-download", "icon-basic-elaboration-cloud-minus", "icon-basic-elaboration-cloud-noaccess", "icon-basic-elaboration-cloud-plus", "icon-basic-elaboration-cloud-refresh", "icon-basic-elaboration-cloud-remove", "icon-basic-elaboration-cloud-search", "icon-basic-elaboration-cloud-upload", "icon-basic-elaboration-document-check", "icon-basic-elaboration-document-cloud", "icon-basic-elaboration-document-download", "icon-basic-elaboration-document-flagged", "icon-basic-elaboration-document-graph", "icon-basic-elaboration-document-heart", "icon-basic-elaboration-document-minus", "icon-basic-elaboration-document-next", "icon-basic-elaboration-document-noaccess", "icon-basic-elaboration-document-note", "icon-basic-elaboration-document-pencil", "icon-basic-elaboration-document-picture", "icon-basic-elaboration-document-plus", "icon-basic-elaboration-document-previous", "icon-basic-elaboration-document-refresh", "icon-basic-elaboration-document-remove", "icon-basic-elaboration-document-search", "icon-basic-elaboration-document-star", "icon-basic-elaboration-document-upload", "icon-basic-elaboration-folder-check", "icon-basic-elaboration-folder-cloud", "icon-basic-elaboration-folder-document", "icon-basic-elaboration-folder-download", "icon-basic-elaboration-folder-flagged", "icon-basic-elaboration-folder-graph", "icon-basic-elaboration-folder-heart", "icon-basic-elaboration-folder-minus", "icon-basic-elaboration-folder-next", "icon-basic-elaboration-folder-noaccess", "icon-basic-elaboration-folder-note", "icon-basic-elaboration-folder-pencil", "icon-basic-elaboration-folder-picture", "icon-basic-elaboration-folder-plus", "icon-basic-elaboration-folder-previous", "icon-basic-elaboration-folder-refresh", "icon-basic-elaboration-folder-remove", "icon-basic-elaboration-folder-search", "icon-basic-elaboration-folder-star", "icon-basic-elaboration-folder-upload", "icon-basic-elaboration-mail-check", "icon-basic-elaboration-mail-cloud", "icon-basic-elaboration-mail-document", "icon-basic-elaboration-mail-download", "icon-basic-elaboration-mail-flagged", "icon-basic-elaboration-mail-heart", "icon-basic-elaboration-mail-next", "icon-basic-elaboration-mail-noaccess", "icon-basic-elaboration-mail-note", "icon-basic-elaboration-mail-pencil", "icon-basic-elaboration-mail-picture", "icon-basic-elaboration-mail-previous", "icon-basic-elaboration-mail-refresh", "icon-basic-elaboration-mail-remove", "icon-basic-elaboration-mail-search", "icon-basic-elaboration-mail-star", "icon-basic-elaboration-mail-upload", "icon-basic-elaboration-message-check", "icon-basic-elaboration-message-dots", "icon-basic-elaboration-message-happy", "icon-basic-elaboration-message-heart", "icon-basic-elaboration-message-minus", "icon-basic-elaboration-message-note", "icon-basic-elaboration-message-plus", "icon-basic-elaboration-message-refresh", "icon-basic-elaboration-message-remove", "icon-basic-elaboration-message-sad", "icon-basic-elaboration-smartphone-cloud", "icon-basic-elaboration-smartphone-heart", "icon-basic-elaboration-smartphone-noaccess", "icon-basic-elaboration-smartphone-note", "icon-basic-elaboration-smartphone-pencil", "icon-basic-elaboration-smartphone-picture", "icon-basic-elaboration-smartphone-refresh", "icon-basic-elaboration-smartphone-search", "icon-basic-elaboration-tablet-cloud", "icon-basic-elaboration-tablet-heart", "icon-basic-elaboration-tablet-noaccess", "icon-basic-elaboration-tablet-note", "icon-basic-elaboration-tablet-pencil", "icon-basic-elaboration-tablet-picture", "icon-basic-elaboration-tablet-refresh", "icon-basic-elaboration-tablet-search", "icon-basic-elaboration-todolist-2", "icon-basic-elaboration-todolist-check", "icon-basic-elaboration-todolist-cloud", "icon-basic-elaboration-todolist-download", "icon-basic-elaboration-todolist-flagged", "icon-basic-elaboration-todolist-minus", "icon-basic-elaboration-todolist-noaccess", "icon-basic-elaboration-todolist-pencil", "icon-basic-elaboration-todolist-plus", "icon-basic-elaboration-todolist-refresh", "icon-basic-elaboration-todolist-remove", "icon-basic-elaboration-todolist-search", "icon-basic-elaboration-todolist-star", "icon-basic-elaboration-todolist-upload"];
        }
    }, {
        key: 'linea_ecommerce_icons',
        value: function linea_ecommerce_icons() {
            return ["icon-ecommerce-bag", "icon-ecommerce-bag-check", "icon-ecommerce-bag-cloud", "icon-ecommerce-bag-download", "icon-ecommerce-bag-minus", "icon-ecommerce-bag-plus", "icon-ecommerce-bag-refresh", "icon-ecommerce-bag-remove", "icon-ecommerce-bag-search", "icon-ecommerce-bag-upload", "icon-ecommerce-banknote", "icon-ecommerce-banknotes", "icon-ecommerce-basket", "icon-ecommerce-basket-check", "icon-ecommerce-basket-cloud", "icon-ecommerce-basket-download", "icon-ecommerce-basket-minus", "icon-ecommerce-basket-plus", "icon-ecommerce-basket-refresh", "icon-ecommerce-basket-remove", "icon-ecommerce-basket-search", "icon-ecommerce-basket-upload", "icon-ecommerce-bath", "icon-ecommerce-cart", "icon-ecommerce-cart-check", "icon-ecommerce-cart-cloud", "icon-ecommerce-cart-content", "icon-ecommerce-cart-download", "icon-ecommerce-cart-minus", "icon-ecommerce-cart-plus", "icon-ecommerce-cart-refresh", "icon-ecommerce-cart-remove", "icon-ecommerce-cart-search", "icon-ecommerce-cart-upload", "icon-ecommerce-cent", "icon-ecommerce-colon", "icon-ecommerce-creditcard", "icon-ecommerce-diamond", "icon-ecommerce-dollar", "icon-ecommerce-euro", "icon-ecommerce-franc", "icon-ecommerce-gift", "icon-ecommerce-graph1", "icon-ecommerce-graph2", "icon-ecommerce-graph3", "icon-ecommerce-graph-decrease", "icon-ecommerce-graph-increase", "icon-ecommerce-guarani", "icon-ecommerce-kips", "icon-ecommerce-lira", "icon-ecommerce-megaphone", "icon-ecommerce-money", "icon-ecommerce-naira", "icon-ecommerce-pesos", "icon-ecommerce-pound", "icon-ecommerce-receipt", "icon-ecommerce-receipt-bath", "icon-ecommerce-receipt-cent", "icon-ecommerce-receipt-dollar", "icon-ecommerce-receipt-euro", "icon-ecommerce-receipt-franc", "icon-ecommerce-receipt-guarani", "icon-ecommerce-receipt-kips", "icon-ecommerce-receipt-lira", "icon-ecommerce-receipt-naira", "icon-ecommerce-receipt-pesos", "icon-ecommerce-receipt-pound", "icon-ecommerce-receipt-rublo", "icon-ecommerce-receipt-rupee", "icon-ecommerce-receipt-tugrik", "icon-ecommerce-receipt-won", "icon-ecommerce-receipt-yen", "icon-ecommerce-receipt-yen2", "icon-ecommerce-recept-colon", "icon-ecommerce-rublo", "icon-ecommerce-rupee", "icon-ecommerce-safe", "icon-ecommerce-sale", "icon-ecommerce-sales", "icon-ecommerce-ticket", "icon-ecommerce-tugriks", "icon-ecommerce-wallet", "icon-ecommerce-won", "icon-ecommerce-yen", "icon-ecommerce-yen2"];
        }
    }, {
        key: 'linea_music_icons',
        value: function linea_music_icons() {
            return ["icon-music-beginning-button", "icon-music-bell", "icon-music-cd", "icon-music-diapason", "icon-music-eject-button", "icon-music-end-button", "icon-music-fastforward-button", "icon-music-headphones", "icon-music-ipod", "icon-music-loudspeaker", "icon-music-microphone", "icon-music-microphone-old", "icon-music-mixer", "icon-music-mute", "icon-music-note-multiple", "icon-music-note-single", "icon-music-pause-button", "icon-music-play-button", "icon-music-playlist", "icon-music-radio-ghettoblaster", "icon-music-radio-portable", "icon-music-record", "icon-music-recordplayer", "icon-music-repeat-button", "icon-music-rewind-button", "icon-music-shuffle-button", "icon-music-stop-button", "icon-music-tape", "icon-music-volume-down", "icon-music-volume-up"];
        }
    }, {
        key: 'linea_software_icons',
        value: function linea_software_icons() {
            return ["icon-software-add-vectorpoint", "icon-software-box-oval", "icon-software-box-polygon", "icon-software-box-rectangle", "icon-software-box-roundedrectangle", "icon-software-character", "icon-software-crop", "icon-software-eyedropper", "icon-software-font-allcaps", "icon-software-font-baseline-shift", "icon-software-font-horizontal-scale", "icon-software-font-kerning", "icon-software-font-leading", "icon-software-font-size", "icon-software-font-smallcapital", "icon-software-font-smallcaps", "icon-software-font-strikethrough", "icon-software-font-tracking", "icon-software-font-underline", "icon-software-font-vertical-scale", "icon-software-horizontal-align-center", "icon-software-horizontal-align-left", "icon-software-horizontal-align-right", "icon-software-horizontal-distribute-center", "icon-software-horizontal-distribute-left", "icon-software-horizontal-distribute-right", "icon-software-indent-firstline", "icon-software-indent-left", "icon-software-indent-right", "icon-software-lasso", "icon-software-layers1", "icon-software-layers2", "icon-software-layout", "icon-software-layout-2columns", "icon-software-layout-3columns", "icon-software-layout-4boxes", "icon-software-layout-4columns", "icon-software-layout-4lines", "icon-software-layout-8boxes", "icon-software-layout-header", "icon-software-layout-header-2columns", "icon-software-layout-header-3columns", "icon-software-layout-header-4boxes", "icon-software-layout-header-4columns", "icon-software-layout-header-complex", "icon-software-layout-header-complex2", "icon-software-layout-header-complex3", "icon-software-layout-header-complex4", "icon-software-layout-header-sideleft", "icon-software-layout-header-sideright", "icon-software-layout-sidebar-left", "icon-software-layout-sidebar-right", "icon-software-magnete", "icon-software-pages", "icon-software-paintbrush", "icon-software-paintbucket", "icon-software-paintroller", "icon-software-paragraph", "icon-software-paragraph-align-left", "icon-software-paragraph-align-right", "icon-software-paragraph-center", "icon-software-paragraph-justify-all", "icon-software-paragraph-justify-center", "icon-software-paragraph-justify-left", "icon-software-paragraph-justify-right", "icon-software-paragraph-space-after", "icon-software-paragraph-space-before", "icon-software-pathfinder-exclude", "icon-software-pathfinder-intersect", "icon-software-pathfinder-subtract", "icon-software-pathfinder-unite", "icon-software-pen", "icon-software-pen-add", "icon-software-pen-remove", "icon-software-pencil", "icon-software-polygonallasso", "icon-software-reflect-horizontal", "icon-software-reflect-vertical", "icon-software-remove-vectorpoint", "icon-software-scale-expand", "icon-software-scale-reduce", "icon-software-selection-oval", "icon-software-selection-polygon", "icon-software-selection-rectangle", "icon-software-selection-roundedrectangle", "icon-software-shape-oval", "icon-software-shape-polygon", "icon-software-shape-rectangle", "icon-software-shape-roundedrectangle", "icon-software-slice", "icon-software-transform-bezier", "icon-software-vector-box", "icon-software-vector-composite", "icon-software-vector-line", "icon-software-vertical-align-bottom", "icon-software-vertical-align-center", "icon-software-vertical-align-top", "icon-software-vertical-distribute-bottom", "icon-software-vertical-distribute-center", "icon-software-vertical-distribute-top"];
        }
    }, {
        key: 'linea_weather_icons',
        value: function linea_weather_icons() {
            return ["icon-weather-aquarius", "icon-weather-aries", "icon-weather-cancer", "icon-weather-capricorn", "icon-weather-cloud", "icon-weather-cloud-drop", "icon-weather-cloud-lightning", "icon-weather-cloud-snowflake", "icon-weather-downpour-fullmoon", "icon-weather-downpour-halfmoon", "icon-weather-downpour-sun", "icon-weather-drop", "icon-weather-first-quarter", "icon-weather-fog", "icon-weather-fog-fullmoon", "icon-weather-fog-halfmoon", "icon-weather-fog-sun", "icon-weather-fullmoon", "icon-weather-gemini", "icon-weather-hail", "icon-weather-hail-fullmoon", "icon-weather-hail-halfmoon", "icon-weather-hail-sun", "icon-weather-last-quarter", "icon-weather-leo", "icon-weather-libra", "icon-weather-lightning", "icon-weather-mistyrain", "icon-weather-mistyrain-fullmoon", "icon-weather-mistyrain-halfmoon", "icon-weather-mistyrain-sun", "icon-weather-moon", "icon-weather-moondown-full", "icon-weather-moondown-half", "icon-weather-moonset-full", "icon-weather-moonset-half", "icon-weather-move2", "icon-weather-newmoon", "icon-weather-pisces", "icon-weather-rain", "icon-weather-rain-fullmoon", "icon-weather-rain-halfmoon", "icon-weather-rain-sun", "icon-weather-sagittarius", "icon-weather-scorpio", "icon-weather-snow", "icon-weather-snow-fullmoon", "icon-weather-snow-halfmoon", "icon-weather-snow-sun", "icon-weather-snowflake", "icon-weather-star", "icon-weather-storm-11", "icon-weather-storm-32", "icon-weather-storm-fullmoon", "icon-weather-storm-halfmoon", "icon-weather-storm-sun", "icon-weather-sun", "icon-weather-sundown", "icon-weather-sunset", "icon-weather-taurus", "icon-weather-tempest", "icon-weather-tempest-fullmoon", "icon-weather-tempest-halfmoon", "icon-weather-tempest-sun", "icon-weather-variable-fullmoon", "icon-weather-variable-halfmoon", "icon-weather-variable-sun", "icon-weather-virgo", "icon-weather-waning-cresent", "icon-weather-waning-gibbous", "icon-weather-waxing-cresent", "icon-weather-waxing-gibbous", "icon-weather-wind", "icon-weather-wind-e", "icon-weather-wind-fullmoon", "icon-weather-wind-halfmoon", "icon-weather-wind-n", "icon-weather-wind-ne", "icon-weather-wind-nw", "icon-weather-wind-s", "icon-weather-wind-se", "icon-weather-wind-sun", "icon-weather-wind-sw", "icon-weather-wind-w", "icon-weather-windgust"];
        }
    }, {
        key: 'selectIcon',
        value: function selectIcon(icon) {
            this.update({ icon: icon });
            this.setState({ filter: false, open: false });
        }
    }, {
        key: 'onButtonClick',
        value: function onButtonClick() {
            var _this2 = this;

            this.setState({ open: !this.state.open });
            setTimeout(function () {
                if (_this2.refs != undefined && _this2.refs.icon_search != undefined) {
                    _this2.refs.icon_search.focus();
                }
            }, 200);
        }
    }, {
        key: 'getIconChoices',
        value: function getIconChoices() {
            var _this3 = this;

            var icons = this.icons();
            var iconClass = 'fa';

            if (this.state.set == 'linea') {
                icons = this.linea_all_icons();
                iconClass = 'linea';
            }

            return _react2.default.createElement(
                'div',
                { className: 'ocb-sf-icon-choices' },
                icons.map(function (icon, index) {
                    if (_this3.state.filter && icon.includes(_this3.state.filter) || !_this3.state.filter) {
                        var active = '';
                        if (_this3.props.settings.icon == icon) {
                            active = 'active';
                        }

                        return _react2.default.createElement(
                            'div',
                            { key: index, className: 'ocb-sf-icon-choice ' + active, onClick: function onClick() {
                                    return _this3.selectIcon(icon);
                                } },
                            _react2.default.createElement('i', { className: iconClass + ' ' + icon })
                        );
                    }
                })
            );
        }
    }, {
        key: 'render',
        value: function render() {
            var _this4 = this;

            var icons = null;
            var faActive = this.state.set == 'fontawesome' ? 'active' : '';
            var lineaActive = this.state.set == 'linea' ? 'active' : '';
            var setChooser = null;
            var hasChooser = '';

            if (OCBGlobalSettings.icons.linea) {
                setChooser = _react2.default.createElement(
                    'div',
                    { className: 'ocb-sf-icon-sets' },
                    _react2.default.createElement(
                        'div',
                        { className: faActive + ' ocb-sf-icon-set', onClick: function onClick() {
                                return _this4.setState({ set: 'fontawesome' });
                            } },
                        'Fontawesome'
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: lineaActive + ' ocb-sf-icon-set', onClick: function onClick() {
                                return _this4.setState({ set: 'linea' });
                            } },
                        'Linea'
                    )
                );
                hasChooser = 'ocb-sf-icon-has-chooser';
            }

            if (this.state.open) {
                icons = _react2.default.createElement(
                    'div',
                    { className: 'ocb-sf-icon-selector ' + hasChooser },
                    _react2.default.createElement(
                        'div',
                        { className: 'ocb-sf-icon-heading' },
                        _react2.default.createElement('i', { className: 'fa fa-remove', onClick: function onClick() {
                                return _this4.setState({ open: false });
                            } })
                    ),
                    setChooser,
                    _react2.default.createElement(
                        'div',
                        { className: 'ocb-sf-icon-search' },
                        _react2.default.createElement('input', { ref: 'icon_search', placeholder: 'search for icon...', onChange: function onChange(e) {
                                return _this4.setState({ filter: e.target.value });
                            } })
                    ),
                    this.getIconChoices()
                );
            }

            var button = _react2.default.createElement(
                'div',
                { className: 'ocb-sf-button', onClick: this.onButtonClick.bind(this) },
                'Choose Icon'
            );
            var selectedIcon = null;

            if (this.props.settings.icon) {
                selectedIcon = _react2.default.createElement(
                    'div',
                    { className: 'ocb-sf-selected-icon d-flex justify-content-between align-items-center' },
                    _react2.default.createElement('i', { className: 'fa ' + this.props.settings.icon, onClick: this.onButtonClick.bind(this) }),
                    _react2.default.createElement('i', { className: 'fa fa-remove', onClick: function onClick() {
                            return _this4.selectIcon(false);
                        } })
                );
                button = null;
            }

            return _react2.default.createElement(
                'div',
                { className: 'ocb-sf-icon-selector-group' },
                selectedIcon,
                button,
                icons
            );
        }
    }]);

    return IconSelector;
}(_react.Component);

exports.default = IconSelector;

/***/ }),

/***/ 360:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _rcSlider = __webpack_require__(98);

var _rcSlider2 = _interopRequireDefault(_rcSlider);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var LinkedSliders = function (_Component) {
    _inherits(LinkedSliders, _Component);

    function LinkedSliders(props) {
        _classCallCheck(this, LinkedSliders);

        var _this = _possibleConstructorReturn(this, (LinkedSliders.__proto__ || Object.getPrototypeOf(LinkedSliders)).call(this, props));

        _this.state = _this.props.values;
        return _this;
    }

    /**
     * Every field should have this function to make sure that settings get updated when a user switched devices
     */
    /*componentWillReceiveProps(){
        if( this.state.currentDevice != this.props.appFunctions.whichActive ){
            this.setState({ ...this.props.values, currentDevice: this.props.appFunctions.whichActive })
        }
    }*/

    /**
     * Field element components like this should be passed the update function of the parent and use that to update the
     * actual data. However, they may need to set their own state like this function
     * @param merge
     */


    _createClass(LinkedSliders, [{
        key: 'update',
        value: function update(merge) {
            this.props.update(merge);
            this.setState(merge);
        }
    }, {
        key: 'changeValue',
        value: function changeValue(newValue, where) {
            var updateObject = {};

            if (this.state.linkedValues == true) {
                updateObject = {
                    top: newValue,
                    bottom: newValue,
                    right: newValue,
                    left: newValue
                };
            } else {
                updateObject[where] = newValue;
            }
            this.update(updateObject);
        }
    }, {
        key: 'changeUnits',
        value: function changeUnits(units) {
            this.update({ units: units });
        }
    }, {
        key: 'linkState',
        value: function linkState() {
            if (this.state.linkedValues == true) {
                this.setState({ linkedValues: false });
            } else {
                this.setState({ linkedValues: true });
            }
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var settings = this.props.values;
            var directions = ['top', 'right', 'left', 'bottom'];

            var step = 1;
            var min = 0;
            var max = 100;

            var baseButtonClass = "ocb-sf-text-button d-inline-block ml-2";
            var linkClass = this.state.linkedValues == true ? baseButtonClass + ' active' : baseButtonClass;

            this.props.field.configuration.forEach(function (config) {
                if (config.units == settings.units) {
                    step = config.step;
                    min = config.min;
                    max = config.max;
                }
            });

            var textButtons = this.props.field.configuration.map(function (config, index) {
                var theClass = config.units == settings.units ? baseButtonClass + ' active' : baseButtonClass;
                return _react2.default.createElement(
                    'span',
                    { key: index, className: theClass, onClick: function onClick() {
                            return _this2.changeUnits(config.units);
                        } },
                    config.units
                );
            });

            var controls = directions.map(function (direction) {
                return _react2.default.createElement(
                    'div',
                    { key: direction, className: 'ocb-sf-spacing-control' },
                    _react2.default.createElement(
                        'div',
                        { className: 'ocb-sf-spacing-label' },
                        _this2.props.field.labels != undefined && _this2.props.field.labels[direction] != undefined ? _this2.props.field.labels[direction] : direction
                    ),
                    _react2.default.createElement(_rcSlider2.default, {
                        className: 'ocb-sf-spacing-slider',
                        value: parseFloat(settings[direction]),
                        step: step,
                        min: min,
                        max: max,
                        onChange: function onChange(newValue) {
                            return _this2.changeValue(newValue, direction);
                        } }),
                    _react2.default.createElement('input', { className: 'ocb-sf-spacing-input', type: 'number', step: 'any',
                        onChange: function onChange(e) {
                            return _this2.changeValue(parseFloat(e.target.value), direction);
                        },
                        onClick: function onClick(e) {
                            return e.target.select();
                        },
                        value: settings[direction] })
                );
            });

            return _react2.default.createElement(
                'div',
                null,
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-sf-link d-inline-block' },
                    'Link Values: ',
                    _react2.default.createElement(
                        'span',
                        { className: linkClass, onClick: function onClick() {
                                return _this2.linkState();
                            } },
                        _react2.default.createElement('i', { className: 'fa fa-link' })
                    )
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-sf-units d-inline-block ml-4' },
                    'Units: ',
                    textButtons
                ),
                controls
            );
        }
    }]);

    return LinkedSliders;
}(_react.Component);

exports.default = LinkedSliders;

/***/ }),

/***/ 361:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Targets = function (_Component) {
    _inherits(Targets, _Component);

    function Targets(props) {
        _classCallCheck(this, Targets);

        var _this = _possibleConstructorReturn(this, (Targets.__proto__ || Object.getPrototypeOf(Targets)).call(this, props));

        _this.state = _extends({}, _this.props.values, { targets: [] });
        return _this;
    }

    _createClass(Targets, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            //Get all of the targets on the page
            var targets = jQuery('#ocb-workspace-iframe').contents().find('[data-ocb-target]');
            var targetArray = [];
            var overlay = this.props.overlay != undefined ? this.props.overlay : false;

            targets.each(function () {
                var target = jQuery(this).attr('data-ocb-target');

                if (overlay) {
                    target = jQuery(this).attr('data-ocb-overlay');
                }

                if (target) {
                    var theId = jQuery(this).attr('id');
                    if (!theId) theId = jQuery(this).attr('data-ocb-target-id');
                    if (!theId) theId = jQuery(this).attr('data-ocb-id');

                    if (theId) targetArray.push({ id: theId, target: target });
                }
            });

            this.setState({ targets: targetArray });
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var settings = this.props.values;
            var options = this.state.targets.map(function (target, index) {
                return _react2.default.createElement(
                    'option',
                    { key: index, value: target.id },
                    target.target
                );
            });

            var currentValue = settings.target;

            if (currentValue != undefined) {
                if (this.props.overlay != undefined && this.props.overlay) {
                    if (!currentValue.includes('##')) currentValue = '';
                } else {
                    if (currentValue.includes('##')) currentValue = '';
                }
            }

            return _react2.default.createElement(
                'select',
                { onChange: function onChange(e) {
                        return _this2.props.update({ target: e.target.value });
                    }, defaultValue: currentValue },
                _react2.default.createElement(
                    'option',
                    { value: '' },
                    'Choose a target...'
                ),
                options
            );
        }
    }]);

    return Targets;
}(_react.Component);

exports.default = Targets;

/***/ }),

/***/ 362:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _selector = __webpack_require__(822);

var _selector2 = _interopRequireDefault(_selector);

var _api_helpers = __webpack_require__(6);

var _api_helpers2 = _interopRequireDefault(_api_helpers);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var TypeSelector = function (_Component) {
    _inherits(TypeSelector, _Component);

    function TypeSelector(props) {
        _classCallCheck(this, TypeSelector);

        var _this = _possibleConstructorReturn(this, (TypeSelector.__proto__ || Object.getPrototypeOf(TypeSelector)).call(this, props));

        _this.state = {};
        return _this;
    }

    _createClass(TypeSelector, [{
        key: 'update',
        value: function update(merge) {
            var update = Object.assign(this.props.values, merge);
            this.props.update(update);
        }
    }, {
        key: 'render',
        value: function render() {
            var selector = this.props.field.configuration != undefined && this.props.field.configuration.selector != undefined ? this.props.field.configuration.selector : 'post';
            var configuration = this.props.field.configuration != undefined ? this.props.field.configuration : {};
            var request = false;
            var labels = { name: 'post' };
            var conversions = {
                name: 'post_title',
                slug: 'post_name',
                id: 'ID'
            };

            switch (selector) {
                case 'post':
                    request = _api_helpers2.default.doRequest('getOfPostType', false, { type: 'post' });
                    labels = {
                        name: 'post'
                    };
                    break;
                case 'page':
                    request = _api_helpers2.default.doRequest('getOfPostType', false, { type: 'page' });
                    labels = {
                        name: 'page'
                    };
                    break;
                case 'category':
                    request = _api_helpers2.default.doRequest('getCategories');
                    labels = {
                        name: 'category',
                        plural: 'categories',
                        capPlural: 'Categories'
                    };
                    conversions = {};
                    break;
                case 'tag':
                    request = _api_helpers2.default.doRequest('getTags');
                    labels = {
                        name: 'tag'
                    };
                    conversions = {};
                    break;
                case 'author':
                    request = _api_helpers2.default.doRequest('getUsers');
                    labels = {
                        name: 'author'
                    };
                    conversions = {};
                    break;
                case '_custom_':
                    var taxonomy = this.props.values.taxonomy;
                    request = _api_helpers2.default.doRequest('getTaxonomy', false, { taxonomy: taxonomy });
                    labels = {
                        name: 'term',
                        plural: 'terms',
                        capPlural: 'Terms'
                    };
                    conversions = { id: 'term_id' };
                    break;
                default:
                    request = _api_helpers2.default.doRequest('getOfPostType', false, { type: selector });
                    labels = configuration.labels != undefined ? configuration.labels : { name: selector };
                    break;
            }

            return _react2.default.createElement(_selector2.default, {
                values: this.props.values,
                update: this.update.bind(this),
                field: this.props.field,
                configuration: configuration,
                conversions: conversions,
                labels: labels,
                request: request,
                taxonomy: this.props.values.taxonomy != undefined ? this.props.values.taxonomy : ''
            });
        }
    }]);

    return TypeSelector;
}(_react.Component);

exports.default = TypeSelector;

/***/ }),

/***/ 363:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactRedux = __webpack_require__(5);

var _redux = __webpack_require__(7);

var _index = __webpack_require__(8);

var _app_overlay = __webpack_require__(13);

var _app_overlay2 = _interopRequireDefault(_app_overlay);

var _api_helpers = __webpack_require__(6);

var _api_helpers2 = _interopRequireDefault(_api_helpers);

var _settings_helpers = __webpack_require__(2);

var _settings_helpers2 = _interopRequireDefault(_settings_helpers);

var _url_helpers = __webpack_require__(27);

var _url_helpers2 = _interopRequireDefault(_url_helpers);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ToolbarCancel = function (_Component) {
    _inherits(ToolbarCancel, _Component);

    function ToolbarCancel() {
        _classCallCheck(this, ToolbarCancel);

        return _possibleConstructorReturn(this, (ToolbarCancel.__proto__ || Object.getPrototypeOf(ToolbarCancel)).apply(this, arguments));
    }

    _createClass(ToolbarCancel, [{
        key: 'removeURLParameter',
        value: function removeURLParameter(url, parameter) {
            //prefer to use l.search if you have a location/link object
            var urlparts = url.split('?');

            if (urlparts.length >= 2) {
                var urlBase = urlparts.shift(); //get first part, and remove from array
                var queryString = urlparts.join("?"); //join it back up
                var prefix = encodeURIComponent(parameter) + '=';
                var pars = queryString.split(/[&;]/g);

                for (var i = pars.length; i-- > 0;) {
                    //reverse iteration as may be destructive
                    if (pars[i].lastIndexOf(prefix, 0) !== -1) {
                        //idiom for string.startsWith
                        pars.splice(i, 1);
                    }
                }

                var remaining = pars.join('&');

                if (remaining) {
                    url = urlBase + '?' + pars.join('&');
                } else {
                    url = urlBase;
                }
            }
            return url;
        }
    }, {
        key: 'saveContentOverlay',
        value: function saveContentOverlay() {
            var _this2 = this;

            var saveOverlayOptions = [{
                classes: 'ocb-success ocb-admin-button-load',
                onClick: function onClick() {
                    return _this2.saveFirst();
                },
                text: 'Save'
            }, {
                classes: 'ocb-danger',
                onClick: function onClick() {
                    return _this2.launchOverlay(true);
                },
                text: 'Discard'
            }, {
                classes: '',
                onClick: function onClick() {
                    return _this2.props.updateAppState('overlay', null);
                },
                text: 'Cancel'
            }];

            var overlay = _react2.default.createElement(_app_overlay2.default, {
                title: 'Are You Sure You Want to Leave?',
                icon: 'warning',
                content: 'You have unsaved changes that will be lost!',
                overlayStyle: 'small',
                stacked: '1',
                options: saveOverlayOptions
            });

            this.props.updateAppState('overlay', overlay);
        }

        /**
         * Save content before creating new content and redirecting to that new page
         * Copied from ToolbarSave - should somehow merge the two
         *
         *
         */

    }, {
        key: 'saveFirst',
        value: function saveFirst() {
            var _this3 = this;

            var iframe = jQuery('#ocb-workspace-iframe');
            var content = iframe.contents().find('#treeContent').clone();
            var siteCSS = iframe.contents().find('#ocb-site-css').html();
            var pageCSS = _settings_helpers2.default.getPageCSS(content);
            var html = _settings_helpers2.default.cleanHTML(content);

            _api_helpers2.default.doRequest('update', { content: html });
            _api_helpers2.default.doRequest('updateSetting', this.props.siteState, { setting: 'ocb_site_settings' });
            _api_helpers2.default.doRequest('updateSetting', { value: siteCSS }, { setting: 'ocb_site_css' });
            _api_helpers2.default.doRequest('updateMeta', this.props.treeContent, { metaKey: 'ocb_tree_content' });

            var lastRequest = _api_helpers2.default.doRequest('updateMeta', { metaValue: pageCSS }, { metaKey: 'ocb_page_css' });

            lastRequest.then(function (result) {
                _this3.launchOverlay();
            });

            this.props.undoRedoSaveHappened();
        }
    }, {
        key: 'launchOverlay',
        value: function launchOverlay() {
            var _this4 = this;

            var discard = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;


            if (this.props.templateGlobals.currentRevert != undefined && this.props.templateGlobals.currentRevert != false) {
                var errorOverlay = _react2.default.createElement(_app_overlay2.default, {
                    title: 'Editing Global',
                    icon: 'warning',
                    stacked: '1',
                    content: 'You cannot exit while editing a global. Please Update or Cancel your Global edit first.',
                    overlayStyle: 'small',
                    options: [{
                        classes: '',
                        onClick: function onClick() {
                            return _this4.props.updateAppState('overlay', null);
                        },
                        text: 'Okay'
                    }]
                });

                this.props.updateAppState('overlay', errorOverlay);

                jQuery('.ocb-toolbar-button.ocb-save, .ocb-admin-button').find('.fa-spinner').remove();

                return;
            }

            //If there are unsaved changes, prompt the user to save or discard
            if (discard == false && this.props.undoRedoState.states != undefined && this.props.undoRedoState.states.length > 1 && (this.props.undoRedoState.lastSaveStatesNumber == undefined || this.props.undoRedoState.lastSaveStatesNumber < this.props.undoRedoState.states.length)) {
                this.saveContentOverlay();
            } else {
                //We're faking like the content was saved so that we don't get an alert triggered in the App component on beforeUnload
                //This may not be the best way to handle it because someone can still cancel adding and then they won't get a warning if they try to navigate without making further changes
                this.props.undoRedoSaveHappened();

                window.location.href = this.removeURLParameter(window.location.href, 'pageEdit');
            }
        }
    }, {
        key: 'render',
        value: function render() {
            var _this5 = this;

            return _react2.default.createElement(
                'div',
                { className: 'ocb-toolbar-button ocb-cancel right', onClick: function onClick() {
                        return _this5.launchOverlay();
                    } },
                'Exit'
            );
        }
    }]);

    return ToolbarCancel;
}(_react.Component);

function mapStateToProps(_ref) {
    var undoRedoState = _ref.undoRedoState,
        siteState = _ref.siteState,
        treeContent = _ref.treeContent,
        templateGlobals = _ref.templateGlobals;

    return { undoRedoState: undoRedoState, siteState: siteState, treeContent: treeContent, templateGlobals: templateGlobals };
}

function mapDispatchToProps(dispatch) {
    return (0, _redux.bindActionCreators)({ updateAppState: _index.updateAppState, undoRedoSaveHappened: _index.undoRedoSaveHappened }, dispatch);
}

exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(ToolbarCancel);

/***/ }),

/***/ 364:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactRedux = __webpack_require__(5);

var _redux = __webpack_require__(7);

var _index = __webpack_require__(8);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ToolbarHistory = function (_Component) {
    _inherits(ToolbarHistory, _Component);

    function ToolbarHistory() {
        _classCallCheck(this, ToolbarHistory);

        return _possibleConstructorReturn(this, (ToolbarHistory.__proto__ || Object.getPrototypeOf(ToolbarHistory)).apply(this, arguments));
    }

    _createClass(ToolbarHistory, [{
        key: 'showHistory',
        value: function showHistory() {
            console.log('history', this.props);
        }
    }, {
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps(nextProps) {
            var _this2 = this;

            if (this.props.tree.lastUpdateType == nextProps.tree.lastUpdateType) return;

            var nextPropsTree = JSON.parse(JSON.stringify(nextProps.tree));
            var nextPropsSiteState = JSON.parse(JSON.stringify(nextProps.siteState));

            //This can be confusing because both tree and siteState store the lastUpdateObject in tree using the treeContent reducer
            var lastUpdateObject = nextPropsTree.lastUpdateObject;

            //Special action for the initial page load
            //if( nextPropsTree.lastUpdateType == 'UPDATE_TREE_STATE_FROM_API' ){
            if (this.props.undoRedo.states != undefined && !this.props.undoRedo.states.length && nextPropsTree.lastUpdateType) {
                delete nextPropsTree.lastUpdateType;
                delete nextPropsTree.lastUpdateObject;

                //Allow this update a little time for globals to update and other componentDidMount actions
                setTimeout(function () {
                    _this2.props.undoRedoAdd(nextPropsTree, nextPropsSiteState, 'page loaded', '');
                }, 1000);
            }

            //console.log('history props', nextPropsTree);

            var updateActions = ['OBJECT_UPDATED', 'DELETE_OBJECT', 'DUPLICATE_OBJECT', 'ADD_OBJECT', 'EQUALIZE_COLUMN_WIDTHS', 'MOVE_OBJECT', 'JOIN_OBJECT', 'GLOBAL_BROKEN', 'GLOBAL_CREATED', 'SITE_SETTINGS_UPDATED'];

            if (!updateActions.includes(nextPropsTree.lastUpdateType) || nextPropsTree.lastUpdateObject == undefined) return;

            var currentdate = new Date();
            var updateTime = currentdate.getHours() + ":" + currentdate.getMinutes() + ":" + currentdate.getSeconds();
            var updateObjectType = nextPropsTree.lastUpdateObject.type;
            var updateModuleType = '';
            if (updateObjectType == 'module') {
                updateModuleType = nextPropsTree.lastUpdateObject.moduleType.replace('_', ' ') + ' ';
            }

            var undoRedoMessage = '' + updateModuleType + updateObjectType + ' ';

            //Update the undo/redo history
            switch (nextPropsTree.lastUpdateType) {
                case 'OBJECT_UPDATED':
                    //OBJECT_UPDATED doesn't actually modify the tree, it's triggered by updates in the settings panel and edit-in-place areas
                    // It is used to push a new state onto undo/redo history
                    undoRedoMessage += 'updated';

                    break;
                case 'DELETE_OBJECT':
                    undoRedoMessage += 'deleted';
                    break;
                case 'DUPLICATE_OBJECT':
                    undoRedoMessage += 'duplicated';
                    break;
                case 'ADD_OBJECT':
                    undoRedoMessage += 'added';
                    break;
                case 'EQUALIZE_COLUMN_WIDTHS':
                    undoRedoMessage += 'columns equalized';
                    break;
                case 'MOVE_OBJECT':
                    undoRedoMessage += 'moved';
                    break;
                case 'JOIN_OBJECT':
                    undoRedoMessage += 'joined with other text modules';
                    break;
                case 'GLOBAL_BROKEN':
                    undoRedoMessage += 'global converted to regular';
                    break;
                case 'GLOBAL_CREATED':
                    undoRedoMessage += 'saved as global';
                    break;
                case 'SITE_SETTINGS_UPDATED':
                    undoRedoMessage += 'updated';
                    break;
            }

            delete nextPropsTree.lastUpdateType;
            delete nextPropsTree.lastUpdateObject;

            //If we're currently editing a global, let's not keep track of undo/redo because we can always cancel the updates to the global
            if (this.props.globals.currentRevert != undefined && this.props.globals.currentRevert != false) return;

            this.props.undoRedoAdd(nextPropsTree, nextPropsSiteState, undoRedoMessage, updateTime, lastUpdateObject);
        }
    }, {
        key: 'render',
        value: function render() {
            return null;

            return _react2.default.createElement(
                'div',
                { className: 'ocb-toolbar-button ocb-history right', onClick: this.showHistory.bind(this) },
                _react2.default.createElement('i', { className: 'fa fa-clock-o' })
            );
        }
    }]);

    return ToolbarHistory;
}(_react.Component);

function mapStateToProps(state) {
    return { tree: state.treeContent, siteState: state.siteState, undoRedo: state.undoRedoState, globals: state.templateGlobals };
}
function mapDispatchToProps(dispatch) {
    return (0, _redux.bindActionCreators)({ undoRedoUndo: _index.undoRedoUndo, undoRedoRedo: _index.undoRedoRedo, undoRedoGoto: _index.undoRedoGoto, undoRedoRestore: _index.undoRedoRestore, undoRedoAdd: _index.undoRedoAdd }, dispatch);
}
exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(ToolbarHistory);

/***/ }),

/***/ 365:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactRedux = __webpack_require__(5);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ToolbarLog = function (_Component) {
    _inherits(ToolbarLog, _Component);

    function ToolbarLog() {
        _classCallCheck(this, ToolbarLog);

        return _possibleConstructorReturn(this, (ToolbarLog.__proto__ || Object.getPrototypeOf(ToolbarLog)).apply(this, arguments));
    }

    _createClass(ToolbarLog, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            return _react2.default.createElement(
                'div',
                { className: 'ocb-toolbar-button ocb-log right', onClick: function onClick() {
                        return console.log(_this2.props.appState);
                    } },
                'Log'
            );
        }
    }]);

    return ToolbarLog;
}(_react.Component);

function mapStateToProps(state) {
    return { appState: state };
}
exports.default = (0, _reactRedux.connect)(mapStateToProps, null)(ToolbarLog);

/***/ }),

/***/ 366:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactRedux = __webpack_require__(5);

var _redux = __webpack_require__(7);

var _combokeys = __webpack_require__(33);

var _combokeys2 = _interopRequireDefault(_combokeys);

var _index = __webpack_require__(8);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ToolbarMenu = function (_Component) {
    _inherits(ToolbarMenu, _Component);

    function ToolbarMenu() {
        _classCallCheck(this, ToolbarMenu);

        return _possibleConstructorReturn(this, (ToolbarMenu.__proto__ || Object.getPrototypeOf(ToolbarMenu)).apply(this, arguments));
    }

    _createClass(ToolbarMenu, [{
        key: 'componentDidMount',

        /**
         * We need to make sure that when you're in the settings panel, the tinyMCE, or some other screen this is disabled
         * Until then, just return
         */
        value: function componentDidMount() {
            this.combokeys = new _combokeys2.default(document.documentElement);
            this.combokeysIframe = new _combokeys2.default(document.getElementById('ocb-workspace-iframe').contentWindow);
            this.combokeys.bind('m', this.keyboardShortcut.bind(this)).bind('esc', this.closeMenuShortcut.bind(this));
            this.combokeysIframe.bind('m', this.keyboardShortcut.bind(this)).bind('esc', this.closeMenuShortcut.bind(this));
        }

        /**
         * Want to make sure that we remove the event listener when it unmounts,
         * otherwise, the listener gets added to window multiple times and causes multiple setState updates
         */

    }, {
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {
            this.combokeys.detach();
            this.combokeysIframe.detach();
        }
    }, {
        key: 'closeMenuShortcut',
        value: function closeMenuShortcut() {
            if (this.props.appState.overlay == null && this.props.menuState.open && !this.props.inlineEditState.inlineEditing) {
                this.props.menuClose();
            }
        }
    }, {
        key: 'keyboardShortcut',
        value: function keyboardShortcut() {
            if (this.props.appState.overlay == null && !this.props.menuState.open && !this.props.inlineEditState.inlineEditing) {
                this.props.menuOpen();
            }
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            if (!OCBGlobalSettings.permissions.access_frontend_menu) return null;

            var onClick = function onClick() {
                return _this2.props.menuOpen();
            };

            if (this.props.menuState.open) {
                onClick = function onClick() {
                    return _this2.props.menuClose();
                };
            }

            return _react2.default.createElement(
                'div',
                { className: 'ocb-toolbar-button ocb-menu left ocb-tooltip-wrap', onClick: onClick },
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-tooltip ocb-tooltip-bottom ocb-tooltip-small ' + window.OffsproutEffect },
                    '(M)'
                ),
                _react2.default.createElement('i', { className: 'fa fa-bars' })
            );
        }
    }]);

    return ToolbarMenu;
}(_react.Component);

function mapStateToProps(_ref) {
    var menuState = _ref.menuState,
        appState = _ref.appState,
        inlineEditState = _ref.inlineEditState;

    return { menuState: menuState, appState: appState, inlineEditState: inlineEditState };
}
function mapDispatchToProps(dispatch) {
    return (0, _redux.bindActionCreators)({ menuOpen: _index.menuOpen, menuClose: _index.menuClose }, dispatch);
}
exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(ToolbarMenu);

/***/ }),

/***/ 367:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactRedux = __webpack_require__(5);

var _redux = __webpack_require__(7);

var _combokeys = __webpack_require__(33);

var _combokeys2 = _interopRequireDefault(_combokeys);

var _index = __webpack_require__(8);

var _app_overlay = __webpack_require__(13);

var _app_overlay2 = _interopRequireDefault(_app_overlay);

var _api_helpers = __webpack_require__(6);

var _api_helpers2 = _interopRequireDefault(_api_helpers);

var _settings_helpers = __webpack_require__(2);

var _settings_helpers2 = _interopRequireDefault(_settings_helpers);

var _url_helpers = __webpack_require__(27);

var _url_helpers2 = _interopRequireDefault(_url_helpers);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ToolbarNew = function (_Component) {
    _inherits(ToolbarNew, _Component);

    function ToolbarNew(props) {
        _classCallCheck(this, ToolbarNew);

        var _this = _possibleConstructorReturn(this, (ToolbarNew.__proto__ || Object.getPrototypeOf(ToolbarNew)).call(this, props));

        _this.state = {
            items: [],
            templates: [],
            what: '',
            selected: false,
            folderFilter: false,
            title: '',
            redirect: true,
            fromTemplate: false,
            aboutToCreate: false,
            aboutToDuplicate: false,
            structureOverlay: false,
            needSave: false,
            newType: false,
            showTemplates: false
        };
        return _this;
    }

    /**
     * Keyboard shortcut bindings
     */


    _createClass(ToolbarNew, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            this.combokeys = new _combokeys2.default(document.documentElement);
            this.combokeysIframe = new _combokeys2.default(document.getElementById('ocb-workspace-iframe').contentWindow);
            //Allows bindGlobal, which makes this work inside of textareas
            __webpack_require__(19)(this.combokeys);
            __webpack_require__(19)(this.combokeysIframe);

            this.combokeys.bind('n', this.keyboardShortcut.bind(this)).bind('s', this.saveFirstShortcut.bind(this)).bind('d', this.discardFirstShortcut.bind(this)).bind('g', this.newPageShortcut.bind(this)).bind('p', this.newPostShortcut.bind(this)).bind('t', this.newTemplateShortcut.bind(this)).bind('c', this.newStructureShortcut.bind(this)).bindGlobal(['return', 'enter'], this.enterCreateNewShortcut.bind(this));
            this.combokeysIframe.bind('n', this.keyboardShortcut.bind(this));
        }

        /**
         * Want to make sure that we remove the event listener when it unmounts,
         * otherwise, the listener gets added to window multiple times and causes multiple setState updates
         */

    }, {
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {
            this.combokeys.detach();
            this.combokeysIframe.detach();
        }

        /*componentDidUpdate(prevProps, prevState){
         if( this.state.showTemplates ){
         if( prevState.templates.length != this.state.templates.length ){
         console.log('handleTemplates');
         //this.props.updateAppState('overlay', null);
         //setTimeout(() => {
         this.handleTemplates(this.state.templates);
         //}, 1)
         }
         }
         }*/

        /*getTemplateChunks( location = 0, number = 20, round = 1 ){
          let offset = ( round - 1 ) * number;
         let templates = SettingsHelpers.getTemplateChunks( 'page', location, { number, offset });
          if( templates != false ) {
          templates.then((response) => {
          //If there are templates add them to the templates in state and then keep trying to retrieve more
         if (response.length) {
          this.setState({templates: this.state.templates.concat(response)});
          if( location == 0 ){
         this.getTemplateChunks(location, number, ( round + 1 ));
         }
          //If there are no templates, go to the next location up to location 3, which does not exist
         } else {
          if (location < 3) {
         this.getTemplateChunks(( location + 1 ), number, 1);
         }
          }
          }).catch((error) => {
          //If there was an error or are no templates, go to the next location up to location 3, which does not exist
         if (location < 3) {
         this.getTemplateChunks(( location + 1 ), number, 1);
         }
          })
          }
          }
          unableToGetTemplates(){
         let overlay = (
         <AppOverlay
         title="Error"
         icon="warning"
         stacked="1"
         content={ `Unable to retrieve any templates. You may have to decrease your memory settings in Site Settings.` }
         overlayStyle="small"
         options={ [
         {
         classes: '',
         onClick: () => this.cancelNew(),
         text: 'Okay'
         }
         ] }
         />
         );
         this.props.updateAppState('overlay', overlay);
         }
          handleTemplates(templates){
         let filters = templates.reduce((accumulator, current) => {
         let folder = current.taxonomies != undefined && current.taxonomies.ocb_template_folder != undefined
         ? current.taxonomies.ocb_template_folder
         : 'No Folder';
          let canAccessFolder = true;
         let folderPermission = 'page_template_folder_' + folder.replace( ' ', '_' );
          if( parent.OCBGlobalSettings.permissions[folderPermission] != undefined && ! parent.OCBGlobalSettings.permissions[folderPermission] ) {
         canAccessFolder = false;
         }
          if(
         canAccessFolder && ! accumulator.find( (each) => each.id == folder )
         ){
         accumulator.push( {
         name: folder,
         id: folder
         } );
         }
          return accumulator;
         }, []);
         let items = templates.map((template) => {
         let folder = template.taxonomies != undefined && template.taxonomies.ocb_template_folder != undefined
         ? template.taxonomies.ocb_template_folder
         : 'No Folder';
          return {
         name: template.post_title,
         css: template.ocb_page_css, //Don't use the meta.ocb_page_css because the API method actually serves the structure's CSS: get_post_meta( $structure_id, 'ocb_page_css', true )
         globalCss: '',
         content: template.post_content_shortcode,
         id: template.ID,
         folder: folder,
         template: template
         };
         });
          items = items.filter(template => {
         let canAccessFolder = true;
         let folderPermission = 'page_template_folder_' + template.folder.replace( ' ', '_' );
          if( parent.OCBGlobalSettings.permissions[folderPermission] != undefined && ! parent.OCBGlobalSettings.permissions[folderPermission] ) {
         canAccessFolder = false;
         }
          return canAccessFolder;
         });
          let overlayOptions = [
         {
         classes: 'ocb-danger',
         onClick: () => this.cancelNew(),
         text: 'Cancel'
         }
         ];
          let message = 'Choose the template to use';
          console.log('toolbar_new templates in overlay', items);
          let overlay = (
         <AppOverlay
         title={ message }
         overlayStyle="template"
         options={ overlayOptions }
         filters={ filters }
         items={ items }
         useFunction={ this.titleNewRedirect.bind(this) }
         />
         );
         this.props.updateAppState('overlay', overlay);
         this.setState({items, fromTemplate: true});
         }*/

    }, {
        key: 'keyboardShortcut',
        value: function keyboardShortcut() {
            if (!this.props.inlineEditState.inlineEditing && this.props.appState.overlay == null) {
                this.newContent();
            }
        }
    }, {
        key: 'saveFirstShortcut',
        value: function saveFirstShortcut() {
            if (this.state.needSave) {
                this.saveFirst();
            }
        }
    }, {
        key: 'discardFirstShortcut',
        value: function discardFirstShortcut() {
            if (this.state.needSave) {
                this.launchOverlay(true);
            } else if (this.state.newType) {
                this.duplicateOverlay();
            }
        }
    }, {
        key: 'newPageShortcut',
        value: function newPageShortcut() {
            if (this.state.newType) {
                this.newOverlay('page');
            }
        }
    }, {
        key: 'newPostShortcut',
        value: function newPostShortcut() {
            if (this.state.newType) {
                this.newOverlay('post');
            }
        }
    }, {
        key: 'newTemplateShortcut',
        value: function newTemplateShortcut() {
            if (this.state.newType) {
                this.newFromTemplateOverlay();
            }
        }
    }, {
        key: 'newStructureShortcut',
        value: function newStructureShortcut() {
            if (this.state.newType) {
                this.newOverlay('ocb_structure');
            }
        }
    }, {
        key: 'enterCreateNewShortcut',
        value: function enterCreateNewShortcut() {
            var _this2 = this;

            if (!this.state.aboutToCreate && !this.state.aboutToDuplicate) return;

            //Use a timeout because this was running twice
            // @todo figure out why it was running twice and remove the timeout
            clearTimeout(this.createNewTimemout);
            this.createNewTimemout = setTimeout(function () {
                if (_this2.state.title) {
                    if (_this2.state.aboutToCreate) {
                        _this2.createNew();
                    } else if (_this2.state.aboutToDuplicate) {
                        _this2.duplicateCurrent();
                    }
                } else {
                    alert('Please enter a title');
                }
            }, 50);
        }

        /**
         * Resets the state
         */

    }, {
        key: 'cancelNew',
        value: function cancelNew() {
            this.setState({
                items: [],
                templates: [],
                what: '',
                selected: false,
                title: '',
                redirect: true,
                fromTemplate: false,
                aboutToCreate: false,
                aboutToDuplicate: false,
                structureOverlay: false,
                needSave: false,
                newType: false,
                showTemplates: false
            });
            this.props.updateAppState('overlay', null);
        }

        /**
         * 7
         * API call to create the new content and then redirects to the new content
         */

    }, {
        key: 'createNew',
        value: function createNew() {

            var newContent = void 0;

            if (!this.state.title) {
                jQuery('.ocb-overlay-option, .ocb-admin-button').find('.fa-spinner').remove();
                alert('Please enter a title');
                return;
            }

            if (this.state.fromTemplate) {
                newContent = _api_helpers2.default.doRequest('createCustom', {
                    from_template: 1,
                    title: this.state.title,
                    template: this.state.selected.id,
                    full_template: this.state.selected.template
                });
            } else {
                var options = {
                    post_type: this.state.what,
                    title: this.state.title,
                    status: this.state.what == 'ocb_structure' ? 'publish' : 'draft'
                };

                if (this.state.selected && this.state.selected.id) {
                    options.meta = { ocb_structure: this.state.selected.id }; //The API needs this value
                }

                newContent = _api_helpers2.default.doRequest('createCustom', options);
            }

            //Save the skinState just in case new skins have been added by overlay_template.js
            _settings_helpers2.default.saveCurrentSiteSkin({ skinState: this.props.skinState });

            newContent.then(function (response, error) {
                window.location.href = response.permalink;
            });
        }

        /**
         * 6
         * Overlay to add a title to the new content. Triggers createNew or cancelNew
         * @param selected
         * @param selectedItem
         * @param all
         * @param redirect
         */

    }, {
        key: 'titleNew',
        value: function titleNew(selected, selectedItem, all, redirect) {
            var _this3 = this;

            //Structures are still loaded in this component's state - should create an overlay for them like templates
            if (this.state.what == 'ocb_structure' || this.state.what == 'post' || this.state.what == 'page') {
                selectedItem = this.state.items.find(function (item, index) {
                    return item.id == selected;
                });
            }

            this.setState({ selected: selectedItem, redirect: redirect, aboutToCreate: true, structureOverlay: false });

            var overlayOptions = [{
                classes: 'ocb-success ocb-admin-button-load',
                onClick: function onClick() {
                    return _this3.createNew();
                },
                text: 'Create'
            },
            /*{
             classes: 'ocb-success mr-2',
             onClickCurrent: this.titleNewNoRedirect.bind(this),
             text: 'Create Without Loading',
             tooltip: 'Allows you to create new content without navigating to that new content so that you can create multiple items quickly'
             },*/
            {
                classes: 'ocb-danger mr-2',
                onClick: function onClick() {
                    return _this3.cancelNew();
                },
                text: 'Cancel'
            }];

            var overlayContent = _react2.default.createElement('input', { id: 'ocb-overlay-focus-input', className: 'mt-2 form-control', type: 'text', onChange: function onChange(e) {
                    return _this3.setState({ title: e.target.value });
                } });

            var overlay = _react2.default.createElement(_app_overlay2.default, {
                title: 'Enter a Title',
                stacked: '1',
                content: overlayContent,
                overlayStyle: 'small',
                options: overlayOptions
            });

            this.props.updateAppState('overlay', overlay);
        }

        /**
         * 5
         * Triggers titleNew
         * @param selected
         * @param selectedItem
         * @param all
         */

    }, {
        key: 'titleNewNoRedirect',
        value: function titleNewNoRedirect(selected, selectedItem, all) {
            this.titleNew(selected, selectedItem, all, false);
        }

        /**
         * 5
         * Triggers titleNew and triggered by newOverlay
         * @param selected
         * @param selectedItem
         * @param all
         */

    }, {
        key: 'titleNewRedirect',
        value: function titleNewRedirect(selected, selectedItem, all) {
            this.titleNew(selected, selectedItem, all, true);
        }

        /**
         * 4
         * Triggers the Template Overlay which loads the page templates
         */

    }, {
        key: 'newFromTemplateOverlay',
        value: function newFromTemplateOverlay() {
            var _this4 = this;

            this.setState({ newType: false, showTemplates: true, fromTemplate: true });

            var overlayOptions = [{
                classes: 'ocb-danger',
                onClick: function onClick() {
                    return _this4.cancelNew();
                },
                text: 'Cancel'
            }];

            var message = 'Choose the template to use';

            var overlay = _react2.default.createElement(_app_overlay2.default, {
                title: message,
                overlayStyle: 'template',
                config: { cancelFunction: this.cancelNew.bind(this) },
                options: overlayOptions,
                useFunction: this.titleNewRedirect.bind(this)
            });
            this.props.updateAppState('overlay', overlay);

            return;

            /*this.setState({newType: false, showTemplates: true});
              if( true || ( parent.OCBGlobalSettings.templateMemory != undefined && parent.OCBGlobalSettings.templateMemory != 'max' ) ){
              this.getTemplateChunks()
              } else {
              let templates = SettingsHelpers.getTemplates();
              templates.then((response) => {
             if( response.length ){
             this.handleTemplates(response);
             } else {
             this.unableToGetTemplates();
             }
             }).catch((error) => {
             this.unableToGetTemplates();
             })
              }*/
        }

        /**
         * 5
         * Triggered by newOverlay
         * New Structure in the event that no Structures exist when trying to create new in newOverlay
         * Will redirect to the new Structure and then redirect back
         */

    }, {
        key: 'createNewStructure',
        value: function createNewStructure() {
            var createStructure = _api_helpers2.default.doRequest('createCustom', {
                post_type: 'ocb_structure',
                title: this.state.title ? this.state.title : 'Default',
                status: 'publish'
            });

            createStructure.then(function (response, error) {
                _settings_helpers2.default.saveStructureDefaults(response.customId).then(function (response2) {
                    var link = _url_helpers2.default.addParam(response.permalink, 'pageEdit', '1');
                    parent.window.location.href = _url_helpers2.default.addParam(link, 'returnOnSave', OCBGlobalSettings.postId);
                });
            });
        }

        /**
         * 4
         * New Post, Page, or Structure from Structure
         * @param what post/page/ocb_structure
         */

    }, {
        key: 'newOverlay',
        value: function newOverlay(what) {
            var _this5 = this;

            var overlayOptions = [{
                classes: 'ocb-danger',
                onClick: function onClick() {
                    return _this5.cancelNew();
                },
                text: 'Cancel'
            }, {
                classes: 'ocb-success',
                onClickCurrent: this.titleNewRedirect.bind(this),
                text: 'Create...'
            }];

            this.setState({ structureOverlay: true, newType: false });

            var structures = _api_helpers2.default.doRequest('getStructures');

            structures.then(function (response, error) {
                var filters = response.map(function (structure) {
                    return {
                        name: structure.post_title,
                        id: structure.unique_id
                    };
                });
                var items = response.map(function (structure) {
                    return {
                        name: structure.post_title,
                        css: structure.css,
                        globalCss: structure.global_css,
                        content: structure.post_content,
                        id: structure.unique_id
                    };
                });

                var message = 'Choose the Structure of Your New Page';

                if (what == 'post') message = 'Choose the Structure of Your New Post';
                if (what == 'ocb_structure') message = 'Choose a Starting Point For Your New Structure';

                var overlay = _react2.default.createElement(_app_overlay2.default, {
                    title: message,
                    overlayStyle: 'full',
                    type: what,
                    options: overlayOptions,
                    filters: filters,
                    items: items
                });
                _this5.props.updateAppState('overlay', overlay);
                _this5.setState({ items: items, what: what });
            }).catch(function (error) {
                jQuery('.ocb-admin-button').find('.fa-spinner').remove();

                //Same as in toolbar_edit
                //Normally if we're creating a new structure, we use a structure as a starting point.
                //But if there aren't any existing structures, let's just go ahead and create one
                var newOptions = [{
                    classes: 'ocb-success ocb-admin-button-load',
                    onClick: function onClick() {
                        return _this5.createNewStructure();
                    },
                    text: 'Create'
                }, {
                    classes: 'ocb-danger',
                    onClick: function onClick() {
                        return _this5.props.updateAppState('overlay', null);
                    },
                    text: 'Cancel'
                }];

                var message = null;
                var title = 'Structure Title';

                if (what == 'page' || what == 'post') {
                    title = 'No Structures Found';
                    message = _react2.default.createElement(
                        'p',
                        null,
                        'Create your first structure first:'
                    );
                }

                var overlayContent = _react2.default.createElement(
                    'div',
                    null,
                    message,
                    _react2.default.createElement('input', { className: 'mt-2 form-control', type: 'text', onChange: function onChange(e) {
                            return _this5.setState({ title: e.target.value });
                        } })
                );

                var overlay = _react2.default.createElement(_app_overlay2.default, {
                    title: title,
                    stacked: '1',
                    overlayStyle: 'small',
                    content: overlayContent,
                    options: newOptions
                });

                _this5.props.updateAppState('overlay', overlay);
            });
        }

        /**
         * 5
         * Triggered by duplicateCurrent
         * API call to duplicate and then redirect to the duplicated content
         */

    }, {
        key: 'duplicateCurrent',
        value: function duplicateCurrent() {
            if (!this.state.title) {
                jQuery('.ocb-overlay-option, .ocb-admin-button').find('.fa-spinner').remove();
                alert('Please enter a title');
                return;
            }

            var newContent = _api_helpers2.default.doRequest('runUtility', {
                action: 'duplicatePost',
                post_title: this.state.title,
                post_id: parent.OCBGlobalSettings.postId
            });

            newContent.then(function (response) {
                window.location.href = _url_helpers2.default.makePageEditLink(response.permalink);
            }).catch(function (error) {
                console.log('duplication error', error);
            });
        }

        /**
         * 4
         * Triggered by newContentOverlay - Triggers duplicateCurrent or cancelNew
         * Shows the overlay to duplicate
         */

    }, {
        key: 'duplicateOverlay',
        value: function duplicateOverlay() {
            var _this6 = this;

            var overlayOptions = [{
                classes: 'ocb-success ocb-admin-button-load',
                onClick: function onClick() {
                    return _this6.duplicateCurrent();
                },
                text: 'Duplicate'
            }, {
                classes: 'ocb-danger mr-2',
                onClick: function onClick() {
                    return _this6.cancelNew();
                },
                text: 'Cancel'
            }];

            var overlayContent = _react2.default.createElement('input', { id: 'ocb-overlay-focus-input', className: 'mt-2 form-control', type: 'text', onChange: function onChange(e) {
                    return _this6.setState({ title: e.target.value });
                } });

            var overlay = _react2.default.createElement(_app_overlay2.default, {
                title: 'Enter a Title for Duplicate',
                stacked: '1',
                content: overlayContent,
                overlayStyle: 'small',
                options: overlayOptions
            });

            this.setState({ newType: false, aboutToDuplicate: true });
            this.props.updateAppState('overlay', overlay);
        }

        /**
         * 4
         * Triggered by saveContentOverlay - Triggers launchOverlay again once saved
         * Save content before creating new content and redirecting to that new page
         * Copied from ToolbarSave - should somehow merge the two
         */

    }, {
        key: 'saveFirst',
        value: function saveFirst() {
            var _this7 = this;

            var iframe = jQuery('#ocb-workspace-iframe');
            var content = iframe.contents().find('#treeContent').clone();
            var siteCSS = iframe.contents().find('#ocb-site-css').html();
            var pageCSS = _settings_helpers2.default.getPageCSS(content);
            var html = _settings_helpers2.default.cleanHTML(content);

            _api_helpers2.default.doRequest('update', { content: html });
            _api_helpers2.default.doRequest('updateSetting', this.props.siteState, { setting: 'ocb_site_settings' });
            _api_helpers2.default.doRequest('updateSetting', { value: siteCSS }, { setting: 'ocb_site_css' });
            _api_helpers2.default.doRequest('updateMeta', this.props.treeContent, { metaKey: 'ocb_tree_content' });

            var lastRequest = _api_helpers2.default.doRequest('updateMeta', { metaValue: pageCSS }, { metaKey: 'ocb_page_css' });

            lastRequest.then(function (result) {
                _this7.launchOverlay();
            });

            this.setState({ needSave: false });

            this.props.undoRedoSaveHappened();
        }

        /**
         * 3
         * Triggered by launchOverlay if there are unsaved changes
         */

    }, {
        key: 'saveContentOverlay',
        value: function saveContentOverlay() {
            var _this8 = this;

            var saveOverlayOptions = [{
                classes: 'ocb-success ocb-admin-button-load',
                onClick: function onClick() {
                    return _this8.saveFirst();
                },
                text: 'Save (S)'
            }, {
                classes: 'ocb-danger',
                onClick: function onClick() {
                    return _this8.launchOverlay(true);
                },
                text: 'Discard (D)'
            }, {
                classes: '',
                onClick: function onClick() {
                    return _this8.cancelNew();
                },
                text: 'Cancel (esc)'
            }];

            this.setState({ needSave: true });

            var overlay = _react2.default.createElement(_app_overlay2.default, {
                title: 'You Have Unsaved Changes',
                stacked: '1',
                content: 'Please decide what to do with your unsaved changes before creating new content.',
                overlayStyle: 'small',
                options: saveOverlayOptions
            });

            this.props.updateAppState('overlay', overlay);
        }

        /**
         * 3
         * Triggered by launchOverlay if there are no unsaved changes
         * Contains all of the options for this toolbar item:
         * New Page, New Post, New From Template, New Structure, Duplicate
         */

    }, {
        key: 'newContentOverlay',
        value: function newContentOverlay() {
            var _this9 = this;

            var overlayOptions = [];

            if (parent.OCBGlobalSettings.permissions.has_theme && parent.OCBGlobalSettings.permissions.add_pages) {
                overlayOptions.push({
                    classes: 'ocb-admin-button-load',
                    onClick: function onClick() {
                        return _this9.newOverlay('page');
                    },
                    text: 'New Page With Structure... (G)'
                });
            }

            if (parent.OCBGlobalSettings.permissions.has_theme && parent.OCBGlobalSettings.permissions.add_posts) {
                overlayOptions.push({
                    classes: 'ocb-admin-button-load',
                    onClick: function onClick() {
                        return _this9.newOverlay('post');
                    },
                    text: 'New Post With Structure... (P)'
                });
            }

            if (parent.OCBGlobalSettings.permissions.use_page_templates) {
                overlayOptions.push({
                    classes: 'ocb-admin-button-load',
                    onClick: function onClick() {
                        return _this9.newFromTemplateOverlay();
                    },
                    text: 'New From Template... (T)'
                });
            }

            if (parent.OCBGlobalSettings.permissions.create_structures) {
                overlayOptions.push({
                    classes: 'ocb-admin-button-load',
                    onClick: function onClick() {
                        return _this9.newOverlay('ocb_structure');
                    },
                    text: 'New Structure... (C)'
                });
            }

            if (parent.OCBGlobalSettings.permissions.has_theme && parent.OCBGlobalSettings.postType != 'ocb_structure' && (parent.OCBGlobalSettings.postType == 'post' && parent.OCBGlobalSettings.permissions.duplicate_posts || parent.OCBGlobalSettings.postType == 'page' && parent.OCBGlobalSettings.permissions.duplicate_pages || parent.OCBGlobalSettings.postType != 'page' && parent.OCBGlobalSettings.postType != 'post' && parent.OCBGlobalSettings.permissions.duplicate_custom)) {
                overlayOptions.push({
                    classes: 'ocb-admin-button-load',
                    onClick: function onClick() {
                        return _this9.duplicateOverlay();
                    },
                    text: 'Duplicate... (D)'
                });
            }

            overlayOptions.push({
                classes: 'ocb-danger',
                onClick: function onClick() {
                    return _this9.cancelNew();
                },
                text: 'Cancel (esc)'
            });

            var overlay = _react2.default.createElement(_app_overlay2.default, {
                title: 'New...',
                content: 'Create new content',
                stacked: '1',
                overlayStyle: 'small',
                options: overlayOptions
            });

            this.setState({ newType: true });

            this.props.updateAppState('overlay', overlay);
        }

        /**
         * 2
         * Will either trigger the newContentOverlay with state.needSave false
         * or will trigger saveContentOverlay if there are unsaved changes
         *
         * @param discard
         */

    }, {
        key: 'launchOverlay',
        value: function launchOverlay() {
            var discard = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;


            jQuery('.ocb-overlay-option').find('.fa-spinner').remove();

            //If there are unsaved changes, prompt the user to save or discard
            if (discard == false && this.props.undoRedoState.states != undefined && this.props.undoRedoState.states.length > 1 && (this.props.undoRedoState.lastSaveStatesNumber == undefined || this.props.undoRedoState.lastSaveStatesNumber < this.props.undoRedoState.states.length)) {
                this.saveContentOverlay();
            } else {
                //We're faking like the content was saved so that we don't get an alert triggered in the App component on beforeUnload
                //This may not be the best way to handle it because someone can still cancel adding and then they won't get a warning if they try to navigate without making further changes
                this.props.undoRedoSaveHappened();
                this.setState({ needSave: false });

                this.newContentOverlay();
            }
        }

        /**
         * 1
         * Simply triggers launchOverlay
         */

    }, {
        key: 'newContent',
        value: function newContent() {
            this.launchOverlay();
        }
    }, {
        key: 'render',
        value: function render() {

            //If none of the options of the New toolbar item are available, don't show
            if (!parent.OCBGlobalSettings.permissions.add_pages && !parent.OCBGlobalSettings.permissions.add_posts && !parent.OCBGlobalSettings.permissions.use_page_templates && !parent.OCBGlobalSettings.permissions.create_structures && (parent.OCBGlobalSettings.postType == 'post' && !parent.OCBGlobalSettings.permissions.duplicate_posts || parent.OCBGlobalSettings.postType == 'page' && !parent.OCBGlobalSettings.permissions.duplicate_pages || parent.OCBGlobalSettings.postType != 'page' && parent.OCBGlobalSettings.postType != 'post' && !parent.OCBGlobalSettings.permissions.duplicate_custom)) {
                return null;
            }

            return _react2.default.createElement(
                'div',
                { className: 'ocb-toolbar-button ocb-new left ocb-tooltip-wrap', onClick: this.newContent.bind(this) },
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-tooltip ocb-tooltip-bottom ocb-tooltip-small ' + window.OffsproutEffect },
                    '(N)'
                ),
                'New...'
            );
        }
    }]);

    return ToolbarNew;
}(_react.Component);

function mapStateToProps(_ref) {
    var undoRedoState = _ref.undoRedoState,
        siteState = _ref.siteState,
        treeContent = _ref.treeContent,
        inlineEditState = _ref.inlineEditState,
        appState = _ref.appState,
        skinState = _ref.skinState;

    return { undoRedoState: undoRedoState, siteState: siteState, treeContent: treeContent, inlineEditState: inlineEditState, appState: appState, skinState: skinState };
}

function mapDispatchToProps(dispatch) {
    return (0, _redux.bindActionCreators)({ updateAppState: _index.updateAppState, undoRedoSaveHappened: _index.undoRedoSaveHappened }, dispatch);
}

exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(ToolbarNew);

/***/ }),

/***/ 368:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactRedux = __webpack_require__(5);

var _redux = __webpack_require__(7);

var _index = __webpack_require__(8);

var _app_overlay = __webpack_require__(13);

var _app_overlay2 = _interopRequireDefault(_app_overlay);

var _api_helpers = __webpack_require__(6);

var _api_helpers2 = _interopRequireDefault(_api_helpers);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ToolbarPlusUpgrade = function (_Component) {
    _inherits(ToolbarPlusUpgrade, _Component);

    function ToolbarPlusUpgrade(props) {
        _classCallCheck(this, ToolbarPlusUpgrade);

        var _this = _possibleConstructorReturn(this, (ToolbarPlusUpgrade.__proto__ || Object.getPrototypeOf(ToolbarPlusUpgrade)).call(this, props));

        _this.state = {
            code: ''
        };
        return _this;
    }

    _createClass(ToolbarPlusUpgrade, [{
        key: 'upgrade',
        value: function upgrade() {
            if (this.state.code == 'JDXHSLBQPA') {
                this.validationSuccessful();
            } else {
                this.validationUnsuccessful();
            }
        }
    }, {
        key: 'validationSuccessful',
        value: function validationSuccessful() {
            var overlayOptions = [];

            this.successfulOverlay();

            this.doInstallation();
        }
    }, {
        key: 'successfulOverlay',
        value: function successfulOverlay() {
            var messageAdd = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';

            var message = 'We\'re upgrading Offsprout for you! This will only take a moment...';

            if (messageAdd) {
                message = _react2.default.createElement(
                    'p',
                    null,
                    message,
                    _react2.default.createElement('br', null),
                    messageAdd
                );
            }

            var overlay = _react2.default.createElement(_app_overlay2.default, {
                title: 'Validation Successful',
                content: message,
                stacked: '1',
                overlayStyle: 'small',
                options: null
            });

            this.props.updateAppState('overlay', overlay);
        }
    }, {
        key: 'doneOverlay',
        value: function doneOverlay() {
            var _this2 = this;

            var done = _api_helpers2.default.doRequest('updateSetting', { value: 1 }, { setting: 'ocb_has_subscription' });

            done.then(function (response, error) {
                var overlayOptions = [{
                    classes: '',
                    onClick: function onClick() {
                        return window.location.reload();
                    },
                    text: 'Okay!'
                }];

                var overlay = _react2.default.createElement(_app_overlay2.default, {
                    title: 'Success',
                    icon: 'success',
                    stacked: '1',
                    content: 'You have successfully upgraded to Offsprout Plus. Enjoy your new features and templates!',
                    overlayStyle: 'small',
                    options: overlayOptions
                });

                _this2.props.updateAppState('overlay', overlay);
            });
        }
    }, {
        key: 'doneOverlayError',
        value: function doneOverlayError() {
            var _this3 = this;

            var done = _api_helpers2.default.doRequest('updateSetting', true, { setting: 'ocb_has_subscription' });

            done.then(function (response, error) {
                var overlayOptions = [{
                    classes: '',
                    onClick: function onClick() {
                        return window.location.reload();
                    },
                    text: 'Okay'
                }];

                var overlay = _react2.default.createElement(_app_overlay2.default, {
                    title: 'Oops!',
                    icon: 'warning',
                    stacked: '1',
                    content: 'Unfortunately, it looks like we were unable to import the templates. But your new features have been activated!',
                    overlayStyle: 'small',
                    options: overlayOptions
                });

                _this3.props.updateAppState('overlay', overlay);
            });
        }
    }, {
        key: 'doInstallation',
        value: function doInstallation(step, success, again) {
            if (step == undefined) step = 1;
            if (success == undefined) success = true;
            if (again == undefined) again = false;

            var sendData = {
                action: 'ocb_install_plus',
                step: step,
                nonce: OCBGlobalSettings.nonce
            };

            jQuery('#ocb-settings-ajax-' + step).show();
            jQuery('#ocb-install-templates').hide();

            var newThis = this;

            jQuery.post(OCBGlobalSettings.ajaxURL, sendData, function (data) {

                var newData = JSON.parse(data);
                var overlayMessage = 'installing templates...';
                switch (parseInt(step)) {
                    case 1:
                        overlayMessage = 'installing page templates...';
                        break;
                    case 2:
                        overlayMessage = 'installing row templates...';
                        break;
                    case 3:
                        overlayMessage = 'activating new features...';
                        break;
                }
                newThis.successfulOverlay(overlayMessage);

                var errors = newData.errors;
                var message = newData.message;
                var finished = newData.finished;

                if (errors.length) {
                    success = false;
                }

                if (finished == undefined || finished == false) {
                    newThis.doInstallation(step + 1, success, again);
                } else {
                    if (success) {
                        newThis.doneOverlay();
                    } else {
                        newThis.doneOverlayError();
                    }
                }
            });
        }
    }, {
        key: 'validationUnsuccessful',
        value: function validationUnsuccessful() {
            var _this4 = this;

            var overlayOptions = [];

            overlayOptions.push({
                classes: '',
                onClick: function onClick() {
                    return _this4.checkUpgradeStatus();
                },
                text: 'Try Again'
            });

            overlayOptions.push({
                classes: 'ocb-danger',
                onClick: function onClick() {
                    return _this4.props.updateAppState('overlay', null);
                },
                text: 'Cancel'
            });

            var overlay = _react2.default.createElement(_app_overlay2.default, {
                title: 'Validation Unsuccessful',
                content: 'Oops! We were unable to verify your update code.',
                stacked: '1',
                overlayStyle: 'small',
                options: overlayOptions
            });

            this.props.updateAppState('overlay', overlay);
        }
    }, {
        key: 'checkUpgradeStatus',
        value: function checkUpgradeStatus() {
            var _this5 = this;

            var overlayOptions = [];

            var overlayContent = _react2.default.createElement(
                'div',
                null,
                _react2.default.createElement(
                    'p',
                    null,
                    'Unlock tons of new templates and features!'
                ),
                _react2.default.createElement(
                    'p',
                    null,
                    '1) ',
                    _react2.default.createElement(
                        'a',
                        { href: 'https://offsprout.com/plus', target: '_blank' },
                        'Get your upgrade code'
                    ),
                    _react2.default.createElement('br', null),
                    '2) Enter your upgrade code below',
                    _react2.default.createElement('br', null),
                    '3) Click "Validate Upgrade"'
                ),
                _react2.default.createElement('input', { className: 'mt-2 form-control', type: 'text', placeholder: 'Enter your upgrade code...', onChange: function onChange(e) {
                        return _this5.setState({ code: e.target.value });
                    } })
            );

            overlayOptions.push({
                classes: 'ocb-success',
                onClick: function onClick() {
                    return _this5.upgrade('overlay', null);
                },
                text: 'Validate Upgrade'
            });

            overlayOptions.push({
                classes: 'ocb-danger',
                onClick: function onClick() {
                    return _this5.props.updateAppState('overlay', null);
                },
                text: 'Cancel'
            });

            var overlay = _react2.default.createElement(_app_overlay2.default, {
                title: 'Free Upgrade!',
                content: overlayContent,
                stacked: '1',
                overlayStyle: 'small',
                options: overlayOptions
            });

            this.props.updateAppState('overlay', overlay);
        }
    }, {
        key: 'render',
        value: function render() {
            var _this6 = this;

            return _react2.default.createElement(
                'div',
                { className: 'ocb-toolbar-button ocb-plus-upgrade ocb-green left', onClick: function onClick() {
                        return _this6.checkUpgradeStatus();
                    } },
                _react2.default.createElement('i', { className: 'fa fa-star mr-2' }),
                ' Upgrade Available'
            );
        }
    }]);

    return ToolbarPlusUpgrade;
}(_react.Component);

function mapDispatchToProps(dispatch) {
    return (0, _redux.bindActionCreators)({ updateAppState: _index.updateAppState }, dispatch);
}

exports.default = (0, _reactRedux.connect)(null, mapDispatchToProps)(ToolbarPlusUpgrade);

/***/ }),

/***/ 369:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactRedux = __webpack_require__(5);

var _redux = __webpack_require__(7);

var _combokeys = __webpack_require__(33);

var _combokeys2 = _interopRequireDefault(_combokeys);

var _index = __webpack_require__(8);

var _app_overlay = __webpack_require__(13);

var _app_overlay2 = _interopRequireDefault(_app_overlay);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ToolbarRedo = function (_Component) {
    _inherits(ToolbarRedo, _Component);

    function ToolbarRedo() {
        _classCallCheck(this, ToolbarRedo);

        return _possibleConstructorReturn(this, (ToolbarRedo.__proto__ || Object.getPrototypeOf(ToolbarRedo)).apply(this, arguments));
    }

    _createClass(ToolbarRedo, [{
        key: 'componentDidMount',

        /**
         * We need to make sure that when you're in the settings panel, the tinyMCE, or some other screen this is disabled
         * Until then, just return
         */
        value: function componentDidMount() {
            var _this2 = this;

            this.combokeys = new _combokeys2.default(document.documentElement);
            this.combokeysIframe = new _combokeys2.default(document.getElementById('ocb-workspace-iframe').contentWindow);
            this.combokeys.bind(['shift+ctrl+z', 'shift+command+z'], this.keyboardShortcut.bind(this));
            this.combokeysIframe.bind(['shift+ctrl+z', 'shift+command+z'], this.keyboardShortcut.bind(this));

            return;
            document.addEventListener('keydown', this.handleRedo.bind(this));
            setTimeout(function () {
                document.getElementById("ocb-workspace-iframe").contentWindow.document.addEventListener('keydown', _this2.handleRedo.bind(_this2));
            }, 3000);
        }

        /**
         * Want to make sure that we remove the event listener when it unmounts,
         * otherwise, the listener gets added to window multiple times and causes multiple setState updates
         */

    }, {
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {
            this.combokeys.detach();
            this.combokeysIframe.detach();
        }
    }, {
        key: 'keyboardShortcut',
        value: function keyboardShortcut() {
            this.redo();

            return false;
        }
    }, {
        key: 'redo',
        value: function redo() {
            var _this3 = this;

            var newIndex = this.props.undoRedo.currentIndex - 1;
            if (newIndex < 0) {
                var overlayOptions = [{
                    classes: '',
                    onClick: function onClick() {
                        return _this3.props.updateAppState('overlay', null);
                    },
                    text: 'Okay'
                }];

                var overlay = _react2.default.createElement(_app_overlay2.default, {
                    title: 'Nothing Else to Redo',
                    icon: 'warning',
                    stacked: '1',
                    content: '',
                    overlayStyle: 'small',
                    options: overlayOptions
                });

                this.props.updateAppState('overlay', overlay);
            } else {
                var nextObject = this.props.undoRedo.states[newIndex].object;
                var state = this.props.undoRedo.states[newIndex].state;
                if (nextObject != undefined && nextObject.type == 'Site Settings') {
                    state = this.props.undoRedo.states[newIndex].siteState;
                }
                this.props.undoRedoRedo(state, nextObject);

                setTimeout(function () {
                    return window.ocbReInitializePlugins();
                }, 800);
            }
        }
    }, {
        key: 'handleRedo',
        value: function handleRedo(ev) {
            if (!(ev.which === 90 && ev.shiftKey && (ev.ctrlKey || ev.metaKey))) {
                return;
            }
            this.redo();
        }
    }, {
        key: 'render',
        value: function render() {
            //If we're currently editing a global, let's not keep track of undo/redo because we can always cancel the updates to the global
            if (this.props.globals.currentRevert != undefined && this.props.globals.currentRevert != false) return null;

            return _react2.default.createElement(
                'div',
                { className: 'ocb-toolbar-button ocb-redo right ocb-tooltip-wrap', onClick: this.redo.bind(this) },
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-tooltip ocb-tooltip-bottom ' + window.OffsproutEffect },
                    '(Shift+Ctrl+Z)'
                ),
                _react2.default.createElement('i', { className: 'fa fa-repeat' })
            );
        }
    }]);

    return ToolbarRedo;
}(_react.Component);

function mapStateToProps(state) {
    return { workspaceState: state.workspaceState, undoRedo: state.undoRedoState, globals: state.templateGlobals };
}
function mapDispatchToProps(dispatch) {
    return (0, _redux.bindActionCreators)({ undoRedoUndo: _index.undoRedoUndo, undoRedoRedo: _index.undoRedoRedo, undoRedoGoto: _index.undoRedoGoto, undoRedoRestore: _index.undoRedoRestore, undoRedoAdd: _index.undoRedoAdd, updateAppState: _index.updateAppState }, dispatch);
}
exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(ToolbarRedo);

/***/ }),

/***/ 370:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactRedux = __webpack_require__(5);

var _redux = __webpack_require__(7);

var _index = __webpack_require__(8);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ToolbarReset = function (_Component) {
    _inherits(ToolbarReset, _Component);

    function ToolbarReset() {
        _classCallCheck(this, ToolbarReset);

        return _possibleConstructorReturn(this, (ToolbarReset.__proto__ || Object.getPrototypeOf(ToolbarReset)).apply(this, arguments));
    }

    _createClass(ToolbarReset, [{
        key: 'resetState',
        value: function resetState() {
            console.log(this.props.appState);
            this.props.resetTree();
        }
    }, {
        key: 'render',
        value: function render() {
            return _react2.default.createElement(
                'div',
                { className: 'ocb-toolbar-button ocb-reset right', onClick: this.resetState.bind(this) },
                'Reset'
            );
        }
    }]);

    return ToolbarReset;
}(_react.Component);

function mapStateToProps(state) {
    return { appState: state };
}
function mapDispatchToProps(dispatch) {
    return (0, _redux.bindActionCreators)({ resetTree: _index.resetTree }, dispatch);
}
exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(ToolbarReset);

/***/ }),

/***/ 371:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactRedux = __webpack_require__(5);

var _redux = __webpack_require__(7);

var _combokeys = __webpack_require__(33);

var _combokeys2 = _interopRequireDefault(_combokeys);

var _index = __webpack_require__(8);

var _settings_helpers = __webpack_require__(2);

var _settings_helpers2 = _interopRequireDefault(_settings_helpers);

var _url_helpers = __webpack_require__(27);

var _url_helpers2 = _interopRequireDefault(_url_helpers);

var _api_helpers = __webpack_require__(6);

var _api_helpers2 = _interopRequireDefault(_api_helpers);

var _app_overlay = __webpack_require__(13);

var _app_overlay2 = _interopRequireDefault(_app_overlay);

var _save_template = __webpack_require__(103);

var _save_template2 = _interopRequireDefault(_save_template);

var _save_summary = __webpack_require__(846);

var _save_summary2 = _interopRequireDefault(_save_summary);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ToolbarSave = function (_Component) {
    _inherits(ToolbarSave, _Component);

    function ToolbarSave(props) {
        _classCallCheck(this, ToolbarSave);

        var _this = _possibleConstructorReturn(this, (ToolbarSave.__proto__ || Object.getPrototypeOf(ToolbarSave)).call(this, props));

        _this.state = {
            title: '',
            saveOpen: false,
            saveTreeTemplate: false,
            saving: false,
            published: false,
            messageStage: 0
        };
        return _this;
    }

    _createClass(ToolbarSave, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            this.combokeys = new _combokeys2.default(document.documentElement);
            this.combokeysIframe = new _combokeys2.default(document.getElementById('ocb-workspace-iframe').contentWindow);
            this.combokeys.bind(['shift+command+s', 'shift+ctrl+s'], this.saveTemplateShortcut.bind(this)).bind(['alt+command+s', 'alt+ctrl+s'], this.savePublishShortcut.bind(this)).bind(['command+s', 'ctrl+s'], this.keyboardShortcut.bind(this)).bind('return', this.removeSuccessOverlay.bind(this));
            this.combokeysIframe.bind(['shift+command+s', 'shift+ctrl+s'], this.saveTemplateShortcut.bind(this)).bind(['alt+command+s', 'alt+ctrl+s'], this.savePublishShortcut.bind(this)).bind(['command+s', 'ctrl+s'], this.keyboardShortcut.bind(this)).bind('return', this.removeSuccessOverlay.bind(this));
        }

        /**
         * Want to make sure that we remove the event listener when it unmounts,
         * otherwise, the listener gets added to window multiple times and causes multiple setState updates
         */

    }, {
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {
            this.combokeys.detach();
            this.combokeysIframe.detach();
        }
    }, {
        key: 'keyboardShortcut',
        value: function keyboardShortcut() {
            if (this.props.appState.overlay == null) {
                this.quickSave(false, false);

                // return false to prevent default browser behavior
                // and stop event from bubbling
                return false;
            }
        }
    }, {
        key: 'savePublishShortcut',
        value: function savePublishShortcut() {
            if (parent.OCBGlobalSettings.postStatus != 'publish' && this.props.appState.overlay == null) {
                this.quickSave(false, false, true);

                return false;
            }
        }
    }, {
        key: 'saveTemplateShortcut',
        value: function saveTemplateShortcut() {
            if (this.props.appState.overlay == null) {
                this.titleTreeTemplate();

                // return false to prevent default browser behavior
                // and stop event from bubbling
                return false;
            }
        }
    }, {
        key: 'removeSuccessOverlay',
        value: function removeSuccessOverlay() {
            if (this.state.published) {
                window.location.reload();
            }
            if (this.state.saving) {
                this.completeAction();
            }
        }
    }, {
        key: 'cancelAction',
        value: function cancelAction() {
            var _this2 = this;

            var addMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;

            switch (addMessage) {
                case 1:
                    setTimeout(function () {
                        _this2.saveState();
                    }, 65000);
                    break;
                case 2:
                    setTimeout(function () {
                        _this2.saveState();
                    }, 65000);
                    break;
            }

            this.setState({ title: '', saveOpen: false, saving: false, messageStage: addMessage });
            this.props.updateAppState('overlay', null);
        }
    }, {
        key: 'completeAction',
        value: function completeAction() {
            //if returnOnSave is set, return to the page from whence you came
            var theWindow = parent.window != undefined ? parent.window : window;
            if (OCBGlobalSettings.returnOnSave) {
                theWindow.location.href = _url_helpers2.default.addParam(OCBGlobalSettings.returnOnSave, 'pageEdit', '1');
            }
            this.cancelAction();
        }
    }, {
        key: 'saveState',
        value: function saveState() {
            var _this3 = this;

            var publish = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

            if (this.props.templateGlobals.currentRevert != undefined && this.props.templateGlobals.currentRevert != false) {

                var errorOverlay = _react2.default.createElement(_app_overlay2.default, {
                    title: 'Error',
                    icon: 'warning',
                    stacked: '1',
                    content: 'Could not save: you cannot save while editing a global',
                    overlayStyle: 'small',
                    options: [{
                        classes: '',
                        onClick: function onClick() {
                            return _this3.cancelAction();
                        },
                        text: 'Okay'
                    }]
                });

                this.props.updateAppState('overlay', errorOverlay);

                if (publish != true) {
                    this.setState({ title: '', saveOpen: false });
                } else {
                    this.setState({ published: true });
                }

                jQuery('.ocb-toolbar-button.ocb-save, .ocb-admin-button').find('.fa-spinner').remove();

                return;
            }

            var lastRequest = _settings_helpers2.default.saveCurrent(this.props, publish);

            this.setState({ saving: true });

            lastRequest.then(function (result) {

                var saveResult = _settings_helpers2.default.getSaveResult(result);

                if (saveResult == 'Success') {
                    _this3.saveSuccess(result, publish);
                } else if (saveResult == 'Mixed') {
                    _this3.saveMixedError(result, publish);
                } else {
                    if (result.length && result[0].result != undefined) {
                        var theResult = result[0].result;

                        if (theResult.code != undefined) {
                            _this3.saveRunThroughErrors(theResult);
                        } else {
                            _this3.saveOtherError();
                        }
                    } else {
                        _this3.saveOtherError();
                    }
                }

                jQuery('.ocb-toolbar-button.ocb-save, .ocb-admin-button').find('.fa-spinner').remove();
            }).catch(function (error) {
                _this3.saveRunThroughErrors(error);

                jQuery('.ocb-toolbar-button.ocb-save, .ocb-admin-button').find('.fa-spinner').remove();
            });
        }
    }, {
        key: 'saveSuccess',
        value: function saveSuccess(result) {
            var _this4 = this;

            var publish = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

            var overlayOptions = [{
                classes: '',
                onClick: function onClick() {
                    return _this4.completeAction();
                },
                text: 'Okay'
            }];
            var overlayMessage = 'Your content was saved!';

            if (publish == true) {
                overlayOptions = [{
                    classes: '',
                    onClick: function onClick() {
                        return window.location.reload();
                    },
                    text: 'Okay'
                }];

                overlayMessage = 'Your content was published!';
            }

            var overlay = _react2.default.createElement(_app_overlay2.default, {
                title: 'Success',
                icon: 'success',
                stacked: '1',
                content: overlayMessage,
                overlayStyle: 'small',
                options: overlayOptions
            });

            this.props.updateAppState('overlay', overlay);

            _api_helpers2.default.doRequest('updateMeta', { metaValue: 1 }, { metaKey: 'ocb_active' });

            if (publish != true) {
                this.setState({ title: '', saveOpen: false });
            } else {
                this.setState({ published: true });
            }

            this.props.undoRedoSaveHappened();
            jQuery('.ocb-toolbar-button.ocb-save, .ocb-admin-button').find('.fa-spinner').remove();
        }
    }, {
        key: 'saveRunThroughErrors',
        value: function saveRunThroughErrors(error) {
            if (error.code == 'rest_cookie_invalid_nonce' && this.state.messageStage == 0) {

                this.saveCookieError();
            } else if (error.code == 'rest_cookie_invalid_nonce' && this.state.messageStage == 1) {

                this.cancelAction(2);
            } else {

                this.saveOtherError();
            }
        }
    }, {
        key: 'saveCookieError',
        value: function saveCookieError() {
            var _this5 = this;

            var errorOverlay = _react2.default.createElement(_app_overlay2.default, {
                title: 'Error',
                icon: 'warning',
                stacked: '1',
                content: 'Your session is refreshing. Offsprout will attempt to save again in 1 minute.',
                overlayStyle: 'small',
                options: [{
                    classes: '',
                    onClick: function onClick() {
                        return _this5.cancelAction(1);
                    },
                    text: 'Okay'
                }]
            });

            this.props.updateAppState('overlay', errorOverlay);
        }
    }, {
        key: 'saveMixedError',
        value: function saveMixedError(result) {
            var _this6 = this;

            var publish = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

            var content = _react2.default.createElement(
                'div',
                null,
                _react2.default.createElement(
                    'div',
                    { className: 'mb-3' },
                    'Only some content could be saved:'
                ),
                _react2.default.createElement(_save_summary2.default, { result: result, saveProps: this.props, publish: publish })
            );

            var errorOverlay = _react2.default.createElement(_app_overlay2.default, {
                title: 'Some Content Saved',
                stacked: '1',
                content: content,
                overlayStyle: 'small',
                options: [{
                    classes: '',
                    onClick: function onClick() {
                        return _this6.cancelAction(3);
                    },
                    text: 'Okay'
                }]
            });

            this.props.updateAppState('overlay', errorOverlay);
        }
    }, {
        key: 'saveOtherError',
        value: function saveOtherError() {
            var _this7 = this;

            var errorOverlay = _react2.default.createElement(_app_overlay2.default, {
                title: 'Error',
                icon: 'warning',
                stacked: '1',
                content: 'Could not save: you may need to log in again or refresh this page',
                overlayStyle: 'small',
                options: [{
                    classes: '',
                    onClick: function onClick() {
                        return _this7.cancelAction(3);
                    },
                    text: 'Okay'
                }]
            });

            this.props.updateAppState('overlay', errorOverlay);
        }
    }, {
        key: 'titleTreeTemplate',
        value: function titleTreeTemplate() {
            this.setState({ saveTreeTemplate: true });
        }
    }, {
        key: 'doneSavingTreeTemplate',
        value: function doneSavingTreeTemplate() {
            this.setState({ saveTreeTemplate: false });
        }

        /*titleTreeTemplate(){
            let overlayContent = <input className="mt-2 form-control" type="text" onChange={ (e) => this.setState({title: e.target.value}) } />;
             let overlayOptions = [
                {
                    classes: 'ocb-success ocb-admin-button-load',
                    onClick: () => this.saveTreeTemplate(),
                    text: 'Create'
                },
                {
                    classes: 'ocb-danger mr-2',
                    onClick: () => this.cancelAction(),
                    text: 'Cancel'
                }
            ];
             let overlay = (
                <AppOverlay
                    title="Template Title"
                    stacked="1"
                    content={ overlayContent }
                    overlayStyle="small"
                    options={ overlayOptions }
                />
            );
             this.props.updateAppState( 'overlay', overlay );
        }
         saveTreeTemplate(){
             const iframe = jQuery('#ocb-workspace-iframe');
             //Save the state as meta
             //Clean the content
            let content = iframe.contents().find('#treeContent').clone();
            let pageCSS = SettingsHelpers.getPageCSS(content);
            let html = SettingsHelpers.cleanHTML(content);
             let payload = {
                post_type: 'ocb_tree_template',
                title: this.state.title,
                content: html,
                status: 'publish',
                meta: {
                    ocb_structure: parent.OCBGlobalSettings.structure,
                    ocb_tree_content: this.props.appState.treeContent,
                    ocb_page_css: pageCSS,
                    ocb_template_post_type: parent.OCBGlobalSettings.postType
                }
            };
             let newContent = OAPI.doRequest('createCustom', payload);
             newContent.then((response, error) => {
                this.completeAction();
            });
         }*/

    }, {
        key: 'setAsHomepage',
        value: function setAsHomepage() {
            var _this8 = this;

            var homepageSet = _api_helpers2.default.doRequest('updateSetting', { value: OCBGlobalSettings.postId }, { setting: 'page_on_front' });

            homepageSet.then(function (result) {
                parent.window.location = _url_helpers2.default.makePageEditLink(OCBGlobalSettings.siteUrl);
            }).catch(function (error) {
                var overlayOptions = [{
                    classes: '',
                    onClick: function onClick() {
                        return _this8.props.updateAppState('overlay', null);
                    },
                    text: 'Okay'
                }];

                var overlay = _react2.default.createElement(_app_overlay2.default, {
                    title: 'Error',
                    icon: 'warning',
                    stacked: '1',
                    content: 'Could not set this page as the homepage',
                    overlayStyle: 'small',
                    options: overlayOptions
                });

                _this8.props.updateAppState('overlay', overlay);
            });
        }
    }, {
        key: 'saveOptions',
        value: function saveOptions() {
            var _this9 = this;

            var overlayOptions = [{
                classes: 'ocb-admin-button-load',
                onClick: function onClick() {
                    return _this9.saveState();
                },
                text: parent.OCBGlobalSettings.postStatus == 'publish' ? 'Update (ctrl+s)' : 'Save (ctrl+s)'
            }];

            if (parent.OCBGlobalSettings.postStatus != 'publish') {
                overlayOptions.push({
                    classes: 'ocb-admin-button-load',
                    onClick: function onClick() {
                        return _this9.saveState(true);
                    },
                    text: 'Save and Publish (alt+ctrl+s)'
                });
            }

            if (parent.OCBGlobalSettings.postType != 'ocb_structure' && parent.OCBGlobalSettings.postType != 'ocb_tree_template' && parent.OCBGlobalSettings.permissions.create_tree_templates) {
                overlayOptions.push({
                    classes: '',
                    onClick: function onClick() {
                        return _this9.titleTreeTemplate();
                    },
                    text: 'Save as Template... (shift+ctrl+s)'
                });
            }

            if (parent.OCBGlobalSettings.postType == 'page' && parent.OCBGlobalSettings.postStatus == 'publish' && OCBGlobalSettings.permissions.save_as_homepage) {
                overlayOptions.push({
                    classes: 'ocb-admin-button-load',
                    onClick: function onClick() {
                        return _this9.setAsHomepage();
                    },
                    text: 'Set as Homepage'
                });
            }

            overlayOptions.push({
                classes: 'ocb-danger',
                onClick: function onClick() {
                    return _this9.cancelAction();
                },
                text: 'Cancel (esc)'
            });

            var overlay = _react2.default.createElement(_app_overlay2.default, {
                title: 'Save',
                content: 'Save your content',
                stacked: '1',
                overlayStyle: 'small',
                options: overlayOptions
            });

            this.props.updateAppState('overlay', overlay);
            this.setState({ saveOpen: true });
        }
    }, {
        key: 'savingMessage',
        value: function savingMessage() {
            var _this10 = this;

            var errorOverlay = _react2.default.createElement(_app_overlay2.default, {
                title: 'Please Wait',
                stacked: '1',
                content: 'Please wait while the session is being refreshed and content is being saved - this may take up to 2 minutes and you may be asked to log in again.',
                overlayStyle: 'small',
                options: [{
                    classes: '',
                    onClick: function onClick() {
                        return _this10.props.updateAppState('overlay', null);
                    },
                    text: 'Okay'
                }]
            });

            this.props.updateAppState('overlay', errorOverlay);
        }
    }, {
        key: 'quickSave',
        value: function quickSave(e) {
            var prevent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
            var publish = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

            if (prevent) {
                e.preventDefault();
            }
            jQuery('.ocb-toolbar-button.ocb-save').prepend('<i class="fa fa-spinner fa-pulse mr-1"></i>');
            this.saveState(publish);
            if (document.selection) {
                document.selection.empty();
            } else if (window.getSelection) {
                window.getSelection().removeAllRanges();
            }
        }
    }, {
        key: 'render',
        value: function render() {
            var saveTemplate = null;
            if (this.state.saveTreeTemplate) {
                saveTemplate = _react2.default.createElement(_save_template2.default, { done: this.doneSavingTreeTemplate.bind(this), type: 'tree' });
            }

            var saveButton = _react2.default.createElement(
                'div',
                { className: 'ocb-toolbar-button ocb-save ocb-green right', onClick: this.saveOptions.bind(this), onContextMenu: this.quickSave.bind(this) },
                'Save',
                saveTemplate
            );

            if (this.state.messageStage == 1 || this.state.messageStage == 2) {
                saveButton = _react2.default.createElement(
                    'div',
                    { className: 'ocb-toolbar-button ocb-save ocb-toolbar-transparent right', onClick: this.savingMessage.bind(this) },
                    'Saving...'
                );
            }

            return saveButton;
        }
    }]);

    return ToolbarSave;
}(_react.Component);

function mapDispatchToProps(dispatch) {
    return (0, _redux.bindActionCreators)({ updateAppState: _index.updateAppState, undoRedoSaveHappened: _index.undoRedoSaveHappened }, dispatch);
}

function mapStateToProps(_ref) {
    var treeContent = _ref.treeContent,
        siteState = _ref.siteState,
        appState = _ref.appState,
        templateGlobals = _ref.templateGlobals,
        skinState = _ref.skinState;

    //will show up as props inside of Tree
    return {
        treeContent: treeContent, siteState: siteState, appState: appState, templateGlobals: templateGlobals, skinState: skinState
    };
}

//We pass null for the first value because we don't need a mapStateToProps since props are being passed up from below into state
//http://stackoverflow.com/questions/35443167/dispatch-is-not-a-function-when-argument-to-maptodispatchtoprops-in-redux
exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(ToolbarSave);

/***/ }),

/***/ 372:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactRedux = __webpack_require__(5);

var _redux = __webpack_require__(7);

var _combokeys = __webpack_require__(33);

var _combokeys2 = _interopRequireDefault(_combokeys);

var _index = __webpack_require__(8);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ToolbarSite = function (_Component) {
    _inherits(ToolbarSite, _Component);

    function ToolbarSite() {
        _classCallCheck(this, ToolbarSite);

        return _possibleConstructorReturn(this, (ToolbarSite.__proto__ || Object.getPrototypeOf(ToolbarSite)).apply(this, arguments));
    }

    _createClass(ToolbarSite, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            this.combokeys = new _combokeys2.default(document.documentElement);
            this.combokeysIframe = new _combokeys2.default(document.getElementById('ocb-workspace-iframe').contentWindow);
            this.combokeys.bind('s', this.keyboardShortcut.bind(this));
            this.combokeysIframe.bind('s', this.keyboardShortcut.bind(this));
        }

        /**
         * Want to make sure that we remove the event listener when it unmounts,
         * otherwise, the listener gets added to window multiple times and causes multiple setState updates
         */

    }, {
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {
            this.combokeys.detach();
            this.combokeysIframe.detach();
        }
    }, {
        key: 'keyboardShortcut',
        value: function keyboardShortcut() {
            if (this.props.appState.overlay == null && !this.props.inlineEditState.inlineEditing) {
                this.editSiteOptions();
            }
        }
    }, {
        key: 'editSiteOptions',
        value: function editSiteOptions() {
            this.props.appMakeSettingsActive({
                type: 'Site Settings',
                site: {
                    linked: this.props.siteState
                }
            }, 'site');
            jQuery('#ocb-workspace-iframe').contents().find('html').addClass('ocb-html-settings-panel-active');
        }
    }, {
        key: 'render',
        value: function render() {
            if (!OCBGlobalSettings.permissions.manage_site_settings) return null;

            return _react2.default.createElement(
                'div',
                { className: 'ocb-toolbar-button ocb-site left ocb-tooltip-wrap', onClick: this.editSiteOptions.bind(this) },
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-tooltip ocb-tooltip-bottom ocb-tooltip-small ' + window.OffsproutEffect },
                    '(S)'
                ),
                'Site Settings'
            );
        }
    }]);

    return ToolbarSite;
}(_react.Component);

function mapStateToProps(_ref) {
    var siteState = _ref.siteState,
        appState = _ref.appState,
        inlineEditState = _ref.inlineEditState;

    //will show up as props inside of Tree
    return {
        appState: appState, siteState: siteState, inlineEditState: inlineEditState
    };
}

function mapDispatchToProps(dispatch) {
    return (0, _redux.bindActionCreators)({ appMakeSettingsActive: _index.appMakeSettingsActive }, dispatch);
}

//We pass null for the first value because we don't need a mapStateToProps since props are being passed up from below into state
//http://stackoverflow.com/questions/35443167/dispatch-is-not-a-function-when-argument-to-maptodispatchtoprops-in-redux
exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(ToolbarSite);

/***/ }),

/***/ 373:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactRedux = __webpack_require__(5);

var _redux = __webpack_require__(7);

var _combokeys = __webpack_require__(33);

var _combokeys2 = _interopRequireDefault(_combokeys);

var _index = __webpack_require__(8);

var _app_overlay = __webpack_require__(13);

var _app_overlay2 = _interopRequireDefault(_app_overlay);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ToolbarUndo = function (_Component) {
    _inherits(ToolbarUndo, _Component);

    function ToolbarUndo() {
        _classCallCheck(this, ToolbarUndo);

        return _possibleConstructorReturn(this, (ToolbarUndo.__proto__ || Object.getPrototypeOf(ToolbarUndo)).apply(this, arguments));
    }

    _createClass(ToolbarUndo, [{
        key: 'componentDidMount',


        /**
         * We need to make sure that when you're in the settings panel, the tinyMCE, or some other screen this is disabled
         * Until then, just return
         */
        value: function componentDidMount() {
            var _this2 = this;

            this.combokeys = new _combokeys2.default(document.documentElement);
            this.combokeysIframe = new _combokeys2.default(document.getElementById('ocb-workspace-iframe').contentWindow);
            this.combokeys.bind(['ctrl+z', 'command+z'], this.keyboardShortcut.bind(this));
            this.combokeysIframe.bind(['ctrl+z', 'command+z'], this.keyboardShortcut.bind(this));

            return;
            document.addEventListener('keydown', this.handleUndo.bind(this));
            setTimeout(function () {
                document.getElementById("ocb-workspace-iframe").contentWindow.document.addEventListener('keydown', _this2.handleUndo.bind(_this2));
            }, 3000);
        }

        /**
         * Want to make sure that we remove the event listener when it unmounts,
         * otherwise, the listener gets added to window multiple times and causes multiple setState updates
         */

    }, {
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {
            this.combokeys.detach();
            this.combokeysIframe.detach();
        }
    }, {
        key: 'keyboardShortcut',
        value: function keyboardShortcut() {
            this.undo();

            return false;
        }
    }, {
        key: 'undo',
        value: function undo() {
            var _this3 = this;

            var newIndex = this.props.undoRedo.currentIndex + 1;
            if (newIndex >= this.props.undoRedo.states.length) {
                var overlayOptions = [{
                    classes: '',
                    onClick: function onClick() {
                        return _this3.props.updateAppState('overlay', null);
                    },
                    text: 'Okay'
                }];

                var overlay = _react2.default.createElement(_app_overlay2.default, {
                    title: 'Nothing Else to Undo',
                    icon: 'warning',
                    stacked: '1',
                    content: '',
                    overlayStyle: 'small',
                    options: overlayOptions
                });

                this.props.updateAppState('overlay', overlay);
            } else {
                var currentObject = this.props.undoRedo.states[this.props.undoRedo.currentIndex].object;
                var state = this.props.undoRedo.states[newIndex].state;
                if (currentObject != undefined && currentObject.type == 'Site Settings') {
                    state = this.props.undoRedo.states[newIndex].siteState;
                }
                this.props.undoRedoUndo(state, currentObject);

                setTimeout(function () {
                    return window.ocbReInitializePlugins();
                }, 800);
            }
        }
    }, {
        key: 'handleUndo',
        value: function handleUndo(ev) {
            if (!(ev.which === 90 && (ev.ctrlKey || ev.metaKey)) || ev.shiftKey) {
                return;
            }
            this.undo();
        }
    }, {
        key: 'render',
        value: function render() {
            //If we're currently editing a global, let's not keep track of undo/redo because we can always cancel the updates to the global
            if (this.props.globals.currentRevert != undefined && this.props.globals.currentRevert != false) return null;

            return _react2.default.createElement(
                'div',
                { className: 'ocb-toolbar-button ocb-undo right ocb-tooltip-wrap', onClick: this.undo.bind(this) },
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-tooltip ocb-tooltip-bottom ' + window.OffsproutEffect },
                    '(Ctrl+Z)'
                ),
                _react2.default.createElement('i', { className: 'fa fa-undo' })
            );
        }
    }]);

    return ToolbarUndo;
}(_react.Component);

function mapStateToProps(state) {
    return { workspaceState: state.workspaceState, undoRedo: state.undoRedoState, globals: state.templateGlobals };
}
function mapDispatchToProps(dispatch) {
    return (0, _redux.bindActionCreators)({ undoRedoUndo: _index.undoRedoUndo, undoRedoRedo: _index.undoRedoRedo, undoRedoGoto: _index.undoRedoGoto, undoRedoRestore: _index.undoRedoRestore, undoRedoAdd: _index.undoRedoAdd, updateAppState: _index.updateAppState }, dispatch);
}
exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(ToolbarUndo);

/***/ }),

/***/ 374:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

//https://github.com/KyleAMathews/deepmerge
var FooterCSSRender = function (_Component) {
    _inherits(FooterCSSRender, _Component);

    function FooterCSSRender(props) {
        _classCallCheck(this, FooterCSSRender);

        var _this = _possibleConstructorReturn(this, (FooterCSSRender.__proto__ || Object.getPrototypeOf(FooterCSSRender)).call(this, props));

        _this.state = {
            rendered: false,
            css: ''
        };

        _this.doCSS = _this.doCSS.bind(_this);
        _this.makeCSS = _this.makeCSS.bind(_this);
        return _this;
    }

    _createClass(FooterCSSRender, [{
        key: 'makeCSS',
        value: function makeCSS() {
            var fullCSSString = '';
            if (window.OffsproutPageStyle != undefined) {
                window.OffsproutPageStyle.forEach(function (style) {
                    fullCSSString += style.css;
                });
                this.setState({ rendered: true, css: fullCSSString });
            }
        }
    }, {
        key: 'doCSS',
        value: function doCSS() {
            var _this2 = this;

            if (this.state.rendered == false) {
                setTimeout(function () {
                    _this2.makeCSS();
                }, 1000);
            }
        }
    }, {
        key: 'render',
        value: function render() {
            //this.doCSS();

            return _react2.default.createElement('style', { type: 'text/css', id: 'ocb-page-css', dangerouslySetInnerHTML: { __html: this.state.css } });
        }
    }]);

    return FooterCSSRender;
}(_react.Component);

exports.default = FooterCSSRender;

/***/ }),

/***/ 375:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

exports.default = function () {
    return {
        fields: [{
            id: 'items',
            title: 'Accordion Items',
            wrap: 'field_repeater',
            settingType: 'content',
            itemName: 'Accordion Item',
            itemNameField: ['title', 'text'],
            itemDescription: 'Options for the repeat item',
            items: {
                fields: [{
                    id: 'title',
                    title: 'Title for Item',
                    description: 'This is the clickable title of the accordion item',
                    wrap: 'field_wrap',
                    type: 'text'
                }, {
                    id: 'body',
                    title: 'Text for Item',
                    description: 'This is the body text of the accordion item',
                    wrap: 'field_wrap',
                    type: 'texteditor'
                }],
                default: {
                    title: {
                        text: 'Accordion Item Title'
                    },
                    body: {
                        text: '<p>This is the text of the accordion item</p>'
                    }
                }
            }
        }, {
            id: 'title_element',
            title: 'Title Element',
            description: 'The element type of the title.',
            wrap: 'field_wrap',
            type: 'dropdown',
            settingType: 'content',
            options: [{
                name: 'Regular',
                value: 'span'
            }, {
                name: 'Bold',
                value: 'strong'
            }, {
                name: 'Header 1',
                value: 'h1'
            }, {
                name: 'Header 2',
                value: 'h2'
            }, {
                name: 'Header 3',
                value: 'h3'
            }, {
                name: 'Header 4',
                value: 'h4'
            }, {
                name: 'Header 5',
                value: 'h5'
            }, {
                name: 'Header 6',
                value: 'h6'
            }]
        }, {
            id: 'title_group',
            title: 'Title',
            description: 'Configure title background and text colors',
            wrap: 'field_group',
            settingType: 'design',
            items: ['title_font_size', 'title_padding', 'title_border', 'title_background_color', 'title_background_hover_color', 'title_background_active_color', 'title_text_color', 'title_text_hover_color', 'title_text_active_color']
        }, {
            id: 'title_font_size',
            title: 'Title Font Size',
            description: 'How big you want the title text',
            wrap: 'field_wrap',
            type: 'slider_control',
            configuration: [{ units: 'em', min: 0, max: 10, step: 0.1 }, { units: 'rem', min: 0, max: 10, step: 0.1 }, { units: 'px', min: 8, max: 100, step: 1 }]
        }, {
            id: 'title_padding',
            title: 'Title Padding',
            description: 'Spacing around the title',
            wrap: 'field_wrap',
            type: 'linked_sliders',
            configuration: [{ units: 'px', min: 0, max: 200, step: 1 }, { units: 'em', min: 0, max: 10, step: 0.1 }, { units: 'rem', min: 0, max: 10, step: 0.1 }]
        }, {
            id: 'title_border',
            title: 'Title Border',
            description: 'Border around the title of each accordion item',
            wrap: 'field_wrap',
            type: 'border',
            configuration: [{ units: 'px', min: 0, max: 40, step: 1 }]
        }, {
            id: 'title_background_color',
            title: 'Title Background Color',
            description: 'This is the color of the title background',
            wrap: 'field_wrap',
            type: 'color'
        }, {
            id: 'title_background_hover_color',
            title: 'Title Background Hover Color',
            description: 'This is the color of the title background when it is being hovered over',
            wrap: 'field_wrap',
            type: 'color'
        }, {
            id: 'title_background_active_color',
            title: 'Title Background Active Color',
            description: 'This is the color of the title background when it is the active title',
            wrap: 'field_wrap',
            type: 'color'
        }, {
            id: 'title_text_color',
            title: 'Title Text Color',
            description: 'This is the color of the title text',
            wrap: 'field_wrap',
            type: 'color'
        }, {
            id: 'title_text_hover_color',
            title: 'Title Text Hover Color',
            description: 'This is the color of the title text when it is being hovered over',
            wrap: 'field_wrap',
            type: 'color'
        }, {
            id: 'title_text_active_color',
            title: 'Title Text Active Color',
            description: 'This is the color of the title text when it is the active title',
            wrap: 'field_wrap',
            type: 'color'
        }, {
            id: 'body_group',
            title: 'Body',
            description: 'Configure body background and text colors',
            wrap: 'field_group',
            settingType: 'design',
            items: ['body_padding', 'body_border', 'body_background_color', 'body_background_hover_color', 'body_background_active_color', 'body_text_color', 'body_text_hover_color', 'body_text_active_color']
        }, {
            id: 'body_padding',
            title: 'Body Padding',
            description: 'Spacing around the body',
            wrap: 'field_wrap',
            type: 'linked_sliders',
            configuration: [{ units: 'px', min: 0, max: 200, step: 1 }, { units: 'em', min: 0, max: 10, step: 0.1 }, { units: 'rem', min: 0, max: 10, step: 0.1 }]
        }, {
            id: 'body_border',
            title: 'Body Border',
            description: 'Border around the body of each accordion item',
            wrap: 'field_wrap',
            type: 'border',
            configuration: [{ units: 'px', min: 0, max: 40, step: 1 }]
        }, {
            id: 'body_background_color',
            title: 'Body Background Color',
            description: 'This is the color of the body background',
            wrap: 'field_wrap',
            type: 'color'
        }, {
            id: 'body_text_color',
            title: 'Body Text Color',
            description: 'This is the color of the body text',
            wrap: 'field_wrap',
            type: 'color'
        }, {
            id: 'icon_design',
            title: 'Icon',
            description: 'Configure the icon used by the accordion',
            wrap: 'field_group',
            settingType: 'design',
            items: ['icon_choice', 'icon_color']
        }, {
            id: 'icon_choice',
            title: 'Icon Choice',
            description: 'The icon displayed in the accordion.',
            wrap: 'field_wrap',
            type: 'dropdown',
            options: [{
                name: 'Plus/Minus',
                value: 'plus_minus'
            }, {
                name: 'Heavy Chevron',
                value: 'heavy_chevron'
            }, {
                name: 'Light Chevron',
                value: 'light_chevron'
            }, {
                name: 'Double Chevron',
                value: 'double_chevron'
            }, {
                name: 'Triangle',
                value: 'triangle'
            }, {
                name: 'Box Triangle',
                value: 'box_triangle'
            }, {
                name: 'None',
                value: ''
            }]
        }, {
            id: 'icon_color',
            title: 'Icon Color',
            description: 'This is the color of the accordion icons',
            wrap: 'field_wrap',
            type: 'color'
        }],
        default: {
            items: {
                items: [{
                    title: {
                        text: 'Accordion Item Title'
                    },
                    body: {
                        text: '<p>This is the text of the accordion item</p>'
                    }
                }]
            },
            title_element: {
                choice: 'strong'
            },
            title_font_size: {
                useDefault: 'default',
                value: 1,
                units: 'em'
            },
            title_padding: {
                top: 1,
                left: 0,
                right: 0,
                bottom: 1,
                units: 'em',
                useDefault: 'default'
            },
            title_border: {
                top: 1,
                left: 1,
                bottom: 1,
                right: 1,
                units: 'px',
                useDefault: 'default',
                type: 'solid',
                customColor: 'rgba(0,0,0,1)'
            },
            title_background_color: {
                color: 'default',
                customColor: 'rgba(68,215,182,1)'
            },
            title_background_hover_color: {
                color: 'default',
                customColor: 'rgba(68,215,182,1)'
            },
            title_background_active_color: {
                color: 'default',
                customColor: 'rgba(68,215,182,1)'
            },
            title_text_color: {
                color: 'default',
                customColor: 'rgba(68,215,182,1)'
            },
            title_text_hover_color: {
                color: 'default',
                customColor: 'rgba(68,215,182,1)'
            },
            title_text_active_color: {
                color: 'default',
                customColor: 'rgba(68,215,182,1)'
            },
            body_border: {
                top: 1,
                left: 1,
                bottom: 1,
                right: 1,
                units: 'px',
                useDefault: 'default',
                type: 'solid',
                customColor: 'rgba(0,0,0,1)'
            },
            body_padding: {
                top: 0,
                left: 0,
                right: 0,
                bottom: 0,
                units: 'em',
                useDefault: 'default'
            },
            body_background_color: {
                color: 'default',
                customColor: 'rgba(68,215,182,1)'
            },
            body_text_color: {
                color: 'default',
                customColor: 'rgba(68,215,182,1)'
            },
            icon_choice: {
                choice: 'plus_minus'
            },
            icon_color: {
                color: 'default',
                customColor: 'rgba(68,215,182,1)'
            }
        }
    };
};

;

/***/ }),

/***/ 376:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

exports.default = function () {
    return {
        fields: [
        /*{
            id: 'presets',
            title: 'Use Preset',
            description: 'Configure multiple options at once by using a preset',
            wrap: 'field_wrap',
            type: 'presets',
            presets: [
                {
                    name: 'Standard Icon',
                    id: 'standard',
                    preset: {
                        link_type: {choice: 'box'},box_background_color: {color: 'default'},box_background_color_hover: {color: 'default'},box_color: {color: 'default'},box_padding: {top: 1,left: 1,right: 1,bottom: 1,units: 'em',useDefault: 'default'},columns: {useDefault: 'custom',units: 'items',value: 2},box_horizontal_margin: {value: 25,units: 'px',useDefault: 'custom'},box_border: {useDefault: 'default',units: 'px',top: 1,left: 1,right: 1,bottom: 1,type: 'solid',color: 'grey_light'},box_vertical_margin: {value: 50,units: 'px',useDefault: 'custom'},icon_margin: {top: -24,left: 0,right: 0,bottom: 26,units: 'px',useDefault: 'default'},icon_background_color: {color: 'primary'},icon_padding: {value: 32,units: 'px',useDefault: 'custom'},content_align: {choice: 'center'},image_position: {choice: 'top'},icon_font_size: {value: 2.3,units: 'em',useDefault: 'custom'},icon_border_radius: {value: 50,units: '%',useDefault: 'custom'},icon_color: {color: 'white'},icon_border: {top: 2,left: 2,bottom: 2,right: 2,units: 'px',useDefault: 'custom',type: 'solid',color: 'primary_dark',customColor: '#000000'}
                    }
                },
                {
                    name: 'Icon Box',
                    id: 'icon_box',
                    preset: {
                        link_type: {choice: 'box'},box_background_color: {color: 'primary'},box_background_color_hover: {color: 'primary_dark'},box_color: {color: 'white'},box_padding: {top: 2,left: 2,right: 2,bottom: 2,units: 'em',useDefault: 'custom'},columns: {useDefault: 'custom',units: 'items',value: 2},box_horizontal_margin: {value: 25,units: 'px',useDefault: 'custom'},box_border: {useDefault: 'custom',units: 'px',top: 2,left: 2,right: 2,bottom: 2,type: 'solid',color: 'primary_dark'},box_vertical_margin: {value: 50,units: 'px',useDefault: 'custom'},icon_margin: {top: -59,left: 0,right: 0,bottom: 35,units: 'px',useDefault: 'custom'},icon_background_color: {color: 'white'},icon_padding: {value: 32,units: 'px',useDefault: 'custom'},content_align: {choice: 'center'},image_position: {choice: 'top'},icon_font_size: {value: 2.3,units: 'em',useDefault: 'custom'},icon_border_radius: {value: 50,units: '%',useDefault: 'custom'},icon_color: {customColor: undefined,color: 'primary'},icon_border: {top: 2,left: 2,bottom: 2,right: 2,units: 'px',useDefault: 'custom',type: 'solid',color: 'primary_dark',customColor: '#000000'}
                    }
                },
                {
                    name: 'Left Icon',
                    id: 'left_icon',
                    preset: {
                        link_type: {choice: 'box'},box_background_color: {color: 'default'},box_background_color_hover: {color: 'default'},box_color: {color: 'default'},box_padding: {top: 1,left: 1,right: 1,bottom: 1,units: 'em',useDefault: 'default'},columns: {useDefault: 'custom',units: 'items',value: 2},box_horizontal_margin: {value: 25,units: 'px',useDefault: 'custom'},box_border: {useDefault: 'default',units: 'px',top: 5,left: 5,right: 5,bottom: 5,type: 'solid',color: 'primary_dark'},box_vertical_margin: {value: 53,units: 'px',useDefault: 'custom'},icon_margin: {top: -24,left: 0,right: 0,bottom: 26,units: 'px',useDefault: 'default'},icon_background_color: {color: 'default'},icon_padding: {value: 27,units: 'px',useDefault: 'default'},content_align: {choice: 'left'},image_position: {choice: 'left'},icon_font_size: {value: 3,units: 'em',useDefault: 'custom'},icon_border_radius: {value: 50,units: '%',useDefault: 'default'},icon_color: {color: 'primary'},icon_border: {top: 1,left: 1,bottom: 1,right: 1,units: 'px',useDefault: 'default',type: 'solid',color: 'default',customColor: '#000000'}
                    }
                },
                {
                    name: 'Left Top Icon',
                    id: 'left_top_icon',
                    preset: {
                        link_type: {choice: 'box'},features: {},box_background_color: {color: 'default'},box_color: {color: 'grey_dark'},box_padding: {top: 1,left: 1,right: 1,bottom: 1,units: 'em',useDefault: 'default'},columns: {useDefault: 'custom',units: 'items',value: 2},box_horizontal_margin: {value: 25,units: 'px',useDefault: 'custom'},box_border: {useDefault: 'default',units: 'px',top: 5,left: 5,right: 5,bottom: 5,type: 'solid',color: 'primary_dark'},box_vertical_margin: {value: 53,units: 'px',useDefault: 'custom'},icon_margin: {useDefault: 'default'},icon_background_color: {color: 'default'},icon_padding: {value: 27,units: 'px',useDefault: 'default'},content_align: {choice: 'left'},image_position: {choice: 'leftTop'},icon_font_size: {value: 3,units: 'em',useDefault: 'custom'},icon_border_radius: {value: 50,units: '%',useDefault: 'default'},icon_color: {color: 'primary'},icon_border: {top: 1,left: 1,bottom: 1,right: 1,units: 'px',useDefault: 'default',type: 'solid',color: 'default',customColor: '#000000'},box_background_color_hover: {color: 'default'}
                    }
                },
                {
                    name: 'Button Box',
                    id: 'button_box',
                    preset: {
                        link_type: {choice: 'button'},box_background_color: {color: 'grey_light'},box_background_color_hover: {color: 'grey_light'},box_color: {color: 'default'},box_padding: {top: 2,left: 2,right: 2,bottom: 6.8,units: 'em',useDefault: 'custom'},columns: {useDefault: 'custom',units: 'items',value: 2},box_horizontal_margin: {value: 25,units: 'px',useDefault: 'custom'},box_border: {useDefault: 'custom',units: 'px',top: 2,left: 2,right: 2,bottom: 2,type: 'solid',color: 'grey'},box_vertical_margin: {value: 50,units: 'px',useDefault: 'custom'},icon_margin: {top: -59,left: 0,right: 0,bottom: 35,units: 'px',useDefault: 'custom'},icon_background_color: {color: 'white'},icon_padding: {value: 32,units: 'px',useDefault: 'custom'},content_align: {choice: 'center'},image_position: {choice: 'top'},icon_font_size: {value: 2.3,units: 'em',useDefault: 'custom'},icon_border_radius: {value: 50,units: '%',useDefault: 'custom'},icon_color: {color: 'primary'},icon_border: {top: 2,left: 2,bottom: 2,right: 2,units: 'px',useDefault: 'custom',type: 'solid',color: 'grey',customColor: '#000000'},button_alignment: {choice: 'stretch_bottom'},button_skin: {choice: 'custom'},button_background_hover: {color: 'action_dark'},button_border_radius: {value: 0,units: '%',useDefault: 'custom'}
                    }
                }
            ]
        },*/
        {
            id: 'features',
            title: 'Features',
            wrap: 'field_repeater',
            itemName: 'Feature',
            itemNameField: ['text', 'text'],
            settingType: 'content',
            itemDescription: 'Options for the feature',
            items: {
                fields: [{
                    id: 'icon',
                    title: 'Icon',
                    description: 'Icon for this feature',
                    wrap: 'field_wrap',
                    type: 'icon',
                    conditional: {
                        conditions: [{
                            id: 'image_type',
                            property: 'choice',
                            value: 'icon'
                        }]
                    }
                }, {
                    id: 'image',
                    title: 'Image',
                    description: 'Image for this feature',
                    wrap: 'field_wrap',
                    type: 'media',
                    conditional: {
                        conditions: [{
                            id: 'image_type',
                            property: 'choice',
                            value: 'image'
                        }]
                    },
                    configuration: {
                        type: 'image'
                    }
                }, {
                    id: 'text',
                    title: 'Text',
                    description: 'The text of this feature',
                    wrap: 'field_wrap',
                    type: 'texteditor',
                    configuration: {
                        toolbar: 'styleselect | undo redo | bold italic | link unlink | code'
                    }
                }, {
                    id: 'link',
                    title: 'Link',
                    description: 'The destination users are brought to when they click this feature',
                    wrap: 'field_wrap',
                    type: 'link',
                    configuration: {
                        newWindow: true
                    },
                    conditional: {
                        ifTrue: 'hide',
                        conditions: [{
                            id: 'link_type',
                            property: 'choice',
                            value: 0
                        }]
                    }
                }],
                default: {
                    link: {
                        url: ''
                    },
                    text: {
                        text: '<p>This is the feature text</p>'
                    }
                }
            }
        }, {
            id: 'configuration_group',
            title: 'Configuration',
            description: 'Configure the number of columns and alignment of the features',
            wrap: 'field_group',
            settingType: 'design',
            items: ['columns', 'incomplete_row', 'content_align']
        }, {
            id: 'columns',
            title: 'Items Per Row',
            description: 'The number of features in each row',
            wrap: 'field_wrap',
            type: 'slider_control',
            settingType: 'design',
            configuration: [{ units: 'items', min: 1, max: 5, step: 1 }]
        }, {
            id: 'incomplete_row',
            title: 'Incomplete Row Item Width',
            description: 'The width of items in the last row, if less than the number of columns',
            wrap: 'field_wrap',
            type: 'radio_toggle',
            settingType: 'design',
            options: [{
                name: 'Fill',
                value: 'fill'
            }, {
                name: 'Natural',
                value: 'natural'
            }]
        }, {
            id: 'content_align',
            title: 'Content Align',
            description: 'Choose how you would like to align the content',
            wrap: 'field_wrap',
            type: 'radio_toggle',
            settingType: 'design',
            options: [{
                name: 'Left',
                value: 'left'
            }, {
                name: 'Center',
                value: 'center'
            }, {
                name: 'Right',
                value: 'right'
            }],
            configuration: {
                flex: true
            }
        }, {
            id: 'color_group',
            title: 'Colors',
            description: 'Configure the text and background color of the features',
            wrap: 'field_group',
            settingType: 'design',
            items: ['box_color', 'box_background_color', 'box_background_color_hover']
        }, {
            id: 'box_color',
            title: 'Text Color',
            description: 'Select a text color for this object (can be overwritten by the object\'s settings',
            wrap: 'field_wrap',
            settingType: 'design',
            type: 'color'
        }, {
            id: 'box_background_color',
            title: 'Background Color',
            description: 'Select a background color for this feature',
            wrap: 'field_wrap',
            settingType: 'design',
            type: 'color'
        }, {
            id: 'box_background_color_hover',
            title: 'Background Color Hover',
            description: 'Select a background color for this feature when you are hovering over it',
            wrap: 'field_wrap',
            settingType: 'design',
            type: 'color'
        }, {
            id: 'spacing_group',
            title: 'Spacing',
            description: 'Configure the spacing of the features',
            wrap: 'field_group',
            settingType: 'design',
            items: ['box_padding', 'box_horizontal_margin', 'box_vertical_margin']
        }, {
            id: 'box_horizontal_margin',
            title: 'Horizontal Margin',
            description: 'Adjust the horizontal margin for this feature',
            wrap: 'field_wrap',
            type: 'slider_control',
            settingType: 'design',
            configuration: [{ units: 'px', min: 0, max: 100, step: 1 }]
        }, {
            id: 'box_vertical_margin',
            title: 'Vertical Margin',
            description: 'Adjust the vertical margin for this feature',
            wrap: 'field_wrap',
            type: 'slider_control',
            settingType: 'design',
            configuration: [{ units: 'px', min: 0, max: 100, step: 1 }]
        }, {
            id: 'box_padding',
            title: 'Padding',
            description: 'Adjust the padding for this feature',
            wrap: 'field_wrap',
            type: 'linked_sliders',
            settingType: 'design',
            configuration: [{ units: 'px', min: 0, max: 200, step: 1 }, { units: '%', min: 0, max: 100, step: 1 }, { units: 'em', min: 0, max: 30, step: 0.1 }]
        }, {
            id: 'border_group',
            title: 'Border',
            description: 'Configure the border of the features',
            wrap: 'field_group',
            settingType: 'design',
            items: ['box_border', 'box_shadow', 'box_border_radius']
        }, {
            id: 'box_border',
            title: 'Border',
            description: 'Design a border for the features',
            wrap: 'field_wrap',
            type: 'border',
            settingType: 'design',
            configuration: [{ units: 'px', min: 0, max: 40, step: 1 }]
        }, {
            id: 'box_shadow',
            title: 'Box Shadow',
            description: 'Add a shadow effect to the features',
            wrap: 'field_wrap',
            settingType: 'design',
            type: 'box_shadow'
        }, {
            id: 'box_border_radius',
            title: 'Border Radius',
            description: 'Curve the borders of this feature',
            wrap: 'field_wrap',
            type: 'linked_sliders',
            settingType: 'design',
            labels: {
                top: 'topLeft',
                right: 'topRight',
                bottom: 'bottomRight',
                left: 'bottomLeft',
                useDefault: 'None',
                useCustom: 'Add'
            },
            configuration: [{ units: '%', min: 0, max: 100, step: 1 }, { units: 'px', min: 0, max: 500, step: 1 }]
        }, {
            id: 'image_group',
            title: 'Image/Icon',
            description: 'Configure the design of the image or icon in the features',
            wrap: 'field_group',
            settingType: 'design',
            items: ['image_type', 'image_position', 'box_background_color_opacity', 'icon_group', 'image_design_group']
        }, {
            id: 'image_type',
            title: 'Image Type',
            description: 'Choose an image, icon, or neither to go along with this feature',
            wrap: 'field_wrap',
            type: 'radio_toggle',
            settingType: 'design',
            options: [{
                name: 'No Image',
                value: 0
            }, {
                name: 'Image',
                value: 'image'
            }, {
                name: 'Icon',
                value: 'icon'
            }]
        }, {
            id: 'image_position',
            title: 'Image Position',
            description: 'Choose where you would like the image to go',
            wrap: 'field_wrap',
            type: 'radio_toggle',
            settingType: 'design',
            options: [{
                name: 'Top',
                value: 'top'
            }, {
                name: 'Top Full',
                value: 'topFull'
            }, {
                name: 'Left',
                value: 'left'
            }, {
                name: 'Left Top',
                value: 'leftTop'
            }, {
                name: 'Right',
                value: 'right'
            }, {
                name: 'Right Top',
                value: 'rightTop'
            }, {
                name: 'Background',
                value: 'background'
            }],
            conditional: {
                ifTrue: 'hide',
                conditions: [{
                    id: 'image_type',
                    property: 'choice',
                    value: 0
                }]
            }
        }, {
            id: 'box_background_color_opacity',
            title: 'Background Screen Opacity',
            description: 'Choose where you would like the image to go',
            note: 'Positioning the image as a background turns the color background into a background screen.',
            wrap: 'field_wrap',
            type: 'slider_control',
            settingType: 'design',
            configuration: [{ units: '%', min: 0, max: 100, step: 1 }],
            conditional: {
                conditions: [{
                    id: 'image_position',
                    property: 'choice',
                    value: 'background'
                }]
            }
        }, {
            id: 'icon_group',
            title: 'Icon',
            description: 'Configure the design of the icons',
            wrap: 'field_group',
            settingType: 'design',
            items: ['icon_margin', 'icon_mixin'],
            conditional: {
                conditions: [{
                    id: 'image_type',
                    property: 'choice',
                    value: 'icon'
                }]
            }
        }, {
            id: 'icon_margin',
            title: 'Icon Margin',
            description: 'Adjust the margin for the icon',
            wrap: 'field_wrap',
            type: 'linked_sliders',
            settingType: 'design',
            configuration: [{ units: 'px', min: -100, max: 100, step: 1 }]
        }, {
            id: 'icon_mixin',
            wrap: 'field_mixin',
            mixin: 'icon',
            prefix: 'icon_',
            group: 'icon_group',
            settingType: 'design'
        }, {
            id: 'image_design_group',
            title: 'Image',
            description: 'Configure the design of the images',
            wrap: 'field_group',
            settingType: 'design',
            items: ['image_border_radius', 'image_display', 'image_max_width', 'image_size', 'image_height', 'image_vertical_align', 'image_margin'],
            conditional: {
                conditions: [{
                    id: 'image_type',
                    property: 'choice',
                    value: 'image'
                }, {
                    id: 'image_position',
                    property: 'choice',
                    value: 'background',
                    ifTrue: 'hide'
                }]
            }
        }, {
            id: 'image_margin',
            title: 'Image Margin',
            description: 'The margin around the image.',
            note: 'Non-zero values for left and right margins will override the image alignment option',
            wrap: 'field_wrap',
            settingType: 'design',
            type: 'linked_sliders',
            configuration: [{ units: 'em', min: 0, max: 20, step: 0.5 }, { units: 'px', min: 0, max: 200, step: 5 }]
        }, {
            id: 'image_border_radius',
            title: 'Border Radius',
            description: 'The curve in the corners of the image',
            wrap: 'field_wrap',
            settingType: 'design',
            type: 'slider_control',
            configuration: [{ units: '%', min: 0, max: 100, step: 1 }, { units: 'px', min: 0, max: 500, step: 1 }]
        }, {
            id: 'image_display',
            title: 'Display',
            description: 'Choose the display type, like "square" for this image.',
            wrap: 'field_wrap',
            settingType: 'design',
            type: 'radio_toggle',
            options: [{
                name: 'Normal',
                value: 'normal'
            }, {
                name: 'Square',
                value: 'square'
            }, {
                name: 'Custom Height',
                value: 'height'
            }]
        }, {
            id: 'image_max_width',
            title: 'Max Width',
            description: 'Set a maximum width for this image.',
            wrap: 'field_wrap',
            settingType: 'design',
            type: 'slider_control',
            configuration: [{ units: '%', min: 10, max: 100, step: 1 }, { units: 'px', min: 30, max: 1200, step: 10 }],
            conditional: {
                conditions: [{
                    id: 'image_display',
                    property: 'choice',
                    value: 'normal'
                }]
            }
        }, {
            id: 'image_size',
            title: 'Size',
            description: 'Set the width/height of the image.',
            wrap: 'field_wrap',
            settingType: 'design',
            type: 'slider_control',
            configuration: [{ units: 'px', min: 30, max: 1200, step: 10 }],
            conditional: {
                conditions: [{
                    id: 'image_display',
                    property: 'choice',
                    value: 'square'
                }]
            }
        }, {
            id: 'image_height',
            title: 'Height',
            description: 'Set the height for this image.',
            wrap: 'field_wrap',
            settingType: 'design',
            type: 'slider_control',
            configuration: [{ units: 'px', min: 30, max: 1200, step: 10 }],
            conditional: {
                conditions: [{
                    id: 'image_display',
                    property: 'choice',
                    value: 'height'
                }]
            }
        }, {
            id: 'image_vertical_align',
            title: 'Vertical Alignment',
            description: 'When you set a custom height, the image will height will overflow. 50% will center the image vertically.',
            wrap: 'field_wrap',
            settingType: 'design',
            type: 'slider_control',
            configuration: [{ units: '%', min: 0, max: 100, step: 1 }],
            conditional: {
                conditions: [{
                    id: 'image_display',
                    property: 'choice',
                    value: 'height'
                }]
            }
        }, {
            id: 'link_type',
            title: 'Link Type',
            description: 'Button or box link destinations can be set in each feature',
            wrap: 'field_wrap',
            type: 'radio_toggle',
            settingType: 'content',
            options: [{
                name: 'No Link',
                value: 0
            }, {
                name: 'Button',
                value: 'button'
            }, {
                name: 'Box',
                value: 'box'
            }]
        }, {
            id: 'button_group',
            title: 'Button Configuration',
            description: 'Configure the button',
            wrap: 'field_group',
            items: ['button_text', 'button_alignment', 'button_margin_top', 'button_skin', 'button_mixin'],
            conditional: {
                conditions: [{
                    id: 'link_type',
                    property: 'choice',
                    value: 'button'
                }]
            }
        }, {
            id: 'button_text',
            title: 'Text',
            description: 'The text of buttons',
            wrap: 'field_wrap',
            type: 'text',
            settingType: 'content'
        }, {
            id: 'button_alignment',
            title: 'Alignment',
            description: 'Where to position the button',
            wrap: 'field_wrap',
            type: 'radio_toggle',
            settingType: 'design',
            options: [{
                name: 'Left',
                value: 'left'
            }, {
                name: 'Center',
                value: 'center'
            }, {
                name: 'Stretch',
                value: 'stretch'
            }, {
                name: 'Stretch Bottom',
                value: 'stretch_bottom'
            }, {
                name: 'Right',
                value: 'right'
            }],
            configuration: {
                flex: true
            }
        }, {
            id: 'button_margin_top',
            title: 'Button Margin Top',
            description: 'Adjust the top margin for this button',
            wrap: 'field_wrap',
            type: 'slider_control',
            settingType: 'design',
            configuration: [{ units: 'em', min: 0, max: 10, step: 0.1 }, { units: 'px', min: 0, max: 100, step: 1 }],
            conditional: {
                ifTrue: 'hide',
                conditions: [{
                    id: 'button_alignment',
                    property: 'choice',
                    value: 'stretch_bottom'
                }]
            }
        },
        /*{
            id: 'button_skin',
            title: 'Button Skin',
            description: 'Use a site-wide button skin set in site settings or create a custom design for this button',
            wrap: 'field_wrap',
            type: 'dropdown',
            settingType: 'design',
            note: 'Button skins can be configured in the site settings area. This is useful for having site-wide button designs that can be updated in a single place.',
            options: [
                {
                    name: 'Action',
                    value: 'action'
                },
                {
                    name: 'Info',
                    value: 'info'
                },
                {
                    name: 'Custom',
                    value: 'custom'
                }
            ]
        },*/
        {
            id: 'button_skin',
            title: 'Button Skin',
            description: 'Use a button skin or create a custom design for this button',
            wrap: 'field_wrap',
            type: 'skin',
            settingType: 'design',
            configuration: {
                moduleType: 'button'
            }
        }, {
            id: 'button_mixin',
            wrap: 'field_mixin',
            mixin: 'button',
            prefix: 'button_',
            settingType: 'design',
            group: 'button_group',
            conditional: {
                conditions: [{
                    id: 'button_skin',
                    property: 'choice',
                    value: 'custom'
                }]
            }
        }],
        default: {
            features: {
                items: [{
                    icon: {
                        icon: 'fa-check-circle'
                    },
                    text: {
                        text: '<p>This is the feature text 1</p>',
                        startingText: '<p>This is the feature text 1</p>'
                    }
                }]
            },
            columns: {
                useDefault: 'custom',
                units: 'items',
                value: 3
            },
            incomplete_row: {
                choice: 'fill'
            },
            content_align: {
                choice: 'center'
            },
            box_color: {
                color: 'default'
            },
            box_background_color: {
                color: 'default'
            },
            box_background_color_hover: {
                color: 'default'
            },
            box_background_color_opacity: {
                value: 70,
                units: '%',
                useDefault: 'default'
            },
            box_border: {
                useDefault: 'default',
                units: 'px',
                top: 1,
                left: 1,
                right: 1,
                bottom: 1,
                type: 'solid',
                color: 'default'
            },
            box_shadow: {
                useDefault: 'default',
                horizontal: 0,
                vertical: 0,
                blur: 20,
                spread: 5,
                color: 'rgba(151,151,151,1)'
            },
            box_border_radius: {
                value: 0,
                units: 'px',
                top: 1,
                left: 1,
                right: 1,
                bottom: 1,
                useDefault: 'default'
            },
            box_horizontal_margin: {
                value: 25,
                units: 'px',
                useDefault: 'default'
            },
            box_vertical_margin: {
                value: 25,
                units: 'px',
                useDefault: 'default'
            },
            box_padding: {
                top: 1,
                left: 1,
                right: 1,
                bottom: 1,
                units: 'em',
                useDefault: 'default'
            },
            button_text: {
                text: 'Read More'
            },
            button_alignment: {
                choice: 'center'
            },
            button_skin: {
                choice: 'custom'
            },
            button_margin_top: {
                useDefault: 'default',
                value: '1',
                units: 'em'
            },
            icon_margin: {
                top: 0,
                left: 0,
                right: 0,
                bottom: 35,
                units: 'px',
                useDefault: 'default'
            },
            icon_font_size: {
                units: 'em',
                useDefault: 'custom',
                value: 2
            },
            link_type: {
                choice: 0
            },
            image_type: {
                choice: 'icon'
            },
            image_position: {
                choice: 'top'
            },
            image_margin: {
                top: 0,
                left: 0,
                right: 0,
                bottom: 35,
                units: 'px',
                useDefault: 'default'
            },
            image_border_radius: {
                value: 0,
                units: '%',
                useDefault: 'default'
            },
            image_display: {
                choice: 'normal'
            },
            image_max_width: {
                value: 700,
                units: 'px',
                useDefault: 'default'
            },
            image_size: {
                value: 250,
                units: 'px',
                useDefault: 'default'
            },
            image_height: {
                value: 250,
                units: 'px',
                useDefault: 'default'
            },
            image_vertical_align: {
                value: 50,
                units: '%',
                useDefault: 'default'
            }
        }
    };
};

;

/***/ }),

/***/ 377:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

exports.default = function () {
    return {
        fields: [{
            id: 'images',
            title: 'Gallery Images',
            description: 'Images to include in the gallery',
            wrap: 'field_wrap',
            type: 'media',
            settingType: 'content',
            onChange: 'ocbReInitSingleMasonry',
            configuration: {
                multiple: true,
                type: 'image' //audio, video, application/pdf
            }
        }],
        default: {
            images: {
                url: '',
                size: 'large',
                object: {},
                images: []
            }
        }
    };
};

;

/***/ }),

/***/ 378:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

exports.default = function () {
    return {
        fields: [{
            id: 'items',
            title: 'List Items',
            wrap: 'field_repeater',
            itemName: 'Item',
            itemNameField: ['text', 'text'],
            itemDescription: 'Options for the list item',
            settingType: 'content',
            items: {
                fields: [{
                    id: 'heading',
                    title: 'Heading',
                    description: 'The heading of this list item',
                    wrap: 'field_wrap',
                    type: 'text',
                    configuration: {
                        toolbar: 'ocbconnected ocbcolor | removeformat code',
                        editType: 'headingarea'
                    }
                }, {
                    id: 'text',
                    title: 'Text',
                    description: 'The text of this list item',
                    wrap: 'field_wrap',
                    type: 'texteditor',
                    configuration: {
                        toolbar: 'bold italic | link unlink'
                    }
                }, {
                    id: 'icon_overwrite',
                    title: 'Icon Overwrite',
                    description: 'Overwrite for icon used for the bullet on each list item',
                    wrap: 'field_wrap',
                    type: 'icon'
                }, {
                    id: 'text_color_overwrite',
                    title: 'Text Color Overwrite',
                    description: 'Overwrite for the color of the list item text',
                    wrap: 'field_wrap',
                    type: 'color'
                }, {
                    id: 'icon_color_overwrite',
                    title: 'Icon Color Overwrite',
                    description: 'Overwrite for the color of the list item icon',
                    wrap: 'field_wrap',
                    type: 'color'
                }, {
                    id: 'icon_background_color_overwrite',
                    title: 'Icon Background Color Overwrite',
                    description: 'Overwrite for the background color of the list item icon',
                    wrap: 'field_wrap',
                    type: 'color'
                }],
                default: {
                    heading: {
                        text: ''
                    },
                    text: {
                        text: 'List item'
                    },
                    icon_overwrite: {
                        icon: ''
                    },
                    text_color_overwrite: {
                        color: 'default'
                    },
                    icon_color_overwrite: {
                        color: 'default'
                    },
                    icon_background_color_overwrite: {
                        color: 'default'
                    }
                }
            }
        },
        /*{
            id: 'configuration_group',
            title: 'Configuration',
            description: 'Configure the number of columns, spacing, and positioning',
            wrap: 'field_group',
            settingType: 'design',
            items: ['columns', 'item_spacing']
        },*/
        {
            id: 'icon',
            title: 'Icon',
            description: 'Icon used for the bullet on each list item. This can be overwritten on an item by item basis inside each item',
            wrap: 'field_wrap',
            settingType: 'content',
            type: 'icon'
        }, {
            id: 'heading_heading',
            title: 'Heading',
            wrap: 'field_wrap',
            type: 'heading',
            inline: true,
            settingType: 'content'
        }, {
            id: 'heading_type',
            title: 'Heading Type',
            description: 'The HTML tag type of the list heading',
            wrap: 'field_wrap',
            type: 'radio_toggle',
            inline: true,
            settingType: 'content',
            options: [{
                name: 'H1',
                value: 'h1'
            }, {
                name: 'H2',
                value: 'h2'
            }, {
                name: 'H3',
                value: 'h3'
            }, {
                name: 'H4',
                value: 'h4'
            }, {
                name: 'H5',
                value: 'h5'
            }, {
                name: 'H6',
                value: 'h6'
            }, {
                name: 'Bold',
                value: 'strong'
            }],
            configuration: {
                flex: true,
                flexWrap: true,
                flexBasis: 25
            }
        }, {
            id: 'configuration_heading',
            title: 'Configuration',
            wrap: 'field_wrap',
            type: 'heading',
            inline: true,
            settingType: 'design'
        }, {
            id: 'columns',
            title: 'Columns',
            description: 'Optionally create multiple columns that the list items will go in',
            wrap: 'field_wrap',
            type: 'slider_control',
            settingType: 'design',
            inline: true,
            configuration: [{ units: 'columns', min: 1, max: 5, step: 1 }]
        },
        /*{
            id: 'column_spacing',
            title: 'Column Spacing',
            description: 'The spacing between the columns of list items',
            wrap: 'field_wrap',
            type: 'slider_control',
            settingType: 'design',
            inline: true,
            configuration: [
                { units: '%', min: 0, max: 50, step: 1 }
            ],
            conditional: {
                ifTrue: 'hide',
                conditions: [
                    {
                        id: 'columns',
                        property: 'value',
                        value: 1
                    }
                ]
            }
        },*/
        {
            id: 'item_spacing',
            title: 'Item Spacing',
            description: 'The spacing between all of the list items',
            wrap: 'field_wrap',
            type: 'slider_control',
            settingType: 'design',
            inline: true,
            configuration: [{ units: 'px', min: 8, max: 50, step: 1 }, { units: 'em', min: 0.5, max: 5, step: 0.1 }, { units: 'rem', min: 0.5, max: 5, step: 0.1 }]
        }, {
            id: 'heading_spacing',
            title: 'Heading Spacing',
            description: 'The spacing between the heading and the text of the list items',
            wrap: 'field_wrap',
            type: 'slider_control',
            settingType: 'design',
            inline: true,
            configuration: [{ units: 'px', min: 8, max: 50, step: 1 }, { units: 'em', min: 0.5, max: 5, step: 0.1 }, { units: 'rem', min: 0.5, max: 5, step: 0.1 }]
        }, {
            id: 'align',
            title: 'Align',
            wrap: 'field_wrap',
            type: 'radio_toggle',
            inline: true,
            settingType: 'design',
            options: [{
                name: 'fa-ban',
                value: 'none'
            }, {
                name: 'fa-align-left',
                value: 'left'
            }, {
                name: 'fa-align-center',
                value: 'center'
            }, {
                name: 'fa-align-right',
                value: 'right'
            }],
            configuration: {
                flex: true
            }
        },
        /*{
            id: 'icon_design_group',
            title: 'Icon',
            description: 'Control the look of the icon',
            wrap: 'field_group',
            settingType: 'design',
            items: ['icon_size', 'icon_color', 'icon_background_color', 'icon_padding', 'icon_position']
        },*/
        {
            id: 'border',
            title: 'Border',
            description: 'Design a border for this object',
            wrap: 'field_wrap',
            type: 'border',
            settingType: 'design',
            deviceSpecific: true,
            configuration: [{ units: 'px', min: 0, max: 40, step: 1 }]
        }, {
            id: 'remove_border',
            title: 'Remove Border',
            description: 'Will remove the border on certain items in the list',
            wrap: 'field_wrap',
            type: 'dropdown',
            settingType: 'design',
            options: [{
                name: 'None',
                value: 'none'
            }, {
                name: 'First Item',
                value: 'first'
            }, {
                name: 'Last Item',
                value: 'last'
            }, {
                name: 'First and Last',
                value: 'firstlast'
            }]
        }, {
            id: 'icon_design_heading',
            title: 'Icon',
            wrap: 'field_wrap',
            type: 'heading',
            inline: true,
            settingType: 'design'
        }, {
            id: 'hide_icon',
            title: 'No Icon',
            description: 'Remove the icon from the list',
            wrap: 'field_wrap',
            inline: true,
            settingType: 'design',
            type: 'switch'
        }, {
            id: 'icon_size',
            title: 'Size',
            description: 'The icon size of all of the list items',
            wrap: 'field_wrap',
            type: 'slider_control',
            settingType: 'design',
            inline: true,
            configuration: [{ units: 'px', min: 8, max: 50, step: 1 }, { units: 'em', min: 0.5, max: 5, step: 0.1 }, { units: 'rem', min: 0.5, max: 5, step: 0.1 }],
            conditional: {
                conditions: [{
                    id: 'hide_icon',
                    property: 'yes',
                    value: 0
                }]
            }
        }, {
            id: 'icon_padding',
            title: 'Background Size',
            description: 'The padding around the icon of the list items',
            wrap: 'field_wrap',
            type: 'slider_control',
            settingType: 'design',
            inline: true,
            configuration: [{ units: 'px', min: 8, max: 50, step: 1 }, { units: 'em', min: 0.5, max: 5, step: 0.1 }, { units: 'rem', min: 0.5, max: 5, step: 0.1 }],
            conditional: {
                conditions: [{
                    id: 'hide_icon',
                    property: 'yes',
                    value: 0
                }]
            }
        }, {
            id: 'icon_position',
            title: 'Position',
            description: 'The vertical positioning of the icon beside the list item',
            wrap: 'field_wrap',
            type: 'radio_toggle',
            settingType: 'design',
            inline: true,
            options: [{
                name: 'fa-long-arrow-up',
                value: 'top'
            }, {
                name: 'fa-compress vertical',
                value: 'center'
            }],
            configuration: {
                flex: true
            },
            conditional: {
                conditions: [{
                    id: 'hide_icon',
                    property: 'yes',
                    value: 0
                }]
            }
        }, {
            id: 'icon_color',
            title: 'Icon Color',
            description: 'The color of the list item icon. This can be overwritten on an item by item basis inside each item',
            wrap: 'field_wrap',
            settingType: 'design',
            type: 'color',
            conditional: {
                conditions: [{
                    id: 'hide_icon',
                    property: 'yes',
                    value: 0
                }]
            }
        }, {
            id: 'icon_background_color',
            title: 'Icon Background Color',
            description: 'The background color of the list item icon. This can be overwritten on an item by item basis inside each item',
            wrap: 'field_wrap',
            settingType: 'design',
            type: 'color',
            conditional: {
                conditions: [{
                    id: 'hide_icon',
                    property: 'yes',
                    value: 0
                }]
            }
        }],
        default: {
            items: {
                items: [{}]
            },
            icon: {
                icon: 'fa-circle'
            },
            heading_type: {
                choice: 'strong'
            },
            columns: {
                value: 1,
                units: 'columns',
                useDefault: 'default'
            },
            text_size: {
                value: 1,
                units: 'em',
                useDefault: 'default'
            },
            align: {
                choice: 'none'
            },
            border: {
                useDefault: 'default',
                units: 'px',
                top: 0,
                left: 0,
                right: 0,
                bottom: 1,
                type: 'solid',
                color: 'default'
            },
            remove_border: {
                choice: 'none'
            },
            hide_icon: {
                yes: 0
            },
            icon_size: {
                value: 1,
                units: 'em',
                useDefault: 'default'
            },
            icon_position: {
                choice: 'top'
            },
            item_spacing: {
                value: 1,
                units: 'em',
                useDefault: 'default'
            },
            heading_spacing: {
                value: 1,
                units: 'em',
                useDefault: 'default'
            },
            text_color: {
                color: 'default',
                customColor: '#000000'
            },
            icon_color: {
                color: 'default',
                customColor: '#000000'
            },
            icon_background_color: {
                color: 'default',
                customColor: '#000000'
            },
            icon_padding: {
                value: 1,
                units: 'em',
                useDefault: 'default'
            }
        }
    };
};

;

/***/ }),

/***/ 379:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

exports.default = function () {
    return {
        fields: [{
            id: 'tabs',
            title: 'Tabs',
            description: 'Create the tabs',
            wrap: 'field_wrap',
            type: 'items',
            settingType: 'content',
            configuration: {
                itemType: 'container' //this is used to signal to the treeReducer that the item is a container and so needs to be dealt with specially in duplication functions
            }
        }, {
            id: 'tabs_structure_group',
            title: 'Tabs Structure',
            description: 'Configure how the tabs module is structured',
            wrap: 'field_group',
            settingType: 'design',
            items: ['tab_location', 'tab_width', 'tab_vertical_padding', 'tab_horizontal_padding', 'tab_min_width', 'tab_nav_align']
        }, {
            id: 'tab_location',
            title: 'Tab Location',
            description: 'Position of the tabs',
            wrap: 'field_wrap',
            type: 'radio_toggle',
            options: [{
                name: 'Top',
                value: 'top'
            }, {
                name: 'Left',
                value: 'left'
            }]
        }, {
            id: 'tab_width',
            title: 'Tab Width',
            description: 'How wide each tab is',
            wrap: 'field_wrap',
            type: 'radio_toggle',
            options: [{
                name: 'Regular',
                value: 'regular'
            }, {
                name: 'Stretch',
                value: 'stretch'
            }, {
                name: 'Stacked',
                value: 'stacked'
            }]
        }, {
            id: 'tab_vertical_padding',
            title: 'Tab Vertical Padding',
            description: 'Space above and below tab text',
            wrap: 'field_wrap',
            type: 'slider_control',
            configuration: [{ units: 'px', min: 0, max: 100, step: 1 }, { units: 'em', min: 0, max: 10, step: 0.1 }]
        }, {
            id: 'tab_horizontal_padding',
            title: 'Tab Horizontal Padding',
            description: 'Space to the left and right of the tab text',
            wrap: 'field_wrap',
            type: 'slider_control',
            configuration: [{ units: 'px', min: 0, max: 100, step: 1 }, { units: 'em', min: 0, max: 10, step: 0.1 }],
            conditional: {
                type: 'or',
                conditions: [{
                    id: 'tab_width',
                    property: 'choice',
                    value: 'regular'
                }, {
                    id: 'tab_location',
                    property: 'choice',
                    value: 'left'
                }]
            }
        }, {
            id: 'tab_min_width',
            title: 'Tab Minimum Width',
            description: 'The minimum width of the tab navigation tabs',
            wrap: 'field_wrap',
            type: 'slider_control',
            configuration: [{ units: 'px', min: 40, max: 600, step: 10 }, { units: '%', min: 10, max: 60, step: 1 }],
            conditional: {
                type: 'or',
                conditions: [{
                    id: 'tab_width',
                    property: 'choice',
                    value: 'regular'
                }, {
                    id: 'tab_location',
                    property: 'choice',
                    value: 'left'
                }]
            }
        }, {
            id: 'tab_nav_align',
            title: 'Tab Navigation Align',
            description: '',
            wrap: 'field_wrap',
            type: 'radio_toggle',
            note: 'Must set a custom Tab Minimum Width',
            options: [{
                name: 'Left',
                value: 'left'
            }, {
                name: 'Center',
                value: 'center'
            }, {
                name: 'Right',
                value: 'right'
            }],
            conditional: {
                conditions: [{
                    id: 'tab_width',
                    property: 'choice',
                    value: 'regular'
                }, {
                    id: 'tab_location',
                    property: 'choice',
                    value: 'top'
                }]
            }
        }, {
            id: 'content_design_group',
            title: 'Content',
            description: 'Control the look of the content area of the tabs module',
            wrap: 'field_group',
            settingType: 'design',
            items: ['content_background_color', 'content_include_border_left', 'content_border_left_width', 'content_border_left_color']
        }, {
            id: 'content_background_color',
            title: 'Content Background Color',
            description: 'This is the color of the tab content background',
            wrap: 'field_wrap',
            type: 'color'
        }, {
            id: 'content_include_border_left',
            title: 'Include Content Border',
            description: 'Will show a border on the left of the content area',
            wrap: 'field_wrap',
            type: 'switch',
            conditional: {
                conditions: [{
                    id: 'tab_location',
                    property: 'choice',
                    value: 'left'
                }]
            }
        }, {
            id: 'content_border_left_width',
            title: 'Content Border Left Width',
            description: 'The width of the left content border, if included',
            wrap: 'field_wrap',
            type: 'slider_control',
            configuration: [{ units: 'px', min: 1, max: 10, step: 1 }],
            conditional: {
                conditions: [{
                    id: 'content_include_border_left',
                    property: 'yes',
                    value: 1
                }, {
                    id: 'tab_location',
                    property: 'choice',
                    value: 'left'
                }]
            }
        }, {
            id: 'content_border_left_color',
            title: 'Content Border Left Color',
            description: 'This is the color of the left content border',
            wrap: 'field_wrap',
            type: 'color',
            conditional: {
                conditions: [{
                    id: 'content_include_border_left',
                    property: 'yes',
                    value: 1
                }, {
                    id: 'tab_location',
                    property: 'choice',
                    value: 'left'
                }]
            }
        }, {
            id: 'tab_navigation_color_group',
            title: 'Tab Navigation Colors',
            description: 'Configure tab navigation background and text colors',
            wrap: 'field_group',
            settingType: 'design',
            items: ['tab_background_color', 'tab_background_hover_color', 'tab_background_active_color', 'tab_text_color', 'tab_text_hover_color', 'tab_text_active_color']
        }, {
            id: 'tab_background_color',
            title: 'Tab Background Color',
            description: 'This is the color of the tab navigation item background',
            wrap: 'field_wrap',
            type: 'color'
        }, {
            id: 'tab_background_hover_color',
            title: 'Tab Background Hover Color',
            description: 'This is the color of the tab navigation item background when it is being hovered over',
            wrap: 'field_wrap',
            type: 'color'
        }, {
            id: 'tab_background_active_color',
            title: 'Tab Background Active Color',
            description: 'This is the color of the tab navigation item background when it is the active tab',
            wrap: 'field_wrap',
            type: 'color'
        }, {
            id: 'tab_text_color',
            title: 'Tab Text Color',
            description: 'This is the color of the tab navigation item text',
            wrap: 'field_wrap',
            type: 'color'
        }, {
            id: 'tab_text_hover_color',
            title: 'Tab Text Hover Color',
            description: 'This is the color of the tab navigation item text when it is being hovered over',
            wrap: 'field_wrap',
            type: 'color'
        }, {
            id: 'tab_text_active_color',
            title: 'Tab Text Active Color',
            description: 'This is the color of the tab navigation item text when it is the active tab',
            wrap: 'field_wrap',
            type: 'color'
        }, {
            id: 'tab_border_group',
            title: 'Tab Navigation Border',
            description: 'Configure how the tab navigation border looks',
            wrap: 'field_group',
            settingType: 'design',
            items: ['tab_include_border_bottom', 'tab_border_bottom_width', 'tab_border_bottom_color', 'tab_border_bottom_hover_color', 'tab_border_bottom_active_color', 'tab_include_border_top', 'tab_border_top_width', 'tab_border_top_color', 'tab_border_top_hover_color', 'tab_border_top_active_color']
        }, {
            id: 'tab_include_border_bottom',
            title: 'Include Bottom Border',
            description: 'Will show a border on the bottom of the tab',
            wrap: 'field_wrap',
            type: 'switch'
        }, {
            id: 'tab_border_bottom_width',
            title: 'Tab Border Bottom Width',
            description: 'The width of the bottom border, if included',
            wrap: 'field_wrap',
            type: 'slider_control',
            configuration: [{ units: 'px', min: 1, max: 10, step: 1 }],
            conditional: {
                conditions: [{
                    id: 'tab_include_border_bottom',
                    property: 'yes',
                    value: 1
                }]
            }
        }, {
            id: 'tab_border_bottom_color',
            title: 'Tab Border Bottom Color',
            description: 'This is the color of the tab navigation item border',
            wrap: 'field_wrap',
            type: 'color',
            conditional: {
                conditions: [{
                    id: 'tab_include_border_bottom',
                    property: 'yes',
                    value: 1
                }]
            }
        }, {
            id: 'tab_border_bottom_hover_color',
            title: 'Tab Border Bottom Hover Color',
            description: 'This is the color of the tab navigation item border when it is being hovered over',
            wrap: 'field_wrap',
            type: 'color',
            conditional: {
                conditions: [{
                    id: 'tab_include_border_bottom',
                    property: 'yes',
                    value: 1
                }]
            }
        }, {
            id: 'tab_border_bottom_active_color',
            title: 'Tab Border Bottom Active Color',
            description: 'This is the color of the tab navigation item border when it is the active tab',
            wrap: 'field_wrap',
            type: 'color',
            conditional: {
                conditions: [{
                    id: 'tab_include_border_bottom',
                    property: 'yes',
                    value: 1
                }]
            }
        }, {
            id: 'tab_include_border_top',
            title: 'Include Top Border',
            description: 'Will show a border on the bottom of the tab',
            wrap: 'field_wrap',
            type: 'switch'
        }, {
            id: 'tab_border_top_width',
            title: 'Tab Border Top Width',
            description: 'The width of the bottom border, if included',
            wrap: 'field_wrap',
            type: 'slider_control',
            configuration: [{ units: 'px', min: 1, max: 10, step: 1 }],
            conditional: {
                conditions: [{
                    id: 'tab_include_border_top',
                    property: 'yes',
                    value: 1
                }]
            }
        }, {
            id: 'tab_border_top_color',
            title: 'Tab Border Top Color',
            description: 'This is the color of the tab navigation item border',
            wrap: 'field_wrap',
            type: 'color',
            conditional: {
                conditions: [{
                    id: 'tab_include_border_top',
                    property: 'yes',
                    value: 1
                }]
            }
        }, {
            id: 'tab_border_top_hover_color',
            title: 'Tab Border Top Hover Color',
            description: 'This is the color of the tab navigation item border when it is being hovered over',
            wrap: 'field_wrap',
            type: 'color',
            conditional: {
                conditions: [{
                    id: 'tab_include_border_top',
                    property: 'yes',
                    value: 1
                }]
            }
        }, {
            id: 'tab_border_top_active_color',
            title: 'Tab Border Top Active Color',
            description: 'This is the color of the tab navigation item border when it is the active tab',
            wrap: 'field_wrap',
            type: 'color',
            conditional: {
                conditions: [{
                    id: 'tab_include_border_top',
                    property: 'yes',
                    value: 1
                }]
            }
        }, {
            id: 'tab_navigation_font_group',
            title: 'Tab Navigation Font',
            description: 'Configure how the tab navigation looks',
            wrap: 'field_group',
            settingType: 'design',
            items: ['tab_font_size', 'tab_description_font_size', 'tab_bold']
        }, {
            id: 'tab_font_size',
            title: 'Name Font Size',
            description: 'The size of the font in the tabs',
            wrap: 'field_wrap',
            type: 'slider_control',
            configuration: [{ units: 'px', min: 8, max: 100, step: 1 }, { units: 'em', min: 0.8, max: 10, step: 0.1 }, { units: 'rem', min: 0.8, max: 10, step: 0.1 }]
        }, {
            id: 'tab_description_font_size',
            title: 'Description Font Size',
            description: 'The size of the font in the tabs',
            wrap: 'field_wrap',
            type: 'slider_control',
            configuration: [{ units: 'px', min: 8, max: 100, step: 1 }, { units: 'em', min: 0.5, max: 10, step: 0.1 }, { units: 'rem', min: 0.5, max: 10, step: 0.1 }]
        }, {
            id: 'tab_bold',
            title: 'Bold Tab',
            description: 'Make the text of the tab navigation bold',
            wrap: 'field_wrap',
            type: 'switch'
        }, {
            id: 'tab_navigation_icon_group',
            title: 'Tab Navigation Icon',
            description: 'Configure how to display icons in the navigation',
            wrap: 'field_group',
            settingType: 'design',
            items: ['tab_include_icon', 'tab_icon_position', 'tab_icon_font_size']
        }, {
            id: 'tab_include_icon',
            title: 'Include Icon',
            description: 'Will the selected icon in the tab navigation',
            wrap: 'field_wrap',
            type: 'switch'
        }, {
            id: 'tab_icon_position',
            title: 'Icon Position',
            description: 'Where to position the icon in the tab',
            wrap: 'field_wrap',
            type: 'radio_toggle',
            options: [{
                name: 'Top',
                value: 'top'
            }, {
                name: 'Left',
                value: 'left'
            }, {
                name: 'Right',
                value: 'right'
            }],
            conditional: {
                conditions: [{
                    id: 'tab_include_icon',
                    property: 'yes',
                    value: 1
                }]
            }
        }, {
            id: 'tab_icon_font_size',
            title: 'Icon Size',
            description: 'The size of the icons in the tabs',
            wrap: 'field_wrap',
            type: 'slider_control',
            configuration: [{ units: 'px', min: 10, max: 100, step: 1 }, { units: 'em', min: 1, max: 10, step: 0.1 }, { units: 'rem', min: 1, max: 10, step: 0.1 }],
            conditional: {
                conditions: [{
                    id: 'tab_include_icon',
                    property: 'yes',
                    value: 1
                }]
            }
        }],
        default: {
            tabs: {
                type: 'containers',
                items: [{
                    name: '[one]',
                    description: '',
                    id: _tree_reducer_functions2.default.generateId('cont')
                }, {
                    name: '[two]',
                    description: '',
                    id: _tree_reducer_functions2.default.generateId('cont')
                }]
            },
            tab_location: {
                choice: 'top'
            },
            tab_width: {
                choice: 'stretch'
            },
            tab_vertical_padding: {
                value: 1,
                units: 'em',
                useDefault: 'default'
            },
            tab_horizontal_padding: {
                value: 3,
                units: 'em',
                useDefault: 'default'
            },
            tab_min_width: {
                value: 300,
                units: 'px',
                useDefault: 'default'
            },
            tab_nav_align: {
                choice: 'left'
            },
            content_background_color: {
                color: 'default',
                customColor: '#ffffff'
            },
            content_include_border_left: {
                yes: 0
            },
            content_border_left_width: {
                value: 1,
                units: 'px',
                useDefault: 'default'
            },
            content_border_left_color: {
                color: 'primary',
                customColor: '#000000'
            },
            tab_background_color: {
                color: 'primary',
                customColor: '#000000'
            },
            tab_background_hover_color: {
                color: 'primary_light',
                customColor: '#000000'
            },
            tab_background_active_color: {
                color: 'primary_light',
                customColor: '#000000'
            },
            tab_text_color: {
                color: 'white',
                customColor: '#ffffff'
            },
            tab_text_hover_color: {
                color: 'white',
                customColor: '#ffffff'
            },
            tab_text_active_color: {
                color: 'white',
                customColor: '#ffffff'
            },
            tab_include_border_bottom: {
                yes: 0
            },
            tab_border_bottom_width: {
                value: 2,
                units: 'px',
                useDefault: 'default'
            },
            tab_border_bottom_color: {
                color: 'primary_dark',
                customColor: '#222222'
            },
            tab_border_bottom_hover_color: {
                color: 'primary_dark',
                customColor: '#222222'
            },
            tab_border_bottom_active_color: {
                color: 'primary_dark',
                customColor: '#222222'
            },
            tab_include_border_top: {
                yes: 0
            },
            tab_border_top_width: {
                value: 2,
                units: 'px',
                useDefault: 'default'
            },
            tab_border_top_color: {
                color: 'primary_dark',
                customColor: '#222222'
            },
            tab_border_top_hover_color: {
                color: 'primary_dark',
                customColor: '#222222'
            },
            tab_border_top_active_color: {
                color: 'primary_dark',
                customColor: '#222222'
            },
            tab_font_size: {
                value: 1.2,
                units: 'em',
                useDefault: 'default'
            },
            tab_description_font_size: {
                value: 1,
                units: 'em',
                useDefault: 'default'
            },
            tab_bold: {
                yes: 0
            },
            tab_include_icon: {
                yes: 1
            },
            tab_icon_position: {
                choice: 'top'
            },
            tab_icon_font_size: {
                value: 1.5,
                units: 'em',
                useDefault: 'default'
            }
        }
    };
};

var _tree_reducer_functions = __webpack_require__(28);

var _tree_reducer_functions2 = _interopRequireDefault(_tree_reducer_functions);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

;

/***/ }),

/***/ 380:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

exports.default = function () {
    return {
        fields: [{
            id: 'text',
            title: 'Body',
            description: 'Enter the content here',
            wrap: 'field_wrap',
            type: 'texteditor',
            settingType: 'content'
        }, {
            id: 'alignment_heading',
            title: 'Alignment',
            wrap: 'field_wrap',
            type: 'heading',
            inline: true,
            settingType: 'content'
        }, {
            id: 'alignment',
            title: 'fa-laptop',
            description: 'How to align the content. If you align through the text editor, that will overwrite this option.',
            wrap: 'field_wrap',
            type: 'radio_toggle',
            inline: true,
            settingType: 'content',
            options: [{
                name: 'fa-align-left',
                value: 'left'
            }, {
                name: 'fa-align-center',
                value: 'center'
            }, {
                name: 'fa-align-justify',
                value: 'justify'
            }, {
                name: 'fa-align-right',
                value: 'right'
            }],
            configuration: {
                flex: true
            }
        }, {
            id: 'mobile_alignment',
            title: 'fa-mobile',
            description: 'How to align the content in mobile. If you align through the text editor, that will overwrite this option.',
            wrap: 'field_wrap',
            type: 'radio_toggle',
            inline: true,
            settingType: 'content',
            options: [{
                name: 'fa-align-left',
                value: 'left'
            }, {
                name: 'fa-align-center',
                value: 'center'
            }, {
                name: 'fa-align-justify',
                value: 'justify'
            }, {
                name: 'fa-align-right',
                value: 'right'
            }],
            configuration: {
                flex: true
            }
        }],
        default: {
            text: {
                text: '<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vestibulum bibendum quis est ut facilisis.</p>'
            },
            alignment: {
                choice: 'left'
            },
            mobile_alignment: {
                choice: 'left'
            }
        }
    };
};

;

/***/ }),

/***/ 381:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _deepmerge = __webpack_require__(9);

var _deepmerge2 = _interopRequireDefault(_deepmerge);

var _settings_helpers = __webpack_require__(2);

var _settings_helpers2 = _interopRequireDefault(_settings_helpers);

var _module_helpers = __webpack_require__(12);

var _module_helpers2 = _interopRequireDefault(_module_helpers);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ImageHelpers = {
    get_classes: function get_classes(settings, object) {
        var skinId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

        settings = settings.linked;

        var moduleImage = ImageHelpers.getImageClassesModuleImage(settings, object);
        var imageCaption = ImageHelpers.getImageClassesImageCaption(settings, object);
        var imageInner = ImageHelpers.getImageClassesImageInner(settings, object);
        var imageHoverEffect = ImageHelpers.getImageClassesHover(settings, object);
        var imageImg = ImageHelpers.getImageClassesImg(settings, object);
        var imageBackground = ImageHelpers.getImageBackground(settings, object);

        return { moduleImage: moduleImage, imageCaption: imageCaption, imageInner: imageInner, imageHoverEffect: imageHoverEffect, imageImg: imageImg, imageBackground: imageBackground };
    },
    getImageClassesModuleImage: function getImageClassesModuleImage(settings, object) {
        var captionText = settings.caption.text ? settings.caption.text : settings.image.files != undefined && settings.image.files.caption != undefined ? settings.image.files.caption : '';

        var captionWrapClass = '';

        if (settings.show_caption.yes && captionText) {
            captionWrapClass = 'ocb-image-caption-' + settings.caption_position.choice;
        }

        return '' + captionWrapClass;
    },
    getImageClassesImageCaption: function getImageClassesImageCaption(settings, object) {
        var captionStyleCSS = _settings_helpers2.default.getClassesAndCSS(['color', 'padding', 'font'], settings, object.id, '.ocb-image-caption');
        var captionClasses = captionStyleCSS.classes;
        captionClasses += settings.caption_italicize.yes == false ? ' ocb-image-caption-noitalics' : '';
        captionClasses += ' text-' + settings.caption_align.choice;
        captionClasses += settings.caption_position.choice == 'custom' && settings.caption_reset_mobile.yes ? ' ocb-image-caption-custom-reset-mobile' : '';

        return captionClasses;
    },
    getImageClassesImageInner: function getImageClassesImageInner(settings, object) {
        var imageDisplayClass = '';

        if (settings.width_bleed.choice == 'full') {
            imageDisplayClass = 'ocb-bleed-full';
        } else {
            imageDisplayClass = 'ocb-image-display-' + settings.display.choice;
        }

        if ((settings.display.choice == 'square' || settings.display.choice == 'circle') && settings.size.useDefault == 'default') {
            imageDisplayClass += ' ocb-image-padding-top';
        }

        if (settings.image.files != undefined && settings.image.files.height != undefined && settings.image.files.width != undefined) {
            if (parseInt(settings.image.files.height) > parseInt(settings.image.files.width)) {
                imageDisplayClass += ' ocb-image-vertical';
            }
        }

        return '' + imageDisplayClass;
    },
    getImageClassesHover: function getImageClassesHover(settings, object) {
        var otherClasses = '';

        if (settings.border.useDefault == 'custom' && settings.border.color != 'default' && settings.border.color != 'custom') {
            otherClasses += ' ' + settings.border.color + '-border-color';
        }

        return otherClasses + ' ocb-' + settings.hover_effect.choice;
    },
    getImageClassesImg: function getImageClassesImg(settings, object) {
        var classes = _settings_helpers2.default.getFeaturedImageClass(settings.image, 'img');

        //Image is included as a background image in this case
        if (settings.width_bleed.choice != 'full' && settings.display.choice != 'normal') {
            classes += ' d-none';
        }

        return classes;
    },
    getImageBackground: function getImageBackground(settings, object) {
        var classes = '';

        //Image is included as a background image in this case
        if (settings.width_bleed.choice == 'full' || settings.display.choice == 'normal') {
            classes += 'd-none';
        }

        return classes;
    },
    get_css: function get_css(settings, object) {
        var skinId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

        settings = settings.linked;

        var imageCSS = ImageHelpers.getImageCSSImage(settings, object, skinId);
        var captionCSS = ImageHelpers.getImageCSSCaption(settings, object, skinId);
        var classReplaceCSS = ImageHelpers.getImageCSSClass(settings, object);

        return {
            additional: imageCSS + captionCSS,
            classReplace: classReplaceCSS
        };
    },
    getImageCSSImage: function getImageCSSImage(settings, object) {
        var skinId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

        var wrapId = skinId ? '.' + skinId : object.id;

        return ImageHelpers.getImageCSS(settings, wrapId, '.ocb-image-inner', '.ocb-image-hover-effect', { includeBackgroundImage: false, returnType: 'css' });
    },


    /**
     * Will get CSS for an image based on some standard options
     *
     * @param theSettings - the settings from the module
     * @param id - the Module ID
     * @param wrapClass - the class for the div around the image
     * @param imgClass - the class on the image
     * @param options - additional options to control the return
     * @returns {*}
     */
    getImageCSS: function getImageCSS(theSettings, id, wrapClass, imgClass) {
        var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};

        var newSettings = {};
        var settings = JSON.parse(JSON.stringify(theSettings));

        for (var setting in settings) {
            if (!settings.hasOwnProperty(setting)) continue;

            var newSettingName = setting.replace('image_', '');
            newSettings[newSettingName] = settings[setting];
        }

        //Defaults - should match the defaults in the image module
        settings = (0, _deepmerge2.default)(ImageHelpers.getImageDefault(), newSettings);

        var url = settings.image.url;
        var align = settings.align.choice;

        var additionalCSS = '';
        var additionalCSSImgProps = {};
        var additionalCSSWrapProps = {};

        if (settings.width_bleed != 'full') {

            if (settings.border_radius.useDefault == 'custom') {
                var borderRadius = settings.border_radius.value + settings.border_radius.units;
                additionalCSSImgProps.borderRadius = borderRadius;
                additionalCSSWrapProps.borderRadius = borderRadius;
            }

            if (settings.display.choice == 'normal' && settings.max_width.useDefault == 'custom') {

                additionalCSSWrapProps.maxWidth = settings.max_width.value + settings.max_width.units;
            } else if ((settings.display.choice == 'square' || settings.display.choice == 'circle') && settings.size.useDefault == 'custom') {

                var size = settings.size.value + settings.size.units;
                additionalCSSWrapProps.width = size;
                additionalCSSWrapProps.height = size;
                additionalCSSImgProps.width = size;
                additionalCSSImgProps.height = size;

                //additionalCSS += SettingsHelpers.wrapCSSProperties(id, '.ocb-image-link', {width: size, height: size});
            } else if (settings.display.choice == 'height') {

                var height = settings.height.value + settings.height.units;
                var width = settings.width.value + settings.width.units;
                if (settings.height.useDefault == 'custom') additionalCSSWrapProps.height = height;
                if (settings.height.useDefault == 'custom') additionalCSSImgProps.height = height;
                if (settings.width.useDefault == 'custom') additionalCSSWrapProps.width = width;
                if (settings.width.useDefault == 'custom') additionalCSSImgProps.width = width;
            }

            //Translation percentage is dependent on the aspect ratio of the image so apply a formula here to center the image
            /*if( settings.display.choice == 'square' || settings.display.choice == 'circle' ){
                if( settings.image.files != undefined && settings.image.files.height != undefined && settings.image.files.width != undefined ){
                    let fileHeight = parseInt(settings.image.files.height);
                    let fileWidth = parseInt(settings.image.files.width);
                    let translateValue = '25';
                    if( fileHeight > fileWidth ){
                        translateValue = Math.round( ( 1 - ( fileWidth / fileHeight ) ) / 2 * 100 );
                        additionalCSS += SettingsHelpers.wrapCSSProperties(id, '.ocb-image-img', {transform: `translate(0, -${translateValue}%)`});
                    } else if( fileWidth > fileHeight ){
                        translateValue = Math.round( ( 1 - ( fileHeight / fileWidth ) ) / 2 * 100 );
                        additionalCSS += SettingsHelpers.wrapCSSProperties(id, '.ocb-image-img', {transform: `translate(-${translateValue}%)`});
                    } else {
                        additionalCSS += SettingsHelpers.wrapCSSProperties(id, '.ocb-image-img', {transform: `translate(0)`});
                    }
                }
            }*/

            if (settings.max_width.useDefault == 'custom' && settings.display.choice == 'normal') {
                if (align == 'center') {
                    additionalCSSWrapProps.margin = '0 auto';
                } else if (align == 'right') {
                    additionalCSSWrapProps.margin = '0 0 0 auto';
                }
            }

            if (settings.display.choice == 'circle') {
                additionalCSSImgProps.borderRadius = '50%';
                additionalCSSWrapProps.borderRadius = '50%';
            }
        }

        if (settings.border.useDefault == 'custom') {
            var sB = settings.border;
            var bU = sB.units;
            additionalCSSImgProps.borderWidth = sB.top + bU + ' ' + sB.right + bU + ' ' + sB.bottom + bU + ' ' + sB.left + bU;
            additionalCSSImgProps.borderStyle = sB.type;
            additionalCSSImgProps.borderColor = sB.color;
        }

        if (settings.box_shadow.useDefault == 'custom') {
            var bS = settings.box_shadow;
            additionalCSSImgProps.boxShadow = bS.horizontal + 'px ' + bS.vertical + 'px ' + bS.blur + 'px ' + bS.spread + 'px ' + bS.color + ';';
        }

        additionalCSS += _settings_helpers2.default.wrapCSSProperties(id, wrapClass, additionalCSSWrapProps);
        additionalCSS += _settings_helpers2.default.wrapCSSProperties(id, imgClass, additionalCSSImgProps);

        if (options.returnType != undefined && options.returnType == 'css') return additionalCSS;

        if (additionalCSS) return _settings_helpers2.default.wrapCSSInStyleTag(additionalCSS, id, wrapClass);

        return null;
    },

    getImageCSSCaption: function getImageCSSCaption(settings, object) {
        var skinId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

        var captionText = settings.caption.text ? settings.caption.text : settings.image.files != undefined && settings.image.files.caption != undefined ? settings.image.files.caption : '';

        var wrapId = skinId ? '.' + skinId : object.id;

        if (settings.show_caption.yes && captionText) {

            var customCaption = {};
            var customCaptionCSS = '';
            if (settings.caption_position.choice == 'custom') {
                if (settings.caption_rotation.useDefault == 'custom') customCaption.transform = 'rotate(' + settings.caption_rotation.value + 'deg)';
                if (settings.caption_width.useDefault == 'custom') customCaption.width = settings.caption_width.value + settings.caption_width.units;
                if (settings.caption_height.useDefault == 'custom') customCaption.height = settings.caption_height.value + settings.caption_height.units;
                if (settings.caption_position_top.useDefault == 'custom') customCaption.top = settings.caption_position_top.value + settings.caption_position_top.units;
                if (settings.caption_position_left.useDefault == 'custom') customCaption.left = settings.caption_position_left.value + settings.caption_position_left.units;
                if (settings.caption_position_bottom.useDefault == 'custom') {
                    customCaption.top = 'initial';
                    customCaption.bottom = settings.caption_position_bottom.value + settings.caption_position_bottom.units;
                }
                if (settings.caption_position_right.useDefault == 'custom') {
                    customCaption.left = 'initial';
                    customCaption.right = settings.caption_position_right.value + settings.caption_position_right.units;
                }
                customCaptionCSS = _settings_helpers2.default.wrapCSSProperties(wrapId, '.ocb-image-caption', customCaption);
            }

            if (settings.border_radius.useDefault == 'custom') {
                customCaptionCSS += _settings_helpers2.default.wrapCSSProperty(wrapId, '.ocb-image-caption', 'border-radius', settings.border_radius.value + settings.border_radius.units);
            } else if (settings.display.choice == 'circle') {
                customCaptionCSS += _settings_helpers2.default.wrapCSSProperty(wrapId, '.ocb-image-caption', 'border-radius', '50%');
            }

            var captionStyleCSS = _settings_helpers2.default.getClassesAndCSS(['color', 'padding', 'font'], settings, wrapId, '.ocb-image-caption', false, '', '', '', customCaptionCSS, { returnType: 'css' });

            return captionStyleCSS.styleTag;
        }

        return '';
    },
    getImageCSSClass: function getImageCSSClass(settings, object) {
        var css = '';
        var moduleImage = '';
        var imageCaption = '';
        var imageCaptionAdditional = '';
        var imageInner = '';
        var imageInnerAdditional = '';
        var imageHoverEffect = '';
        var imageImg = '';
        var id = object.id;

        //Image Caption
        imageCaption += _module_helpers2.default.getColorCSS(settings, 'caption').style;
        imageCaption += settings.caption_italicize.yes == false ? 'font-style:inherit;' : '';
        imageCaption += 'text-align:' + settings.caption_align.choice + ';';

        if (settings.caption_position.choice == 'custom' && settings.caption_reset_mobile.yes) {
            imageCaptionAdditional += '@media (max-width: 767px) {\n                ' + id + ' .ocb-image-caption {\n                  position: relative !important;\n                  transform: none !important;\n                  width: 100% !important;\n                  height: initial !important;\n                  top: initial !important;\n                  right: initial !important;\n                  bottom: initial !important;\n                  left: initial !important;\n                }\n            }';
        }

        css += _module_helpers2.default.prepareClassCSS(imageCaption, '.ocb-image-caption', id, imageCaptionAdditional);

        //Image Inner
        if (settings.width_bleed.choice == 'full') {
            imageInner += 'max-width: 100vw;position: relative;width: 100vw;left: 50%;right: 50%;margin-left: -50vw;margin-right: -50vw;';
        } else {
            switch (settings.display.choice) {
                case 'square':
                case 'circle':
                    imageInner += 'width: 250px; height: 250px; position: relative;';
                    imageInnerAdditional += _module_helpers2.default.prepareClassCSS('width: 250px;height: 250px;', '.ocb-image-link', id);
                    imageInnerAdditional += _module_helpers2.default.prepareClassCSS('max-width: 9999px;height: 100%;object-fit: cover;transform: translate(-25%);', 'img.ocb-image-img', id);
                    imageInnerAdditional += _module_helpers2.default.prepareClassCSS('max-width: 9999px;height: initial;width: 100%;object-fit: cover;transform: translate(0,-25%);', '.ocb-image-vertical img.ocb-image-img', id);
                    break;
            }
        }

        if (settings.image.files != undefined && settings.image.files.height != undefined && settings.image.files.width != undefined) {
            if (parseInt(settings.image.files.height) > parseInt(settings.image.files.width)) {
                imageInnerAdditional += _module_helpers2.default.prepareClassCSS('max-width: 9999px;height: initial;width: 100%;object-fit: cover;transform: translate(0,-25%);', 'img.ocb-image-img', id);
            }
        }

        css += _module_helpers2.default.prepareClassCSS(imageCaption, '.ocb-image-inner', id, imageInnerAdditional);

        return css;
    },
    getImageDefault: function getImageDefault() {
        return {
            image: {
                url: 'https://s3-us-west-2.amazonaws.com/s.cdpn.io/142996/slider-2.jpg', //https://cfl.dropboxstatic.com/static/images/business/homepage/screenshots/tiburon/scale-business-growth-vflR2-zZ7.png',
                object: {},
                size: 'full'
            },
            width_bleed: {
                choice: 'none'
            },
            align: {
                choice: 'left'
            },
            border: {
                useDefault: 'default',
                units: 'px',
                top: 1,
                left: 1,
                right: 1,
                bottom: 1,
                type: 'solid',
                color: 'default'
            },
            box_shadow: {
                useDefault: 'default',
                horizontal: 0,
                vertical: 0,
                blur: 20,
                spread: 5,
                color: 'rgba(151,151,151,1)'
            },
            border_radius: {
                value: 0,
                units: '%',
                useDefault: 'default'
            },
            display: {
                choice: 'normal'
            },
            max_width: {
                value: 700,
                units: 'px',
                useDefault: 'default'
            },
            size: {
                value: 250,
                units: 'px',
                useDefault: 'default'
            },
            height: {
                value: 250,
                units: 'px',
                useDefault: 'default'
            },
            width: {
                value: 250,
                units: 'px',
                useDefault: 'default'
            },
            vertical_align: {
                value: 50,
                units: '%',
                useDefault: 'default'
            },
            horizontal_align: {
                value: 50,
                units: '%',
                useDefault: 'default'
            }
        };
    }
}; //import OAPI from '../../../../shared/helpers/api_helpers';
exports.default = ImageHelpers;

/***/ }),

/***/ 382:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _tree_reducer_functions = __webpack_require__(28);

var _tree_reducer_functions2 = _interopRequireDefault(_tree_reducer_functions);

var _immutabilityHelper = __webpack_require__(41);

var _immutabilityHelper2 = _interopRequireDefault(_immutabilityHelper);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var UndoRedoStateFunctions = {

    undo: function undo(state) {
        var currentIndex = state.currentIndex;
        return (0, _immutabilityHelper2.default)(state, {
            currentIndex: {
                $set: currentIndex + 1
            }
        });
    },

    redo: function redo(state) {
        var currentIndex = state.currentIndex;
        return (0, _immutabilityHelper2.default)(state, {
            currentIndex: {
                $set: currentIndex - 1
            }
        });
    },

    cleanStates: function cleanStates(state, theState, theSiteState, message, when, object) {
        var currentIndex = state.currentIndex;
        return (0, _immutabilityHelper2.default)(state, {
            states: {
                $splice: [[0, currentIndex, {
                    state: theState,
                    siteState: theSiteState,
                    message: message,
                    when: when,
                    object: object
                }]]
            },
            currentIndex: {
                $set: 0
            }
        });
    },


    add: function add(state, theState, theSiteState, message, when, object) {
        //If we're adding, there should be no more redo
        //So we have to delete all of the indices lower than currentIndex
        if (state.currentIndex > 0) {
            return UndoRedoStateFunctions.cleanStates(state, theState, theSiteState, message, when, object);
        }

        if (message == 'page loaded') {
            //Then set the current index to 0
            return (0, _immutabilityHelper2.default)(state, {
                states: {
                    $set: [{
                        state: JSON.parse(JSON.stringify(theState)),
                        siteState: theSiteState,
                        message: message,
                        when: when,
                        object: object
                    }]
                },
                currentIndex: {
                    $set: 0
                }
            });
        } else {
            //Then set the current index to 0
            return (0, _immutabilityHelper2.default)(state, {
                states: {
                    $unshift: [{
                        state: JSON.parse(JSON.stringify(theState)),
                        siteState: theSiteState,
                        message: message,
                        when: when,
                        object: object
                    }]
                },
                currentIndex: {
                    $set: 0
                }
            });
        }
    },

    goto: function goto(state, stateIndex) {},

    replaceAllGlobalInstances: function replaceAllGlobalInstances(state, object) {
        return _extends({}, state, {
            states: state.states.map(function (theState) {
                theState.state = UndoRedoStateFunctions.replaceGlobal(theState.state, object);
                return theState;
            })
        });
    },

    replaceGlobal: function replaceGlobal(theState, object) {
        if (theState.id == object.id) {
            object = JSON.parse(JSON.stringify(object));
            return (0, _immutabilityHelper2.default)(theState, {
                standard: { $set: object.standard },
                settings: { $set: object.settings },
                items: { $set: _tree_reducer_functions2.default._recursiveChildTemplateNewIds(object).items }
            });
        } else if (theState.items != undefined && theState.items.length) {
            return _extends({}, theState, {
                items: theState.items.map(function (item) {
                    return UndoRedoStateFunctions.replaceGlobal(item, object);
                })
            });
        }

        return theState;
    },

    saveHappened: function saveHappened(state) {
        return (0, _immutabilityHelper2.default)(state, { lastSaveStatesNumber: { $set: state.states.length } });
    },

    /**
     * Adds a new history with a note of restoration
     * Happens simultaneously with the closing of the history panel
     *
     * @param state
     * @param stateIndex
     */
    restore: function restore(state, stateIndex) {},

    doAction: function doAction(state, action) {
        switch (action.type) {
            case 'UNDO_REDO_UNDO':
                window.ocbDoNeededInitializePlugins();
                return UndoRedoStateFunctions.undo(state);
                break;
            case 'UNDO_REDO_REDO':
                window.ocbDoNeededInitializePlugins();
                return UndoRedoStateFunctions.redo(state);
                break;
            case 'UNDO_REDO_ADD':
                return UndoRedoStateFunctions.add(state, action.theState, action.theSiteState, action.message, action.when, action.object);
                break;
            case 'UNDO_REDO_GOTO':
                return UndoRedoStateFunctions.goto(state, action.stateIndex);
                break;
            case 'UNDO_REDO_RESTORE':
                return UndoRedoStateFunctions.restore(state, action.stateIndex);
                break;
            case 'UNDO_REDO_REPLACE_GLOBAL':
                return UndoRedoStateFunctions.replaceAllGlobalInstances(state, action.object);
                break;
            case 'UNDO_REDO_SAVE_HAPPENED':
                return UndoRedoStateFunctions.saveHappened(state);
                break;
        }

        return state;
    }
};

exports.default = UndoRedoStateFunctions;

/***/ }),

/***/ 41:
/***/ (function(module, exports, __webpack_require__) {

var invariant = __webpack_require__(31);

var hasOwnProperty = Object.prototype.hasOwnProperty;
var splice = Array.prototype.splice;

var assign = Object.assign || function assign(target, source) {
  var keys = getAllKeys(source);
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    if (hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
  return target;
};

var getAllKeys = typeof Object.getOwnPropertySymbols === 'function' ?
  function(obj) { return Object.keys(obj).concat(Object.getOwnPropertySymbols(obj)) } :
  function(obj) { return Object.keys(obj) };

function copy(object) {
  if (object instanceof Array) {
    return object.slice();
  } else if (object && typeof object === 'object') {
    return assign(new object.constructor(), object);
  } else {
    return object;
  }
}

function newContext() {
  var commands = assign({}, defaultCommands);
  update.extend = function(directive, fn) {
    commands[directive] = fn;
  };

  return update;

  function update(object, spec) {
    if (!(Array.isArray(object) && Array.isArray(spec))) {
      invariant(
        !Array.isArray(spec),
        'update(): You provided an invalid spec to update(). The spec may ' +
        'not contain an array except as the value of $set, $push, $unshift, ' +
        '$splice or any custom command allowing an array value.'
      );
    }

    invariant(
      typeof spec === 'object' && spec !== null,
      'update(): You provided an invalid spec to update(). The spec and ' +
      'every included key path must be plain objects containing one of the ' +
      'following commands: %s.',
      Object.keys(commands).join(', ')
    );

    var nextObject = object;
    var specKeys = getAllKeys(spec);
    var index, key;
    for (index = 0; index < specKeys.length; index++) {
      key = specKeys[index];
      if (hasOwnProperty.call(commands, key)) {
        nextObject = commands[key](spec[key], nextObject, spec, object);
      } else {
        var nextValueForKey = update(object[key], spec[key]);
        if (nextValueForKey !== nextObject[key]) {
          if (nextObject === object) {
            nextObject = copy(object);
          }
          nextObject[key] = nextValueForKey;
        }
      }
    }
    return nextObject;
  }

}

var defaultCommands = {
  $push: function(value, original, spec) {
    invariantPushAndUnshift(original, spec, '$push');
    return original.concat(value);
  },
  $unshift: function(value, original, spec) {
    invariantPushAndUnshift(original, spec, '$unshift');
    return value.concat(original);
  },
  $splice: function(value, nextObject, spec, object) {
    var originalValue = nextObject === object ? copy(object) : nextObject;
    invariantSplices(originalValue, spec);
    value.forEach(function(args) {
      invariantSplice(args);
      splice.apply(originalValue, args);
    });
    return originalValue;
  },
  $set: function(value, original, spec) {
    invariantSet(spec);
    return value;
  },
  $unset: function(value, nextObject, spec, object) {
    invariant(
      Array.isArray(value),
      'update(): expected spec of $unset to be an array; got %s. ' +
      'Did you forget to wrap the key(s) in an array?',
      value
    );
    var originalValue = nextObject;
    for (var i = 0; i < value.length; i++) {
      var key = value[i];
      if (Object.hasOwnProperty.call(originalValue, key)) {
        originalValue = nextObject === object ? copy(object) : nextObject;
        delete originalValue[key];
      }
    }
    return originalValue;
  },
  $merge: function(value, nextObject, spec, object) {
    var originalValue = nextObject === object ? copy(object) : nextObject;
    invariantMerge(originalValue, value);
    getAllKeys(value).forEach(function(key) {
      originalValue[key] = value[key];
    });
    return originalValue;
  },
  $apply: function(value, original) {
    invariantApply(value);
    return value(original);
  }
};

module.exports = newContext();
module.exports.newContext = newContext;

// invariants

function invariantPushAndUnshift(value, spec, command) {
  invariant(
    Array.isArray(value),
    'update(): expected target of %s to be an array; got %s.',
    command,
    value
  );
  var specValue = spec[command];
  invariant(
    Array.isArray(specValue),
    'update(): expected spec of %s to be an array; got %s. ' +
    'Did you forget to wrap your parameter in an array?',
    command,
    specValue
  );
}

function invariantSplices(value, spec) {
  invariant(
    Array.isArray(value),
    'Expected $splice target to be an array; got %s',
    value
  );
  invariantSplice(spec['$splice']);
}

function invariantSplice(value) {
  invariant(
    Array.isArray(value),
    'update(): expected spec of $splice to be an array of arrays; got %s. ' +
    'Did you forget to wrap your parameters in an array?',
    value
  );
}

function invariantApply(fn) {
  invariant(
    typeof fn === 'function',
    'update(): expected spec of $apply to be a function; got %s.',
    fn
  );
}

function invariantSet(spec) {
  invariant(
    Object.keys(spec).length === 1,
    'Cannot have more than one key in an object with $set'
  );
}

function invariantMerge(target, specValue) {
  invariant(
    specValue && typeof specValue === 'object',
    'update(): $merge expects a spec of type \'object\'; got %s',
    specValue
  );
  invariant(
    target && typeof target === 'object',
    'update(): $merge expects a target of type \'object\'; got %s',
    target
  );
}


/***/ }),

/***/ 44:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _deepmerge = __webpack_require__(9);

var _deepmerge2 = _interopRequireDefault(_deepmerge);

var _settings_helpers = __webpack_require__(2);

var _settings_helpers2 = _interopRequireDefault(_settings_helpers);

var _module_helpers = __webpack_require__(12);

var _module_helpers2 = _interopRequireDefault(_module_helpers);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var IconItemHelpers = {
    get_icon_item_style: function get_icon_item_style(settings, object) {
        var skinId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;


        var newSettings = Array.isArray(settings) && !settings.length ? IconItemHelpers.getDefaultItemIcon() : (0, _deepmerge2.default)(IconItemHelpers.getDefaultItemIcon(), settings);

        var id = skinId ? skinId : object.id;
        var additionalStyle = '';
        if (newSettings.icon_padding != undefined) {
            if (newSettings.icon_padding.useDefault == 'custom') {
                var widthHeight = 2 * newSettings.icon_padding.value;
                additionalStyle += 'width:' + widthHeight + newSettings.icon_padding.units + ';';
                additionalStyle += 'height:' + widthHeight + newSettings.icon_padding.units + ';';
            }
        }

        var classesAndCSS = _settings_helpers2.default.getClassesAndCSS(['color', 'border', 'border-radius', 'font'], newSettings, id, '.ocb-item-icon', 'icon', additionalStyle, '', '', '', { returnType: 'css' });

        return {
            classes: { itemIcon: classesAndCSS.classes },
            css: classesAndCSS.styleTag
        };
    },
    getDefaultItemIcon: function getDefaultItemIcon() {
        return {
            icon_font_size: {
                value: 1,
                units: 'em',
                useDefault: 'default'
            },
            icon_background_color: {
                color: 'default'
            },
            icon_color: {
                color: 'default'
            },
            icon_border: {
                top: 1,
                left: 1,
                bottom: 1,
                right: 1,
                units: 'px',
                useDefault: 'default',
                type: 'solid',
                color: 'default',
                customColor: '#000000'
            },
            icon_padding: {
                value: 15,
                units: 'px',
                useDefault: 'default'
            },
            icon_border_radius: {
                value: 0,
                units: '%',
                useDefault: 'default'
            }
        };
    }
}; //import OAPI from '../../../../shared/helpers/api_helpers';
exports.default = IconItemHelpers;

/***/ }),

/***/ 48:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _deepmerge = __webpack_require__(9);

var _deepmerge2 = _interopRequireDefault(_deepmerge);

var _settings_helpers = __webpack_require__(2);

var _settings_helpers2 = _interopRequireDefault(_settings_helpers);

var _item_icon = __webpack_require__(64);

var _item_icon2 = _interopRequireDefault(_item_icon);

var _button_item_helpers = __webpack_require__(63);

var _button_item_helpers2 = _interopRequireDefault(_button_item_helpers);

var _reactRedux = __webpack_require__(5);

var _index = __webpack_require__(8);

var _redux = __webpack_require__(7);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ItemButton = function (_Component) {
    _inherits(ItemButton, _Component);

    function ItemButton(props) {
        _classCallCheck(this, ItemButton);

        var _this = _possibleConstructorReturn(this, (ItemButton.__proto__ || Object.getPrototypeOf(ItemButton)).call(this, props));

        _this.state = { inlineEdit: false };

        _this.allowTextEdit = _this.allowTextEdit.bind(_this);
        return _this;
    }

    _createClass(ItemButton, [{
        key: 'getStyle',
        value: function getStyle(settings) {
            return _settings_helpers2.default.getButtonStyle(settings);
        }

        /**
         * This is affected by code in src/index.js
         *
         * @param e
         */

    }, {
        key: 'allowTextEdit',
        value: function allowTextEdit(e) {
            //WARNING: This is affected by code in src/index.js
            e.preventDefault();
            e.stopPropagation();
            e.nativeEvent.stopImmediatePropagation();

            if (this.state.inlineEdit == false && !this.props.treeProps.settings.settingsActive && OCBGlobalSettings.permissions.edit_modules_inline) {
                this.setState({ inlineEdit: true });
            }
        }
    }, {
        key: 'finishTextEdit',
        value: function finishTextEdit(e) {
            var _this2 = this;

            var force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

            if (e.type == 'keypress' && e.charCode == 13 || e.type == 'blur') {
                if (e.type != 'blur') {
                    e.preventDefault();
                    window.getSelection().removeAllRanges();
                    jQuery(e.target).blur();
                }

                //Blur is fired even on an enter keypress, so only act on blur to make sure that we're only doing this once
                if (this.state.inlineEdit && e.type == 'blur') {
                    //Inelegant way of making sure that the new state is pushed onto undoRedo
                    setTimeout(function () {
                        return _this2.props.objectUpdated(_this2.props.object);
                    }, 500);

                    this.setState({ inlineEdit: false });
                    this.props.update(e.target.textContent, this.props.index);
                }
            }
        }

        /**
         *
         *
         * @returns {XML}
         */

    }, {
        key: 'render',
        value: function render() {
            var _this3 = this;

            var settings = this.props.settings;
            var newSettings = {};

            //If both text and button_text are defined, button_text can get overwritten by text so let's delete text
            if (settings.text != undefined && settings.button_text != undefined) {
                delete settings.text;
            }

            for (var setting in settings) {
                if (!settings.hasOwnProperty(setting)) continue;

                var newSettingName = setting.replace('button_', '');
                newSettings[newSettingName] = settings[setting];
            }

            settings = (0, _deepmerge2.default)(settings, newSettings);
            settings = (0, _deepmerge2.default)(_button_item_helpers2.default.getDefaultItemButton(), settings);

            var classes = '';
            var inputOuterClasses = '';
            var inputInnerClasses = '';
            var parentClasses = '';
            var icon = null;
            var iconRight = null;
            var iconLeft = null;
            var styleTag = null;

            var url = this.props.url != undefined ? this.props.url : settings.link.url;

            parentClasses += settings.add_icon.yes ? ' ocb-has-icon' : '';
            parentClasses += settings.add_icon.yes ? ' ocb-icon-' + settings.icon_alignment.choice : '';
            parentClasses += ' text-' + settings.mobile_alignment.choice;
            parentClasses += ' text-md-' + settings.alignment.choice;

            inputOuterClasses += settings.mobile_alignment.choice == 'stretch' ? ' d-flex' : ' d-inline-flex';
            inputOuterClasses += settings.alignment.choice == 'stretch' ? ' d-md-flex' : ' d-md-inline-flex';
            inputOuterClasses += settings.alignment.choice == 'stretch' && settings.add_icon.yes ? ' justify-content-center' : '';
            inputOuterClasses += settings.text.text ? '' : ' ocb-button-no-text';

            if (settings.add_icon.yes) {
                icon = _react2.default.createElement(
                    'span',
                    { className: 'ocb-button-icon' },
                    _react2.default.createElement(_item_icon2.default, { icon: settings.icon.icon, settings: settings, objectId: this.props.objectId, classesCSS: this.props.classesCSS })
                );
                //icon = <i className={ `ocb-button-icon fa ${settings.icon.icon}` } />;
                if (settings.icon_alignment.choice == 'right') {
                    iconRight = icon;
                } else {
                    iconLeft = icon;
                }
            } else {
                inputOuterClasses += ' justify-content-center';
            }

            var onEnterPress = null;

            if (this.state.inlineEdit) {
                onEnterPress = function onEnterPress(e) {
                    return _this3.finishTextEdit(e);
                };
            }

            classes = inputInnerClasses + inputOuterClasses;
            classes += this.props.classes != undefined ? ' ' + this.props.classes : '';
            var dataAtt = this.props.data != undefined ? this.props.data : {};

            if (this.props.newWindow != undefined && this.props.newWindow || this.props.settings.link != undefined && this.props.settings.link.newWindow != undefined && this.props.settings.link.newWindow) {
                dataAtt.target = '_blank';
                dataAtt.rel = 'noopener noreferrer';
            }

            //Get settings from the skin if a skin is active
            var classesAndCSS = this.props.classesCSS != undefined && this.props.classesCSS ? this.props.classesCSS : false;

            //If there's nothing going on with classesAndCSS (like with modules where there is no Helper yet) then we need to get custom stuff
            if (classesAndCSS && Object.getOwnPropertyNames(classesAndCSS.classes).length == 0 && !classesAndCSS.css) {
                classesAndCSS = false;
            }

            var skinId = this.props.skinId != undefined ? this.props.skinId : this.props.object != undefined ? this.props.object.skinId : false;
            var buttonSkinId = this.props.buttonSkinId != undefined && this.props.buttonSkinId ? this.props.buttonSkinId : this.props.settings.button_skin != undefined && this.props.settings.button_skin.choice != undefined && this.props.settings.button_skin.choice.startsWith('skin') ? this.props.settings.button_skin.choice : false;

            var object = this.props.object != undefined ? this.props.object : { id: this.props.objectId };

            //If this isn't a Button module, then we may be using a button skin with its own skinId
            if (buttonSkinId && this.props.skinState[buttonSkinId] != undefined) {
                classesAndCSS = {
                    classes: this.props.skinState[buttonSkinId].classes,
                    css: null
                };
            } else if (skinId && this.props.skinState[skinId] != undefined) {
                classesAndCSS = {
                    classes: this.props.skinState[skinId].classes,
                    css: null
                };
            } else {
                if (!classesAndCSS) {
                    classesAndCSS = _button_item_helpers2.default.get_button_item_style(this.props.settings, object, skinId, this.props.type);
                    styleTag = _settings_helpers2.default.wrapCSSInStyleTag(classesAndCSS.css, object.id, '.ocb-item-icon');
                }
            }

            var classUses = this.props.uses != undefined && this.props.uses ? this.props.uses : '';

            var buttonText = null;
            var theButton = null;

            if (this.props.type == 'span') {
                if (settings.text.text) {
                    buttonText = _react2.default.createElement(
                        'span',
                        {
                            suppressContentEditableWarning: true,
                            contentEditable: this.props.isContentEditable != undefined ? this.props.isContentEditable : true,
                            className: 'ocb-button-text' },
                        settings.text.text
                    );
                }

                theButton = _react2.default.createElement(
                    'span',
                    _extends({
                        className: 'ocb-button align-items-center ' + classes + ' ' + classesAndCSS.classes.buttonCombinedClasses + classUses,
                        onKeyPress: onEnterPress,
                        onBlur: onEnterPress,
                        onClick: function onClick(e) {
                            return _this3.allowTextEdit(e);
                        }
                    }, dataAtt),
                    iconLeft,
                    buttonText,
                    iconRight
                );
            } else if (this.props.type == 'submit') {
                theButton = _react2.default.createElement(
                    'span',
                    { className: 'ocb-button ' + classes + ' ' + classesAndCSS.classes.buttonInputOuterClasses + classUses },
                    _react2.default.createElement('input', {
                        className: 'ocb-button-input ' + classesAndCSS.classes.buttonInputInnerClasses + classUses,
                        type: 'submit',
                        value: settings.text.text
                    })
                );
            } else if (this.props.type == 'button_submit') {
                if (settings.text.text) {
                    buttonText = _react2.default.createElement(
                        'span',
                        { className: 'ocb-button-text' },
                        settings.text.text
                    );
                }

                theButton = _react2.default.createElement(
                    'button',
                    { className: 'ocb-button ocb-button-submit align-items-center ' + classesAndCSS.classes.buttonCombinedClasses + classUses },
                    iconLeft,
                    buttonText,
                    iconRight
                );
            } else {
                if (settings.text.text) {
                    buttonText = _react2.default.createElement(
                        'span',
                        {
                            suppressContentEditableWarning: true,
                            contentEditable: this.props.isContentEditable != undefined ? this.props.isContentEditable : true,
                            className: 'ocb-button-text' },
                        settings.text.text
                    );
                }

                theButton = _react2.default.createElement(
                    'a',
                    _extends({
                        className: 'ocb-button align-items-center ' + classes + ' ' + classesAndCSS.classes.buttonCombinedClasses + classUses,
                        onKeyPress: onEnterPress,
                        onBlur: onEnterPress,
                        onClick: function onClick(e) {
                            return _this3.allowTextEdit(e);
                        },
                        href: url
                    }, dataAtt),
                    iconLeft,
                    buttonText,
                    iconRight
                );
            }

            //Either the skinId added by a skin from a parent module like Features, or the skinId of the button, or nothing if a skin isn't being used
            var buttonItemWrapClass = this.props.classesCSS != undefined && this.props.classesCSS.classes != undefined && this.props.classesCSS.classes.buttonItemWrap != undefined ? this.props.classesCSS.classes.buttonItemWrap : buttonSkinId ? buttonSkinId : '';

            return _react2.default.createElement(
                'span',
                { className: 'ocb-item-button-wrap ' + buttonItemWrapClass },
                styleTag,
                _react2.default.createElement(
                    'span',
                    { className: 'ocb-item-button ' + parentClasses },
                    theButton
                )
            );
        }
    }]);

    return ItemButton;
}(_react.Component);

function mapStateToProps(_ref) {
    var skinState = _ref.skinState;

    return { skinState: skinState };
}
function mapDispatchToProps(dispatch) {
    return (0, _redux.bindActionCreators)({ objectUpdated: _index.objectUpdated }, dispatch);
}

exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(ItemButton);

/***/ }),

/***/ 49:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _deepmerge = __webpack_require__(9);

var _deepmerge2 = _interopRequireDefault(_deepmerge);

var _settings_helpers = __webpack_require__(2);

var _settings_helpers2 = _interopRequireDefault(_settings_helpers);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var BackgroundHelpers = {
    getBackgroundStyleFromObject: function getBackgroundStyleFromObject(object) {
        var suffix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';

        var theObject = { settings: object.standard.linked };
        theObject = JSON.parse(JSON.stringify(theObject));
        theObject = Object.assign({ settings: { linked: BackgroundHelpers.getDefaultProps() } }, theObject);
        return BackgroundHelpers.getBackgroundStyle(theObject.settings, object, suffix);
    },
    getBackgroundStyle: function getBackgroundStyle(settings, object, suffix) {
        var skinId = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
        var selector = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;
        var only = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;


        skinId = skinId ? skinId : object.skinId != undefined ? object.skinId : false;

        var newSettings = Array.isArray(settings) && !settings.length ? BackgroundHelpers.getDefaultProps() : Object.assign({}, BackgroundHelpers.getDefaultProps(), settings);

        var css = BackgroundHelpers.getCSS(newSettings, object, suffix, skinId, selector, only);
        var classes = BackgroundHelpers.getClasses(newSettings, object, suffix, skinId);

        return { css: css, classes: classes };
    },
    getBackgroundObject: function getBackgroundObject(settings, object, suffix, classes) {
        switch (settings['background_type' + suffix].choice) {
            case 'color':
                return BackgroundHelpers.getBackgroundColorObject(settings, object, suffix, classes);
            case 'image':
                return BackgroundHelpers.getBackgroundImageObject(settings, object, suffix, classes);
            case 'gradient_2':
            case 'gradient_3':
                return BackgroundHelpers.getBackgroundGradientObject(settings, object, suffix, classes);
            case 'custom_video':
            case 'other_video':
                return BackgroundHelpers.getBackgroundVideoObject(settings, object, suffix, classes);
        }
    },
    getBackgroundVideoObject: function getBackgroundVideoObject(settings, object, suffix, classes) {

        return BackgroundHelpers.getBackgroundCombinedObject(settings, object, suffix, classes);

        var videoURL = settings.background_other_video.text;
        var prefix = '';

        var parallaxSpeed = settings.background_parallax.choice;

        if (parallaxSpeed == 'none' || parallaxSpeed == undefined) {
            parallaxSpeed = 1;
        } else if (parallaxSpeed == 'fixed') {
            parallaxSpeed = 0;
        }

        if (settings['background_type' + suffix].choice == 'custom_video') {
            videoURL = settings.background_custom_video.url;
            if (videoURL == undefined || videoURL == false) videoURL = '';
            prefix = 'mp4:';
            if (videoURL.includes('.webm')) prefix = 'webm:';
            if (videoURL.includes('.ogv')) prefix = 'ogv:';
        }

        return _react2.default.createElement('div', { id: 'jarallax-' + object.id, className: 'jarallax ocb-save-remove-contents', 'data-jarallax-video': prefix + videoURL, 'data-speed': parallaxSpeed, 'data-jarallax': parallaxSpeed });
    },
    getBackgroundImageObject: function getBackgroundImageObject(settings, object, suffix, classes) {
        return BackgroundHelpers.getBackgroundCombinedObject(settings, object, suffix, classes);
    },
    getBackgroundGradientObject: function getBackgroundGradientObject(settings, object, suffix, classes) {
        return BackgroundHelpers.getBackgroundCombinedObject(settings, object, suffix, classes);
    },
    getBackgroundColorObject: function getBackgroundColorObject(settings, object, suffix, classes) {
        return BackgroundHelpers.getBackgroundCombinedObject(settings, object, suffix, classes);
    },
    getBackgroundCombinedObject: function getBackgroundCombinedObject(settings, object, suffix, classes) {
        var parallaxSpeed = settings.background_parallax.choice;
        var parallaxEffect = settings.background_parallax_effect.choice;
        var otherClasses = '';

        if (parallaxSpeed == 'none' || parallaxSpeed == undefined) {
            parallaxSpeed = 1;
        } else if (parallaxSpeed == 'fixed') {
            parallaxSpeed = 0;
        }

        var dataAttr = {};

        if (parallaxSpeed != 1) {
            dataAttr['data-speed'] = parallaxSpeed;
        }

        if (settings['background_type' + suffix].choice == 'image' && parallaxSpeed != 1) {
            var imgURL = _settings_helpers2.default.getImageURL(settings['background_image' + suffix].url, settings['background_image' + suffix], 'background');

            dataAttr['data-img-src'] = imgURL;
            //dataAttr['data-jarallax'] = 1;
            dataAttr['data-type'] = parallaxEffect;
            if (settings['background_image' + suffix].useWhich == 'featured') {
                dataAttr['data-ocbreplace-attr'] = 'data-img-src';
                dataAttr['data-ocbreplace-value'] = _settings_helpers2.default.getFeaturedImageReplace(settings['background_image' + suffix]);
            }
            otherClasses = ' ocbreplace';
        }

        if (settings['background_type' + suffix].choice == 'custom_video' || settings['background_type' + suffix].choice == 'other_video') {
            var videoURL = settings.background_other_video.text;
            var prefix = '';

            if (settings['background_type' + suffix].choice == 'custom_video') {
                videoURL = settings.background_custom_video.url;
                if (videoURL == undefined || videoURL == false) videoURL = '';
                prefix = 'mp4:';
                if (videoURL.includes('.webm')) prefix = 'webm:';
                if (videoURL.includes('.ogv')) prefix = 'ogv:';
            }

            //Make sure that no parallax still shows the video
            if (parallaxSpeed == 1) parallaxSpeed = 0.99;

            dataAttr['data-jarallax-video'] = prefix + videoURL;
            //dataAttr['data-jarallax'] = 1;
            dataAttr['data-speed'] = parallaxSpeed;
            dataAttr['data-type'] = parallaxEffect;
        }

        if (parallaxSpeed != 1 && (settings['background_type' + suffix].choice == 'image' || settings['background_type' + suffix].choice == 'custom_video' || settings['background_type' + suffix].choice == 'other_video')) {
            otherClasses += ' ocb-save-remove-contents';
        }

        return _react2.default.createElement(
            'div',
            _extends({ className: otherClasses + ' ' + classes['backgroundCombined' + suffix] }, dataAttr),
            BackgroundHelpers.getContent(settings, suffix)
        );
    },
    getBackgroundScreenObject: function getBackgroundScreenObject(settings, object, suffix, classes) {
        return _react2.default.createElement('div', { className: 'ocb-item-background-screen-' + object.id + ' ocb-item-background-screen ' + classes['backgroundScreen'] });
    },


    /**
     *
     * @param settings
     * @param object
     * @param suffix
     * @param skinId
     * @param selector
     * @param only - For use with modules that use background item like Features that just need paired down version
     * @returns {{css: *, otherCSS: *}}
     */
    getCSSOld: function getCSSOld(settings, object, suffix) {
        var skinId = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
        var selector = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;
        var only = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;

        var wrapId = skinId ? '.' + skinId : object.id;
        selector = selector ? selector : '> .ocb-item-background' + suffix;
        var css = BackgroundHelpers.getBackgroundSharedCSS(settings, object, suffix, wrapId, selector);

        if (only == false || only == 'color') {
            css += BackgroundHelpers.getBackgroundColorCSS(settings, object, suffix, wrapId, selector);
        }
        if (only == false || only == 'gradient') {
            css += BackgroundHelpers.getBackgroundGradientCSS(settings, object, suffix, wrapId, selector);
        }
        if (only == false || only == 'video') {
            css += BackgroundHelpers.getBackgroundVideoCSS(settings, object, suffix, wrapId, selector);
        }

        if (BackgroundHelpers.hasBackgroundScreen(settings, object, suffix)) {
            var opacity = settings.screen_opacity != undefined && settings.screen_opacity.useDefault != 'default' ? parseInt(settings.screen_opacity.value) / 100 : 0.7;
            if (only == false || only == 'color') {
                css += this.getBackgroundColorCSS(settings, object, suffix, wrapId, selector, true, opacity);
            }
            if (only == false || only == 'gradient') {
                css += this.getBackgroundGradientCSS(settings, object, suffix, wrapId, selector, true, opacity);
            }
        }

        return { css: css, otherCSS: BackgroundHelpers.getOtherCSS(settings, object, suffix, wrapId, selector) };
    },


    /**
     *
     * @param settings
     * @param object
     * @param suffix
     * @param skinId
     * @param selector
     * @param only - For use with modules that use background item like Features that just need paired down version
     * @returns {{css: *, otherCSS: *}}
     */
    getCSS: function getCSS(settings, object, suffix) {
        var skinId = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
        var selector = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;
        var only = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;

        var wrapId = skinId ? '.' + skinId : object.id;
        selector = selector ? selector : '> .ocb-item-background' + suffix;
        var css = BackgroundHelpers.getBackgroundSharedCSS(settings, object, suffix, wrapId, selector);

        if (settings['background_type' + suffix].choice == 'color' || only == 'color') {
            css += BackgroundHelpers.getBackgroundColorCSS(settings, object, suffix, wrapId, selector);
        }
        if (settings['background_type' + suffix].choice == 'gradient_2' || settings['background_type' + suffix].choice == 'gradient_3' || only == 'gradient') {
            css += BackgroundHelpers.getBackgroundGradientCSS(settings, object, suffix, wrapId, selector);
        }
        if (settings['background_type' + suffix].choice == 'custom_video' || settings['background_type' + suffix].choice == 'other_video' || only == 'video') {
            css += BackgroundHelpers.getBackgroundVideoCSS(settings, object, suffix, wrapId, selector);
            css += BackgroundHelpers.getBackgroundFilterCSS(settings, object, suffix, wrapId, selector);
        }
        if (settings['background_type' + suffix].choice == 'image' || only == 'image') {
            css += BackgroundHelpers.getBackgroundImageCSS(settings, object, suffix, wrapId, selector);
            css += BackgroundHelpers.getBackgroundFilterCSS(settings, object, suffix, wrapId, selector);
        }

        if (BackgroundHelpers.hasBackgroundScreen(settings, object, suffix)) {
            var opacity = settings.screen_opacity != undefined && settings.screen_opacity.useDefault != 'default' ? parseInt(settings.screen_opacity.value) / 100 : 0.7;
            if (settings['background_type_screen'].choice == 'color' || only == 'color') {
                css += this.getBackgroundColorCSS(settings, object, suffix, wrapId, selector, true, opacity);
            }
            if (settings['background_type_screen'].choice == 'gradient_2' || settings['background_type_screen'].choice == 'gradient_3' || only == 'gradient') {
                css += this.getBackgroundGradientCSS(settings, object, suffix, wrapId, selector, true, opacity);
            }
        }

        return { css: css, otherCSS: BackgroundHelpers.getOtherCSS(settings, object, suffix, wrapId, selector) };
    },
    getOtherCSS: function getOtherCSS(settings, object, suffix) {
        var id = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
        var selector = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;

        var otherCSS = '';

        otherCSS += BackgroundHelpers.getBackgroundImageCSS(settings, object, suffix, id, selector);

        return otherCSS;
    },
    getBackgroundSharedCSS: function getBackgroundSharedCSS(settings, object, suffix, id) {
        var selector = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;

        var css = '';

        if (BackgroundHelpers.hasBackgroundScreen(settings, object, suffix) && settings.background_screen_width != undefined && settings.background_screen_width.useDefault == 'custom') {
            var screenWidth = settings.background_screen_width.value + settings.background_screen_width.units;

            switch (settings.background_type_screen.choice) {
                case 'color':
                    css += _settings_helpers2.default.wrapCSSProperty(id, '> .ocb-item-background .ocb-item-background-screen-color', 'width', screenWidth, object.type);
                    break;
                case 'gradient_2':
                case 'gradient_3':
                    css += _settings_helpers2.default.wrapCSSProperty(id, '> .ocb-item-background .ocb-item-background-screen-gradient', 'width', screenWidth, object.type);
                    break;
            }
        }

        if (suffix == '_2' || suffix == '_3') {
            var css2Properties = {};

            if (settings['background_position_top' + suffix].useDefault == 'custom') {
                var bt2 = settings['background_position_top' + suffix];
                css2Properties.top = bt2.value + bt2.units;
            }

            if (settings['background_position_left' + suffix].useDefault == 'custom') {
                var bl2 = settings['background_position_left' + suffix];
                css2Properties.left = bl2.value + bl2.units;
            }

            if (settings['background_position_bottom' + suffix].useDefault == 'custom') {
                var bb2 = settings['background_position_bottom' + suffix];
                css2Properties.top = 'initial';
                css2Properties.bottom = bb2.value + bb2.units;
            }

            if (settings['background_position_right' + suffix].useDefault == 'custom') {
                var br2 = settings['background_position_right' + suffix];
                css2Properties.left = 'initial';
                css2Properties.right = br2.value + br2.units;
            }

            if (settings['background_width' + suffix].useDefault == 'custom') {
                var bw2 = settings['background_width' + suffix];
                css2Properties.width = bw2.value + bw2.units;
            }

            if (settings['background_height' + suffix].useDefault == 'custom') {
                var bh2 = settings['background_height' + suffix];
                css2Properties.height = bh2.value + bh2.units;
            }

            if (settings['background_border_radius' + suffix].useDefault == 'custom') {
                var bbr2 = settings['background_border_radius' + suffix];
                css2Properties.borderRadius = bbr2.top + bbr2.units + ' ' + bbr2.right + bbr2.units + ' ' + bbr2.bottom + bbr2.units + ' ' + bbr2.left + bbr2.units;
            }

            if (settings['background_opacity' + suffix].useDefault == 'custom') {
                css2Properties.opacity = parseInt(settings['background_opacity' + suffix].value) / 100;
            }

            if (suffix == '_3') {

                if (settings['background_rotation' + suffix].useDefault == 'custom') {
                    var brot2 = settings['background_rotation' + suffix].value;
                    css2Properties.transform = 'rotate(' + brot2 + 'deg)';
                }

                if (settings['background_text_size' + suffix].useDefault == 'custom') {
                    var bts2 = settings['background_text_size' + suffix];
                    css2Properties.fontSize = bts2.value + bts2.units;
                }

                if (settings['background_text_color' + suffix].color == 'custom') {
                    css2Properties.color = settings['background_text_color' + suffix].customColor;
                }
            }

            css += _settings_helpers2.default.wrapCSSProperties(id, selector, css2Properties, object.type);
        }

        return css;
    },
    getBackgroundColorCSS: function getBackgroundColorCSS(settings, object, suffix, id, selector) {
        var screen = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;
        var opacity = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : false;

        var screenAdd = '';
        var backgroundSelector = '.ocb-item-background-color';

        if (screen) {
            screenAdd = '_screen';
            backgroundSelector = '.ocb-item-background-screen-color';
        }

        var style = {};
        var css = '';

        if (settings['background' + screenAdd + suffix].color == 'custom') {
            style = { backgroundColor: settings['background' + screenAdd + suffix].customColor };
            if (opacity !== false) {
                style.opacity = opacity;
            }
        } else if (settings['background' + screenAdd + suffix].color != 'default' && settings['background' + screenAdd + suffix].color != 'none') {
            if (opacity !== false) {
                style.opacity = opacity;
            }
        }

        css = _settings_helpers2.default.wrapCSSProperties(id, selector + ' ' + backgroundSelector, style, object.type);

        return css;
    },
    getBackgroundGradientCSS: function getBackgroundGradientCSS(settings, object, suffix, id, selector) {
        var screen = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;
        var opacity = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : false;

        var screenAdd = '';
        var backgroundSelector = '.ocb-item-background-gradient';

        if (screen) {
            screenAdd = '_screen';
            backgroundSelector = '.ocb-item-background-screen-gradient';
        }

        var gradientDirection = '';

        switch (settings.gradient_angle.choice) {
            case 'vertical':
                gradientDirection = 'to bottom';
                break;
            case 'horizontal':
                gradientDirection = 'to right';
                break;
            case 'diag_up':
                gradientDirection = '45deg';
                break;
            case 'diag_down':
                gradientDirection = '135deg';
                break;
            case 'radial':
                gradientDirection = 'ellipse at center';
                break;
        }

        var gradient1 = settings['gradient_1' + screenAdd + suffix] != undefined ? settings['gradient_1' + screenAdd + suffix].customColor : '#000000';
        var gradient2 = settings['gradient_2' + screenAdd + suffix] != undefined ? settings['gradient_2' + screenAdd + suffix].customColor : '#000000';
        var gradient3 = settings['gradient_3' + screenAdd + suffix] != undefined ? settings['gradient_3' + screenAdd + suffix].customColor : '#000000';
        var gradientType = 'linear-gradient';

        if (gradientDirection == 'ellipse at center') {
            gradientType = 'radial-gradient';
        }

        var theGradient = settings['background_type' + suffix].choice == 'gradient_2' ? gradientType + '(' + gradientDirection + ', ' + gradient1 + ' 0%, ' + gradient2 + ' 100%)' : gradientType + '(' + gradientDirection + ', ' + gradient1 + ' 0%, ' + gradient2 + ' 50%, ' + gradient3 + ' 100%)';

        if (screen) {
            theGradient = settings.background_type_screen.choice == 'gradient_2' ? gradientType + '(' + gradientDirection + ', ' + gradient1 + ' 0%, ' + gradient2 + ' 100%)' : gradientType + '(' + gradientDirection + ', ' + gradient1 + ' 0%, ' + gradient2 + ' 50%, ' + gradient3 + ' 100%)';
        }

        var style = { background: theGradient };

        if (opacity !== false) {
            style.opacity = opacity;
        }

        return _settings_helpers2.default.wrapCSSProperties(id, selector + ' ' + backgroundSelector, style, object.type);
    },
    getBackgroundImageCSS: function getBackgroundImageCSS(settings, object, suffix, id, selector) {
        if (settings['background_image' + suffix] == undefined || settings['background_type' + suffix].choice != 'image' || !settings['background_image' + suffix].url) return '';

        var image = _settings_helpers2.default.getImageURL(settings['background_image' + suffix].url, settings['background_image' + suffix], 'background');

        var backgroundImageSize = settings['background_image_size' + suffix].useDefault == 'custom' ? settings['background_image_size' + suffix].value + settings['background_image_size' + suffix].units : 'cover';
        var backgroundImageRepeat = settings['background_image_repeat' + suffix].yes == 1 ? 'repeat' : 'no-repeat';

        var style = {
            backgroundImage: 'url(' + image + ')',
            backgroundRepeat: backgroundImageRepeat,
            backgroundSize: backgroundImageSize,
            backgroundPosition: settings['background_image_vertical' + suffix].choice + ' ' + settings['background_image_horizontal' + suffix].choice
        };

        return _settings_helpers2.default.wrapCSSProperties(id, selector + ' .ocb-item-background-image', style, object.type);
    },
    getBackgroundFilterCSS: function getBackgroundFilterCSS(settings, object, suffix, id, selector) {
        if (settings['background_css_filters' + suffix] == undefined || settings['background_css_filters' + suffix].useDefault == 'default') return '';

        var filter = '';
        var f = settings['background_css_filters' + suffix];

        if (f.blur != 0) filter += 'blur(' + f.blur + 'px) ';
        if (f.brightness != 100) filter += 'brightness(' + f.brightness + '%) ';
        if (f.contrast != 100) filter += 'contrast(' + f.contrast + '%) ';
        if (f.greyscale != 0) filter += 'grayscale(' + f.greyscale + '%) ';
        if (f.hue_rotate != 0) filter += 'hue-rotate(' + f.hue_rotate + 'deg) ';
        if (f.invert != 0) filter += 'invert(' + f.invert + '%) ';
        if (f.opacity != 100) filter += 'opacity(' + f.opacity + '%) ';
        if (f.saturate != 100) filter += 'saturate(' + f.saturate + '%) ';
        if (f.sepia != 0) filter += 'sepia(' + f.sepia + '%)';

        var className = '.ocb-item-background-image';

        if (settings['background_type' + suffix].choice == 'custom_video' || settings['background_type' + suffix].choice == 'other_video') {
            className = '.ocb-item-background-video > div > *';
        }
        if (settings['background_type' + suffix].choice == 'image' && settings.background_parallax.choice != 'none') {
            className += ' > div > *';
        }

        return _settings_helpers2.default.wrapCSSProperty(id, selector + ' ' + className, 'filter', filter, object.type);
    },
    getBackgroundVideoCSS: function getBackgroundVideoCSS(settings, object, suffix, id) {
        return '';
    },
    getClasses: function getClasses(settings, object, suffix, skinId) {
        var wrapId = skinId ? skinId : object.id;
        var classes = {};

        classes['backgroundShared' + suffix] = BackgroundHelpers.getBackgroundSharedClasses(settings, object, suffix, wrapId);

        if (!suffix) {
            classes['backgroundScreen'] = BackgroundHelpers.getBackgroundColorClasses(settings, object, '', wrapId, true);

            var type = settings.background_type_screen.choice == 'color' ? 'color' : 'gradient';
            classes['backgroundScreen'] += ' ocb-item-background-screen-' + type;

            if (!BackgroundHelpers.hasBackgroundScreen(settings, object, suffix)) {
                classes['backgroundScreen'] += ' d-none';
            }
        }

        classes['backgroundColor' + suffix] = settings['background_type' + suffix].choice == 'color' ? BackgroundHelpers.getBackgroundColorClasses(settings, object, suffix, wrapId) : '';
        classes['backgroundImage' + suffix] = settings['background_type' + suffix].choice == 'image' ? BackgroundHelpers.getBackgroundImageClasses(settings, object, suffix, wrapId) : '';
        classes['backgroundGradient' + suffix] = settings['background_type' + suffix].choice == 'gradient_2' || settings['background_type' + suffix].choice == 'gradient_3' ? BackgroundHelpers.getBackgroundGradientClasses(settings, object, suffix, wrapId) : '';
        classes['backgroundVideo' + suffix] = settings['background_type' + suffix].choice == 'custom_video' || settings['background_type' + suffix].choice == 'other_video' ? BackgroundHelpers.getBackgroundVideoClasses(settings, object, suffix, wrapId) : '';

        switch (settings['background_type' + suffix].choice) {
            case 'color':
                classes['backgroundCombined' + suffix] = ' ocb-item-background-color';
                break;
            case 'image':
                classes['backgroundCombined' + suffix] = ' ocb-item-background-image';
                if (settings.background_parallax.choice != 'none') {
                    classes['backgroundCombined' + suffix] += ' jarallax';
                }
                break;
            case 'gradient_2':
            case 'gradient_3':
                classes['backgroundCombined' + suffix] = ' ocb-item-background-gradient';
                break;
            case 'custom_video':
            case 'other_video':
                classes['backgroundCombined' + suffix] = ' ocb-item-background-video';
                if (settings.background_parallax.choice) {
                    classes['backgroundCombined' + suffix] += ' jarallax';
                }
                break;
        }

        classes['backgroundCombined' + suffix] += ' ' + classes['backgroundColor' + suffix];
        classes['backgroundCombined' + suffix] += ' ' + classes['backgroundGradient' + suffix];

        if (suffix == '_3' && (settings.background_behind_3 == undefined || !settings.background_behind_3.yes)) {
            classes['backgroundShared' + suffix] += ' ocb-item-background-over';
        }

        return classes;
    },
    getBackgroundSharedClasses: function getBackgroundSharedClasses(settings, object, suffix, skinId) {
        var classes = '';

        if (suffix == '_2' || suffix == '_3') {
            if (settings['include_background' + suffix] == undefined || !settings['include_background' + suffix].yes) {
                classes += ' d-none';
            }
            if (settings['remove_background_mobile' + suffix] == undefined || settings['remove_background_mobile' + suffix].yes) {
                classes += ' ocb-item-background-remove-mobile';
            }
        }

        return classes;
    },
    getBackgroundColorClasses: function getBackgroundColorClasses(settings, object, suffix, skinId) {
        var screen = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;

        var classes = '';
        var screenAdd = screen ? '_screen' : '';
        var contentColor = BackgroundHelpers.getContentColor(settings, object, suffix);
        var backgroundColor = settings['background' + screenAdd + suffix].color;

        if (backgroundColor != 'default' && backgroundColor != 'none') {
            classes += backgroundColor + '-background ' + contentColor;
        } else if (backgroundColor == 'default' || backgroundColor == 'none') {
            classes += 'none-background ' + contentColor;
        }

        return classes;
    },
    getBackgroundImageClasses: function getBackgroundImageClasses(settings, object, suffix, skinId) {
        return BackgroundHelpers.getContentColor(settings, object, suffix);
    },
    getBackgroundGradientClasses: function getBackgroundGradientClasses(settings, object, suffix, skinId) {
        return BackgroundHelpers.getContentColor(settings, object, suffix);
    },
    getBackgroundVideoClasses: function getBackgroundVideoClasses(settings, object, suffix, skinId) {
        return '';
    },
    getContent: function getContent(settings, suffix) {
        var content = null;

        if (suffix == '_3') {

            if (settings['background_text' + suffix].text) {
                content = settings['background_text' + suffix].text;
            }

            if (settings['background_icon' + suffix].icon) {
                var icon = settings['background_icon' + suffix].icon;
                content = _react2.default.createElement('i', { className: 'fa ' + icon });
            }
        }

        return content;
    },
    hasBackgroundScreen: function hasBackgroundScreen(settings, object, suffix) {
        return (settings['background_type' + suffix].choice == 'image' || settings['background_type' + suffix].choice == 'other_video' || settings['background_type' + suffix].choice == 'custom_video') && settings['background_type_screen' + suffix].choice != undefined && settings['background_type_screen' + suffix].choice != 'default';
    },
    getContentColor: function getContentColor(settings, object, suffix) {
        var colorClass = '';

        if (suffix == '_3') {

            if (settings['background_text_color' + suffix].color != 'default') {
                colorClass = settings['background_text_color' + suffix].color + '-color';
            }
        }

        return colorClass;
    },
    getDefaultProps: function getDefaultProps() {
        return {
            background_type: {
                choice: 'color'
            },
            background_type_screen: {
                choice: 'default'
            },
            background: {
                color: 'default'
            },
            gradient_1: {
                color: 'custom',
                customColor: '#B300C8'
            },
            gradient_2: {
                color: 'custom',
                customColor: '#4E00C7'
            },
            gradient_3: {
                color: 'custom',
                customColor: '#2E17FF'
            },
            screen_opacity: {
                value: 70,
                units: '%',
                useDefault: 'default'
            },
            background_screen: {
                color: 'custom',
                customColor: '#000000'
            },
            background_screen_width: {
                value: 100,
                units: '%',
                useDefault: 'default'
            },
            gradient_1_screen: {
                color: 'custom',
                customColor: '#B300C8'
            },
            gradient_2_screen: {
                color: 'custom',
                customColor: '#4E00C7'
            },
            gradient_3_screen: {
                color: 'custom',
                customColor: '#2E17FF'
            },
            gradient_angle: {
                choice: 'diag_down'
            },
            background_image: {
                url: ''
            },
            background_image_size: {
                value: 100,
                units: '%',
                useDefault: 'default'
            },
            background_image_repeat: {
                yes: 0
            },
            background_image_vertical: {
                choice: 'center'
            },
            background_image_horizontal: {
                choice: 'center'
            },
            background_parallax: {
                choice: 'none'
            },
            background_parallax_effect: {
                choice: 'scroll'
            },
            background_custom_video: {
                text: ''
            },
            background_other_video: {
                text: ''
            },

            include_background_2: {
                yes: 0
            },
            remove_background_mobile_2: {
                yes: 1
            },
            background_opacity_2: {
                value: 100,
                units: '%',
                useDefault: 'default'
            },
            background_position_top_2: {
                value: 0,
                units: '%',
                useDefault: 'default'
            },
            background_position_left_2: {
                value: 0,
                units: '%',
                useDefault: 'default'
            },
            background_position_right_2: {
                value: 0,
                units: '%',
                useDefault: 'default'
            },
            background_position_bottom_2: {
                value: 0,
                units: '%',
                useDefault: 'default'
            },
            background_height_2: {
                value: 100,
                units: '%',
                useDefault: 'default'
            },
            background_width_2: {
                value: 100,
                units: '%',
                useDefault: 'default'
            },
            background_border_radius_2: {
                top: 0,
                left: 0,
                right: 0,
                bottom: 0,
                units: 'px',
                useDefault: 'default'
            },
            background_type_2: {
                choice: 'color'
            },
            background_image_2: {
                url: ''
            },
            background_parallax_2: {
                choice: 'none'
            },
            background_type_screen_2: {
                choice: 'default'
            },
            background_image_size_2: {
                value: 100,
                units: '%',
                useDefault: 'default'
            },
            background_image_repeat_2: {
                yes: 0
            },
            background_image_vertical_2: {
                choice: 'center'
            },
            background_image_horizontal_2: {
                choice: 'center'
            },
            background_2: {
                color: 'default',
                customColor: 'rgba(0,0,0,0.2)'
            },
            gradient_1_2: {
                color: 'custom',
                customColor: '#B300C8'
            },
            gradient_2_2: {
                color: 'custom',
                customColor: '#4E00C7'
            },

            include_background_3: {
                yes: 0
            },
            remove_background_mobile_3: {
                yes: 1
            },
            background_opacity_3: {
                value: 100,
                units: '%',
                useDefault: 'default'
            },
            background_text_3: {
                text: ''
            },
            background_icon_3: {
                icon: ''
            },
            background_text_size_3: {
                value: 1,
                units: 'em',
                useDefault: 'default'
            },
            background_text_color_3: {
                color: 'default',
                customColor: '#ffffff'
            },
            background_rotation_3: {
                value: 0,
                units: 'deg',
                useDefault: 'default'
            },
            background_position_top_3: {
                value: 0,
                units: '%',
                useDefault: 'default'
            },
            background_position_left_3: {
                value: 0,
                units: '%',
                useDefault: 'default'
            },
            background_position_right_3: {
                value: 0,
                units: '%',
                useDefault: 'default'
            },
            background_position_bottom_3: {
                value: 0,
                units: '%',
                useDefault: 'default'
            },
            background_height_3: {
                value: 100,
                units: 'px',
                useDefault: 'default'
            },
            background_width_3: {
                value: 100,
                units: 'px',
                useDefault: 'default'
            },
            background_border_radius_3: {
                top: 0,
                left: 0,
                right: 0,
                bottom: 0,
                units: 'px',
                useDefault: 'default'
            },
            background_type_3: {
                choice: 'color'
            },
            background_image_3: {
                url: ''
            },
            background_parallax_3: {
                choice: 'none'
            },
            background_type_screen_3: {
                choice: 'default'
            },
            background_image_size_3: {
                value: 100,
                units: '%',
                useDefault: 'default'
            },
            background_image_repeat_3: {
                yes: 0
            },
            background_image_vertical_3: {
                choice: 'center'
            },
            background_image_horizontal_3: {
                choice: 'center'
            },
            background_3: {
                color: 'primary_dark',
                customColor: 'rgba(0,0,0,0.2)'
            },
            gradient_1_3: {
                color: 'custom',
                customColor: '#B300C8'
            },
            gradient_2_3: {
                color: 'custom',
                customColor: '#4E00C7'
            }
        };
    }
};

exports.default = BackgroundHelpers;

/***/ }),

/***/ 59:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _settings_helpers = __webpack_require__(2);

var _settings_helpers2 = _interopRequireDefault(_settings_helpers);

var _background_helpers = __webpack_require__(49);

var _background_helpers2 = _interopRequireDefault(_background_helpers);

var _module_helpers = __webpack_require__(12);

var _module_helpers2 = _interopRequireDefault(_module_helpers);

var _deepmerge = __webpack_require__(9);

var _deepmerge2 = _interopRequireDefault(_deepmerge);

var _default_standard = __webpack_require__(16);

var _default_standard2 = _interopRequireDefault(_default_standard);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var StandardHelpers = {
    get_style: function get_style(settings, object) {
        var skinId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

        var theSkinId = skinId ? '.' + skinId : object.id;

        var classes = StandardHelpers.get_classes(settings, object, theSkinId);
        var css = StandardHelpers.get_css(settings, object, theSkinId);

        return {
            classes: classes,
            css: { additional: css }
        };
    },
    get_classes: function get_classes(settings, object, skinId) {
        return {
            standardParentClasses: StandardHelpers.getObjectOuterSkinClasses(settings.linked, object),
            standardClasses: StandardHelpers.getObjectInnerSkinClasses(settings.linked, object),
            backgroundWrapClasses: StandardHelpers.getObjectBackgroundWrapSkinClasses(settings.linked, object)
        };
    },


    get_css: function get_css(settings, object) {
        var skinId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

        var css = '';
        var settingsActive = false;

        if (object.deviceLock != undefined && object.deviceLock == false) {

            ['laptop', 'tablet', 'phone'].forEach(function (device) {
                if (settings[device] == undefined) settings[device] = {};
                settings[device] = (0, _deepmerge2.default)(settings.linked, settings[device]);
                css += StandardHelpers.renderSkinStyle(settings[device], object, device, settingsActive, { returnType: 'style', skinId: skinId });
            });
        } else {

            css = StandardHelpers.renderSkinStyle(settings.linked, object, false, settingsActive, { returnType: 'style', skinId: skinId });
        }

        return css;
    },

    /**
     * Classes put on the outer div of rows and columns that are not included in skins
     *
     * @param object
     * @returns {string}
     */
    getObjectOuterClasses: function getObjectOuterClasses(object) {
        var objectClasses = '';
        var settings = void 0;

        if (object.standard == undefined || object.standard.linked == undefined) {
            return objectClasses;
        } else {
            settings = object.standard.linked;
        }

        if (settings.classes != undefined && settings.classes.text != undefined) {
            objectClasses += ' ' + settings.classes.text;
        }

        if (settings.device_hide != undefined && settings.device_hide.choices != undefined && settings.device_hide.choices.length) {
            settings.device_hide.choices.forEach(function (choice) {
                objectClasses += ' ocb-hide-' + choice;
            });
        }

        return objectClasses;
    },

    /**
     * Classes put on the outer div of rows and columns that ARE included in skins
     *
     * @param settings
     * @param object
     * @returns {string}
     */
    getObjectOuterSkinClasses: function getObjectOuterSkinClasses(settings, object) {
        var objectClasses = '';

        /*if( object.standard == undefined || object.standard.linked == undefined ){
         return objectClasses;
         } else {
         settings = object.standard.linked;
         }*/

        if (settings.entrance_animation != undefined && settings.entrance_animation.choice != undefined && settings.entrance_animation.choice != 'none') {
            objectClasses += ' animated wow ' + settings.entrance_animation.choice;
        }

        if (object.type != 'module' && settings.border != undefined && settings.border.color != 'default' && settings.border.color != 'custom') {
            objectClasses += ' ' + settings.border.color + '-border-color';
        }

        if (settings.constrain_background != undefined && settings.constrain_background.yes) {
            objectClasses += ' ocb-constrained-background';
        }

        if (object.type == 'row') {
            if (settings.hero_row_height != undefined && settings.hero_row_height.useDefault == 'custom' || settings.row_display_type != undefined && settings.row_display_type.choice == 'hero') {
                objectClasses += ' ocb-row-hero';
            }
        }

        return objectClasses;
    },

    getObjectInnerSkinClasses: function getObjectInnerSkinClasses(settings, object) {
        var classes = '';

        if (settings.color.color != 'default' && settings.color.color != 'custom') {
            classes += ' ' + settings.color.color + '-color';
        }
        if (settings.text_align.choice != 'none') {
            if (settings.mobile_text_align.choice != 'none') {
                classes += ' text-' + settings.mobile_text_align.choice;
                classes += ' text-md-' + settings.text_align.choice;
            } else {
                classes += ' text-' + settings.text_align.choice;
            }
        }
        if (settings.text_font.choice != 'default') {
            classes += ' ocb-' + settings.text_font.choice + '_font';
        }
        if (settings.font_weight.useDefault != 'default') {
            classes += ' ocb-weight-' + settings.font_weight.value;
        }
        if (settings.text_transform.choice) {
            classes += ' ocb-text-transform-' + settings.text_transform.choice;
        }
        if (object.type == 'module' && settings.border != undefined && settings.border.color != 'default' && settings.border.color != 'custom') {
            classes += ' ' + settings.border.color + '-border-color';
        }

        if (object.type == 'column') {
            if (settings.column_items.choice != 'default') {
                if (settings.column_items.choice == 'inline') {
                    classes += ' ocb-column-inline-flex ocb-column-inline-vertical-' + settings.column_inline_vertical.choice + ' ocb-column-align-' + settings.column_inline_align.choice + ' ocb-column-mobile-align-' + settings.column_inline_mobile_align.choice;
                } else {
                    classes += ' ocb-column-flex ocb-column-align-' + settings.column_items.choice;
                }
            }
        }

        return classes;
    },

    getObjectBackgroundWrapSkinClasses: function getObjectBackgroundWrapSkinClasses(settings, object) {
        var classes = '';

        if (settings.constrain_background != undefined && settings.constrain_background.yes) {
            classes += ' ocb-row-inner-background';
        }

        return classes;
    },

    /*getObjectStandardStyleClasses: (object, settingsActive = false) => {
         let defaultStandard = DefaultStandard();
        let objectStandard = object.standard;
        let fullProps = {};
        let skinId = object.skinId != undefined ? object.skinId : false;
         if( objectStandard == undefined ) objectStandard = {};
        if( objectStandard.linked == undefined ) objectStandard.linked = {};
         //objectStandard linked is an empty array, and defaultStandard default is an object so defaultStandard is getting overwritten
        if( Array.isArray( objectStandard.linked ) ){
            if( objectStandard.linked.length == 0 ){
                objectStandard.linked = {};
            }
        }
         fullProps.linked = DeepMerge(defaultStandard.default, objectStandard.linked );
         let classes = object.type != 'module' ? StandardHelpers.getObjectOuterSkinClasses( objectStandard, object ) + ' ' : '';
        let parentClasses = '';
        let backgroundWrapClasses = '';
        let css = '';
        let skinCSS = '';
        let style = null;
        let skinStyle = null;
         if( object.deviceLock != undefined && object.deviceLock == false ){
             style = ['laptop', 'tablet', 'phone'].map((device, index) => {
                if( objectStandard[device] == undefined ) objectStandard[device] = {};
                objectStandard[device] = DeepMerge(fullProps.linked, objectStandard[device]);
                classes += SettingsHelpers.renderClasses(objectStandard[device]);
                parentClasses += SettingsHelpers.renderParentClasses(objectStandard[device]);
                backgroundWrapClasses = SettingsHelpers.renderBackgroundWrapClasses(objectStandard[device]);
                //let thisCss = SettingsHelpers.renderStyle(objectStandard[device], object, device, settingsActive, { returnType: 'style', skinId });
                let thisCss = StandardHelpers.renderOtherStyle(objectStandard[device], object, device, settingsActive, { returnType: 'style', skinId });
                let thisSkinCss = StandardHelpers.renderSkinStyle(objectStandard[device], object, device, settingsActive, { returnType: 'style', skinId });
                css += thisCss;
                skinCSS += thisSkinCss;
                return (
                    <div key={ index } className="ocb-save-remove-element">
                        { SettingsHelpers.wrapCSSInStyleTag( thisCss, object.id, 'ocb-' + object.type + '-inner' ) }
                        { SettingsHelpers.wrapCSSInStyleTag( thisSkinCss, object.id, 'ocb-' + object.type + '-inner' ) }
                    </div>
                );
            });
         } else {
            //css = SettingsHelpers.renderStyle(fullProps.linked, object, false, settingsActive, { returnType: 'style', skinId });
            css = StandardHelpers.renderOtherStyle(fullProps.linked, object, false, settingsActive, { returnType: 'style', skinId });
            skinCSS = StandardHelpers.renderSkinStyle(fullProps.linked, object, false, settingsActive, { returnType: 'style', skinId });
            style = SettingsHelpers.wrapCSSInStyleTag( css, object.id, 'ocb-' + object.type + '-inner' );
            skinStyle = SettingsHelpers.wrapCSSInStyleTag( skinCSS, object.id, 'ocb-' + object.type + '-inner' );
            classes = SettingsHelpers.renderClasses(fullProps.linked, object);
            parentClasses = SettingsHelpers.renderParentClasses(fullProps.linked, object);
            backgroundWrapClasses = SettingsHelpers.renderBackgroundWrapClasses(fullProps.linked, object);
        }
         return { skinCSS, skinStyle, css, style, classes, parentClasses, backgroundWrapClasses }
    },*/

    /**
     * The Standard CSS that is going to go into the skin
     */
    renderSkinStyle: function renderSkinStyle(settings, object) {
        var device = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
        var settingsActive = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
        var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};

        settings = Object.assign({}, (0, _default_standard2.default)().default, settings);

        var customCSS = '';
        var customCSSInner = '';
        var extraCSS = '';
        var returnType = options.returnType != undefined ? options.returnType : 'tag';
        var skinId = object.skinId != undefined && object.skinId ? object.skinId : false;
        var selectorParent = skinId ? '.' + skinId + '-parent' : '#' + object.type + '-' + object.id + '-parent';
        var selectorChild = skinId ? '.' + skinId : '#' + object.type + '-' + object.id;
        var maxWidth = '';
        var maxWidthChoice = settings.max_width.useDefault;
        var maxWidthValue = settings.max_width.value;
        var maxWidthUnits = settings.max_width.units;
        var minWidth = '';
        var minWidthChoice = settings.min_width.useDefault;
        var minWidthValue = settings.min_width.value;
        var minWidthUnits = settings.min_width.units;

        if (settings.content_width != undefined && settings.content_width.choice == 'full') {
            maxWidthChoice = 'custom';
            maxWidthValue = 100;
            maxWidthUnits = '%';
        }

        if (settings.background.color == 'custom') {
            customCSS += 'background: ' + settings.background.customColor + ';';
        }
        if (settings.color.color == 'custom') {
            customCSS += 'color: ' + settings.color.customColor + ' !important;';
        }
        if (settings.padding.useDefault != 'default') {
            var sp = settings.padding;
            var pu = sp.units;
            if (settings.constrain_background != undefined && settings.constrain_background.yes && settings.inner_background_padding.useDefault == 'custom') {
                var ibp = settings.inner_background_padding;
                var ibpu = ibp.units;
                customCSSInner += 'padding: calc(' + sp.top + pu + ' + ' + ibp.top + ibpu + ') calc(' + sp.right + pu + ' + ' + ibp.right + ibpu + ') calc(' + sp.bottom + pu + ' + ' + ibp.bottom + ibpu + ') calc(' + sp.left + pu + ' + ' + ibp.left + ibpu + ');';
            } else {
                customCSSInner += 'padding: ' + sp.top + pu + ' ' + sp.right + pu + ' ' + sp.bottom + pu + ' ' + sp.left + pu + ';';
            }
        } else {
            if (settings.constrain_background != undefined && settings.constrain_background.yes && settings.inner_background_padding.useDefault == 'custom') {
                var _ibp = settings.inner_background_padding;
                var _ibpu = _ibp.units;
                customCSSInner += 'padding: ' + _ibp.top + _ibpu + ' ' + _ibp.right + _ibpu + ' ' + _ibp.bottom + _ibpu + ' ' + _ibp.left + _ibpu + ';';
            }
        }
        var borderUnits = '';
        if (settings.border.useDefault != 'default') {
            borderUnits = settings.border.units;
            var borderColor = settings.border.color == 'default' ? '#000000' : settings.border.color == 'custom' ? settings.border.customColor : '';
            customCSS += 'border-style: ' + settings.border.type + ';';
            customCSS += 'border-width: ' + settings.border.top + borderUnits + ' ' + settings.border.right + borderUnits + ' ' + settings.border.bottom + borderUnits + ' ' + settings.border.left + borderUnits + ';';
            customCSS += borderColor ? 'border-color: ' + borderColor + ';' : '';
            //customCSSInner += `border-style: ${settings.border.type};`;
            //customCSSInner += `border-width: ${settings.border.top}${borderUnits} ${settings.border.right}${borderUnits} ${settings.border.bottom}${borderUnits} ${settings.border.left}${borderUnits};`;
            //customCSSInner += borderColor ? `border-color: ${borderColor};` : '';
        }
        if (settings.border_radius.useDefault != 'default') {
            var borderRadiusUnits = settings.border_radius.units;
            var theBr = 'border-radius: ' + settings.border_radius.top + borderRadiusUnits + ' ' + settings.border_radius.right + borderRadiusUnits + ' ' + settings.border_radius.bottom + borderRadiusUnits + ' ' + settings.border_radius.left + borderRadiusUnits + ';';
            customCSS += theBr;

            var theBrB = '';

            //Add a transparent border so that there isn't a big gap between the rounded background and the rounded border
            if (settings.border.useDefault != 'default') {
                theBrB += 'border-style: solid;';
                theBrB += 'border-width: ' + (parseInt(settings.border.top) - 1) + borderUnits + ' ' + (parseInt(settings.border.right) - 1) + borderUnits + ' ' + (parseInt(settings.border.bottom) - 1) + borderUnits + ' ' + (parseInt(settings.border.left) - 1) + borderUnits + ';';
                theBrB += 'border-color: transparent;';
                theBrB += 'width: calc(100% + ' + parseInt(settings.border.right) + 'px + ' + parseInt(settings.border.left) + 'px);';
                theBrB += 'height: calc(100% + ' + parseInt(settings.border.top) + 'px + ' + parseInt(settings.border.bottom) + 'px);';
                theBrB += 'margin-left: -' + parseInt(settings.border.left) + 'px;';
                theBrB += 'margin-top: -' + parseInt(settings.border.top) + 'px;';
            }

            extraCSS += '.ocb-tree ' + selectorChild + ' > .ocb-item-background{' + theBr + theBrB + 'overflow:hidden;}';
        }
        if (settings.box_shadow.useDefault == 'custom') {
            var shad = settings.box_shadow;
            customCSS += 'box-shadow: ' + shad.horizontal + 'px ' + shad.vertical + 'px ' + shad.blur + 'px ' + shad.spread + 'px ' + shad.color + ';';
        }
        if (settings.text_shadow.useDefault == 'custom') {
            var tshad = settings.text_shadow;
            customCSS += 'text-shadow: ' + tshad.horizontal + 'px ' + tshad.vertical + 'px ' + tshad.blur + 'px ' + tshad.color + ';';
        }
        if (settings.base_font_size.useDefault != 'default') {
            customCSSInner += 'font-size: ' + settings.base_font_size.value + settings.base_font_size.units + ';';
        }
        if (settings.font_weight.useDefault != 'default') {
            customCSSInner += 'font-weight: ' + settings.font_weight.value + ';';
        }
        if (settings.letter_spacing.useDefault != 'default') {
            customCSSInner += 'letter-spacing: ' + settings.letter_spacing.value + settings.letter_spacing.units + ';';
        }
        if (settings.line_height.useDefault != 'default') {
            customCSSInner += 'line-height: ' + settings.line_height.value + settings.line_height.units + ';';
        }
        if (settings.margin.useDefault != 'default') {
            var marginUnits = settings.margin.units;
            var marginTop = settings.margin.top + marginUnits;
            var marginRight = settings.margin.right + marginUnits;
            var marginBottom = settings.margin.bottom + marginUnits;
            var marginLeft = settings.margin.left + marginUnits;
            if (maxWidthChoice != 'default') {
                if (object.inlineModuleAlign == undefined || object.inlineModuleAlign == null) {
                    if (settings.object_align != undefined) {
                        if (settings.object_align.choice == 'left') {
                            marginLeft = 0;
                        }
                        if (settings.object_align.choice == 'center') {
                            marginLeft = 'auto';
                            marginRight = 'auto';
                        }
                        if (settings.object_align.choice == 'right') {
                            marginRight = 0;
                            marginLeft = 'auto';
                        }
                    }
                }
                maxWidth += 'max-width: ' + maxWidthValue + maxWidthUnits + ';';
            }
            maxWidth += 'margin: ' + marginTop + ' ' + marginRight + ' ' + marginBottom + ' ' + marginLeft + ';';
        } else {
            if (maxWidthChoice != 'default') {
                maxWidth += 'max-width: ' + maxWidthValue + maxWidthUnits + ';';
            }
            if (settings.object_align != undefined) {
                switch (settings.object_align.choice) {
                    case 'left':
                        maxWidth += 'margin-left:0';
                        break;
                    case 'right':
                        maxWidth += 'margin-right:0;margin-left:auto;';
                        break;
                    default:
                        maxWidth += 'margin-left:auto;margin-right:auto;';
                        break;
                }
            } else {
                maxWidth += 'margin-left:auto;margin-right:auto;';
            }
        }

        if (minWidthChoice != 'default') {
            minWidth += 'min-width: ' + minWidthValue + minWidthUnits + ';';
        }

        if (object.type == 'row') {
            customCSSInner += maxWidth;
        } else {
            customCSS += maxWidth + minWidth;
        }

        var innerBackgroundCSS = '';
        if (settings.constrain_background != undefined && settings.constrain_background.yes) {
            var mobileBackgroundCSS = '';
            var mobileMaxWidth = '999px';
            var siteWidth = _settings_helpers2.default.getContentWidth();
            if (maxWidthChoice != 'default') {
                if (settings.padding.useDefault != 'default') {
                    innerBackgroundCSS += 'max-width: calc(' + maxWidthValue + maxWidthUnits + ' - ' + settings.padding.right + settings.padding.units + ' - ' + settings.padding.left + settings.padding.units + ');';
                    mobileBackgroundCSS += 'max-width: ' + maxWidthValue + maxWidthUnits + ';';
                    innerBackgroundCSS += 'margin-left: calc((' + maxWidthValue + maxWidthUnits + ' - ' + settings.padding.right + settings.padding.units + ' - ' + settings.padding.left + settings.padding.units + ') / 2 * -1);';
                } else {
                    innerBackgroundCSS += 'max-width: ' + maxWidthValue + maxWidthUnits + ';';
                    innerBackgroundCSS += 'margin-left: calc(' + maxWidthValue + maxWidthUnits + ' / 2 * -1);';
                }
                if (maxWidthUnits == 'px') {
                    mobileMaxWidth = maxWidthValue - 1 + maxWidthUnits;
                }
                innerBackgroundCSS += 'left: 50%;';
                mobileBackgroundCSS += 'width: 100%;';
                mobileBackgroundCSS += 'margin-left: 0; left: 0;';
            } else {
                if (settings.padding.useDefault != 'default') {
                    innerBackgroundCSS += 'width: calc(' + siteWidth + ' - ' + settings.padding.right + settings.padding.units + ' - ' + settings.padding.left + settings.padding.units + ');';
                    innerBackgroundCSS += 'margin-left: calc((' + siteWidth + ' - ' + settings.padding.right + settings.padding.units + ' - ' + settings.padding.left + settings.padding.units + ') / 2 * -1);';
                    mobileBackgroundCSS += 'width: 100%;';
                    mobileBackgroundCSS += 'margin-left: 0;';
                }
            }
            if (settings.padding.useDefault != 'default') {
                innerBackgroundCSS += 'height: calc(100% - ' + settings.padding.top + settings.padding.units + ' - ' + settings.padding.bottom + settings.padding.units + ');';
                innerBackgroundCSS += 'top: ' + settings.padding.top + settings.padding.units + ';';
            }
            //Need ocb-tree to distinguish between items in the workspace and object templates
            innerBackgroundCSS = '.ocb-tree ' + selectorChild + ' > .ocb-' + object.type + '-inner-background{' + innerBackgroundCSS + '}';

            if (mobileBackgroundCSS) {
                innerBackgroundCSS += '@media (max-width:' + mobileMaxWidth + '){.ocb-tree ' + selectorChild + ' > .ocb-' + object.type + '-inner-background{' + mobileBackgroundCSS + '}}';
            }
        }

        if (customCSS) {
            //Need ocb-tree to distinguish between items in the workspace and object templates
            customCSS = '.ocb-tree ' + selectorChild + '{' + customCSS + '}';
        }

        if (customCSSInner) {
            //Need ocb-tree to distinguish between items in the workspace and object templates
            customCSSInner = '.ocb-tree ' + selectorChild + ' > .ocb-' + object.type + '-inner{' + customCSSInner + '}';
        }

        //Do color separately because it needs to be more specific
        if (settings.color.color == 'custom') {
            var colorCSS = 'color: ' + settings.color.customColor + ' !important;';
            ['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'p', 'li'].forEach(function (tag) {
                customCSS += '.ocb-tree ' + selectorChild + ' ' + tag + '{' + colorCSS + '}';
            });
        }

        var fullCSSString = customCSS + customCSSInner + innerBackgroundCSS + extraCSS;
        var laptopBreakpoint = _settings_helpers2.default.getLaptopBreakpoint();
        var laptopBreakpointUnder = laptopBreakpoint - 1;
        var tabletBreakpoint = _settings_helpers2.default.getTabletBreakpoint();
        var tabletBreakpointUnder = tabletBreakpoint - 1;

        if (object.type == 'row') {
            //Column Gutters
            if (settings.column_gutter.useDefault != 'default') {
                var cg = settings.column_gutter.value / 2 + settings.column_gutter.units;
                fullCSSString += '@media (min-width:' + tabletBreakpoint + 'px){.ocb-tree ' + selectorChild + ' > .ocb-row-inner > .ocb-column{margin-left:' + cg + ';margin-right:' + cg + ';}.ocb-tree ' + selectorChild + ' > .ocb-row-inner > .ocb-column:first-child{margin-left:0}.ocb-tree ' + selectorChild + ' > .ocb-row-inner > .ocb-column:last-child{margin-right:0}}';
            }
            //Row height
            if (settings.hero_row_height != undefined && settings.hero_row_height.useDefault == 'custom' || settings.row_display_type != undefined && settings.row_display_type.choice == 'hero') {
                var rowHeight = (settings.hero_row_height == undefined || settings.hero_row_height.useDefault == 'default') && settings.row_display_type != undefined && settings.row_display_type.choice == 'hero' ? 100 : settings.hero_row_height.value;
                fullCSSString += '@media (min-width:' + tabletBreakpoint + 'px){.ocb-tree ' + selectorChild + '{height: ' + rowHeight + 'vh;}}';
            }
        }

        if (object.type == 'column') {
            if (settings.column_items.choice == 'inline' && settings.column_inline_horizontal_margin.useDefault == 'custom') {
                var cihm = settings.column_inline_horizontal_margin.value + settings.column_inline_horizontal_margin.units;
                if (settings.column_inline_mobile_align.choice == 'stack') {
                    fullCSSString += '@media (min-width:' + tabletBreakpoint + 'px){.ocb-tree ' + selectorChild + ' > .ocb-column-inner > .ocb-module{margin-right:' + cihm + ';}.ocb-tree ' + selectorChild + ' > .ocb-column-inner > .ocb-module:last-child{margin-right:0}}';
                } else {
                    fullCSSString += '.ocb-tree ' + selectorChild + ' > .ocb-column-inner > .ocb-module{margin-right:' + cihm + ';}.ocb-tree ' + selectorChild + ' > .ocb-column-inner > .ocb-module:last-child{margin-right:0}';
                }
            }
        }

        if (device) {
            switch (device) {
                case 'laptop':
                    if (settingsActive) {
                        customCSS = customCSS ? '.ocb-device-laptop ' + customCSS : '';
                        customCSSInner = customCSSInner ? '.ocb-device-laptop ' + customCSSInner : '';
                        fullCSSString = customCSS + customCSSInner;
                    } else {
                        fullCSSString = '@media (min-width:' + laptopBreakpoint + 'px){' + fullCSSString + '}';
                    }
                    break;
                case 'tablet':
                    if (settingsActive) {
                        customCSS = customCSS ? '.ocb-device-tablet ' + customCSS : '';
                        customCSSInner = customCSSInner ? '.ocb-device-tablet ' + customCSSInner : '';
                        fullCSSString = customCSS + customCSSInner;
                    } else {
                        fullCSSString = '@media (min-width:' + tabletBreakpoint + 'px) and (max-width:' + laptopBreakpointUnder + 'px){' + fullCSSString + '}';
                    }
                    break;
                case 'phone':
                    if (settingsActive) {
                        customCSS = customCSS ? '.ocb-device-phone ' + customCSS : '';
                        customCSSInner = customCSSInner ? '.ocb-device-phone ' + customCSSInner : '';
                        fullCSSString = customCSS + customCSSInner;
                    } else {
                        fullCSSString = '@media (max-width:' + tabletBreakpointUnder + 'px){' + fullCSSString + '}';
                    }
                    break;
            }
        }

        if (customCSS || customCSSInner || innerBackgroundCSS) {

            if (returnType == 'style') {
                return fullCSSString;
            }

            return _settings_helpers2.default.wrapCSSInStyleTag(fullCSSString, object.id, 'ocb-' + object.type + '-inner');
        } else {
            return null;
        }
    },


    /**
     * The Standard CSS that is going to go into the skin
     */
    renderSkinStyleOld: function renderSkinStyleOld(settings, object) {
        var device = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
        var settingsActive = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
        var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};

        var customCSS = '';
        var customCSSInner = '';
        var extraCSS = '';
        var returnType = options.returnType != undefined ? options.returnType : 'tag';
        var skinId = options.skinId != undefined && options.skinId ? options.skinId : false;
        var selectorParent = skinId ? '.' + skinId + '-parent' : '#' + object.type + '-' + object.id + '-parent';
        var selectorChild = skinId ? '.' + skinId : '#' + object.type + '-' + object.id;

        var maxWidthChoice = settings.max_width.useDefault;
        var maxWidthValue = settings.max_width.value;
        var maxWidthUnits = settings.max_width.units;

        if (settings.content_width != undefined && settings.content_width.choice == 'full') {
            maxWidthChoice = 'custom';
            maxWidthValue = 100;
            maxWidthUnits = '%';
        }

        if (settings.background.color == 'custom') {
            customCSS += 'background: ' + settings.background.customColor + ';';
        }
        if (settings.color.color == 'custom') {
            customCSS += 'color: ' + settings.color.customColor + ' !important;';
        }
        if (settings.padding.useDefault != 'default') {
            var sp = settings.padding;
            var pu = sp.units;
            if (settings.constrain_background != undefined && settings.constrain_background.yes && settings.inner_background_padding.useDefault == 'custom') {
                var ibp = settings.inner_background_padding;
                var ibpu = ibp.units;
                customCSSInner += 'padding: calc(' + sp.top + pu + ' + ' + ibp.top + ibpu + ') calc(' + sp.right + pu + ' + ' + ibp.right + ibpu + ') calc(' + sp.bottom + pu + ' + ' + ibp.bottom + ibpu + ') calc(' + sp.left + pu + ' + ' + ibp.left + ibpu + ');';
            } else {
                customCSSInner += 'padding: ' + sp.top + pu + ' ' + sp.right + pu + ' ' + sp.bottom + pu + ' ' + sp.left + pu + ';';
            }
        } else {
            if (settings.constrain_background != undefined && settings.constrain_background.yes && settings.inner_background_padding.useDefault == 'custom') {
                var _ibp2 = settings.inner_background_padding;
                var _ibpu2 = _ibp2.units;
                customCSSInner += 'padding: ' + _ibp2.top + _ibpu2 + ' ' + _ibp2.right + _ibpu2 + ' ' + _ibp2.bottom + _ibpu2 + ' ' + _ibp2.left + _ibpu2 + ';';
            }
        }
        if (settings.border_radius.useDefault != 'default') {
            var borderRadiusUnits = settings.border_radius.units;
            customCSSInner += 'border-radius: ' + settings.border_radius.top + borderRadiusUnits + ' ' + settings.border_radius.right + borderRadiusUnits + ' ' + settings.border_radius.bottom + borderRadiusUnits + ' ' + settings.border_radius.left + borderRadiusUnits + ';';
        }
        if (settings.border.useDefault != 'default') {
            var borderUnits = settings.border.units;
            var borderColor = settings.border.color == 'default' ? '#000000' : settings.border.color == 'custom' ? settings.border.customColor : '';
            customCSS += 'border-style: ' + settings.border.type + ';';
            customCSS += 'border-width: ' + settings.border.top + borderUnits + ' ' + settings.border.right + borderUnits + ' ' + settings.border.bottom + borderUnits + ' ' + settings.border.left + borderUnits + ';';
            customCSS += borderColor ? 'border-color: ' + borderColor + ';' : '';
            //customCSSInner += `border-style: ${settings.border.type};`;
            //customCSSInner += `border-width: ${settings.border.top}${borderUnits} ${settings.border.right}${borderUnits} ${settings.border.bottom}${borderUnits} ${settings.border.left}${borderUnits};`;
            //customCSSInner += borderColor ? `border-color: ${borderColor};` : '';
        }
        if (settings.box_shadow.useDefault == 'custom') {
            var shad = settings.box_shadow;
            customCSS += 'box-shadow: ' + shad.horizontal + 'px ' + shad.vertical + 'px ' + shad.blur + 'px ' + shad.spread + 'px ' + shad.color + ';';
        }
        if (settings.text_shadow.useDefault == 'custom') {
            var tshad = settings.text_shadow;
            customCSS += 'text-shadow: ' + tshad.horizontal + 'px ' + tshad.vertical + 'px ' + tshad.blur + 'px ' + tshad.color + ';';
        }
        if (settings.base_font_size.useDefault != 'default') {
            customCSSInner += 'font-size: ' + settings.base_font_size.value + settings.base_font_size.units + ';';
        }
        if (settings.font_weight.useDefault != 'default') {
            customCSSInner += 'font-weight: ' + settings.font_weight.value + ';';
        }
        if (settings.letter_spacing.useDefault != 'default') {
            customCSSInner += 'letter-spacing: ' + settings.letter_spacing.value + settings.letter_spacing.units + ';';
        }
        if (settings.line_height.useDefault != 'default') {
            customCSSInner += 'line-height: ' + settings.line_height.value + settings.line_height.units + ';';
        }
        if (object.type == 'row') {
            if (settings.hero_row_height != undefined && settings.hero_row_height.useDefault == 'custom' || settings.row_display_type != undefined && settings.row_display_type.choice == 'hero') {
                var rowHeight = (settings.hero_row_height == undefined || settings.hero_row_height.useDefault == 'default') && settings.row_display_type != undefined && settings.row_display_type.choice == 'hero' ? 100 : settings.hero_row_height.value;
                customCSS += 'height: ' + rowHeight + 'vh;';
            }
        }
        var maxWidth = '';
        if (settings.margin.useDefault != 'default') {
            var marginUnits = settings.margin.units;
            var marginTop = settings.margin.top + marginUnits;
            var marginRight = settings.margin.right + marginUnits;
            var marginBottom = settings.margin.bottom + marginUnits;
            var marginLeft = settings.margin.left + marginUnits;
            if (maxWidthChoice != 'default') {
                if (object.inlineModuleAlign == undefined || object.inlineModuleAlign == null) {
                    if (settings.object_align == undefined || settings.object_align.choice == 'left' || settings.object_align.choice == 'center') {
                        marginLeft = 'initial';
                    }
                    if (settings.object_align == undefined || settings.object_align.choice == 'right' || settings.object_align.choice == 'center') {
                        marginRight = 'initial';
                    }
                }
                maxWidth += 'max-width: ' + maxWidthValue + maxWidthUnits + ';';
            }
            maxWidth += 'margin: ' + marginTop + ' ' + marginRight + ' ' + marginBottom + ' ' + marginLeft + ';';
        } else {
            if (maxWidthChoice != 'default') {
                maxWidth += 'max-width: ' + maxWidthValue + maxWidthUnits + ';';
            }
            if (settings.object_align != undefined) {
                switch (settings.object_align.choice) {
                    case 'left':
                        maxWidth += 'margin-left:initial';
                        break;
                    case 'right':
                        maxWidth += 'margin-right:initial';
                        break;
                    default:
                        maxWidth += 'margin-left:auto;margin-right:auto;';
                        break;
                }
            } else {
                maxWidth += 'margin-left:auto;margin-right:auto;';
            }
        }

        if (object.type == 'row') {
            customCSSInner += maxWidth;
        } else {
            customCSS += maxWidth;
        }

        var innerBackgroundCSS = '';
        if (settings.constrain_background != undefined && settings.constrain_background.yes) {
            var mobileBackgroundCSS = '';
            var mobileMaxWidth = '999px';
            var siteWidth = _settings_helpers2.default.getContentWidth();
            if (maxWidthChoice != 'default') {
                if (settings.padding.useDefault != 'default') {
                    innerBackgroundCSS += 'max-width: calc(' + maxWidthValue + maxWidthUnits + ' - ' + settings.padding.right + settings.padding.units + ' - ' + settings.padding.left + settings.padding.units + ');';
                    mobileBackgroundCSS += 'max-width: ' + maxWidthValue + maxWidthUnits + ';';
                    innerBackgroundCSS += 'margin-left: calc((' + maxWidthValue + maxWidthUnits + ' - ' + settings.padding.right + settings.padding.units + ' - ' + settings.padding.left + settings.padding.units + ') / 2 * -1);';
                } else {
                    innerBackgroundCSS += 'max-width: ' + maxWidthValue + maxWidthUnits + ';';
                    innerBackgroundCSS += 'margin-left: calc(' + maxWidthValue + maxWidthUnits + ' / 2 * -1);';
                }
                if (maxWidthUnits == 'px') {
                    mobileMaxWidth = maxWidthValue - 1 + maxWidthUnits;
                }
                innerBackgroundCSS += 'left: 50%;';
                mobileBackgroundCSS += 'width: 100%;';
                mobileBackgroundCSS += 'margin-left: 0; left: 0;';
            } else {
                if (settings.padding.useDefault != 'default') {
                    innerBackgroundCSS += 'width: calc(' + siteWidth + ' - ' + settings.padding.right + settings.padding.units + ' - ' + settings.padding.left + settings.padding.units + ');';
                    innerBackgroundCSS += 'margin-left: calc((' + siteWidth + ' - ' + settings.padding.right + settings.padding.units + ' - ' + settings.padding.left + settings.padding.units + ') / 2 * -1);';
                    mobileBackgroundCSS += 'width: 100%;';
                    mobileBackgroundCSS += 'margin-left: 0;';
                }
            }
            if (settings.padding.useDefault != 'default') {
                innerBackgroundCSS += 'height: calc(100% - ' + settings.padding.top + settings.padding.units + ' - ' + settings.padding.bottom + settings.padding.units + ');';
                innerBackgroundCSS += 'top: ' + settings.padding.top + settings.padding.units + ';';
            }
            //Need ocb-tree to distinguish between items in the workspace and object templates
            innerBackgroundCSS = '.ocb-tree ' + selectorChild + ' > .ocb-' + object.type + '-inner-background{' + innerBackgroundCSS + '}';

            if (mobileBackgroundCSS) {
                innerBackgroundCSS += '@media (max-width:' + mobileMaxWidth + '){.ocb-tree ' + selectorChild + ' > .ocb-' + object.type + '-inner-background{' + mobileBackgroundCSS + '}}';
            }
        }

        if (customCSS) {
            //Need ocb-tree to distinguish between items in the workspace and object templates
            customCSS = '.ocb-tree ' + selectorChild + '{' + customCSS + '}';
        }

        if (customCSSInner) {
            //Need ocb-tree to distinguish between items in the workspace and object templates
            customCSSInner = '.ocb-tree ' + selectorChild + ' > .ocb-' + object.type + '-inner{' + customCSSInner + '}';
        }

        //Do color separately because it needs to be more specific
        if (settings.color.color == 'custom') {
            var colorCSS = 'color: ' + settings.color.customColor + ' !important;';
            ['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'p', 'li'].forEach(function (tag) {
                customCSS += '.ocb-tree ' + selectorChild + ' ' + tag + '{' + colorCSS + '}';
            });
        }

        var fullCSSString = customCSS + customCSSInner + innerBackgroundCSS + extraCSS;
        var laptopBreakpoint = _settings_helpers2.default.getLaptopBreakpoint();
        var laptopBreakpointUnder = laptopBreakpoint - 1;
        var tabletBreakpoint = _settings_helpers2.default.getTabletBreakpoint();
        var tabletBreakpointUnder = tabletBreakpoint - 1;

        if (object.type == 'row') {
            //Column Gutters
            if (settings.column_gutter.useDefault != 'default') {
                var cg = settings.column_gutter.value / 2 + settings.column_gutter.units;
                fullCSSString += '@media (min-width:' + tabletBreakpoint + 'px){.ocb-tree ' + selectorChild + ' > .ocb-row-inner > .ocb-column{margin-left:' + cg + ';margin-right:' + cg + ';}.ocb-tree ' + selectorChild + ' > .ocb-row-inner > .ocb-column:first-child{margin-left:0}.ocb-tree ' + selectorChild + ' > .ocb-row-inner > .ocb-column:last-child{margin-right:0}';
            }
        }

        if (device) {
            switch (device) {
                case 'laptop':
                    if (settingsActive) {
                        customCSS = customCSS ? '.ocb-device-laptop ' + customCSS : '';
                        customCSSInner = customCSSInner ? '.ocb-device-laptop ' + customCSSInner : '';
                        fullCSSString = customCSS + customCSSInner;
                    } else {
                        fullCSSString = '@media (min-width:' + laptopBreakpoint + 'px){' + fullCSSString + '}';
                    }
                    break;
                case 'tablet':
                    if (settingsActive) {
                        customCSS = customCSS ? '.ocb-device-tablet ' + customCSS : '';
                        customCSSInner = customCSSInner ? '.ocb-device-tablet ' + customCSSInner : '';
                        fullCSSString = customCSS + customCSSInner;
                    } else {
                        fullCSSString = '@media (min-width:' + tabletBreakpoint + 'px) and (max-width:' + laptopBreakpointUnder + 'px){' + fullCSSString + '}';
                    }
                    break;
                case 'phone':
                    if (settingsActive) {
                        customCSS = customCSS ? '.ocb-device-phone ' + customCSS : '';
                        customCSSInner = customCSSInner ? '.ocb-device-phone ' + customCSSInner : '';
                        fullCSSString = customCSS + customCSSInner;
                    } else {
                        fullCSSString = '@media (max-width:' + tabletBreakpointUnder + 'px){' + fullCSSString + '}';
                    }
                    break;
            }
        }

        if (customCSS || customCSSInner || innerBackgroundCSS) {

            if (returnType == 'style') {
                return fullCSSString;
            }

            return _settings_helpers2.default.wrapCSSInStyleTag(fullCSSString, object.id, 'ocb-' + object.type + '-inner');
        } else {
            return null;
        }
    },


    /**
     * The Standard CSS that is separate from the skin
     */
    renderOtherStyle: function renderOtherStyle(settings, object) {
        var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

        var customCSS = '';
        var returnType = options.returnType != undefined ? options.returnType : 'tag';
        var selectorParent = '#' + object.type + '-' + object.id + '-parent';
        var selectorChild = '#' + object.type + '-' + object.id;

        if (settings.z_index != undefined && settings.z_index.useDefault != 'default') {
            //Need ocb-tree to distinguish between items in the workspace and object templates
            if (object.type == 'module') {
                customCSS += '.ocb-tree ' + selectorParent + '{z-index:' + settings.z_index.value + '}';
            } else {
                customCSS += '.ocb-tree ' + selectorChild + '{z-index:' + settings.z_index.value + '}';
            }
        }

        if (object.type == 'row' && settings.sticky_or_target != undefined && settings.sticky_or_target.choice == 'sticky') {
            if (settings.stuck_background != undefined && settings.stuck_background.color != 'default') {
                var backgroundColor = settings.stuck_background.color == 'custom' ? settings.stuck_background.customColor : window.OffsproutSiteSettings[settings.stuck_background.color + '_color'].customColor;
                customCSS += selectorChild + '.stuck > .ocb-item-background{background:' + backgroundColor + '; transition: background 0.5s}';
                customCSS += selectorChild + '.stuck > .ocb-item-background > div{display:none}'; //hide standard background
            }
            if (settings.stuck_color != undefined && settings.stuck_color.color != 'default') {
                var textColor = settings.stuck_color.color == 'custom' ? settings.stuck_color.customColor : window.OffsproutSiteSettings[settings.stuck_color.color + '_color'].customColor;
                customCSS += selectorChild + '.stuck, ' + selectorChild + '.stuck a:not(.ocb-button), ' + selectorChild + '.stuck .ocb-menu-wrap a{color:' + textColor + '; transition: color 0.5s}';
            }
        }

        if (object.type == 'row') {
            if (settings.column_stack_width != undefined && settings.column_stack_width.useDefault == 'custom') {
                customCSS += '@media (max-width:' + settings.column_stack_width.value + 'px){';
                customCSS += _settings_helpers2.default.wrapCSSProperty(object.id, '> .ocb-row-inner', 'flex-wrap', 'wrap', object.type);
                customCSS += _settings_helpers2.default.wrapCSSProperty(object.id, '> .ocb-row-inner > .ocb-column', 'width', '100%', object.type);

                if (settings.remove_stack_column_padding != undefined && settings.remove_stack_column_padding.yes == 1) {
                    customCSS += _settings_helpers2.default.wrapCSSProperty(object.id, '> .ocb-row-inner > .ocb-column > .ocb-column-inner', 'padding', 0, object.type);
                }

                customCSS += '}';
            }
        }

        if (object.type == 'column') {

            customCSS += _settings_helpers2.default.wrapCSSProperty(object.id, '', 'width', object.width + '%', 'column');

            if (settings.column_mobile_width != undefined && settings.column_mobile_width.useDefault == 'custom') {
                customCSS += '@media (max-width:767px){' + _settings_helpers2.default.wrapCSSProperty(object.id, '', 'width', settings.column_mobile_width.value + '% !important', 'column') + _settings_helpers2.default.wrapCSSProperty(object.id, '', 'display', 'inline-block', 'column') + '}';
            }
        }

        if (customCSS) {

            if (returnType == 'style') {
                return customCSS;
            }

            return _settings_helpers2.default.wrapCSSInStyleTag(customCSS, object.id, 'ocb-' + object.type + '-inner');
        } else {
            return null;
        }
    },


    /*getSkin: (object, id = false) => {
        let skinId = id ? id : object.skinId != undefined && object.skinId ? object.skinId : false;
        let skin = StandardHelpers.getObjectStandardStyleClasses(object);
        let backgroundStyle1 = BackgroundHelpers.getBackgroundStyleFromObject(object);
        let backgroundStyle2 = BackgroundHelpers.getBackgroundStyleFromObject(object, '_2');
        let backgroundStyle3 = BackgroundHelpers.getBackgroundStyleFromObject(object, '_3');
         let standardClasses = { standardClasses: skin.classes, standardParentClasses: skin.parentClasses, backgroundWrapClasses: skin.backgroundWrapClasses };
        standardClasses = Object.assign( standardClasses, backgroundStyle1.classes, backgroundStyle2.classes, backgroundStyle3.classes );
        standardClasses = ModuleHelpers.appendSkinTags( standardClasses, object.skinId, 'standard' );
         let standardCSS = skin.skinCSS + backgroundStyle1.css.css + backgroundStyle2.css.css + backgroundStyle3.css.css;
         //Get the design settings and values
        let designFields = StandardHelpers.getDesignFields();
        let standardSettings =  ModuleHelpers.getDesignFieldValues( designFields, object, 'standard', DefaultStandard().default );
         return { standardClasses, standardCSS, standardSettings }
    },*/

    getSkin: function getSkin(object) {
        var id = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

        var skinId = id ? id : object.skinId != undefined && object.skinId ? object.skinId : false;
        var skin = StandardHelpers.get_style(object.standard, object, skinId);
        var backgroundStyle1 = _background_helpers2.default.getBackgroundStyleFromObject(object);
        var backgroundStyle2 = _background_helpers2.default.getBackgroundStyleFromObject(object, '_2');
        var backgroundStyle3 = _background_helpers2.default.getBackgroundStyleFromObject(object, '_3');

        var standardClasses = skin.classes;
        standardClasses = Object.assign(standardClasses, backgroundStyle1.classes, backgroundStyle2.classes, backgroundStyle3.classes);
        standardClasses = _module_helpers2.default.appendSkinTags(standardClasses, object.skinId, 'standard');

        var standardCSS = skin.css.additional + backgroundStyle1.css.css + backgroundStyle2.css.css + backgroundStyle3.css.css;

        //Get the design settings and values
        var designFields = _module_helpers2.default.getDesignFields(false, (0, _default_standard2.default)().fields);
        var standardSettings = _module_helpers2.default.getDesignFieldValues(designFields, object, 'standard', (0, _default_standard2.default)().default);

        return { standardClasses: standardClasses, standardCSS: standardCSS, standardSettings: standardSettings };
    },

    getDesignFields: function getDesignFields(moduleType) {
        var allFields = (0, _default_standard2.default)();

        if (!allFields) return [];

        allFields = allFields.fields;
        var designFields = [];

        allFields.forEach(function (field) {
            if (field.wrap == 'field_wrap' && field.settingType == 'design') {
                designFields = designFields.concat([field.id]);
            } else if (field.wrap == 'field_group' && field.settingType == 'design') {
                designFields = designFields.concat(field.items);
            } else if (field.wrap == 'field_mixin' && field.settingType == 'design') {
                var mixins = window.OffsproutFieldMixinRegistry;
                var mixin = mixins.find(function (mixin) {
                    return mixin.id == field.mixin;
                });
                var prefix = field.prefix != undefined ? field.prefix : '';
                var mixinFields = mixin.fields.map(function (field) {
                    return prefix + field.id;
                });
                designFields = designFields.concat(mixinFields);
            } else if (field.settingType == 'design') {
                //designFields = designFields.concat( [field.id] );
            }
        });

        return designFields;
    },
    get_other_css: function get_other_css(settings, object) {
        var skinId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

        return StandardHelpers.renderOtherStyle(settings.linked, object, { returnType: 'style', skinId: skinId });
    },
    get_nonskin_classes: function get_nonskin_classes(props, object, settings) {
        var objectClass = '';
        var objectSettings = object.settings != undefined && object.settings.linked != undefined ? object.settings.linked : object.settings != undefined ? object.settings : {};

        if (settings.classes != undefined && settings.classes.text != undefined) {
            objectClass += ' ' + settings.classes.text;
        }

        if (settings.device_hide != undefined && settings.device_hide.choices != undefined && settings.device_hide.choices.length) {
            settings.device_hide.choices.forEach(function (choice) {
                objectClass += ' ocb-hide-' + choice;
            });
        }

        //Sticky
        if (settings.sticky_or_target != undefined && settings.sticky_or_target.choice == 'sticky') {
            objectClass += ' ocb-sticky';
            if (settings.stick_when_distance != undefined && settings.stick_when_distance.useDefault == 'custom' && settings.stick_when_distance.value < 0) {
                objectClass += ' ocb-sticky-appear';
            }
        }
        if (settings.stick_overlay != undefined && settings.stick_overlay.yes) {
            objectClass += ' ocb-row-absolute';
        }

        //Row Specific
        if (object.type == 'row') {
            if (settings.row_display_type != undefined) {
                switch (settings.row_display_type.choice) {
                    case 'overlay':
                        objectClass += ' ocb-row-overlay';
                        break;
                }
            }
        }

        //Column Specific
        if (object.type == 'column') {
            objectClass += ' ocb-column-vertical-' + objectSettings.verticalAlign;
        }

        //Module Specific
        if (object.type == 'module') {
            if (object.inlineModuleAlign == 'left' || object.inlineModuleAlign == 'right') {
                objectClass += ' ocb-module-inline-' + object.inlineModuleAlign;
            }
            var moduleIndex = window.OffsproutModuleRegistry.findIndex(function (module) {
                return module.type == object.moduleType;
            });
            if (window.OffsproutModuleRegistry[moduleIndex] != undefined && window.OffsproutModuleRegistry[moduleIndex].controlsPosition != undefined && window.OffsproutModuleRegistry[moduleIndex].controlsPosition == 'top') {
                objectClass += ' ocb-module-controls-top';
            }

            //Make modules look clickable during editing so that you can switch between them
            if (props.currentlyEditing) {
                objectClass += ' ocb-cursor-pointer';
            }
        }

        if (settings.bleed_full != undefined && settings.bleed_full.yes) {
            objectClass += ' ocb-bleed-full';
        }

        if (settings.login_status_show != undefined) {
            if (settings.login_status_show.choice == 'in') {
                objectClass += ' ocb-hide-logged-out';
            } else if (settings.login_status_show.choice == 'out') {
                objectClass += ' ocb-hide-logged-in';
            }
        }

        if (settings.overflow != undefined && settings.overflow.choice != 'default') {
            objectClass += ' ocb-overflow-' + settings.overflow.choice;
        }

        objectClass += ' ocbd' + props.depth.overall;

        if (props.depth.overall > 0) objectClass += ' ocbd-child';

        if (object.skinId) {
            //Because Modules have an extra layer, add the -parent
            if (object.type == 'module') {
                objectClass += ' ' + object.skinId + '-parent';
            } else {
                objectClass += ' ' + object.skinId;
            }
        }

        return objectClass;
    }
};
//import OAPI from './api_helpers';
exports.default = StandardHelpers;

/***/ }),

/***/ 6:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _wpapi = __webpack_require__(100);

var _wpapi2 = _interopRequireDefault(_wpapi);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var OAPI = {
    _wp: null,
    _payload: null,
    _options: null,
    _settings: function _settings() {
        return parent.OCBGlobalSettings;
    },
    _postType: function _postType() {
        return OAPI._settings().postType;
    },
    _postId: function _postId() {
        var postId = OAPI._settings().postId;
        return postId ? postId : -1;
    },
    _userId: function _userId() {
        return OAPI._settings().userId;
    },
    _templateRemote1: function _templateRemote1() {
        var url = OAPI._settings().remoteTemplates[0];
        if (!url.endsWith('/')) url += '/';
        return url;
    },
    _templateRemote2: function _templateRemote2() {
        var url = OAPI._settings().remoteTemplates[1];
        if (!url.endsWith('/')) url += '/';
        return url;
    },

    _update: function _update() {
        switch (OAPI._postType()) {
            case 'page':
                return OAPI._wp.pages().id(OAPI._postId()).update(OAPI._payload);
                break;
            case 'post':
                return OAPI._wp.posts().id(OAPI._postId()).update(OAPI._payload);
                break;
            //Allow updating and publishing of any post type
            default:
                var theUpdate = {};
                theUpdate.id = OAPI._postId();
                theUpdate.post = {};

                if (OAPI._payload.content != undefined) {
                    theUpdate.post.post_content = OAPI._payload.content;
                } else if (OAPI._payload.post_content != undefined) {
                    theUpdate.post.post_content = OAPI._payload.post_content;
                }

                if (OAPI._payload.status != undefined) {
                    theUpdate.post.post_status = OAPI._payload.status;
                } else if (OAPI._payload.post_status != undefined) {
                    theUpdate.post.post_status = OAPI._payload.post_status;
                }

                return OAPI._wp.theCustomRoute().action('update').update(theUpdate);

        }
    },

    _get: function _get() {
        switch (OAPI._postType()) {
            case 'page':
                return OAPI._wp.pages().id(OAPI._postId());
                break;
            case 'post':
                return OAPI._wp.posts().id(OAPI._postId());
                break;
        }

        return false;
    },

    _getPages: function _getPages() {
        return OAPI._wp.pages().get();
    },

    _getPosts: function _getPosts() {
        return OAPI._wp.posts().get();
    },

    _updateMeta: function _updateMeta() {
        return OAPI._wp.metaKeyRoute().metaKey(OAPI._options.metaKey).postId(OAPI._postId()).update(OAPI._payload);
    },

    _getMeta: function _getMeta() {
        return OAPI._wp.metaKeyRoute().metaKey(OAPI._options.metaKey).postId(OAPI._postId()).get();
    },

    _updateUsermeta: function _updateUsermeta() {
        return OAPI._wp.userMetaRoute().metaKey(OAPI._options.metaKey).userId(OAPI._options.userId).update(OAPI._payload);
    },

    _getUsermeta: function _getUsermeta() {
        return OAPI._wp.userMetaRoute().metaKey(OAPI._options.metaKey).userId(OAPI._userId()).get();
    },

    /*_getShortcode: () => {
        return OAPI._wp.shortcodeRoute()
            .shortcode( OAPI._options.shortcode )
            .shortcodeArgs( OAPI._options.shortcodeArgs )
            .shortcodeContent( OAPI._options.shortcodeContent )
            .postId( OAPI._postId() )
            .get();
    },*/
    _getShortcode: function _getShortcode() {
        return OAPI._wp.shortcodeRoute().shortcode(OAPI._options.shortcode).postId(OAPI._postId()).update({
            args: OAPI._options.shortcodeArgs,
            content: OAPI._options.shortcodeContent
        });
    },

    _getEmbed: function _getEmbed() {
        return OAPI._wp.embedRoute().update(OAPI._payload);
    },

    _getSetting: function _getSetting() {
        return OAPI._wp.settingsRoute().setting(OAPI._options.setting).get();
    },

    _updateSetting: function _updateSetting() {
        return OAPI._wp.settingsRoute().setting(OAPI._options.setting).update(OAPI._payload);
        //.then((response, error) => {});
    },

    _deleteSetting: function _deleteSetting() {
        return OAPI._wp.settingsRoute().setting(OAPI._options.setting).delete();
    },

    _getPostTypes: function _getPostTypes() {
        return OAPI._wp.types();
    },

    _getOfPostType: function _getOfPostType() {
        return OAPI._wp.customPostTypeAllRoute().type(OAPI._options.type).get();
    },

    _getTemplates: function _getTemplates() {
        return OAPI._wp.allTemplatesRoute().update(OAPI._payload);
    },

    _getStructures: function _getStructures() {
        return OAPI._wp.allStructuresRoute().get();
    },

    _saveTemplate: function _saveTemplate() {
        return OAPI._wp.templatesRoute().customId(1).create(OAPI._payload);
    },

    _getTemplate: function _getTemplate() {
        var customId = OAPI._options.customId != undefined && OAPI._options.customId != false ? OAPI._options.customId : 1;
        return OAPI._wp.templatesRoute().customId(customId).get();
    },

    _updateTemplate: function _updateTemplate() {
        var customId = OAPI._options.customId != undefined && OAPI._options.customId != false ? OAPI._options.customId : 1;
        return OAPI._wp.templatesRoute().customId(customId).update(OAPI._payload);
    },

    _deleteTemplate: function _deleteTemplate() {
        return OAPI._wp.templatesRoute().customId(OAPI._options.customId).delete();
    },

    _getCategories: function _getCategories() {
        return OAPI._wp.categories().perPage(100).get();
    },

    _getTags: function _getTags() {
        return OAPI._wp.tags().perPage(100).get();
    },

    _getUsers: function _getUsers() {
        return OAPI._wp.users().get();
    },

    _getTaxonomies: function _getTaxonomies() {
        return OAPI._wp.taxonomies().get();
    },

    _getTaxonomy: function _getTaxonomy() {
        return OAPI._wp.customTaxonomyRoute().type(OAPI._options.taxonomy).get();
    },

    _createCustom: function _createCustom() {
        return OAPI._wp.theCustomRoute().action('create').create(OAPI._payload);
    },

    _getCustom: function _getCustom() {
        return OAPI._wp.theCustomRoute().action('get').update(OAPI._payload);
    },

    _updateCustom: function _updateCustom() {
        return OAPI._wp.theCustomRoute().action('update').update(OAPI._payload);
    },

    _deleteCustom: function _deleteCustom() {
        return OAPI._wp.theCustomRoute().action('delete').update(OAPI._payload);
    },

    _getCustomUsers: function _getCustomUsers() {
        return OAPI._wp.customUserRoute().action('get').update(OAPI._payload);
    },

    _updateCustomUsers: function _updateCustomUsers() {
        return OAPI._wp.customUserRoute().action('update').update(OAPI._payload);
    },

    _getQuery: function _getQuery() {
        return OAPI._wp.queryRoute().update(OAPI._payload);
    },

    _runUtility: function _runUtility() {
        return OAPI._wp.utilityRoute().update(OAPI._payload);
    },

    _getRemoteTemplates: function _getRemoteTemplates() {
        return new Promise(function (resolve, reject) {
            // We call resolve(...) when what we were doing asynchronously was successful, and reject(...) when it failed.
            var allTemplates = [];

            OAPI._remote1.templatesRoute().get().then(function (response) {
                OAPI._remote2.templatesRoute().get().then(function (remoteResponse) {
                    allTemplates = response.concat(remoteResponse);
                    resolve(allTemplates);
                }).catch(function (error) {
                    allTemplates = response;
                    resolve(allTemplates);
                });
            }).catch(function (error) {
                OAPI._remote2.templatesRoute().get().then(function (remoteResponse) {
                    allTemplates = remoteResponse;
                    resolve(allTemplates);
                }).catch(function (error) {
                    //total failure - no templates
                    reject(allTemplates);
                });
            });
        });

        //return OAPI._remote1.templatesRoute().get();
    },

    _getRemotePageTemplates: function _getRemotePageTemplates() {
        return new Promise(function (resolve, reject) {
            // We call resolve(...) when what we were doing asynchronously was successful, and reject(...) when it failed.
            var allTemplates = [];

            OAPI._remote1.pageTemplatesRoute().get().then(function (response) {
                OAPI._remote2.pageTemplatesRoute().get().then(function (remoteResponse) {
                    allTemplates = response.concat(remoteResponse);
                    resolve(allTemplates);
                }).catch(function (error) {
                    allTemplates = response;
                    resolve(allTemplates);
                });
            }).catch(function (error) {
                OAPI._remote2.pageTemplatesRoute().get().then(function (remoteResponse) {
                    allTemplates = remoteResponse;
                    resolve(allTemplates);
                }).catch(function (error) {
                    //total failure - no templates
                    reject(allTemplates);
                });
            });
        });
    },

    _getRemoteTemplates1: function _getRemoteTemplates1() {
        return OAPI._remote1.templatesRoute().update(OAPI._payload);
    },
    _getRemoteTemplates2: function _getRemoteTemplates2() {
        return OAPI._remote2.templatesRoute().update(OAPI._payload);
    },
    _getRemotePageTemplates1: function _getRemotePageTemplates1() {
        return OAPI._remote1.pageTemplatesRoute().update(OAPI._payload);
    },
    _getRemotePageTemplates2: function _getRemotePageTemplates2() {
        return OAPI._remote2.pageTemplatesRoute().update(OAPI._payload);
    },
    _getRemoteSkins1: function _getRemoteSkins1() {
        return OAPI._remote1.skinsRoute().update(OAPI._payload);
    },
    _getRemoteTemplatePacks: function _getRemoteTemplatePacks() {
        return OAPI._remote1.templatePacksRoute().update(OAPI._payload);
    },

    doRequest: function doRequest(type, payload) {
        var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

        OAPI._wp = new _wpapi2.default({
            endpoint: OAPI._settings().root + (options.endpoint != undefined ? options.endpoint : ''),
            nonce: OAPI._settings().nonce
        });

        OAPI._wp.metaKeyRoute = OAPI._wp.registerRoute('offsprout/v2', '/meta/(?P<metaKey>)/(?P<postId>)');
        //OAPI._wp.shortcodeRoute = OAPI._wp.registerRoute( 'offsprout/v2', '/shortcode/(?P<shortcode>)/(?P<shortcodeArgs>)/(?P<shortcodeContent>)/(?P<postId>)' );
        OAPI._wp.shortcodeRoute = OAPI._wp.registerRoute('offsprout/v2', '/shortcode/(?P<shortcode>)/(?P<postId>)');
        OAPI._wp.embedRoute = OAPI._wp.registerRoute('offsprout/v2', '/embed/(?P<embed>)');
        OAPI._wp.settingsRoute = OAPI._wp.registerRoute('offsprout/v2', '/settings/(?P<setting>)');
        OAPI._wp.customPostTypeAllRoute = OAPI._wp.registerRoute('offsprout/v2', '/post_type/(?P<type>)');
        OAPI._wp.customPostTypeRoute = OAPI._wp.registerRoute('offsprout/v2', '/post_type/(?P<type>)/(?P<postId>)');
        OAPI._wp.customTaxonomyRoute = OAPI._wp.registerRoute('offsprout/v2', '/taxonomy/(?P<type>)');
        OAPI._wp.templatesRoute = OAPI._wp.registerRoute('offsprout/v2', '/templates/(?P<customId>)');
        OAPI._wp.structuresRoute = OAPI._wp.registerRoute('offsprout/v2', '/structures/(?P<postId>)');
        OAPI._wp.allTemplatesRoute = OAPI._wp.registerRoute('offsprout/v2', '/all_templates');
        OAPI._wp.allStructuresRoute = OAPI._wp.registerRoute('offsprout/v2', '/all_structures');
        OAPI._wp.theCustomRoute = OAPI._wp.registerRoute('offsprout/v2', '/custom/(?P<action>)');
        OAPI._wp.userMetaRoute = OAPI._wp.registerRoute('offsprout/v2', '/usermeta/(?P<metaKey>)/(?P<userId>)');
        OAPI._wp.customUserRoute = OAPI._wp.registerRoute('offsprout/v2', '/custom_user/(?P<action>)');
        OAPI._wp.queryRoute = OAPI._wp.registerRoute('offsprout/v2', '/query');
        OAPI._wp.utilityRoute = OAPI._wp.registerRoute('offsprout/v2', '/utility');

        //add this random string to templateSite requests to make sure that the request isn't grabbing something that has been cached
        // cached reqests could have Access-Control-Allow-Origin cached as the last domain to request instead of *
        // DOES NOT WORK WITH API ROUTES
        var randomString = '?' + (Date.now().toString(36) + Math.random().toString(36).substr(2, 9)).toLowerCase();

        OAPI._remote1 = new _wpapi2.default({ endpoint: OAPI._templateRemote1() + 'wp-json/' });
        OAPI._remote1.templatesRoute = OAPI._remote1.registerRoute('offsproutTemplateSite/v1', '/templates');
        OAPI._remote1.pageTemplatesRoute = OAPI._remote1.registerRoute('offsproutTemplateSite/v1', '/page_templates');
        OAPI._remote1.skinsRoute = OAPI._remote1.registerRoute('offsproutTemplateSite/v1', '/skins');
        OAPI._remote1.templatePacksRoute = OAPI._remote1.registerRoute('offsproutTemplateSite/v1', '/packs');

        OAPI._remote2 = new _wpapi2.default({ endpoint: OAPI._templateRemote2() + 'wp-json/' });
        OAPI._remote2.templatesRoute = OAPI._remote2.registerRoute('offsproutTemplateSite/v1', '/templates');
        OAPI._remote2.pageTemplatesRoute = OAPI._remote2.registerRoute('offsproutTemplateSite/v1', '/page_templates');

        OAPI._payload = payload;
        OAPI._options = options;

        switch (type) {
            case 'update':
                return OAPI._update();
                break;
            case 'get':
                return OAPI._get();
                break;
            case 'getPages':
                return OAPI._getPages();
                break;
            case 'getPosts':
                return OAPI._getPosts();
                break;
            case 'updateMeta':
                return OAPI._updateMeta();
                break;
            case 'getMeta':
                return OAPI._getMeta();
                break;
            case 'updateUsermeta':
                return OAPI._updateUsermeta();
                break;
            case 'getUsermeta':
                return OAPI._getUsermeta();
                break;
            case 'getShortcode':
                return OAPI._getShortcode();
                break;
            case 'getEmbed':
                return OAPI._getEmbed();
                break;
            case 'updateSetting':
                return OAPI._updateSetting();
                break;
            case 'deleteSetting':
                return OAPI._deleteSetting();
                break;
            case 'getSetting':
                return OAPI._getSetting();
                break;
            case 'getPostTypes':
                return OAPI._getPostTypes();
                break;
            case 'getOfPostType':
                return OAPI._getOfPostType();
                break;
            case 'getTemplate':
                return OAPI._getTemplate();
                break;
            case 'getTemplates':
                return OAPI._getTemplates();
                break;
            case 'getStructures':
                return OAPI._getStructures();
                break;
            case 'saveTemplate':
                return OAPI._saveTemplate();
                break;
            case 'updateTemplate':
                return OAPI._updateTemplate();
                break;
            case 'deleteTemplate':
                return OAPI._deleteTemplate();
                break;
            case 'getCategories':
                return OAPI._getCategories();
                break;
            case 'getTags':
                return OAPI._getTags();
                break;
            case 'getTaxonomies':
                return OAPI._getTaxonomies();
                break;
            case 'getTaxonomy':
                return OAPI._getTaxonomy();
                break;
            case 'createCustom':
                return OAPI._createCustom();
                break;
            case 'getCustom':
                return OAPI._getCustom();
                break;
            case 'updateCustom':
                return OAPI._updateCustom();
                break;
            case 'deleteCustom':
                return OAPI._deleteCustom();
                break;
            case 'getUsers':
                return OAPI._getUsers();
                break;
            case 'getCustomUsers':
                return OAPI._getCustomUsers();
                break;
            case 'updateCustomUsers':
                return OAPI._updateCustomUsers();
                break;
            case 'getQuery':
                return OAPI._getQuery();
                break;
            case 'runUtility':
                return OAPI._runUtility();
                break;
            case 'getRemoteTemplates':
                return OAPI._getRemoteTemplates();
                break;
            case 'getRemotePageTemplates':
                return OAPI._getRemotePageTemplates();
                break;
            case 'getRemoteTemplates1':
                return OAPI._getRemoteTemplates1();
                break;
            case 'getRemoteTemplates2':
                return OAPI._getRemoteTemplates2();
                break;
            case 'getRemotePageTemplates1':
                return OAPI._getRemotePageTemplates1();
                break;
            case 'getRemotePageTemplates2':
                return OAPI._getRemotePageTemplates2();
                break;
            case 'getRemoteSkins1':
                return OAPI._getRemoteSkins1();
                break;
            case 'getRemoteTemplatePacks':
                return OAPI._getRemoteTemplatePacks();
                break;
        }
    }
};

exports.default = OAPI;

/***/ }),

/***/ 614:
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(1499)


/***/ }),

/***/ 63:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _deepmerge = __webpack_require__(9);

var _deepmerge2 = _interopRequireDefault(_deepmerge);

var _settings_helpers = __webpack_require__(2);

var _settings_helpers2 = _interopRequireDefault(_settings_helpers);

var _module_helpers = __webpack_require__(12);

var _module_helpers2 = _interopRequireDefault(_module_helpers);

var _icon_item_helpers = __webpack_require__(44);

var _icon_item_helpers2 = _interopRequireDefault(_icon_item_helpers);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//import OAPI from '../../../../shared/helpers/api_helpers';
var ButtonItemHelpers = {
    get_button_item_style: function get_button_item_style(settings, object) {
        var skinId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
        var type = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;

        var newSettings = {};

        for (var setting in settings) {
            if (!settings.hasOwnProperty(setting)) continue;

            var newSettingName = setting.replace('button_', '');
            newSettings[newSettingName] = settings[setting];
        }

        newSettings = Array.isArray(newSettings) && !newSettings.length ? ButtonItemHelpers.getDefaultItemButton() : (0, _deepmerge2.default)(ButtonItemHelpers.getDefaultItemButton(), newSettings);

        var id = skinId ? skinId : object.id;

        var classes = ButtonItemHelpers.get_button_item_classes(newSettings, object, id);
        var css = ButtonItemHelpers.get_button_item_css(newSettings, object, id, type);

        var iconStyle = _icon_item_helpers2.default.get_icon_item_style(newSettings, object, id);

        classes = Object.assign(classes, iconStyle.classes);
        css += iconStyle.css;

        return { classes: classes, css: css };
    },
    get_button_item_classes: function get_button_item_classes(settings, object) {
        var skinId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

        var buttonInputOuterClasses = '';
        var buttonInputInnerClasses = '';

        buttonInputOuterClasses += settings.background.color != 'custom' ? ' ' + settings.background.color + '-background' : '';
        buttonInputInnerClasses += settings.color.color != 'custom' ? ' ' + settings.color.color + '-color' : '';
        buttonInputOuterClasses += settings.background_hover.color != 'custom' ? ' ' + settings.background_hover.color + '-background-hover' : '';
        buttonInputInnerClasses += settings.color_hover.color != 'custom' ? ' ' + settings.color_hover.color + '-color-hover' : '';
        buttonInputOuterClasses += settings.border.color != 'custom' ? ' ' + settings.border.color + '-border-color' : '';

        return { buttonInputOuterClasses: buttonInputOuterClasses, buttonInputInnerClasses: buttonInputInnerClasses, buttonCombinedClasses: buttonInputInnerClasses + buttonInputOuterClasses };
    },
    get_button_item_css: function get_button_item_css(settings, object) {
        var skinId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
        var type = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;

        var fullStyle = '';
        var style = _settings_helpers2.default.getButtonStyle(settings);

        var moduleSelector = skinId.startsWith('skin') ? '.' + skinId : '#module-' + skinId;

        if (settings.icon_font_size.useDefault == 'custom') {
            fullStyle += moduleSelector + ' .ocb-button-icon{font-size:' + settings.icon_font_size.value + settings.icon_font_size.units + '}';
        }

        if (style.style || style.styleHover || style.outerStyle || style.outerStyleHover) {
            if (type == 'submit') {
                if (style.style) {
                    fullStyle += moduleSelector + ' .ocb-button-input{' + style.style + '}';
                }
                if (style.outerStyle) {
                    fullStyle += moduleSelector + ' .ocb-button{' + style.outerStyle + '}';
                }
                if (style.styleHover) {
                    fullStyle += moduleSelector + ' .ocb-button-input:hover{' + style.styleHover + '}';
                }
                if (style.outerStyleHover) {
                    fullStyle += moduleSelector + ' .ocb-button:hover{' + style.outerStyleHover + '}';
                }
            } else {
                if (style.style || style.outerStyle) {
                    fullStyle += moduleSelector + ' .ocb-button{' + style.style + style.outerStyle + '}';
                }
                if (style.styleHover || style.outerStyleHover) {
                    fullStyle += moduleSelector + ' .ocb-button:hover{' + style.styleHover + style.outerStyleHover + '}';
                }
            }
        }

        //Mobile Style
        if (object.deviceLock != undefined && object.deviceLock === false) {
            var mobileStyle = '',
                tabletStyle = '',
                laptopStyle = '';
            var theDefaults = _settings_helpers2.default.getModuleRegistryProp(object.moduleType, 'default').default;

            var mS = Object.assign({}, theDefaults, object.settings.phone),
                tS = Object.assign({}, theDefaults, object.settings.tablet),
                lS = Object.assign({}, theDefaults, object.settings.laptop);

            if (mS.font_size != undefined && mS.font_size.useDefault == 'custom') {
                mobileStyle += 'font-size:' + mS.font_size.value + mS.font_size.units + ';';
            }
            if (mS.padding != undefined && mS.padding.useDefault == 'custom') {
                var mSP = mS.padding;
                var mSPU = mSP.units;
                mobileStyle += 'padding:' + mSP.top + mSPU + ' ' + mSP.right + mSPU + ' ' + mSP.bottom + mSPU + ' ' + mSP.left + mSPU + ';';
            }
            if (mS.width != undefined && mS.width.useDefault == 'custom') {
                mobileStyle += 'width:' + mS.width.value + mS.width.units + ';';
            }

            if (tS.font_size != undefined && tS.font_size.useDefault == 'custom') {
                tabletStyle += 'font-size:' + tS.font_size.value + tS.font_size.units + ';';
            }
            if (tS.padding != undefined && tS.padding.useDefault == 'custom') {
                var tSP = tS.padding;
                var tSPU = tSP.units;
                tabletStyle += 'padding:' + tSP.top + tSPU + ' ' + tSP.right + tSPU + ' ' + tSP.bottom + tSPU + ' ' + tSP.left + tSPU + ';';
            }
            if (tS.width != undefined && tS.width.useDefault == 'custom') {
                tabletStyle += 'width:' + tS.width.value + tS.width.units + ';';
            }

            if (lS.font_size != undefined && lS.font_size.useDefault == 'custom') {
                laptopStyle += 'font-size:' + lS.font_size.value + lS.font_size.units + ';';
            }
            if (lS.padding != undefined && lS.padding.useDefault == 'custom') {
                var lSP = lS.padding;
                var lSPU = lSP.units;
                laptopStyle += 'padding:' + lSP.top + lSPU + ' ' + lSP.right + lSPU + ' ' + lSP.bottom + lSPU + ' ' + lSP.left + lSPU + ';';
            }
            if (lS.width != undefined && lS.width.useDefault == 'custom') {
                laptopStyle += 'width:' + lS.width.value + lS.width.units + ';';
            }

            var buttonSelector = '.ocb-button';
            if (type == 'submit') {
                buttonSelector += '.ocb-button-input';
            }

            var laptopBreakpoint = _settings_helpers2.default.getLaptopBreakpoint();
            var laptopBreakpointUnder = laptopBreakpoint - 1;
            var tabletBreakpoint = _settings_helpers2.default.getTabletBreakpoint();
            var tabletBreakpointUnder = tabletBreakpoint - 1;

            if (mobileStyle) {
                fullStyle += '@media (max-width:' + tabletBreakpointUnder + 'px){' + moduleSelector + ' ' + buttonSelector + '{' + mobileStyle + '}}';
            }
            if (tabletStyle) {
                fullStyle += '@media (min-width:' + tabletBreakpoint + 'px) and (max-width:' + laptopBreakpointUnder + 'px){' + moduleSelector + ' ' + buttonSelector + '{' + tabletStyle + '}}';
            }
            if (laptopStyle) {
                fullStyle += '@media (min-width:' + laptopBreakpoint + 'px){' + moduleSelector + ' ' + buttonSelector + '{' + laptopStyle + '}}';
            }
        }

        return fullStyle;
    },
    getDefaultItemButton: function getDefaultItemButton() {
        return {
            text: {
                text: 'Click here'
            },
            link: {
                url: ''
            },
            alignment: {
                choice: 'center'
            },
            mobile_alignment: {
                choice: 'center'
            },
            uppercase: {
                yes: 0
            },
            bold: {
                yes: 0
            },
            add_icon: {
                yes: 0
            },
            icon: {
                icon: 'fa-chevron-right'
            },
            icon_alignment: {
                choice: 'right'
            },
            skin: {
                choice: 'action'
            },
            font_size: {
                value: 1,
                units: 'em',
                useDefault: 'default'
            },
            icon_font_size: {
                value: 1,
                units: 'em',
                useDefault: 'default'
            },
            letter_spacing: {
                value: 0,
                units: 'px',
                useDefault: 'default'
            },
            background: {
                color: 'action'
            },
            background_hover: {
                color: 'action'
            },
            color: {
                color: 'white'
            },
            color_hover: {
                color: 'white'
            },
            border: {
                top: 1,
                left: 1,
                bottom: 1,
                right: 1,
                units: 'px',
                useDefault: 'default',
                type: 'solid',
                color: 'default',
                customColor: '#000000'
            },
            padding: {
                top: 15,
                left: 30,
                right: 30,
                bottom: 15,
                units: 'px',
                useDefault: 'default'
            },
            width: {
                value: 300,
                units: 'px',
                useDefault: 'default'
            },
            border_radius: {
                value: 0,
                units: '%',
                useDefault: 'default'
            },
            box_shadow: {
                useDefault: 'default',
                horizontal: 0,
                vertical: 0,
                blur: 1,
                spread: 3,
                color: 'rgba(0,0,0,0.2)'
            }
        };
    }
};

exports.default = ButtonItemHelpers;

/***/ }),

/***/ 64:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _deepmerge = __webpack_require__(9);

var _deepmerge2 = _interopRequireDefault(_deepmerge);

var _reactRedux = __webpack_require__(5);

var _settings_helpers = __webpack_require__(2);

var _settings_helpers2 = _interopRequireDefault(_settings_helpers);

var _icon_item_helpers = __webpack_require__(44);

var _icon_item_helpers2 = _interopRequireDefault(_icon_item_helpers);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ItemIcon = function (_Component) {
    _inherits(ItemIcon, _Component);

    function ItemIcon(props) {
        _classCallCheck(this, ItemIcon);

        var _this = _possibleConstructorReturn(this, (ItemIcon.__proto__ || Object.getPrototypeOf(ItemIcon)).call(this, props));

        _this.state = { inlineEdit: false };
        return _this;
    }

    _createClass(ItemIcon, [{
        key: 'changeIcon',
        value: function changeIcon() {}

        /**
         *
         *
         * @returns {XML}
         */

    }, {
        key: 'render',
        value: function render() {
            var classesAndCSS = this.props.classesCSS != undefined ? this.props.classesCSS : false;
            var styleTag = null;
            var skinId = this.props.skinId != undefined ? this.props.skinId : this.props.object != undefined ? this.props.object.skinId : false;
            var object = this.props.object != undefined ? this.props.object : { id: this.props.objectId };

            //Get settings from the skin if a skin is active
            if (skinId && this.props.skinState[skinId] != undefined) {
                classesAndCSS = {
                    classes: this.props.skinState[skinId].classes,
                    css: null
                };
            } else {
                if (!classesAndCSS) {
                    classesAndCSS = _icon_item_helpers2.default.get_icon_item_style(this.props.settings, object, skinId);
                    styleTag = _settings_helpers2.default.wrapCSSInStyleTag(classesAndCSS.css, object.id, '.ocb-item-icon');
                }
            }

            return _react2.default.createElement(
                'span',
                { className: 'ocb-item-icon-wrap' },
                styleTag,
                _react2.default.createElement(
                    'span',
                    { className: 'ocb-item-icon d-inline-flex justify-content-center align-items-center ' + classesAndCSS.classes.itemIcon },
                    _react2.default.createElement('i', { className: 'ocb-fa fa ' + this.props.icon, onClick: this.changeIcon.bind(this) })
                )
            );
        }
    }]);

    return ItemIcon;
}(_react.Component);

function mapStateToProps(_ref) {
    var skinState = _ref.skinState;

    return { skinState: skinState };
}

exports.default = (0, _reactRedux.connect)(mapStateToProps)(ItemIcon);

/***/ }),

/***/ 688:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
var API_URL = exports.API_URL = "https://api.unsplash.com";
var API_VERSION = exports.API_VERSION = "v1";
var OAUTH_AUTHORIZE_URL = exports.OAUTH_AUTHORIZE_URL = "https://unsplash.com/oauth/authorize";
var OAUTH_TOKEN_URL = exports.OAUTH_TOKEN_URL = "https://unsplash.com/oauth/token";

/***/ }),

/***/ 689:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.formUrlEncode = formUrlEncode;
exports.getUrlComponents = getUrlComponents;
exports.buildFetchOptions = buildFetchOptions;

var _querystring = __webpack_require__(181);

var _formUrlencoded = __webpack_require__(1123);

var _formUrlencoded2 = _interopRequireDefault(_formUrlencoded);

var _urlParse = __webpack_require__(1842);

var _urlParse2 = _interopRequireDefault(_urlParse);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function formUrlEncode(body) {
  return (0, _formUrlencoded2.default)(body);
}

function getUrlComponents(uri) {
  return (0, _urlParse2.default)(uri, {}, true);
}

function buildFetchOptions(options) {
  var method = options.method,
      query = options.query,
      oauth = options.oauth,
      body = options.body;

  var url = oauth === true ? options.url : "" + this._apiUrl + options.url;
  var headers = _extends({}, this._headers, options.headers, {
    "Accept-Version": this._apiVersion,
    "Authorization": this._bearerToken ? "Bearer " + this._bearerToken : "Client-ID " + this._applicationId
  });

  if (body) {
    headers["Content-Type"] = "application/x-www-form-urlencoded";
  }

  if (query) {
    url = decodeURIComponent(url + "?" + (0, _querystring.stringify)(query));
  }

  return {
    url: url,
    options: {
      method: method,
      headers: headers,
      body: method !== "GET" && body ? formUrlEncode(body) : undefined
    }
  };
}

/***/ }),

/***/ 698:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _tree = __webpack_require__(82);

var _tree2 = _interopRequireDefault(_tree);

var _reactRedux = __webpack_require__(5);

var _redux = __webpack_require__(7);

var _combokeys = __webpack_require__(33);

var _combokeys2 = _interopRequireDefault(_combokeys);

var _object_settings = __webpack_require__(843);

var _object_settings2 = _interopRequireDefault(_object_settings);

var _menu = __webpack_require__(840);

var _menu2 = _interopRequireDefault(_menu);

var _top_toolbar = __webpack_require__(849);

var _top_toolbar2 = _interopRequireDefault(_top_toolbar);

var _index = __webpack_require__(8);

var _url_helpers = __webpack_require__(27);

var _url_helpers2 = _interopRequireDefault(_url_helpers);

var _deepmerge = __webpack_require__(9);

var _deepmerge2 = _interopRequireDefault(_deepmerge);

var _module_helpers = __webpack_require__(12);

var _module_helpers2 = _interopRequireDefault(_module_helpers);

var _module_selector = __webpack_require__(102);

var _module_selector2 = _interopRequireDefault(_module_selector);

var _help_button = __webpack_require__(101);

var _help_button2 = _interopRequireDefault(_help_button);

var _connector_screen = __webpack_require__(236);

var _connector_screen2 = _interopRequireDefault(_connector_screen);

var _app_overlay = __webpack_require__(13);

var _app_overlay2 = _interopRequireDefault(_app_overlay);

var _workspace = __webpack_require__(350);

var _workspace2 = _interopRequireDefault(_workspace);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

__webpack_require__(850);
//require('./registry_extended.js');
__webpack_require__(800);
__webpack_require__(798);
__webpack_require__(848);

var App = function (_Component) {
    _inherits(App, _Component);

    function App(props) {
        _classCallCheck(this, App);

        var _this = _possibleConstructorReturn(this, (App.__proto__ || Object.getPrototypeOf(App)).call(this, props));

        _this.onUnload = _this.onUnload.bind(_this); // if you need to bind callback to this
        return _this;
    }

    /**
     * Before the user navigates away from the window, warn the user that she has unsaved changes.
     * Since this is only triggered if undoRedoState has more than 1 state, this does not trigger if there are not unsaved changes
     *
     * Most browsers do not support a custom message for this event
     * @param event
     * @returns {string}
     */


    _createClass(App, [{
        key: 'onUnload',
        value: function onUnload(event) {
            if (this.props.undoRedoState.states != undefined && this.props.undoRedoState.states.length > 1 && (this.props.undoRedoState.lastSaveStatesNumber == undefined || this.props.undoRedoState.lastSaveStatesNumber < this.props.undoRedoState.states.length)) {
                var confirmationMessage = "Are you sure you want to leave? You will lose any unsaved changes!";
                event.returnValue = confirmationMessage;
                return confirmationMessage;
            }
        }
    }, {
        key: 'componentDidMount',
        value: function componentDidMount() {
            window.addEventListener("beforeunload", this.onUnload);
            this.shouldResetHomepage();
            this.noStructureError();
            this.keyboardShortcuts();
        }
    }, {
        key: 'componentDidUpdate',
        value: function componentDidUpdate() {
            if (this.props.workspaceState.maybeSwitchActiveObjectGroup) {
                this.maybeSwitchActiveObjectGroup('save');
            }
        }
    }, {
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {
            window.removeEventListener("beforeunload", this.onUnload);
        }
    }, {
        key: 'keyboardShortcuts',
        value: function keyboardShortcuts() {
            var _this2 = this;

            var combokeys = new _combokeys2.default(document.documentElement);
            var combokeysIframe = new _combokeys2.default(document.getElementById('ocb-workspace-iframe').contentWindow);

            //Allows bindGlobal, which makes this work inside of textareas
            __webpack_require__(19)(combokeys);
            __webpack_require__(19)(combokeysIframe);

            //Save inline editing
            combokeysIframe.bindGlobal(['command+return', 'ctrl+return'], function () {
                if (_this2.props.inlineEditState.inlineEditing) {
                    var object = JSON.parse(JSON.stringify(_this2.props.inlineEditState.inlineEditingObject));
                    _this2.props.inlineEditStop();
                    _this2.props.objectUpdated(object);
                }
            });

            combokeys.bindGlobal(['esc'], function () {
                if (_this2.props.appState.overlay != null) {
                    //Don't allow escape for Save template overlay because for some reason if you use escape for save template, you can't get save template back
                    if (_this2.props.appState.overlay.props == undefined || _this2.props.appState.overlay.props.title != 'Save Template') {
                        _this2.props.updateAppState('overlay', null);
                    }
                }
            });

            combokeysIframe.bindGlobal(['esc'], function () {
                if (_this2.props.appState.overlay != null) {
                    //Don't allow escape for Save template overlay because for some reason if you use escape for save template, you can't get save template back
                    if (_this2.props.appState.overlay.props == undefined || _this2.props.appState.overlay.props.title != 'Save Template') {
                        _this2.props.updateAppState('overlay', null);
                    }
                }
            });
        }

        /**
         * This function is used to show a message that the user should try to reset the homepage
         * It is shown after using the Site Grower, when the site fails to save the show_on_front option as 'page'
         *
         * This is common in hosts with aggressive caching like WP Engine
         */

    }, {
        key: 'shouldResetHomepage',
        value: function shouldResetHomepage() {
            if (OCBGlobalSettings.should_reset_homepage == undefined || !OCBGlobalSettings.should_reset_homepage) return;

            var overlayOptions = [{
                classes: '',
                link: parent.OCBGlobalSettings.adminURL + 'options-reading.php?highlightSOF=1',
                //onClick: () => parent.window.location = parent.OCBGlobalSettings.adminURL + 'options-reading.php?highlightSOF=1',
                text: 'Okay'
            }];

            var overlay = _react2.default.createElement(_app_overlay2.default, {
                title: 'Hmmm...',
                content: 'It looks like this site is hosted on a host with aggressive caching and thus we were not able to save your homepage. Please click \'Okay\', and follow the directions on the next screen and we\'ll try to fix it for you.',
                stacked: '1',
                overlayStyle: 'small',
                options: overlayOptions
            });

            this.props.updateAppState('overlay', overlay);
        }

        /**
         * This function is used to show an error message that the page is using a structure without a content area
         *
         * This is common in hosts with aggressive caching like WP Engine
         */

    }, {
        key: 'noStructureError',
        value: function noStructureError() {
            var _this3 = this;

            //If the problem is the need to reset homepage, don't throw the no structure error
            if (OCBGlobalSettings.should_reset_homepage != undefined && OCBGlobalSettings.should_reset_homepage) return;

            //Keep trying this until window.OffsproutHasContentArea becomes available (adding in index.js)
            if (window.OffsproutHasContentArea == undefined) {
                setTimeout(function () {
                    _this3.noStructureError();
                }, 100);
                return;
            }

            if (window.OffsproutHasContentArea == true) return;

            var overlayOptions = [];
            var title = '';
            var content = '';

            if (parent.OCBGlobalSettings.editStructureUrl) {

                overlayOptions = [{
                    classes: '',
                    link: parent.OCBGlobalSettings.editStructureUrl,
                    text: 'Add Content Area'
                }, {
                    classes: '',
                    link: parent.OffsproutHelpDocs.structuresOverview,
                    text: 'Read Structures Tutorial'
                }, {
                    classes: 'ocb-danger',
                    onClick: function onClick() {
                        return _this3.props.updateAppState('overlay', null);
                    },
                    text: 'Don\'t Need Content Area'
                }];

                title = "Error: No Content Area";
                content = "This happens for 1 of 2 reasons. 1) You have just updated this plugin and need to delete your browser cache. 2) Your page is using a structure with no content area module. Structures should always have a content area module unless they are being used for archives or 404 pages.";
            } else {

                return;
            }

            var overlay = _react2.default.createElement(_app_overlay2.default, {
                title: title,
                content: content,
                stacked: '1',
                overlayStyle: 'small',
                options: overlayOptions
            });

            this.props.updateAppState('overlay', overlay);
        }

        /**
         * NOT CURRENTLY BEING USED - WORKSPACE VERSION USED INSTEAD
         * @param settings
         * @param which
         * @param parentRow
         * @param parentColumn
         */

    }, {
        key: 'makeSettingsActive',
        value: function makeSettingsActive(settings, which, parentRow, parentColumn) {
            var _this4 = this;

            jQuery('#ocb-workspace-iframe').contents().find('html').addClass('ocb-settings-panel-active');
            if (this.props.workspaceState.settingsActive) {
                this.revertSettings();
                setTimeout(function () {
                    _this4.makeSettingsActive(settings, which, parentRow, parentColumn);
                }, 600);
            } else {
                this.props.appMakeSettingsActive(settings, which, parentRow, parentColumn);
            }
        }
    }, {
        key: 'switchActiveSettings',
        value: function switchActiveSettings(which) {
            this.props.appSwitchActiveSettings(which);
        }
    }, {
        key: 'switchActiveObject',
        value: function switchActiveObject(settings, which) {
            if (this.props.workspaceState.editingSkin != undefined && this.props.workspaceState.editingSkin != false) return;

            this.saveSettingsUpdate();
            this.doneWithSettings();
            this.props.appSwitchActiveObject(settings, which);
            window.ocbReInitializeSubset();
            //this.props.appMakeSettingsInactive();
        }
    }, {
        key: 'maybeSwitchActiveObjectGroup',
        value: function maybeSwitchActiveObjectGroup(actionType) {
            var settings = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
            var which = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
            var parentColumn = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
            var parentRow = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;

            if (this.props.workspaceState.editingSkin != undefined && this.props.workspaceState.editingSkin != false) return;

            if (actionType == 'revert') {
                this.revertSettings(true);
            } else if (actionType == 'save') {
                this.saveSettingsUpdate();

                //Lets undoRedo history know that a change has been made by setting the action to OBJECT_UPDATED
                this.props.appSaveSettings(this.props.workspaceState.editSettings, false);
            }

            this.props.appMaybeSwitchActiveObjectGroup(actionType, settings, which, parentColumn, parentRow);
        }
    }, {
        key: 'revertSettings',
        value: function revertSettings() {
            var _this5 = this;

            var settingsPanel = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

            this.doneWithSettings();
            if (this.props.workspaceState.settingsOrStandard == 'standard' || this.props.workspaceState.settingsOrStandard == 'settings') {
                this.props.updateObjectStandard(this.props.workspaceState.editSettings, this.props.workspaceState.revertSettings['standard']);
                this.props.updateObjectSettings(this.props.workspaceState.editSettings, this.props.workspaceState.revertSettings['settings']);
                /*if( this.props.workspaceState.editSettings.skinId != this.props.workspaceState.revertSettings.skinId ){
                    if( this.props.workspaceState.revertSettings.skinId == undefined ){
                        this.props.updateObjectProperty(this.props.workspaceState.editSettings, this.props.workspaceState.revertSettings['settings']);
                    }
                }
                console.log('revertSettings', this.props.workspaceState.editSettings, this.props.workspaceState.revertSettings);*/
                this.props.updateObjectProperty(this.props.workspaceState.editSettings, { deviceLock: this.props.workspaceState.revertSettings['deviceLock'], skinId: this.props.workspaceState.revertSettings['skinId'] });
                if (this.props.workspaceState.editSettings.moduleType == 'side_by_side') {
                    this.props.updateObjectProperty(this.props.workspaceState.editSettings, { items: this.props.workspaceState.revertSettings.items });
                }

                //If we've gone from editing a module to editing the parent column or row, or editing a column to editing the parent row
                if (this.props.workspaceState.previousRevertSettings != undefined && this.props.workspaceState.previousRevertSettings.length) {
                    this.props.workspaceState.previousRevertSettings.forEach(function (previous) {
                        _this5.props.updateObjectStandard(previous.editSettings, previous.revertSettings['standard']);
                        _this5.props.updateObjectSettings(previous.editSettings, previous.revertSettings['settings']);
                        _this5.props.updateObjectProperty(previous.editSettings, { deviceLock: previous.revertSettings['deviceLock'] });
                        if (_this5.props.workspaceState.editSettings.moduleType == 'side_by_side') {
                            _this5.props.updateObjectProperty(previous.editSettings, { items: previous.revertSettings.items });
                        }
                    });
                }
            } else if (this.props.workspaceState.settingsOrStandard == 'site') {
                //All site settings are set to the linked object in order to make them work with the object settings panel
                this.props.updateSiteSettings(this.props.workspaceState.revertSettings['site'].linked);
            }

            window.ocbReInitializePlugins();

            if (!settingsPanel) {
                this.props.appMakeSettingsInactive();
            }
        }
    }, {
        key: 'saveSettings',
        value: function saveSettings(object) {
            this.saveSettingsUpdate();
            this.doneWithSettings();
            this.props.appSaveSettings(object);
        }
    }, {
        key: 'saveSettingsUpdate',
        value: function saveSettingsUpdate() {
            this.props.updateObjectProperty(this.props.workspaceState.editSettings, {
                standard: this.props.workspaceState.editSettings.standard,
                settings: this.props.workspaceState.editSettings.settings,
                skinId: this.props.workspaceState.editSettings.skinId
            });
        }
    }, {
        key: 'doneWithSettings',
        value: function doneWithSettings() {
            //Wait for revert to happen if it is being reverted
            var theId = this.props.workspaceState.editSettings.id;
            setTimeout(function () {
                var textModule = jQuery('#ocb-workspace-iframe').contents().find('#module-' + theId);

                textModule.find('.ocb-item-text').each(function () {
                    _module_helpers2.default.replaceShortcodes(jQuery(this).html(), jQuery(this));
                });
            }, 300);
            window.ocbReInitializeSubset();
        }
    }, {
        key: 'update',
        value: function update(device, property, _update) {
            var deviceShared = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;


            //let newState = Object.assign({}, this.props.workspaceState.editSettings[this.props.workspaceState.settingsOrStandard] );
            var newState = JSON.parse(JSON.stringify(this.props.workspaceState.editSettings[this.props.workspaceState.settingsOrStandard]));
            //let newStateSite = JSON.parse(JSON.stringify(this.props.workspaceState.editSettings[this.props.workspaceState.settingsOrStandard]));
            if (newState == undefined) {
                newState = {};
            }
            if (newState[device] == undefined) {
                newState[device] = {};
            }

            /*console.log('updating the app', {
                device,
                property,
                update,
                deviceShared,
                newState
            });*/

            newState[device][property] = _update;
            //newStateSite[property] = update;

            //If the device isn't linked, that means we're updating a specific device
            //However, if settings are shared (deviceShared), we want to update all devices and linked with that setting
            if (device != 'linked' && deviceShared) {
                newState.linked[property] = _update;

                //although these settings aren't actually ever used in the object itself, we need them to be accurate in the
                // settings panel so we update them anyway
                if (newState.laptop == undefined) newState.laptop = {};
                if (newState.tablet == undefined) newState.tablet = {};
                if (newState.phone == undefined) newState.phone = {};

                newState.laptop[property] = _update;
                newState.tablet[property] = _update;
                newState.phone[property] = _update;
            }

            //console.log('app update', { device, property, update, deviceShared });

            //console.log('this.props.workspaceState.editSettings', this.props.workspaceState.editSettings);
            //console.log('this.props.workspaceState.settingsOrStandard', this.props.workspaceState.settingsOrStandard);
            //console.log('newState update', update);
            //console.log('newState', newState);
            //console.log('newStateSite', newStateSite);

            if (this.props.workspaceState.settingsOrStandard == 'standard') {

                //Update the object (this.props.workspaceState.editSettings) in the tree with update (newState)
                //this.props.updateObjectStandard(this.props.workspaceState.editSettings, newState);

                //Also need update this.props.workspaceState.editSettings, which just contains the object in question
                this.props.appUpdateObjectStandard(newState);
            } else if (this.props.workspaceState.settingsOrStandard == 'settings') {

                //Update the object (this.props.workspaceState.editSettings) in the tree with update (newState)
                //this.props.updateObjectSettings(this.props.workspaceState.editSettings, newState);

                //Also need update this.props.workspaceState.editSettings, which just contains the object in question
                this.props.appUpdateObjectSettings(newState);
            } else if (this.props.workspaceState.settingsOrStandard == 'site') {

                //Update the object in the tree
                this.props.updateSiteSetting(property, _update);

                //Even though newState has the settings in the property, linked, this is what appUpdateObjectSite expects
                this.props.appUpdateObjectSite(newState);
            } else if (this.props.workspaceState.settingsOrStandard == 'page') {

                this.props.updatePageSetting(property, _update);
            }
        }
    }, {
        key: 'updateMergeObjectSettings',
        value: function updateMergeObjectSettings(update) {
            var _this6 = this;

            var object = JSON.parse(JSON.stringify(this.props.workspaceState.editSettings));
            object.settings.linked = (0, _deepmerge2.default)(object.settings.linked, update);

            this.props.updateObjectSettings(object, object.settings);
            this.props.appSaveSettings();
            setTimeout(function () {
                return _this6.props.appMakeSettingsActive(object, 'settings');
            }, 10);
        }
    }, {
        key: 'updateObjectProperty',
        value: function updateObjectProperty(object, update) {
            var device = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

            if (update.deviceLock != undefined && update.deviceLock === false && device) {
                jQuery('body').removeClass('ocb-device-laptop').removeClass('ocb-device-tablet').removeClass('ocb-device-phone').addClass('ocb-device-' + device);
                jQuery('#ocb-workspace-iframe').contents().find('html').removeClass('ocb-device-laptop').removeClass('ocb-device-tablet').removeClass('ocb-device-phone').addClass('ocb-device-' + device);
            } else if (update.deviceLock === true) {
                jQuery('body').removeClass('ocb-device-laptop').removeClass('ocb-device-tablet').removeClass('ocb-device-phone');
                jQuery('#ocb-workspace-iframe').contents().find('html').removeClass('ocb-device-laptop').removeClass('ocb-device-tablet').removeClass('ocb-device-phone');
            }
            this.laptopViewHack(device);
            this.props.updateObjectProperty(object, update);
        }

        /**
         * Makes sure that the iframe width is wide enough to trigger the laptop media queries, but keeps the workspace the right width
         *
         * @param device
         */

    }, {
        key: 'laptopViewHack',
        value: function laptopViewHack(device) {
            var iframe = document.getElementById('ocb-workspace-iframe');
            if (device == 'laptop') {
                var iframeWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;
                iframeWidth = iframeWidth * 0.75;
                jQuery(iframe).css('min-width', '1200px');
                jQuery(iframe).contents().find('html').css('max-width', iframeWidth + 'px');
            } else if (device != false) {
                jQuery(iframe).css('min-width', '');
                jQuery(iframe).contents().find('html').css('max-width', '');
            }
        }
    }, {
        key: 'keepIframeSyncedWithTop',
        value: function keepIframeSyncedWithTop() {
            var iframeLocation = document.getElementById('ocb-workspace-iframe').contentWindow.location.href;
            var windowLocation = top.location.href;

            iframeLocation = iframeLocation.replace('&offsproutIframe=1', '');

            if (iframeLocation != windowLocation) {
                top.location.href = iframeLocation;
            }
        }
    }, {
        key: 'render',
        value: function render() {
            var _this7 = this;

            //console.log( 'new app render with props: ', this.props);
            //console.log('render app this.props.workspaceState.editSettings', this.props.workspaceState.editSettings);

            var appFunctions = {
                makeSettingsActive: this.makeSettingsActive.bind(this),
                makeSettingsInactive: this.props.appMakeSettingsInactive,
                switchActiveSettings: this.switchActiveSettings.bind(this),
                switchActiveObject: this.switchActiveObject.bind(this),
                isSettingsActive: this.props.workspaceState.settingsActive,
                currentlyEditing: this.props.workspaceState.editSettings,
                parentRow: this.props.workspaceState.parentRow,
                parentColumn: this.props.workspaceState.parentColumn,
                saveSettings: this.saveSettings.bind(this),
                revertSettings: this.revertSettings.bind(this),
                update: this.update.bind(this),
                updateObjectProperty: this.updateObjectProperty.bind(this),
                updateMergeObjectSettings: this.updateMergeObjectSettings.bind(this)
            };

            var treeProps = {
                move: {
                    moveStart: this.props.moveStart,
                    moveStop: function moveStop() {
                        //This function has to be written in a component rather than in a reducer because you can't dispatch an action from a reducer
                        if (_this7.props.moveState.objectMoveTo) {
                            if (_this7.props.moveState.newObjectToValue && _this7.props.moveState.newObjectToValue2) {
                                _this7.props.moveObject(_this7.props.moveState.moduleMove, _this7.props.moveState.objectMoveTo, _this7.props.moveState.moveToDirection, _this7.props.moveState.newObjectToValue, _this7.props.moveState.newObjectToValue2);
                            } else {
                                _this7.props.moveObject(_this7.props.moveState.moduleMove, _this7.props.moveState.objectMoveTo, _this7.props.moveState.moveToDirection, false, false);
                            }

                            setTimeout(window.ocbReInitializePlugins(), 500);
                        }
                        _this7.props.moveStop();
                    },
                    moveFrom: this.props.moveFrom,
                    moveTo: this.props.moveTo,
                    resetMoveTo: this.props.moveToReset,
                    objectMoveTo: this.props.moveState.objectMoveTo,
                    moveToDirection: this.props.moveState.moveToDirection,
                    state: this.props.moveState.moving
                },
                inlineEdit: {
                    stopEditing: function stopEditing() {
                        var object = JSON.parse(JSON.stringify(_this7.props.inlineEditState.inlineEditingObject));
                        _this7.props.inlineEditStop();
                        _this7.props.objectUpdated(object);
                    }
                }
            };

            var wrapClass = 'ocb-settings-panel-inactive';

            if (this.props.workspaceState.settingsActive) {
                wrapClass = 'ocb-settings-panel-active';
            }

            //Make sure that there's an ocb-device-laptop class on body to start (works with
            if (this.props.workspaceState.settingsActive) {
                var $body = jQuery('body');
                if (!$body.hasClass('ocb-device-laptop') && !$body.hasClass('ocb-device-tablet') && !$body.hasClass('ocb-device-phone')) {
                    $body.addClass('ocb-device-laptop');
                }
            }

            var newURL = location.protocol + '//' + location.host + location.pathname + '?' + _url_helpers2.default.insertParam('offsproutIframe', 1);

            var objectSettings = null;

            if (this.props.workspaceState.settingsActive) {
                objectSettings = _react2.default.createElement(_object_settings2.default, { appFunctions: appFunctions, object: this.props.workspaceState.editSettings, deviceLock: this.props.workspaceState.deviceLock, laptopViewHack: this.laptopViewHack.bind(this), settingsOrStandard: this.props.workspaceState.settingsOrStandard });
            }

            var menu = null;

            if (this.props.menuState.open) {
                menu = _react2.default.createElement(_menu2.default, null);
            }

            var maybeSwitchScreen = null;

            if (this.props.workspaceState.maybeSwitchActiveObjectGroup && (this.props.workspaceState.editingSkin == undefined || this.props.workspaceState.editingSkin == false)) {
                maybeSwitchScreen = _react2.default.createElement(
                    'div',
                    { className: 'ocb-settings-panel-maybe-switch offsprout-font animated fadeIn fast' },
                    _react2.default.createElement(
                        'p',
                        { className: 'mt-2' },
                        'What would you like to do with your current changes?'
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'ocb-admin-button mt-2', onClick: function onClick() {
                                return _this7.props.appMaybeSwitchActiveObjectGroup('cancel');
                            } },
                        'Cancel'
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'ocb-admin-button ocb-danger mt-2', onClick: function onClick() {
                                return _this7.maybeSwitchActiveObjectGroup('revert');
                            } },
                        'Revert'
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'ocb-admin-button ocb-success mt-2', onClick: function onClick() {
                                return _this7.maybeSwitchActiveObjectGroup('save');
                            } },
                        'Save'
                    )
                );
            }

            var moduleSelector = null;

            if (!this.props.workspaceState.settingsActive && OCBGlobalSettings.permissions.add_objects && !this.props.inlineEditState.inlineEditing && !this.props.menuState.open && (this.props.templateGlobals.currentRevert == undefined || this.props.templateGlobals.currentRevert == false || this.props.templateGlobals.currentRevert.type != 'module')) {
                moduleSelector = _react2.default.createElement(_module_selector2.default, { treeProps: treeProps });
            } else if (this.props.inlineEditState.inlineEditing) {
                moduleSelector = _react2.default.createElement(
                    'div',
                    { className: 'ocb-save-inline-text-button offsprout-font', onClick: treeProps.inlineEdit.stopEditing },
                    _react2.default.createElement('i', { className: 'fa fa-check' }),
                    ' Done Editing Text'
                );
            }

            if (window.OffsproutHasContentArea != undefined && window.OffsproutHasContentArea == false) {
                moduleSelector = null;
            }

            var helpButton = null;

            if (OCBGlobalSettings.permissions.access_help_docs) {
                helpButton = _react2.default.createElement(_help_button2.default, null);
            }

            var connector = null;

            if (this.props.inlineEditState.editor != null) {
                connector = _react2.default.createElement(
                    'div',
                    { className: 'ocb-sf ocb-connector-inline' },
                    _react2.default.createElement(_connector_screen2.default, {
                        editor: this.props.inlineEditState.editor,
                        close: this.props.inlineEditCloseConnector,
                        noConnect: true,
                        connectionUpdate: function connectionUpdate() {
                            return false;
                        } }),
                    ';'
                );
            }

            //Can we use the Workspace Component directly when we're trying to add content so that adding works?
            var workspace = null;

            if (this.props.workspaceState.settingsActive) {
                workspace = _react2.default.createElement(_workspace2.default, null);
            }

            var topClasses = 'ocb-app-wrap';

            if (this.props.menuState.open) {
                topClasses += ' ocb-app-menu-open';
            }

            var toolbar = _react2.default.createElement(
                'div',
                { className: 'ocb-app-toolbar-wrap' },
                _react2.default.createElement(_top_toolbar2.default, null)
            );

            //If the Site Grower is forced open, don't show toolbar
            if (parseInt(OCBGlobalSettings.forceSiteGrower) && this.props.menuState.topSelected && this.props.menuState.topSelected.id == 'site_grower') {
                toolbar = null;
            }

            return _react2.default.createElement(
                'div',
                { className: topClasses },
                toolbar,
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-settings-panel-wrap ' + wrapClass },
                    _react2.default.createElement(
                        'div',
                        { className: 'ocb-settings-panel', onMouseOver: function onMouseOver() {
                                return jQuery('body').addClass('ocb-freeze-scroll');
                            } },
                        objectSettings,
                        maybeSwitchScreen
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'ocb-workspace', onMouseOver: function onMouseOver() {
                                return jQuery('body').removeClass('ocb-freeze-scroll');
                            } },
                        _react2.default.createElement('iframe', { id: 'ocb-workspace-iframe', src: newURL, onLoad: this.keepIframeSyncedWithTop.bind(this) })
                    )
                ),
                moduleSelector,
                connector,
                helpButton,
                this.props.appState.overlay,
                menu
            );
        }
    }]);

    return App;
}(_react.Component);

function mapStateToProps(state) {
    //will show up as props inside of App
    return {
        workspaceState: state.workspaceState,
        appState: state.appState,
        menuState: state.menuState,
        moveState: state.moveState,
        inlineEditState: state.inlineEditState,
        undoRedoState: state.undoRedoState,
        templateGlobals: state.templateGlobals
    };
}
//Anything returned from this function will end up as props on the Module container
//So we're basically saying that we want these actions to be available in props so we can use them like this.props.actionName
function mapDispatchToProps(dispatch) {
    //whenever update module standard or settings is called, the result should be passed to our reducers
    return (0, _redux.bindActionCreators)({
        updateObjectStandard: _index.updateObjectStandard, updateObjectSettings: _index.updateObjectSettings, updateObjectProperty: _index.updateObjectProperty, objectUpdated: _index.objectUpdated,
        appUpdateObjectStandard: _index.appUpdateObjectStandard, appUpdateObjectSettings: _index.appUpdateObjectSettings, appUpdateObjectSite: _index.appUpdateObjectSite, appRevertSettings: _index.appRevertSettings,
        appSaveSettings: _index.appSaveSettings, appMakeSettingsInactive: _index.appMakeSettingsInactive, appMakeSettingsActive: _index.appMakeSettingsActive, appSwitchActiveSettings: _index.appSwitchActiveSettings, appAddBackSettingsPanel: _index.appAddBackSettingsPanel, appSwitchActiveObject: _index.appSwitchActiveObject, appMaybeSwitchActiveObjectGroup: _index.appMaybeSwitchActiveObjectGroup,
        updateSiteSetting: _index.updateSiteSetting, updateSiteSettings: _index.updateSiteSettings, updatePageSetting: _index.updatePageSetting,
        moveStart: _index.moveStart, moveStop: _index.moveStop, moveFrom: _index.moveFrom, moveTo: _index.moveTo, moveGetHover: _index.moveGetHover, moveToReset: _index.moveToReset, moveObject: _index.moveObject,
        inlineEditStop: _index.inlineEditStop, inlineEditCloseConnector: _index.inlineEditCloseConnector,
        updateAppState: _index.updateAppState
    }, dispatch);
}

//We pass null for the first value because we don't need a mapStateToProps since props are being passed up from below into state
//http://stackoverflow.com/questions/35443167/dispatch-is-not-a-function-when-argument-to-maptodispatchtoprops-in-redux
exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(App);

/***/ }),

/***/ 699:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _site_options_render = __webpack_require__(24);

var _site_options_render2 = _interopRequireDefault(_site_options_render);

var _footer_css_render = __webpack_require__(374);

var _footer_css_render2 = _interopRequireDefault(_footer_css_render);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

if (window.OffsproutPageStyle == undefined) {
    window.OffsproutPageStyle = [];
}

var BackupWorkspace = function (_Component) {
    _inherits(BackupWorkspace, _Component);

    function BackupWorkspace() {
        _classCallCheck(this, BackupWorkspace);

        return _possibleConstructorReturn(this, (BackupWorkspace.__proto__ || Object.getPrototypeOf(BackupWorkspace)).apply(this, arguments));
    }

    _createClass(BackupWorkspace, [{
        key: 'render',
        value: function render() {
            return _react2.default.createElement(
                'div',
                null,
                _react2.default.createElement(_site_options_render2.default, null),
                _react2.default.createElement(_footer_css_render2.default, null)
            );
        }
    }]);

    return BackupWorkspace;
}(_react.Component);

exports.default = BackupWorkspace;

/***/ }),

/***/ 700:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _redux = __webpack_require__(7);

var _tree_content = __webpack_require__(916);

var _tree_content2 = _interopRequireDefault(_tree_content);

var _tree_header = __webpack_require__(918);

var _tree_header2 = _interopRequireDefault(_tree_header);

var _template_globals = __webpack_require__(915);

var _template_globals2 = _interopRequireDefault(_template_globals);

var _workspace_state = __webpack_require__(920);

var _workspace_state2 = _interopRequireDefault(_workspace_state);

var _app_state = __webpack_require__(896);

var _app_state2 = _interopRequireDefault(_app_state);

var _site_state = __webpack_require__(913);

var _site_state2 = _interopRequireDefault(_site_state);

var _redux_gateways = __webpack_require__(912);

var _redux_gateways2 = _interopRequireDefault(_redux_gateways);

var _undo_redo_state = __webpack_require__(919);

var _undo_redo_state2 = _interopRequireDefault(_undo_redo_state);

var _menu_state = __webpack_require__(904);

var _menu_state2 = _interopRequireDefault(_menu_state);

var _move_state = __webpack_require__(905);

var _move_state2 = _interopRequireDefault(_move_state);

var _inline_edit_state = __webpack_require__(903);

var _inline_edit_state2 = _interopRequireDefault(_inline_edit_state);

var _skin_state = __webpack_require__(914);

var _skin_state2 = _interopRequireDefault(_skin_state);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var allReducers = OffsproutFilter.apply('allReducers', {
    treeContent: _tree_content2.default,
    treeHeader: _tree_header2.default,
    templateGlobals: _template_globals2.default,
    workspaceState: _workspace_state2.default,
    appState: _app_state2.default,
    siteState: _site_state2.default,
    reduxGateways: _redux_gateways2.default,
    undoRedoState: _undo_redo_state2.default,
    menuState: _menu_state2.default,
    moveState: _move_state2.default,
    inlineEditState: _inline_edit_state2.default,
    skinState: _skin_state2.default
});

var rootReducer = (0, _redux.combineReducers)(allReducers);

exports.default = rootReducer;

/***/ }),

/***/ 72:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactTinymce = __webpack_require__(80);

var _reactTinymce2 = _interopRequireDefault(_reactTinymce);

var _module_helpers = __webpack_require__(12);

var _module_helpers2 = _interopRequireDefault(_module_helpers);

var _settings_helpers = __webpack_require__(2);

var _settings_helpers2 = _interopRequireDefault(_settings_helpers);

var _texteditor = __webpack_require__(167);

var _texteditor2 = _interopRequireDefault(_texteditor);

var _reactRedux = __webpack_require__(5);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ItemEditableText = function (_Component) {
    _inherits(ItemEditableText, _Component);

    function ItemEditableText(props) {
        _classCallCheck(this, ItemEditableText);

        var _this = _possibleConstructorReturn(this, (ItemEditableText.__proto__ || Object.getPrototypeOf(ItemEditableText)).call(this, props));

        _this.state = {
            inlineEdit: _this.props.inlineEdit != undefined ? _this.props.inlineEdit : false,
            inlineStartOffset: 0,
            inlineStartIndex: 0,
            inlineStartTarget: null
        };

        _this.editorTimeout = null;
        return _this;
    }

    /******************* Borrowed Heavily from the Text Module ****************/

    _createClass(ItemEditableText, [{
        key: 'updateText',
        value: function updateText(e) {
            var newText = '';
            if (this.props.editType == 'text') {
                newText = e.target.value;
            } else {
                newText = e.target.getContent();
            }
            this.props.update(newText, this.props.index);
        }
    }, {
        key: 'startInlineEditing',
        value: function startInlineEditing(e, iteration) {
            var moduleType = this.props.object.moduleType != undefined ? this.props.object.moduleType : false;
            if (moduleType && OCBGlobalSettings.permissions['edit_module_' + moduleType] != undefined && OCBGlobalSettings.permissions['edit_module_' + moduleType] == false) return;

            if (OCBGlobalSettings.builderRole && this.props.object.standard != undefined && this.props.object.standard.linked != undefined && this.props.object.standard.linked.permission_lock != undefined && this.props.object.standard.linked.permission_lock.choices != undefined && this.props.object.standard.linked.permission_lock.choices.length > 0 && this.props.object.standard.linked.permission_lock.choices.includes(OCBGlobalSettings.builderRole)) {
                return true;
            }

            if (!Number.isInteger(iteration)) iteration = 0;

            if (!OCBGlobalSettings.permissions.edit_modules_inline) return null;
            if (this.props.treeProps.settings.settingsActive) return null;

            if (!this.props.treeProps.inlineEdit.editing) {
                this.props.treeProps.inlineEdit.startEditing(this.props.object);

                var index = jQuery(e.target).index();

                //Because headingareas aren't wrapped with p or div tags
                if (this.props.editType == 'headingarea') {
                    var node = window.getSelection().anchorNode;
                    var textNode = this.getTextNodes(node);
                    var textNodes = this.getTextNodes(node.parentElement.parentElement);
                    index = textNodes.indexOf(textNode[0]);
                }

                this.setState({ inlineEdit: true, inlineStartIndex: index, inlineStartTarget: e.target, inlineStartOffset: window.getSelection().anchorOffset });
            } else if (!this.state.inlineEdit) {
                var _index = jQuery(e.target).index();

                //Because headingareas aren't wrapped with p or div tags
                if (this.props.editType == 'headingarea') {
                    var _node = window.getSelection().anchorNode;
                    var _textNode = this.getTextNodes(_node);
                    var _textNodes = this.getTextNodes(_node.parentElement.parentElement);
                    _index = _textNodes.indexOf(_textNode[0]);
                }

                this.setState({ inlineEdit: true, inlineStartIndex: _index, inlineStartTarget: e.target, inlineStartOffset: window.getSelection().anchorOffset });
            }
        }
    }, {
        key: 'warnDoubleClick',
        value: function warnDoubleClick() {
            this.setState({ inlineEdit: false });
            alert('To edit this text, just click once.');
        }
    }, {
        key: 'getTextNodes',
        value: function getTextNodes(node, nodeType, result) {

            var children = node.childNodes;
            var nodeType = nodeType ? nodeType : 3;

            var result = !result ? [] : result;
            if (node.nodeType == nodeType) {
                result.push(node);
            }

            for (var i = 0; i < children.length; i++) {
                result = this.getTextNodes(children[i], nodeType, result);
            }

            return result;
        }
    }, {
        key: 'componentDidMount',


        /**
         * Wait until the text module mounts and then look to see if there are shortcodes, in which case, replace them
         */
        value: function componentDidMount() {
            if (!this.props.treeProps.inlineEdit.editing) {
                this.replaceShortcodes();
            }
        }
    }, {
        key: 'replaceShortcodes',
        value: function replaceShortcodes() {
            var _this2 = this;

            if (this.props.treeProps.inlineEdit.editing) {
                return null;
            }

            setTimeout(function () {
                jQuery('#module-' + _this2.props.objectId).find('.ocb-item-text').each(function () {
                    _module_helpers2.default.replaceShortcodes(jQuery(this).html(), jQuery(this));
                });
            }, 300);
        }
    }, {
        key: 'componentDidUpdate',
        value: function componentDidUpdate(prevProps, prevState) {
            if (!this.props.inlineEditState.inlineEditing && prevProps.inlineEditState.inlineEditing) {
                this.setState({ inlineEdit: false });
            }
        }

        /******************* RENDER ****************/

    }, {
        key: 'render',
        value: function render() {
            var _this3 = this;

            var text = this.props.text;

            if (this.props.textObject != undefined && this.props.textObject.connection != undefined && this.props.textObject.connection != false) {
                var connection = this.props.textObject.connection;
                return _react2.default.createElement(
                    'div',
                    { className: 'ocb-item-text' },
                    _settings_helpers2.default.getConnectionShortcode(connection.type, connection.key, connection.options)
                );
            }

            if (this.state.inlineEdit && this.props.inlineEditState.inlineEditing) {

                if (this.props.editType == 'text') {
                    return _react2.default.createElement(
                        'div',
                        { className: 'ocb-item-text' },
                        _react2.default.createElement(
                            'div',
                            { className: 'ocb-item-text-input' },
                            _react2.default.createElement('input', { type: 'text', defaultValue: text, onChange: function onChange(e) {
                                    return _this3.updateText(e);
                                } })
                        )
                    );
                } else {
                    return _react2.default.createElement(
                        'div',
                        { className: 'ocb-item-text' },
                        _react2.default.createElement(_texteditor2.default, { value: text, toolbar: this.props.toolbar, editType: this.props.editType, update: this.updateText.bind(this), treeProps: this.props.treeProps, index: this.state.inlineStartIndex, target: this.state.inlineStartTarget, offset: this.state.inlineStartOffset })
                    );
                }
            } else {
                if (this.props.editType == 'text') {
                    return _react2.default.createElement(
                        'div',
                        { className: 'ocb-item-text', onClick: this.startInlineEditing.bind(this),
                            onDoubleClick: function onDoubleClick() {
                                return _this3.warnDoubleClick();
                            } },
                        text
                    );
                } else {
                    return _react2.default.createElement('div', { className: 'ocb-item-text', onClick: this.startInlineEditing.bind(this),
                        onDoubleClick: function onDoubleClick() {
                            return _this3.warnDoubleClick();
                        },
                        dangerouslySetInnerHTML: { __html: text } });
                }
            }
        }
    }]);

    return ItemEditableText;
}(_react.Component);

function mapStateToProps(_ref) {
    var inlineEditState = _ref.inlineEditState;

    return { inlineEditState: inlineEditState };
}

exports.default = (0, _reactRedux.connect)(mapStateToProps)(ItemEditableText);

/***/ }),

/***/ 73:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactTinymce = __webpack_require__(80);

var _reactTinymce2 = _interopRequireDefault(_reactTinymce);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var TextEditor = function (_Component) {
    _inherits(TextEditor, _Component);

    function TextEditor() {
        _classCallCheck(this, TextEditor);

        return _possibleConstructorReturn(this, (TextEditor.__proto__ || Object.getPrototypeOf(TextEditor)).apply(this, arguments));
    }

    _createClass(TextEditor, [{
        key: 'shouldComponentUpdate',
        value: function shouldComponentUpdate() {
            return false;
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var options = {
                menubar: false,
                statusbar: false,
                plugins: this.props.plugins != undefined ? this.props.plugins : 'link',
                toolbar: this.props.toolbar != undefined ? this.props.toolbar : 'styleselect | bold italic strikethrough | alignleft aligncenter alignright',
                paste_preprocess: function paste_preprocess(plugin, args) {
                    args.content = args.content.replace(new RegExp('<br />', 'g'), '');
                    args.content = args.content.replace(new RegExp('<span style="font-weight: 400;">', 'g'), '');
                    args.content = args.content.replace(new RegExp('</span>', 'g'), '');
                    args.content = args.content.replace(new RegExp(' style="font-weight: 400;"', 'g'), '');
                },
                setup: this.props.setup != undefined && this.props.setup != false ? this.props.setup : null
            };

            if (this.props.editType != undefined && this.props.editType == 'headingarea') {
                options.forced_root_block = false;
                options.invalid_elements = 'div,p';
            }

            //Don't show the connector button if the user doesn't have permission
            if (!OCBGlobalSettings.permissions.use_connector) {
                options.toolbar = options.toolbar.replace('ocbconnected ', '');
            }

            return _react2.default.createElement(_reactTinymce2.default, {
                content: this.props.value,
                config: options,
                onChange: function onChange(e) {
                    return _this2.props.update(e.target.getContent());
                }
            });
        }
    }]);

    return TextEditor;
}(_react.Component);

exports.default = TextEditor;

/***/ }),

/***/ 74:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _settings_helpers = __webpack_require__(2);

var _settings_helpers2 = _interopRequireDefault(_settings_helpers);

var _save_template_button = __webpack_require__(133);

var _save_template_button2 = _interopRequireDefault(_save_template_button);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ObjectControls = function (_Component) {
    _inherits(ObjectControls, _Component);

    function ObjectControls(props) {
        _classCallCheck(this, ObjectControls);

        var _this = _possibleConstructorReturn(this, (ObjectControls.__proto__ || Object.getPrototypeOf(ObjectControls)).call(this, props));

        _this.state = {};
        return _this;
    }

    _createClass(ObjectControls, [{
        key: 'getTooltip',
        value: function getTooltip(tooltip) {
            var placement = 'top';

            if (this.props.object.type == 'row') placement = 'right';

            var large = '';

            if (tooltip.length > 20) {
                large = 'ocb-tooltip-large';
            }

            return _react2.default.createElement(
                'div',
                { className: window.OffsproutEffect + ' ocb-tooltip ocb-tooltip-' + placement + ' ' + large },
                tooltip
            );
        }
    }, {
        key: 'getControl',
        value: function getControl(_ref) {
            var type = _ref.type,
                additionalClass = _ref.additionalClass,
                iconClass = _ref.iconClass,
                tooltip = _ref.tooltip,
                onClick = _ref.onClick,
                more = _ref.more;

            var baseClass = 'ocb-object-control ocb-' + this.props.object.type + '-control';
            var specificClass = '';
            if (additionalClass == undefined) additionalClass = '';
            if (type != undefined) specificClass = 'ocb-' + this.props.object.type + '-control-' + type + ' ocb-object-control-' + type;

            var theClass = baseClass + ' ' + specificClass + ' ' + additionalClass + ' ocb-tooltip-wrap';

            return _react2.default.createElement(
                'div',
                { className: theClass, onClick: onClick },
                this.getTooltip(tooltip),
                _react2.default.createElement('i', { className: 'fa ' + iconClass }),
                this.getMore(more)
            );
        }
    }, {
        key: 'getMore',
        value: function getMore(more) {
            if (more == undefined) return null;

            return _react2.default.createElement(
                'div',
                { className: 'ocb-object-control-more' },
                more
            );
        }
    }, {
        key: 'getLabelControl',
        value: function getLabelControl() {
            if (this.props.object.type == 'module') return null;

            var theClass = 'ocb-object-control ocb-' + this.props.object.type + '-control ocb-object-control-label ocb-' + this.props.object.type + '-control-label';
            return _react2.default.createElement(
                'div',
                { className: theClass },
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-' + this.props.object.type + '-control-label-text' },
                    this.props.object.type
                )
            );
        }
    }, {
        key: 'getMoveControl',
        value: function getMoveControl() {
            if (this.props.object.type == 'module' && !OCBGlobalSettings.permissions.move_modules || this.props.object.type == 'column' && !OCBGlobalSettings.permissions.move_columns || this.props.object.type == 'row' && !OCBGlobalSettings.permissions.move_rows || this.props.controlConfig.move === false) return null;

            return this.getControl({
                type: 'move',
                additionalClass: 'ocb-object-control-move-' + this.props.object.id,
                iconClass: 'fa-arrows',
                tooltip: 'Move',
                onClick: null
            });
        }
    }, {
        key: 'getDuplicateControl',
        value: function getDuplicateControl() {
            var _this2 = this;

            if (this.props.template == 'global' || this.props.object.moduleType == 'content' || !OCBGlobalSettings.permissions.add_objects) return null;

            if (this.props.object.type == 'module' && !OCBGlobalSettings.permissions.duplicate_modules || this.props.object.type == 'column' && !OCBGlobalSettings.permissions.duplicate_columns || this.props.object.type == 'row' && !OCBGlobalSettings.permissions.duplicate_rows || this.props.controlConfig.duplicate === false) return null;

            return this.getControl({
                type: 'duplicate',
                iconClass: 'fa-copy',
                tooltip: 'Duplicate',
                onClick: function onClick() {
                    return _this2.props.treeProps.settings.duplicateObject(_this2.props.object);
                }
            });
        }
    }, {
        key: 'getAlignStretchControl',
        value: function getAlignStretchControl() {
            var _this3 = this;

            if (this.props.object.type != 'column' || this.props.template == 'global' || !OCBGlobalSettings.permissions.edit_columns_standard) return null;

            var more = [{
                title: 'Top',
                value: 'flex-start'
            }, {
                title: 'Center',
                value: 'center'
            }, {
                title: 'Bottom',
                value: 'flex-end'
            }, {
                title: 'Inline',
                value: 'inline'
            }, {
                title: 'Space Around',
                value: 'space-around'
            }, {
                title: 'Space Between',
                value: 'space-between'
            }, {
                title: 'Space Evenly',
                value: 'space-evenly'
            }, {
                title: 'Space Initial',
                value: 'space-initial'
            }, {
                title: 'Space Final',
                value: 'space-final'
            }].map(function (each) {
                var onClickFunc = function onClickFunc() {
                    return _this3.props.treeProps.settings.verticallyAlignColumn(_this3.props.object, each.value);
                };
                var active = _this3.props.object.standard.linked.column_items.choice == each.value ? 'active' : '';
                return _react2.default.createElement(
                    'div',
                    { key: each.value, className: 'ocb-object-control ocb-object-control-more-item ' + active, onClick: onClickFunc },
                    each.title
                );
            });

            return this.getControl({
                iconClass: 'fa-arrows-v',
                tooltip: 'Item Alignment',
                more: more,
                onClick: null
            });
        }

        /**
         * NOT CURRENTLY BEING USED
         * @returns {*}
         */

    }, {
        key: 'getAlignTopControl',
        value: function getAlignTopControl() {
            var _this4 = this;

            if (true) return null;

            var active = '';

            if (this.props.object.settings != undefined && this.props.object.settings.verticalAlign == 'top') {
                active = 'active';
            }

            var onClickFunction = function onClickFunction() {
                return _this4.props.treeProps.settings.verticallyAlignColumn(_this4.props.object, 'top');
            };

            //If we want to introduce this control for rows, here it is - NOT CURRENTLY BEING USED
            if (this.props.object.type == 'row') {
                onClickFunction = function onClickFunction() {
                    return _this4.props.treeProps.settings.verticallyAlignRow(_this4.props.object, 'top');
                };
            }

            return this.getControl({
                iconClass: 'fa-long-arrow-up',
                additionalClass: active,
                tooltip: 'Align Top',
                onClick: onClickFunction
            });
        }
    }, {
        key: 'getAlignCenterControl',
        value: function getAlignCenterControl() {
            var _this5 = this;

            if (this.props.object.type != 'column' || this.props.template == 'global' || !OCBGlobalSettings.permissions.edit_columns_standard) return null;

            //no longer using this control - can eventually delete
            return null;

            var active = '';
            var align = this.props.object.standard.linked.column_items.choice;
            var oldAlign = this.props.object.settings != undefined && this.props.object.settings.verticalAlign != undefined ? this.props.object.settings.verticalAlign : 'stretch';

            if (align == 'default' && oldAlign == 'center' || align == 'center') {
                active = 'active';
            }

            var onClickFunction = function onClickFunction() {
                return _this5.props.treeProps.settings.verticallyAlignColumn(_this5.props.object, 'center');
            };

            //If we want to introduce this control for rows, here it is - NOT CURRENTLY BEING USED
            if (this.props.object.type == 'row') {
                onClickFunction = function onClickFunction() {
                    return _this5.props.treeProps.settings.verticallyAlignRow(_this5.props.object, 'center');
                };
            }

            return this.getControl({
                iconClass: 'fa fa-compress fa-rotate--45',
                additionalClass: active,
                tooltip: 'Align Center',
                onClick: onClickFunction
            });
        }

        /**
         * NOT CURRENTLY BEING USED
         * @returns {*}
         */

    }, {
        key: 'getAlignBottomControl',
        value: function getAlignBottomControl() {
            var _this6 = this;

            if (true) return null;

            var active = '';

            if (this.props.object.settings != undefined && this.props.object.settings.verticalAlign == 'bottom') {
                active = 'active';
            }

            return this.getControl({
                iconClass: 'fa-long-arrow-down',
                additionalClass: active,
                tooltip: 'Align Bottom',
                onClick: function onClick() {
                    return _this6.props.treeProps.settings.verticallyAlignColumn(_this6.props.object, 'bottom');
                }
            });
        }
    }, {
        key: 'getResetWidthControl',
        value: function getResetWidthControl() {
            var _this7 = this;

            if (this.props.object.type != 'row' || this.props.template == 'global' || !OCBGlobalSettings.permissions.edit_columns_width) return null;

            return this.getControl({
                iconClass: 'fa-exchange',
                tooltip: 'Reset Column Width',
                onClick: function onClick() {
                    return _this7.props.treeProps.resize.equalizeWidth(_this7.props.object);
                }
            });
        }
    }, {
        key: 'getSettingsControl',
        value: function getSettingsControl() {
            var _this8 = this;

            if (this.props.object.type != 'module' || this.props.template == 'global' || this.props.object.moduleType == 'content' || this.props.object.type == 'module' && !OCBGlobalSettings.permissions.edit_modules_settings || this.props.controlConfig.settings === false) return null;

            var moduleType = this.props.object.moduleType != undefined ? this.props.object.moduleType : false;
            if (moduleType && OCBGlobalSettings.permissions['edit_module_' + moduleType] != undefined && OCBGlobalSettings.permissions['edit_module_' + moduleType] == false) return null;

            return this.getControl({
                iconClass: 'fa-paint-brush',
                tooltip: 'Edit Settings',
                onClick: function onClick() {
                    return _this8.props.treeProps.settings.makeSettingsActive(_this8.props.object, 'settings', _this8.props.parentRow, _this8.props.parentColumn);
                }
            });
        }
    }, {
        key: 'getStandardControl',
        value: function getStandardControl() {
            var _this9 = this;

            if (this.props.template == 'global' || this.props.object.type == 'module' && this.props.object.moduleType != 'content' || this.props.object.type == 'module' && !OCBGlobalSettings.permissions.edit_modules_standard || this.props.object.type == 'column' && !OCBGlobalSettings.permissions.edit_columns_standard || this.props.object.type == 'row' && !OCBGlobalSettings.permissions.edit_rows_standard || this.props.controlConfig.standard === false) return null;

            return this.getControl({
                iconClass: 'fa-paint-brush', //'fa-wrench',
                tooltip: 'Edit Standard',
                onClick: function onClick() {
                    return _this9.props.treeProps.settings.makeSettingsActive(_this9.props.object, 'standard', _this9.props.parentRow, _this9.props.parentColumn);
                }
            });
        }
    }, {
        key: 'getJoinAdjacentControl',
        value: function getJoinAdjacentControl() {
            var _this10 = this;

            if (this.props.object.moduleType == undefined || this.props.object.moduleType != 'text' || this.props.object.type != 'module' || !OCBGlobalSettings.permissions.edit_modules_settings || this.props.controlConfig.joinAdjacent === false) return null;

            var moduleType = this.props.object.moduleType != undefined ? this.props.object.moduleType : false;
            if (moduleType && OCBGlobalSettings.permissions['edit_module_' + moduleType] != undefined && OCBGlobalSettings.permissions['edit_module_' + moduleType] == false) return null;

            return this.getControl({
                iconClass: 'fa-exchange fa-rotate-90',
                tooltip: 'Merge With Adjacent Text Modules',
                onClick: function onClick() {
                    return _this10.props.treeProps.settings.joinObject(_this10.props.object);
                }
            });
        }
    }, {
        key: 'getSaveTemplateControl',
        value: function getSaveTemplateControl() {
            var _this11 = this;

            if (this.props.template == 'global' || this.props.object.moduleType == 'content' || !parent.OCBGlobalSettings.permissions.create_templates || this.props.controlConfig.saveTemplate === false) return null;

            var type = this.props.object.type;
            var capType = type.capitalize();

            return this.getControl({
                iconClass: 'fa-floppy-o',
                tooltip: 'Save ' + capType,
                onClick: function onClick() {
                    return _this11.props.treeProps.settings.saveTemplate(_this11.props.object);
                }
            });
        }
    }, {
        key: 'getDeleteControl',
        value: function getDeleteControl() {
            var _this12 = this;

            if (this.props.object.type == 'module' && !OCBGlobalSettings.permissions.delete_modules || this.props.object.type == 'column' && !OCBGlobalSettings.permissions.delete_columns || this.props.object.type == 'row' && !OCBGlobalSettings.permissions.delete_rows || this.props.controlConfig.delete === false) return null;

            var moduleType = this.props.object.moduleType != undefined ? this.props.object.moduleType : false;
            if (moduleType && OCBGlobalSettings.permissions['delete_module_' + moduleType] != undefined && OCBGlobalSettings.permissions['delete_module_' + moduleType] == false) return null;

            return this.getControl({
                type: 'remove',
                iconClass: 'fa-remove',
                tooltip: 'Delete',
                onClick: function onClick() {
                    return _this12.props.treeProps.settings.deleteObject(_this12.props.object);
                }
            });
        }
    }, {
        key: 'getBackground',
        value: function getBackground() {
            return _react2.default.createElement('div', { className: 'ocb-object-controls-background' });
        }
    }, {
        key: 'render',
        value: function render() {
            var animatedClass = this.props.object.type == 'module' ? 'animated fast fadeInUp' : '';
            animatedClass = ''; //Try without animation

            return _react2.default.createElement(
                'div',
                { className: animatedClass + ' ocb-object-controls ocb-' + this.props.object.type + '-controls ocb-save-remove-element' },
                this.getBackground(),
                this.getLabelControl(),
                this.getMoveControl(),
                this.getDuplicateControl(),
                this.getAlignStretchControl(),
                this.getAlignTopControl(),
                this.getAlignCenterControl(),
                this.getAlignBottomControl(),
                this.getResetWidthControl(),
                this.getSettingsControl(),
                this.getStandardControl(),
                this.getJoinAdjacentControl(),
                this.getSaveTemplateControl(),
                this.getDeleteControl()
            );
        }
    }]);

    return ObjectControls;
}(_react.Component);

exports.default = ObjectControls;

/***/ }),

/***/ 775:
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),

/***/ 785:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
var SVGImageJSON = {
  "Landing page": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/landing_page_q6hh.svg", "Reminders": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/reminders_697p.svg", "Mobile user": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/mobile_user_efh5.svg", "Click here": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/click_here_0tx0.svg", "Cookie love": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/cookie_love_ulvn.svg", "Camera": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/camera_mg5h.svg", "Absorbed in": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/absorbed_in_xahs.svg", "Walking around": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/walking_around_25f5.svg", "Mention": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/mention_6k5d.svg", "Mobile login": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/mobile_login_ftfd.svg", "Portfolio update": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/portfolio_update_nqhs.svg", "Adventure": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/adventure_4hum.svg", "Voice interface": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/voice_interface_eckp.svg", "Reminder": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/reminder_pa79.svg", "Decide": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/decide_3iwx.svg", "Mobile app": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/mobile_app_0irr.svg", "Editable": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/editable_dywm.svg", "Digital currency": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/digital_currency_qpak.svg", "File synchronization": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/file_synchronization_8dh6.svg", "Transfer money": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/transfer_money_rywa.svg", "Loving it": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/loving_it_y27c.svg", "Social influencer": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/social_influencer_sgsv.svg", "Analyze": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/analyze_17kw.svg", "Speed test": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/speed_test_wxl0.svg", "Business analytics": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/business_analytics_l92d.svg", "Good team": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/good_team_m7uu.svg", "Professor": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/professor_8lrt.svg", "Coolness": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/coolness_dtmq.svg", "Social thinking": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/social_thinking_7ule.svg", "Smartwatch": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/smartwatch_74tv.svg", "Process": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/process_e90d.svg", "Flowers": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/flowers_vx06.svg", "Adjustments": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/adjustments_p22m.svg", "Pie graph": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/pie_graph_x9dy.svg", "Responsiveness": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/responsiveness_irhh.svg", "Happy feeling": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/happy_feeling_slmw.svg", "Mathematics": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/mathematics_4otb.svg", "Code review": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/code_review_l1q9.svg", "Blooming": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/blooming_jtv6.svg", "Load more": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/load_more_t79d.svg", "Creative experiment": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/creative_experiment_8dk3.svg", "Raining": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/raining_sguh.svg", "Intense feeling": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/intense_feeling_ft9s.svg", "All the data": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/all_the_data_h4ki.svg", "Photo album": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/photo_album_e8hj.svg", "Creation": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/creation_rd0e.svg", "Different love": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/different_love_a3rg.svg", "Design inspiration": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/design_inspiration_fmjm.svg", "Road sign": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/road_sign_mfpo.svg", "Deconstructed": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/deconstructed_alud.svg", "Collab": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/collab_8oes.svg", "Settings": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/settings_ii2j.svg", "Personal text": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/personal_text_vkd8.svg", "Breaking barriers": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/breaking_barriers_vnf3.svg", "Throw down": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/throw_down_ub2l.svg", "Done": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/done_a34v.svg", "Speech to text": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/speech_to_text_9uir.svg", "Not found": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/not_found_60pq.svg", "Creative team": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/creative_team_r90h.svg", "Subscriber": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/subscriber_vabu.svg", "Learning": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/learning_2q1h.svg", "Elements": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/elements_cipa.svg", "Files sent": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/files_sent_oeqg.svg", "Fingerprint": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/fingerprint_swrc.svg", "Online page": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/online_page_cq94.svg", "Everyday design": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/everyday_design_gy64.svg", "Wishlist": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/wishlist_jk8a.svg", "Knowledge": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/knowledge_g5gf.svg", "Art": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/art_0tat.svg", "Marketing": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/marketing_v0iu.svg", "Laravel and vue": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/laravel_and_vue_59tp.svg", "Server down": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/server_down_s4lk.svg", "Cancel": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/cancel_u1it.svg", "Connected world": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/connected_world_wuay.svg", "Online wishes": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/online_wishes_dlmr.svg", "Around the world": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/around_the_world_v9nu.svg", "Artist": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/artist_b4rc.svg", "City girl": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/city_girl_ccpd.svg", "Convert": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/convert_2gjv.svg", "Happy women day": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/happy_women_day_fbjt.svg", "Palette": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/palette_110c.svg", "Task": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/task_31wc.svg", "Hire": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/hire_te5y.svg", "My password": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/my_password_d6kg.svg", "Personal data": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/personal_data_29co.svg", "Into the night": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/into_the_night_vumi.svg", "Code typing": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/code_typing_7jnv.svg", "Notify": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/notify_88a4.svg", "Step to the sun": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/step_to_the_sun_nxqq.svg", "Open source": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/open_source_1qxw.svg", "Late at night": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/late_at_night_23xk.svg", "Journey": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/journey_lwlj.svg", "Memory storage": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/Memory_storage_reh0.svg", "Fashion blogging": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/fashion_blogging_w9ol.svg", "Team work": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/team_work_k80m.svg", "Completed": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/completed_ngx6.svg", "Folder": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/folder_39kl.svg", "Apartment rent": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/apartment_rent_o0ut.svg", "Profile data": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/profile_data_mk6k.svg", "Payments": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/payments_21w6.svg", "Domain names": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/domain_names_rdql.svg", "Hamburger": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/hamburger_91cc.svg", "Contemplating": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/contemplating_8t0x.svg", "Candidate": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/candidate_ubwv.svg", "Investing": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/investing_7u74.svg", "Creative woman": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/creative_woman_v415.svg", "Accept request": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/accept_request_vdsd.svg", "Problem solving": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/problem_solving_ft81.svg", "Multitasking": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/multitasking_hqg3.svg", "Weather app": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/weather_app_i5sm.svg", "Super woman": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/super_woman_dv0y.svg", "Metrics": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/metrics_gtu7.svg", "Content creator": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/content_creator_xeju.svg", "Instruction manual": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/instruction_manual_cyae.svg", "Synchronize": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/synchronize_ccxk.svg", "Love": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/love_xfcv.svg", "Coffee break": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/coffee_break_j3of.svg", "In thought": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/in_thought_gjsf.svg", "Environment": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/environment_iaus.svg", "Choice": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/choice_9385.svg", "Traveling": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/traveling_t8y2.svg", "Profile": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/profile_6l1l.svg", "Page not found": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/page_not_found_su7k.svg", "Design thinking": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/design_thinking_x8f6.svg", "Media player": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/media_player_ylg8.svg", "Message sent": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/message_sent_1030.svg", "Skateboarding": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/skateboarding_929d.svg", "Begin chat": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/begin_chat_c6pj.svg", "Software engineer": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/software_engineer_lvl5.svg", "Gift card": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/gift_card_6ekc.svg", "Download": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/download_pc33.svg", "I can fly": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/i_can_fly_7egl.svg", "Upload image": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/upload_image_iwej.svg", "Personal notes": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/personal_notes_8n63.svg", "Wordpress": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/wordpress_utxt.svg", "Bookmarks": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/bookmarks_r6up.svg", "Social update": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/social_update_puv0.svg", "Millennial girl": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/millennial_girl_fxlt.svg", "Fast car": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/fast_car_p4cu.svg", "Add notes": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/add_notes_8cfw.svg", "Personal site": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/personal_site_xyd1.svg", "Grandma": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/gradma_wanr.svg", "Modern life": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/modern_life_u1ev.svg", "Shopping": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/shopping_eii3.svg", "Aircraft": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/aircraft_fbvl.svg", "Travelers": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/travelers_qlt1.svg", "Creative thinking": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/creative_thinking_b3bc.svg", "Online friends": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/online_friends_x73e.svg", "Financial data": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/financial_data_es63.svg", "Team page": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/team_page_pgpr.svg", "Dog walking": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/dog_walking_0jpt.svg", "Awards": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/awards_fieb.svg", "Deliveries": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/deliveries_131a.svg", "Pizza sharing": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/pizza_sharing_wxop.svg", "Ninja": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/ninja_e52b.svg", "Checking boxes": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/checking_boxes_2ibd.svg", "React": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/react_y7wq.svg", "Social share": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/social_share_algy.svg", "Projections": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/projections_7g6a.svg", "Conference speaker": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/conference_speaker_6nt7.svg", "Note list": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/note_list_etto.svg", "Travel booking": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/travel_booking_6koc.svg", "Stability ball": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/Stability_ball_b4ia.svg", "Doll play": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/doll_play_evbw.svg", "Treasure": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/treasure_of9i.svg", "Programmer": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/programmer_imem.svg", "Fish bowl": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/fish_bowl_uu88.svg", "Subway": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/subway_7vh7.svg", "Growth analytics": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/growth_analytics_8btt.svg", "Joyride": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/joyride_hnno.svg", "Dua Lipa": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/dua_lipa_ixam.svg", "Toy car": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/toy_car_7umw.svg", "Fitness tracker": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/fitness_tracker_3033.svg", "Posting photo": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/posting_photo_v65l.svg", "career progress": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/career_progress_ivdb.svg", "Followers": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/followers_4i0p.svg", "Monitor": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/monitor_iqpq.svg", "Hiking": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/hiking_d24r.svg", "Buffer": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/buffer_wq43.svg", "Directions": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/directions_x53j.svg", "Update": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/update_uxn2.svg", "Timeline": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/timeline_9u4u.svg", "Upgrade": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/upgrade_06a0.svg", "Contact us": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/contact_us_15o2.svg", "Social life": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/social_life_4np1.svg", "Discount": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/discount_d4bd.svg", "Festivities": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/festivities_tvvj.svg", "Happy 2019": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/happy_2019_jq3f.svg", "Christmas tree": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/christmas_tree_56sw.svg", "3d modeling": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/3d_modeling_h60h.svg", "Dreamer": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/dreamer_gxxi.svg", "Sculpting": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/sculpting_1c9p.svg", "Bug fixing": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/bug_fixing_oc7a.svg", "Calling": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/calling_kpbp.svg", "Xmas surprise": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/xmas_surprise_57p1.svg", "To do": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/to_do_xvvc.svg", "Buddies": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/buddies_tb1l.svg", "Conference": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/conference_uo36.svg", "Mobile life": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/mobile_life_381t.svg", "Teaching": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/teaching_f1cm.svg", "Circles": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/circles_y7s2.svg", "File bundle": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/File_bundle_xl7g.svg", "A whole year": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/a_whole_year_vnfm.svg", "Mind map": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/mind_map_cwng.svg", "Horror movie": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/horror_movie_3988.svg", "Going up": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/going_up_ttm5.svg", "True friends": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/true_friends_c94g.svg", "Algolia": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/algolia_msba.svg", "Launching": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/launching_125y.svg", "About me": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/about_me_wa29.svg", "Stripe payments": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/stripe_payments_o7aw.svg", "Typewriter": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/typewriter_i8xd.svg", "Meditating": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/meditating_0nae.svg", "Christmas stocking": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/Christmas_stocking_wux9.svg", "Frozen figure": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/frozen_figure_omho.svg", "Santa claus": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/santa_claus_q0g4.svg", "Compose music": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/compose_music_ovo2.svg", "Japan": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/japan_ubgk.svg", "Following": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/following_q0cr.svg", "Mint tea": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/mint_tea_7su0.svg", "Finish line": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/finish_line_katerina_limpitsouni_xy20.svg", "Judge": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/judge_katerina_limpitsouni_ny1q.svg", "Image post": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/image_post_24iy.svg", "Game day": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/game_day_ucx9.svg", "visual data": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/visual_data_b1wx.svg", "Fireworks": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/fireworks_q5ji.svg", "Post online": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/post_online_dkuk.svg", "Data points": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/Data_points_ubvs.svg", "Operating system": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/operating_system_4lr6.svg", "Working remotely": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/working_remotely_jh40.svg", "Under construction": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/under_construction_46pa.svg", "Personal settings": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/personal_settings_kihd.svg", "Having fun": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/having_fun_iais.svg", "Uploading": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/uploading_go67.svg", "Smart home": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/smart_home_28oy.svg", "Recording": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/recording_lywr.svg", "Gifts": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/gifts_btw0.svg", "Booking": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/booking_33fn.svg", "Youtube tutorial": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/youtube_tutorial_2gn3.svg", "Logistics": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/logistics_x4dc.svg", "Teddy bear": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/teddy_bear_hns1.svg", "Email campaign": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/email_campaign_qa8y.svg", "Vehicle sale": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/vehicle_sale_v7fm.svg", "Video call": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/video_call_kxyp.svg", "Prototyping process": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/prototyping_process_rswj.svg", "Map": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/map_1r69.svg", "Unboxing": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/unboxing_pbmf.svg", "Teacher": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/teacher_35j2.svg", "Texting": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/texting_k35o.svg", "Authentication": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/authentication_fsn5.svg", "Moving forward": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/moving_forward_lhhd.svg", "pair programming": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/pair_programming_njlp.svg", "Dark analytics": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/dark_analytics_7axy.svg", "Podcast audience": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/podcast_audience_ddap.svg", "Exams": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/exams_g4ow.svg", "Making art": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/making_art_759c.svg", "Quitting time": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/quitting_time_dm8t.svg", "User flow": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/user_flow_vr6w.svg", "Printing invoices": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/printing_invoices_5r4r.svg", "Schedule": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/schedule_pnbk.svg", "In progress": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/in_progress_ql66.svg", "Messaging fun": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/messaging_fun_86y2.svg", "Mobile testing": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/mobile_testing_reah.svg", "Barber": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/barber_3uel.svg", "Version control": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/version_control_9bpv.svg", "Status update": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/status_update_jjgk.svg", "Jason mask": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/jason_mask_t07o.svg", "Social dashboard": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/social_dashboard_k3pt.svg", "Robotics": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/robotics_kep0.svg", "Scrum board": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/scrum_board_cesn.svg", "Usability testing": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/usability_testing_2xs4.svg", "Wind turbine": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/wind_turbine_x2k4.svg", "Developer activity": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/developer_activity_bv83.svg", "Medicine": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/medicine_b1ol.svg", "Revenue": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/revenue_3osh.svg", "Scooter": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/scooter_aia8.svg", "Wallet": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/wallet_aym5.svg", "Witch": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/witch_7uk7.svg", "Wedding": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/wedding_t1yl.svg", "Warning": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/warning_cyit.svg", "Personal trainer": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/personal_trainer_ote3.svg", "Winners": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/winners_ao2o.svg", "Group chat": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/group_chat_v059.svg", "Night calls": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/night_calls_5jh7.svg", "Mobile marketing": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/mobile_marketing_iqbr.svg", "Winter designer": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/winter_designer_a2m7.svg", "Maker launch": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/maker_launch_crhe.svg", "Data trends": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/data_trends_b0wg.svg", "Features overview": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/features_overview_jg7a.svg", "Interview": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/interview_rmcf.svg", "Content": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/content_vbqo.svg", "Questions": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/questions_75e0.svg", "Balloons": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/balloons_vxx5.svg", "Doctors": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/doctors_hwty.svg", "Savings": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/savings_hjfl.svg", "Children": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/children_4rtb.svg", "Security": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/security_o890.svg", "Super thank you": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/super_thank_you_obwk.svg", "Voice control": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/voice_control_ofo1.svg", "Missed chances": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/missed_chances_k3cq.svg", "World": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/world_9iqb.svg", "Setup analytics": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/setup_analytics_8qkl.svg", "Videographer": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/videographer_nnc7.svg", "Setup wizard": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/setup_wizard_r6mr.svg", "Heartbroken": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/heartbroken_cble.svg", "Interaction design": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/interaction_design_odgc.svg", "Startled": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/startled_8p0r.svg", "Site stats": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/site_stats_l57q.svg", "Add to cart": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/add_to_cart_vkjp.svg", "Confirmation": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/confirmation_2uy0.svg", "Fatherhood": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/fatherhood_7i19.svg", "Dashboard": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/dashboard_nklg.svg", "Feeling blue": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/feeling_blue_4b7q.svg", "Order confirmed": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/order_confirmed_1m3v.svg", "Business plan": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/business_plan_5i9d.svg", "Before dawn": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/before_dawn_bqrj.svg", "Businesswoman": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/businesswoman_pc12.svg", "Getting coffee": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/getting_coffee_wntr.svg", "Pedestrian crossing": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/pedestrian_crossing_l6jv.svg", "Powerful": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/powerful_26ry.svg", "Programming": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/programming_2svr.svg", "Working late": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/working_late_pukg.svg", "Envelope": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/envelope_n8lc.svg", "Press play": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/press_play_bx2d.svg", "Emails": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/emails_6uqr.svg", "Dark alley": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/dark_alley_hl3o.svg", "Chef": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/chef_lbjx.svg", "Off road": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/off_road_9oae.svg", "QA engineers": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/QA_engineers_dg5p.svg", "Pie chart": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/pie_chart_6efe.svg", "Baby": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/baby_ja7a.svg", "Mobile payments": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/mobile_payments_edgf.svg", "Design community": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/design_community_rcft.svg", "Preferences": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/preferences_uuo2.svg", "Businessman": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/businessman_97x4.svg", "Trip": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/trip_dv9f.svg", "On the office": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/on_the_office_fbfs.svg", "Wireframing": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/wireframing_nxyi.svg", "Product teardown": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/product_teardown_elol.svg", "Alien science": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/alien_science_nonm.svg", "Hang out": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/hang_out_h9ud.svg", "Science": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/science_fqhl.svg", "Conversation": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/conversation_h12g.svg", "Business deal": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/business_deal_cpi9.svg", "Focus": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/focus_sey6.svg", "Designer life": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/designer_life_w96d.svg", "Server status": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/server_status_5pbv.svg", "Studying": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/studying_s3l7.svg", "Blank canvas": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/blank_canvas_3rbb.svg", "Smiley face": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/smiley_face_lmgm.svg", "Back to school": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/back_to_school_inwc.svg", "Product Tour": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/product_tour_foyt.svg", "Upload": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/upload_87y9.svg", "Fall is coming": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/fall_is_coming_dg3x.svg", "Target": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/target_kriv.svg", "To do list": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/to_do_list_a49b.svg", "City driver": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/city_driver_jh2h.svg", "Motherhood": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/motherhood_7htu.svg", "Digital nomad": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/digital_nomad_9kgl.svg", "Creativity": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/creativity_wqmm.svg", "Online shopping": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/online_shopping_ga73.svg", "More music": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/more_music_w70e.svg", "Instant support": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/instant_support_elxh.svg", "Book lover": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/book_lover_mkck.svg", "Startup life": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/startup_life_2du2.svg", "Design tools": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/design_tools_42tf.svg", "Mobile browsers": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/mobile_browsers_lib5.svg", "Work chat": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/work_chat_erdt.svg", "Doctor": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/doctor_kw5l.svg", "Team spirit": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/team_spirit_hrr4.svg", "Work time": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/work_time_lhoj.svg", "Empty": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/empty_xct9.svg", "Weather": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/weather_d9t2.svg", "Word of mouth": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/word_of_mouth_v1j9.svg", "On the way": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/on_the_way_ldaq.svg", "Birthday cake": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/birthday_cake_7df8.svg", "A day at the park": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/a_day_at_the_park_owg1.svg", "Calculator": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/Calculator_0evy.svg", "Group selfie": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/group_selfie_ijc6.svg", "Personalization": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/personalization_triu.svg", "Relaxing at home": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/relaxing_at_home_9tyc.svg", "Pilates": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/pilates_gpdb.svg", "Loading": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/loading_frh4.svg", "Running wild": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/running_wild_ni0y.svg", "Taking notes": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/taking_notes_tjaf.svg", "Collection": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/collection_u2np.svg", "Thoughts": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/thoughts_e49y.svg", "Refreshing": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/refreshing_ncum.svg", "Moment to remember": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/moment_to_remember_02gj.svg", "Analysis": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/analysis_4jis.svg", "Workout": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/workout_gcgu.svg", "Airport": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/airport_2581.svg", "Photocopy": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/photocopy_gj0t.svg", "Campfire": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/campfire_s6y4.svg", "High five": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/High_five_u364.svg", "Young and happy": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/young_and_happy_hfpe.svg", "Report": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/report_mx0a.svg", "Music": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/music_r1se.svg", "Navigation": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/navigation_lytx.svg", "Surfer": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/surfer_m6jb.svg", "Exploring": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/exploring_1l7f.svg", "Onboarding": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/onboarding_o8mv.svg", "Art lover": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/art_lover_yjfr.svg", "In the pool": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/in_the_pool_c5h0.svg", "Successful purchase": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/successful_purchase_uyin.svg", "Organize resume": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/organize_resume_utk5.svg", "Android": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/android_jr64.svg", "Ether": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/ethereum_desire_wy1b.svg", "Reading list": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/reading_list_4boi.svg", "Gardening": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/gardening_j8jx.svg", "Online world": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/online_world_mc1t.svg", "Messaging": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/messaging_uok8.svg", "Online": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/online_1qud.svg", "Forgot password": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/forgot_password_gi2d.svg", "Lost": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/lost_bqr2.svg", "Beach": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/beach_56sf.svg", "Credit card payments": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/credit_card_payment_12va.svg", "Time management": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/time_management_30iu.svg", "Inbox cleanup": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/inbox_cleanup_w2ur.svg", "Crypto flowers": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/crypto_flowers_6bgv.svg", "Community": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/community_8nwl.svg", "Wall post": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/wall_post_83ul.svg", "App installation": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/app_installation_mbdv.svg", "VR chat": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/vr_chat_kq3p.svg", "Forever": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/forever_5ag7.svg", "Track and field": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/track_and_field_33qn.svg", "Fishing": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/fishing_hoxa.svg", "Be the hero": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/be_the_hero_ssr2.svg", "Accept terms": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/accept_terms_4in8.svg", "GDPR": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/gdpr_3xfb.svg", "In sync": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/in_sync_xwsa.svg", "Basketball": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/basketball_agx4.svg", "Social ideas": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/social_ideas_e8rj.svg", "Marilyn": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/marilyn_v73y.svg", "Staying in": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/staying_in_i80u.svg", "Organize photos": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/organize_photos_d5nr.svg", "Podcast": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/podcast_q6p7.svg", "People search": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/people_search_wctu.svg", "Girls just wanna have fun": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/girl_just_wanna_have_fun_9d5u.svg", "Messenger": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/messenger_e7iu.svg", "Social networking": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/social_networking_nqk4.svg", "Ride a bicycle": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/Ride_a_bicycle_2yok.svg", "Friendship": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/friendship_mni7.svg", "Makeup artist": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/makeup_artist_rxn8.svg", "Electric car": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/electric_car_b7hl.svg", "Freelancer": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/freelancer_b0my.svg", "Gaming": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/gaming_6oy3.svg", "Rising": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/rising_8svm.svg", "Events": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/events_2p66.svg", "Follow me drone": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/Follow_me_drone_kn76.svg", "Bibliophile": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/Bibliophile_hwqc.svg", "Old day": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/old_day_6x25.svg", "Co-working": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/co-working_825n.svg", "Segmentation": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/segmentation_uioo.svg", "May the force": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/may_the_force_bgdm.svg", "Back in the day": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/back_in_the_day_knsh.svg", "Goal": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/goal_0v5v.svg", "Firmware": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/firmware_mf69.svg", "Country side": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/country_side_ayop.svg", "Blogging": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/blogging_vpvv.svg", "Sunny day": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/sunny_day_bk3m.svg", "Sleep analysis": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/sleep_analysis_o5f9.svg", "Wishes": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/wishes_icyp.svg", "Data report": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/data_report_bi6l.svg", "Healthy habit": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/healthy_habit_bh5w.svg", "Static assets": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/static_assets_rpm6.svg", "In love": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/in_love_3dcq.svg", "Good doggy": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/good_doggy_4wfq.svg", "Virtual reality": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/virtual_reality_y5ig.svg", "By my car": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/by_my_car_ttge.svg", "Filing system": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/filing_system_b5d2.svg", "Celebration": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/celebration_0jvk.svg", "Drone race": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/drone_race_0sim.svg", "Artificial intelligence": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/artificial_intelligence_upfn.svg", "Mindfulness": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/mindfulness_scgo.svg", "Make it rain": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/make_it_rain_iwk4.svg", "Building blocks": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/building_blocks_n0nc.svg", "Coding": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/coding_6mjf.svg", "Selfie time": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/selfie_time_cws4.svg", "Web devices": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/web_devices_ad58.svg", "Eating together": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/eating_together_tjhx.svg", "Drone delivery": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/drone_delivery_5vrm.svg", "Street food": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/street_food_hm5i.svg", "Window shopping": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/window_shopping_b96y.svg", "In the office": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/in_the_office_o44c.svg", "Tasting": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/tasting_de22.svg", "Romantic getaway": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/romantic_getaway_k2mf.svg", "Image upload": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/image_upload_wqh3.svg", "Newsletter": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/newsletter_vovu.svg", "Easter egg hunt": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/easter_egg_hunt_r36d.svg", "Finance": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/finance_0bdk.svg", "Through the desert": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/through_the_desert_fcin.svg", "Grand slam": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/grand_slam_0q5r.svg", "Walk in the city": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/walk_in_the_city_1ma6.svg", "Ethereum": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/ethereum_fb7n.svg", "Website setup": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/website_setup_5hr2.svg", "Co-workers": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/co-workers_ujs6.svg", "Departing": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/departing_lsgy.svg", "Mobile apps": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/mobile_apps_4wgf.svg", "Influencer": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/influencer_d3xx.svg", "Outer space": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/Outer_space_drqu.svg", "Bitcoin P2P": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/btc_p2p_lth5.svg", "Social strategy": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/social_strategy_1wuq.svg", "Together": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/together_j0gj.svg", "Modern woman": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/modern_woman_9l0u.svg", "Meeting": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/meeting_115p.svg", "Ordinary day": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/ordinary_day_xi0c.svg", "Home run": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/home_run_oerh.svg", "Cloud hosting": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/cloud_hosting_aodd.svg", "Broadcast": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/broadcast_jhwx.svg", "Tweetstorm": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/tweetstorm_49e8.svg", "Happy birthday": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/happy_birthday_s72n.svg", "JavaScript frameworks": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/JavaScript_Frameworks_x21l.svg", "Women day": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/women_day_2m89.svg", "Spreadsheets": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/spreadsheets_xdjy.svg", "Email capture": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/email_capture_x8kv.svg", "Fast loading": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/fast_loading_0lbh.svg", "Login": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/login_jdch.svg", "Hello": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/hello_aeia.svg", "Collecting": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/collecting_fjjl.svg", "Organizing projects": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/organizing_projects1_47ja.svg", "Live collaboration": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/live_collaboration_2r4y.svg", "Product hunt": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/product_hunt_n3f5.svg", "Connecting Teams": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/connecting_teams3_1pgn.svg", "New message": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/new_message_2gfk.svg", "Lighthouse": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/Lighthouse_frb8.svg", "Houses": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/houses3_xwf7.svg", "About us page": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/about_us_page_ee1k.svg", "Bitcoin": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/bitcoin2_ave7.svg", "Fans": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/fans_gr54.svg", "Winter olympics": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/Winter_olympics_p07j.svg", "To the stars": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/To_the_stars_qhyy.svg", "Responsive": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/responsive_6c8s.svg", "Creation process": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/creation_process_vndn.svg", "Designer": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/designer_kcp7.svg", "Profile pic": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/profile_pic_ic5t.svg", "Team": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/team_ih79.svg", "Notes": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/notes1_cf55.svg", "Selfie": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/selfie1_kpqf.svg", "News": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/news_go0e.svg", "Development": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/development_ouy3.svg", "Messages": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/messages1_9ah2.svg", "Credit card payment": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/credit_card_payment_yb88.svg", "Love is in the air": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/love_is_in_the_air_4mmc.svg", "Superhero": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/superhero_kguv.svg", "Active support": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/active_support_6rwo.svg", "Design process": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/design_process_iqqg.svg", "Control panel": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/control_panel1_20gm.svg", "Transfer files": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/transfer_files_6tns.svg", "Hiring": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/hiring_cyhs.svg", "Brainstorming": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/brainstorming_49d4.svg", "Starman": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/startman1_h7l9.svg", "Post": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/post2_19cj.svg", "Graduation": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/graduation_9x4i.svg", "No data": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/no_data_qbuo.svg", "Cloud sync": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/cloud_sync_2aph.svg", "Grades": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/grades_j6jn.svg", "Gift": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/gift1_sgf8.svg", "Add files": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/add_file2_gvbb.svg", "Connected": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/connected_8wvi.svg", "Secure data": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/secure_data_0rwp.svg", "Agreement": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/agreement_aajr.svg", "Taken": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/Taken_if77.svg", "Confirmed": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/confirmed_81ex.svg", "Security on": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/Security_on_s9ym.svg", "Air support": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/air_support_wy1q.svg", "Beer celebration": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/beer_celebration_3wc8.svg", "Chatting": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/chatting_2yvo.svg", "Upvote": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/upvote_96dp.svg", "Secure server": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/secure_server_s9u8.svg", "Queue": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/queue_qt30.svg", "Choose": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/choose_80qg.svg", "Chilling": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/chilling_8tii.svg", "Swipe profiles": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/swipe_profiles1_i6mr.svg", "Real-time sync": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/real-time_sync_o57k.svg", "Add user": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/add_user_ipe3.svg", "Customer survey": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/customer_survey_f9ur.svg", "Mission impossible": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/mission_impossible_bwa2.svg", "Filter": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/filter_4kje.svg", "Cautious dog": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/Cautious_dog_q83f.svg", "Container ship": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/Container_ship_urt4.svg", "Playful cat": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/playful_cat_ql3n.svg", "Specs": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/Specs_h9jt.svg", "Job hunt": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/job_hunt_byf9.svg", "File searching": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/file_searching_duff.svg", "Jogging": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/Jogging_t14q.svg", "Collaboration": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/collaboration2_8og0.svg", "Working": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/Working_32n9.svg", "Experts": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/experts3_3njd.svg", "Windows": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/windows_q9m0.svg", "Destination": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/Destination_mcr1.svg", "Meditation": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/Meditation_o89g.svg", "Opened": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/opened_gi4n.svg", "Growing": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/growing_rk7d.svg", "Invite": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/invite_i6u7.svg", "Pen tool": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/pen_nqf7.svg", "Checklist": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/checklist_7q37.svg", "Floating": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/floating_61u6.svg", "Address": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/address_udes.svg", "Vault": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/vault_9cmw.svg", "Typing": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/typing_jie3.svg", "Mailbox": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/mail_box_kd5i.svg", "House searching": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/house_searching_n8mp.svg", "Sync": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/sync4_xlc6.svg", "Notebook": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/Notebook_o571.svg", "Alert": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/alert_mc7b.svg", "Movie night": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/movie_night_93wl.svg", "Welcome": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/welcome_3gvl.svg", "Maintenance": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/maintenance_cn7j.svg", "Setup": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/setup_obqo.svg", "Select": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/select_13cv.svg", "Presentation": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/presentation1_tqkp.svg", "Photo sharing": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/photo_sharing_1_85vy.svg", "Mail": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/mail_2_tqip.svg", "Camping": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/Camping_2g8w.svg", "Safe": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/safe_bnk7.svg", "Account": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/account_490v.svg", "Processing": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/processing_qj6a.svg", "For sale": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/for_sale_viax.svg", "Data": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/data_xmfy.svg", "Golden gate bridge": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/Golden_gate_bridge_laqs.svg", "Calendar": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/calendar_dutt.svg", "Social growth": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/social_growth_d0y3.svg", "Search engines": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/search_engines_nn9e.svg", "Server": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/server_q2pb.svg", "Bus stop": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/bus_stop_h370.svg", "Relaxation": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/relaxation_1_wbr7.svg", "Segment": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/segment_uwu1.svg", "Contrast": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/contrast_vb82.svg", "Browser stats": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/browser_stats_704t.svg", "Appreciation": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/appreciation_2_v4bt.svg", "Couple": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/couple_a7s9.svg", "Create": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/create_f05x.svg", "Morning essentials": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/morning_essentials_9fw8.svg", "Resume folder": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/resume_folder_2_arse.svg", "Images": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/images_aef7.svg", "Astronaut": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/Astronaut_kwwa.svg", "Depi": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/depi_wexf.svg", "Building": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/Building_vpxo.svg", "Statistics": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/statistics_ctoq.svg", "Passing by": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/passing_by_gqfk.svg", "Internet on the go": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/Internet_on_the_go_5xx0.svg", "Resume": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/resume_1hqp.svg", "Snowman": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/snowman_1_a2ch.svg", "Autumn": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/autumn_2_ygk5.svg", "Social tree": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/social_tree_1_y9wa.svg", "Designer girl": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/designer_girl_xdmq.svg", "Nerd": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/man_eiev.svg", "Woman": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/woman_mevk.svg", "Map light": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/map_light_6ttm.svg", "Photos": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/photos_1nui.svg", "Posts": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/Posts_rskc.svg", "Mobile": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/mobile_prle.svg", "Image folder": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/folder_x4ft.svg", "Tabs": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/tabs_jf82.svg", "Yacht": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/Yacht_2wyo.svg", "Plain credit card": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/plain_credit_card_c8b8.svg", "Portfolio": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/portfolio_essv.svg", "Analytics": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/analytics_5pgy.svg", "Documents": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/files1_9ool.svg", "Chat": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/chat_1wo5.svg", "Delivery": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/mail1_uab6.svg", "At work": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/files_6b3d.svg", "Devices": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/Devices_e67q.svg", "Charts": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/charts_jj6t.svg", "Blog post": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/blog_anyj.svg", "Photo": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/photo_4yb9.svg", "Map dark": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/map_dros.svg", "Search": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/search_2dfv.svg", "Mail sent": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/mail_cg1t.svg", "Social media": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/pcsocial_16rw.svg", "Credit card": "https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/credit_card_df1m.svg", "Pattern Glamorous": "", "Pattern 4 Point Stars": "", "Pattern Bamboo": "", "Pattern Bathroom Floor": "", "Pattern Boxes": "", "Pattern Brick Wall": "", "Pattern Bubbles": "", "Pattern Circuit Board": "", "Pattern Diagonal Lines": "", "Pattern Diagonal Stripes": "", "Pattern Eyes": "", "Pattern Falling Triangles": "", "Pattern Floating Cogs": "", "Pattern Floor Tile": "", "Pattern Graph Paper": "", "Pattern Hexagons": "", "Pattern Hideout": "", "Pattern Line In Motion": "", "Pattern Morphing Diamonds": "", "Pattern Overlapping Circles": "", "Pattern Plus": "", "Pattern Dots": "", "Pattern Polka Dots": "", "Pattern Rain": "", "Pattern Squares": "", "Pattern Stripes": "", "Pattern Texture": "", "Pattern Tic Tax Toe": "", "Pattern Tiny Checkers": "", "Pattern Wiggle": "", "Pattern X Equals": "", "Pattern Zig Zag": "", "Pattern Stars": "",
  "Cloud 1": "", "Cloud 2": "",
  "Blob 1": "", "Blob 2": "", "Blob 3": "", "Blob 4": "", "Blob 5": "", "Blob 6": "", "Blob 7": "", "Blob 8": "", "Blob 9": "", "Blob 10": "", "Blob 11": "", "Blob 12": "", "Blob 13": "", "Blob 14": "", "Blob 15": "", "Blob 16": "", "Blob 17": "", "Blob 18": "", "Blob 19": "", "Blob 20": "", "Blob 21": "", "Blob 22": "", "Blob 23": "", "Blob 24": "", "Blob 25": "", "Blob 26": "", "Blob 27": "", "Blob 28": "", "Blob 29": ""
};

exports.default = SVGImageJSON;

/***/ }),

/***/ 786:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var DevUtilities = {

    getFieldDefaults: function getFieldDefaults(fields) {
        var output = '';

        fields.fields.map(function (field, index) {
            var item = '';

            item += field.id + ': {\n                ';

            switch (field.type) {
                case 'text':
                    if (field.configuration != undefined && field.configuration.type == 'number') {
                        item += 'text: 1';
                    } else {
                        item += 'text: \'default text\'';
                    }
                    break;
                case 'box_shadow':
                    item += 'useDefault: \'default\',\n                horizontal: 0,\n                vertical: 0,\n                blur: 15,\n                spread: 3,\n                color: \'rgba(0,0,0,0.2)\'';
                    break;
                case 'link':
                    item += 'url: \'https://offsprout.com\'';
                    break;
                case 'icon':
                    item += 'icon: \'fa-remove\'';
                    break;
                case 'texteditor':
                    item += 'text: \'<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vestibulum bibendum quis est ut facilisis.</p>\'';
                    break;
                case 'switch':
                    item += 'yes: 1';
                    break;
                case 'radio_toggle':
                case 'dropdown':
                    item += 'choice: \'' + field.options[0].value + '\'';
                    break;
                case 'linked_sliders':
                    item += 'top: 1,\n                left: 1,\n                right: 1,\n                bottom: 1,\n                units: \'em\',\n                useDefault: \'default\'';
                    break;
                case 'slider_control':
                    item += 'value: 1,\n                units: \'em\',\n                useDefault: \'default\'';
                    break;
                case 'border':
                    item += 'top: 1,\n                left: 1,\n                bottom: 1,\n                right: 1,\n                units: \'px\',\n                useDefault: \'default\',\n                type: \'solid\',\n                color: \'default\',\n                customColor: \'rgba(0,0,0,1)\'';
                    break;
                case 'color':
                    item += 'color: \'default\',\n                customColor: \'rgba(0,0,0,1)\'';
                    break;
                case 'media':
                    item += 'url: \'\'';
                    break;
                case 'items':
                    item += 'items: [\n                    {\n                        name: \'one\',\n                        id: TreeReducerFunctions.generateId(\'cont\')\n                    },\n                    {\n                        name: \'two\',\n                        id: TreeReducerFunctions.generateId(\'cont\')\n                    },\n                    {\n                        name: \'three\',\n                        id: TreeReducerFunctions.generateId(\'cont\')\n                    }\n                ]';
                    break;
                case 'query_filter':
                    item += 'items: [],\n                    type: \'in\'';
                    break;
                default:
                    return;
            }

            item += '\n            },\n            ';

            output += item;
        });

        return output;
    },

    logFieldDefaults: function logFieldDefaults(fields) {
        console.log(DevUtilities.getFieldDefaults(fields));
    }

};

exports.default = DevUtilities;

/***/ }),

/***/ 787:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _deepmerge = __webpack_require__(9);

var _deepmerge2 = _interopRequireDefault(_deepmerge);

var _api_helpers = __webpack_require__(6);

var _api_helpers2 = _interopRequireDefault(_api_helpers);

var _settings_helpers = __webpack_require__(2);

var _settings_helpers2 = _interopRequireDefault(_settings_helpers);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var UpdateHelpers = {
    updateModule: function updateModule(type, current, options) {
        switch (type) {
            case 'testimonials':
                UpdateHelpers.updateTestimonials(current, options);
                break;
        }
    },

    updateTestimonials: function updateTestimonials(current, options) {
        var newTestimonial = _api_helpers2.default.doRequest('createCustom', {
            post_type: 'ocb_testimonial',
            title: 'New Testimonial',
            status: 'publish'
        });

        newTestimonial.then(function (result) {
            var testimonial = _api_helpers2.default.doRequest('updateCustom', {
                id: result.id,
                post: {
                    post_content: undefined.state.testimonial_content,
                    post_title: undefined.state.testimonial_title
                },
                taxonomies: {
                    post_tag: undefined.state.testimonial_tags
                },
                meta: {
                    ocb_testimonial_config: {
                        attribution: undefined.state.attribution,
                        attribution_description: undefined.state.attributionDescription
                    }
                }
            });
        }).catch(function (error) {
            alert('Could not add testimonial');
        });
    }
};

exports.default = UpdateHelpers;

/***/ }),

/***/ 788:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _linked_sliders = __webpack_require__(360);

var _linked_sliders2 = _interopRequireDefault(_linked_sliders);

var _reactColor = __webpack_require__(99);

var _color_dropdown = __webpack_require__(356);

var _color_dropdown2 = _interopRequireDefault(_color_dropdown);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var BorderField = function (_Component) {
    _inherits(BorderField, _Component);

    function BorderField(props) {
        _classCallCheck(this, BorderField);

        var _this = _possibleConstructorReturn(this, (BorderField.__proto__ || Object.getPrototypeOf(BorderField)).call(this, props));

        _this.state = _extends({}, _this.props.values, { currentDevice: _this.props.appFunctions.whichActive });
        return _this;
    }

    /**
     * Every field should have this function to make sure that settings get updated when a user switched devices
     */
    /*componentWillReceiveProps(){
        if( this.state.currentDevice != this.props.appFunctions.whichActive ){
            this.setState({ ...this.props.values, currentDevice: this.props.appFunctions.whichActive })
        }
    }*/

    /**
     * Every field should have this function and it should likely just be a copy of this
     * @param merge
     */


    _createClass(BorderField, [{
        key: 'update',
        value: function update(merge) {
            var update = Object.assign(this.state, merge);
            this.props.appFunctions.fieldUpdate(this.props.field.id, update, this.props);
            this.setState(merge);
        }
    }, {
        key: 'changeDefault',
        value: function changeDefault(useDefault) {
            this.update({ useDefault: useDefault });
        }
    }, {
        key: 'changeType',
        value: function changeType(e) {
            this.update({ type: e.target.value });
        }
    }, {
        key: 'changeCustomValue',
        value: function changeCustomValue(color, event) {
            this.update({ customColor: 'rgba(' + color.rgb.r + ',' + color.rgb.g + ',' + color.rgb.b + ',' + color.rgb.a + ')' });
        }
    }, {
        key: 'changeDropdownValue',
        value: function changeDropdownValue(value) {
            this.update({ color: value });
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var settings = this.props.values;
            var appFunctions = this.props.appFunctions;
            var baseRadioClass = 'ocb-sf-radio';
            var defaultRadioClass = settings.useDefault == 'default' ? baseRadioClass + ' active' : baseRadioClass;
            var customRadioClass = settings.useDefault == 'custom' ? baseRadioClass + ' active' : baseRadioClass;
            var fullControls = null;
            var colorPicker = null;

            if (settings.useDefault == 'custom') {
                if (settings.color == 'custom') {
                    if (settings.customColor) {
                        colorPicker = _react2.default.createElement(_reactColor.SketchPicker, { color: settings.customColor, onChange: this.changeCustomValue.bind(this) });
                    } else {
                        colorPicker = _react2.default.createElement(_reactColor.SketchPicker, { onChange: this.changeCustomValue.bind(this) });
                    }
                }

                var onlyCustom = this.props.field.properties != undefined && this.props.field.properties.onlyCustomColor != undefined ? this.props.field.properties.onlyCustomColor : false;

                fullControls = _react2.default.createElement(
                    'div',
                    null,
                    _react2.default.createElement(_linked_sliders2.default, { field: this.props.field, values: this.props.values, appFunctions: appFunctions, update: this.update.bind(this) }),
                    _react2.default.createElement(
                        'p',
                        null,
                        _react2.default.createElement(
                            'strong',
                            null,
                            'Type:'
                        )
                    ),
                    _react2.default.createElement(
                        'select',
                        { onChange: this.changeType.bind(this), value: settings.type },
                        _react2.default.createElement(
                            'option',
                            { value: 'solid' },
                            'Solid'
                        ),
                        _react2.default.createElement(
                            'option',
                            { value: 'dotted' },
                            'Dotted'
                        ),
                        _react2.default.createElement(
                            'option',
                            { value: 'dashed' },
                            'Dashed'
                        ),
                        _react2.default.createElement(
                            'option',
                            { value: 'double' },
                            'Double'
                        ),
                        _react2.default.createElement(
                            'option',
                            { value: 'ridge' },
                            'Ridge'
                        ),
                        _react2.default.createElement(
                            'option',
                            { value: 'groove' },
                            'Groove'
                        ),
                        _react2.default.createElement(
                            'option',
                            { value: 'outset' },
                            'Outset'
                        ),
                        _react2.default.createElement(
                            'option',
                            { value: 'inset' },
                            'Inset'
                        )
                    ),
                    _react2.default.createElement(
                        'p',
                        null,
                        _react2.default.createElement(
                            'strong',
                            null,
                            'Color:'
                        )
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'mb-3' },
                        _react2.default.createElement(_color_dropdown2.default, { value: settings.color, changeFunction: this.changeDropdownValue.bind(this), onlyCustom: onlyCustom })
                    ),
                    colorPicker
                );
            }

            return _react2.default.createElement(
                'div',
                { className: 'ocb-sf-border-field' },
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-sf-radio-group mb-3' },
                    _react2.default.createElement(
                        'div',
                        { className: defaultRadioClass, onClick: function onClick() {
                                return _this2.changeDefault('default');
                            } },
                        'None'
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: customRadioClass, onClick: function onClick() {
                                return _this2.changeDefault('custom');
                            } },
                        'Add'
                    )
                ),
                fullControls
            );
        }
    }]);

    return BorderField;
}(_react.Component);

exports.default = BorderField;

/***/ }),

/***/ 789:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _rcSlider = __webpack_require__(98);

var _rcSlider2 = _interopRequireDefault(_rcSlider);

var _reactColor = __webpack_require__(99);

var _use_default = __webpack_require__(237);

var _use_default2 = _interopRequireDefault(_use_default);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

//http://casesandberg.github.io/react-color/
var BoxShadowField = function (_Component) {
    _inherits(BoxShadowField, _Component);

    function BoxShadowField(props) {
        _classCallCheck(this, BoxShadowField);

        var _this = _possibleConstructorReturn(this, (BoxShadowField.__proto__ || Object.getPrototypeOf(BoxShadowField)).call(this, props));

        _this.state = _this.props.values;
        return _this;
    }

    _createClass(BoxShadowField, [{
        key: 'update',
        value: function update(merge) {
            var update = Object.assign(this.state, merge);
            this.props.appFunctions.fieldUpdate(this.props.field.id, update, this.props);
            this.setState(merge);
        }
    }, {
        key: 'changeDefault',
        value: function changeDefault(useDefault) {
            this.update(useDefault);
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var settings = this.state;

            settings.horizontal = settings.horizontal == null ? 0 : settings.horizontal;
            settings.vertical = settings.vertical == null ? 0 : settings.vertical;
            settings.blur = settings.blur == null ? 0 : settings.blur;
            settings.spread = settings.spread == null ? 0 : settings.spread;
            settings.color = settings.color == null ? 'rgba(0,0,0,1)' : settings.color;
            settings.useDefault = settings.useDefault == null ? 'default' : settings.useDefault;

            var controls = null;

            if (this.state.useDefault == 'custom') {
                controls = _react2.default.createElement(
                    'div',
                    { className: 'mt-3' },
                    _react2.default.createElement(
                        'div',
                        { className: 'ocb-sf-spacing-control mt-1' },
                        _react2.default.createElement(
                            'div',
                            { className: 'ocb-sf-spacing-label' },
                            'Horizontal'
                        ),
                        _react2.default.createElement(_rcSlider2.default, {
                            className: 'ocb-sf-spacing-slider',
                            value: settings.horizontal,
                            step: 1,
                            min: -100,
                            max: 100,
                            onChange: function onChange(newValue) {
                                return _this2.update({ horizontal: newValue });
                            } }),
                        _react2.default.createElement('input', { className: 'ocb-sf-spacing-input', type: 'number', step: 'any', onChange: function onChange(e) {
                                return _this2.update({ horizontal: e.target.value });
                            }, value: settings.horizontal })
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'ocb-sf-spacing-control' },
                        _react2.default.createElement(
                            'div',
                            { className: 'ocb-sf-spacing-label' },
                            'Vertical'
                        ),
                        _react2.default.createElement(_rcSlider2.default, {
                            className: 'ocb-sf-spacing-slider',
                            value: settings.vertical,
                            step: 1,
                            min: -100,
                            max: 100,
                            onChange: function onChange(newValue) {
                                return _this2.update({ vertical: newValue });
                            } }),
                        _react2.default.createElement('input', { className: 'ocb-sf-spacing-input', type: 'number', step: 'any', onChange: function onChange(e) {
                                return _this2.update({ vertical: e.target.value });
                            }, value: settings.vertical })
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'ocb-sf-spacing-control' },
                        _react2.default.createElement(
                            'div',
                            { className: 'ocb-sf-spacing-label' },
                            'Blur'
                        ),
                        _react2.default.createElement(_rcSlider2.default, {
                            className: 'ocb-sf-spacing-slider',
                            value: settings.blur,
                            step: 1,
                            min: 0,
                            max: 100,
                            onChange: function onChange(newValue) {
                                return _this2.update({ blur: newValue });
                            } }),
                        _react2.default.createElement('input', { className: 'ocb-sf-spacing-input', type: 'number', step: 'any', onChange: function onChange(e) {
                                return _this2.update({ blur: e.target.value });
                            }, value: settings.blur })
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'ocb-sf-spacing-control' },
                        _react2.default.createElement(
                            'div',
                            { className: 'ocb-sf-spacing-label' },
                            'Spread'
                        ),
                        _react2.default.createElement(_rcSlider2.default, {
                            className: 'ocb-sf-spacing-slider',
                            value: settings.spread,
                            step: 1,
                            min: -100,
                            max: 100,
                            onChange: function onChange(newValue) {
                                return _this2.update({ spread: newValue });
                            } }),
                        _react2.default.createElement('input', { className: 'ocb-sf-spacing-input', type: 'number', step: 'any', onChange: function onChange(e) {
                                return _this2.update({ spread: e.target.value });
                            }, value: settings.spread })
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'mt-2' },
                        _react2.default.createElement(_reactColor.SketchPicker, { color: settings.color, onChange: function onChange(color) {
                                return _this2.update({ color: 'rgba(' + color.rgb.r + ',' + color.rgb.g + ',' + color.rgb.b + ',' + color.rgb.a + ')' });
                            } })
                    )
                );
            }

            return _react2.default.createElement(
                'div',
                { className: 'ocb-sf-box-shadow-field' },
                _react2.default.createElement(_use_default2.default, { useDefault: settings.useDefault, update: this.changeDefault.bind(this) }),
                controls
            );
        }
    }]);

    return BoxShadowField;
}(_react.Component);

exports.default = BoxShadowField;

/***/ }),

/***/ 790:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _api_helpers = __webpack_require__(6);

var _api_helpers2 = _interopRequireDefault(_api_helpers);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var BuilderRoleField = function (_Component) {
    _inherits(BuilderRoleField, _Component);

    function BuilderRoleField(props) {
        _classCallCheck(this, BuilderRoleField);

        var _this = _possibleConstructorReturn(this, (BuilderRoleField.__proto__ || Object.getPrototypeOf(BuilderRoleField)).call(this, props));

        _this.state = _extends({ roles: [] }, _this.props.values);
        return _this;
    }

    _createClass(BuilderRoleField, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _this2 = this;

            var roles = _api_helpers2.default.doRequest('getSetting', null, { setting: 'ocb_builder_roles' });

            roles.then(function (response) {
                _this2.setState({
                    roles: response
                });
            }).catch(function (noRoles) {
                _this2.setState({
                    roles: []
                });
            });
        }
    }, {
        key: 'update',
        value: function update(merge) {
            //For some reason needs to use this.state instead of this.props.values when merging and creating a new object
            // in order to send a signal that the field has been updated, when you change the value multiple times in a row
            /*let update = Object.assign({}, this.state, merge);
            delete update.roles;*/
            this.props.appFunctions.fieldUpdate(this.props.field.id, merge, this.props);
            this.setState(merge);
        }
    }, {
        key: 'changeChoices',
        value: function changeChoices(option) {
            var currentChoices = this.props.values.choices;
            if (currentChoices == undefined) {
                currentChoices = [];
            }
            var newChoices = [];
            if (currentChoices.includes(option)) {
                //remove the variant if the list of current variants includes it and it has been clicked
                currentChoices.forEach(function (each) {
                    if (each != option) newChoices.push(each);
                });
            } else {
                newChoices = currentChoices;
                newChoices.push(option);
            }
            this.update({ choices: newChoices });
        }
    }, {
        key: 'render',
        value: function render() {
            var _this3 = this;

            var settings = this.props.values;

            if (OCBGlobalSettings.builderRole) return _react2.default.createElement(
                'div',
                { className: 'ocb-sf-builder-role-field' },
                'You cannot use this field'
            );

            var choiceButtons = this.state.roles.map(function (role, index) {
                var disabled = '';
                if (settings.choices == undefined || !settings.choices.length || !settings.choices.includes(role.name)) disabled = 'disabled';
                return _react2.default.createElement(
                    'div',
                    { key: index, className: 'ocb-sf-button ' + disabled, onClick: function onClick() {
                            return _this3.changeChoices(role.name);
                        } },
                    role.name
                );
            });

            return _react2.default.createElement(
                'div',
                { className: 'ocb-sf-builder-role-field ocb-sf-radio-toggle' },
                choiceButtons
            );
        }
    }]);

    return BuilderRoleField;
}(_react.Component);

exports.default = BuilderRoleField;

/***/ }),

/***/ 791:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _color_combined = __webpack_require__(235);

var _color_combined2 = _interopRequireDefault(_color_combined);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

//http://casesandberg.github.io/react-color/
var ColorField = function (_Component) {
    _inherits(ColorField, _Component);

    function ColorField(props) {
        _classCallCheck(this, ColorField);

        var _this = _possibleConstructorReturn(this, (ColorField.__proto__ || Object.getPrototypeOf(ColorField)).call(this, props));

        _this.state = _this.props.values;
        return _this;
    }

    _createClass(ColorField, [{
        key: 'update',
        value: function update(merge) {
            this.setState(merge);
            var update = {
                customColor: this.state.customColor,
                color: this.state.color
            };
            update = Object.assign(update, merge);
            this.props.appFunctions.fieldUpdate(this.props.field.id, update, this.props);
        }
    }, {
        key: 'render',
        value: function render() {
            var settings = this.props.values;
            var noDropdown = this.props.field.properties != undefined && this.props.field.properties.color != undefined ? !this.props.field.properties.color : false;
            var onlyCustom = this.props.field.properties != undefined && this.props.field.properties.onlyCustom != undefined ? this.props.field.properties.onlyCustom : false;
            var colorType = this.props.field.configuration != undefined && this.props.field.configuration.colorType != undefined ? this.props.field.configuration.colorType : 'rgba';
            var withGradient = this.props.field.configuration != undefined && this.props.field.configuration.gradient != undefined ? this.props.field.configuration.gradient : false;

            return _react2.default.createElement(
                'div',
                { className: 'ocb-sf-color-field' },
                _react2.default.createElement(_color_combined2.default, { values: settings, update: this.update.bind(this), noDropdown: noDropdown, colorType: colorType, onlyCustom: onlyCustom, withGradient: withGradient })
            );
        }
    }]);

    return ColorField;
}(_react.Component);

exports.default = ColorField;

/***/ }),

/***/ 792:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ColorOption = function (_Component) {
    _inherits(ColorOption, _Component);

    function ColorOption() {
        _classCallCheck(this, ColorOption);

        return _possibleConstructorReturn(this, (ColorOption.__proto__ || Object.getPrototypeOf(ColorOption)).apply(this, arguments));
    }

    _createClass(ColorOption, [{
        key: "handleMouseDown",
        value: function handleMouseDown(event) {
            event.preventDefault();
            event.stopPropagation();
            this.props.onSelect(this.props.option, event);
        }
    }, {
        key: "render",
        value: function render() {
            var _this2 = this;

            return _react2.default.createElement(
                "div",
                { className: "ocb-sf-color-dropdown-option", onMouseDown: function onMouseDown(e) {
                        return _this2.handleMouseDown(e);
                    } },
                _react2.default.createElement("div", { className: "ocb-sf-color-dropdown-option-circle " + this.props.option.value + "-background" }),
                _react2.default.createElement(
                    "div",
                    { className: "ocb-sf-color-dropdown-option-name" },
                    this.props.option.label
                )
            );
        }
    }]);

    return ColorOption;
}(_react.Component);

exports.default = ColorOption;

/***/ }),

/***/ 793:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _texteditor = __webpack_require__(73);

var _texteditor2 = _interopRequireDefault(_texteditor);

var _connector_screen = __webpack_require__(236);

var _connector_screen2 = _interopRequireDefault(_connector_screen);

var _radio_toggle = __webpack_require__(18);

var _radio_toggle2 = _interopRequireDefault(_radio_toggle);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ConnectedTextEditor = function (_Component) {
    _inherits(ConnectedTextEditor, _Component);

    function ConnectedTextEditor(props) {
        _classCallCheck(this, ConnectedTextEditor);

        var _this = _possibleConstructorReturn(this, (ConnectedTextEditor.__proto__ || Object.getPrototypeOf(ConnectedTextEditor)).call(this, props));

        _this.state = {
            connectorScreen: null,
            connection: _this.props.connection != undefined ? _this.props.connection : false,
            editor: false
        };

        _this.editorTimeout = null;
        return _this;
    }

    _createClass(ConnectedTextEditor, [{
        key: 'openMediaLibrary',
        value: function openMediaLibrary(editor) {
            var file_frame = null;

            if (window.ocbFileFrame) {
                window.ocbFileFrame.open();
                return;
            }

            var wpObject = wp;

            if (parent.window != undefined && parent.window.wp != undefined) {
                wpObject = parent.window.wp;
            }

            file_frame = wpObject.media.frames.file_frame = wpObject.media({
                title: 'Select Media',
                button: {
                    text: 'Select'
                }
                //multiple: multiple // set this to true for multiple file selection
            });

            file_frame.on('select', function () {

                var attachments = file_frame.state().get('selection').first().toJSON();
                editor.insertContent(attachments.url);
            });

            file_frame.open();

            window.ocbFileFrame = file_frame;
        }
    }, {
        key: 'addConnectionButton',
        value: function addConnectionButton(editor) {
            var _this2 = this;

            editor.addButton('ocbconnected', {
                icon: 'plus',
                classes: 'ocb-connection-button',
                //image: 'http://p.yusukekamiyamane.com/icons/search/fugue/icons/calendar-blue.png',
                tooltip: "Connect to Field",
                onclick: function onclick() {
                    return _this2.openConnector(editor);
                }
            });

            editor.addButton('ocbmedia', {
                icon: 'image',
                classes: 'ocb-media-library-button ocb-inline-media-library-button',
                tooltip: "Add Media Link",
                onclick: function onclick() {
                    return _this2.openMediaLibrary(editor);
                }
            });

            var menuItemsArray = ['primary', 'primary_light', 'primary_dark', 'action', 'action_light', 'action_dark', 'accent', 'accent_light', 'accent_dark', 'alt_accent', 'alt_accent_light', 'alt_accent_dark', 'positive', 'negative'];

            var menuItems = menuItemsArray.map(function (each) {
                return {
                    text: each,
                    classes: each + '-color',
                    onclick: function onclick() {
                        editor.focus();
                        //Replace the class on existing span colors or wrap in span color
                        if (editor.selection.getNode().tagName.toLowerCase() == 'span' && editor.selection.getNode().className && menuItemsArray.includes(editor.selection.getNode().className.replace('-color', ''))) {
                            jQuery(editor.selection.getNode()).attr('class', each + '-color');
                        } else {
                            editor.selection.setContent('<span class="' + each + '-color">' + editor.selection.getContent() + '</span>');
                        }
                        tinymce.activeEditor.fire('change');
                    }
                };
            });

            editor.addButton('ocbcolor', {
                type: 'menubutton',
                text: 'Color',
                icon: false,
                classes: 'ocb-mce-color-dropdown',
                menu: menuItems
            });

            editor.on('redo undo', function (e) {
                tinymce.activeEditor.fire('change');
            });

            editor.on('keypress', function (e) {
                clearTimeout(this.editorTimeout);
                this.editorTimeout = setTimeout(function () {
                    tinymce.activeEditor.fire('change');
                }, 500);
            });
        }
    }, {
        key: 'connectionUpdate',
        value: function connectionUpdate(update) {
            this.setState({ connection: update });
            this.props.connectionUpdate(update);

            if (update == false) {
                setTimeout(function () {
                    tinymce.activeEditor.fire('change');
                }, 300);
            }
        }
    }, {
        key: 'openConnector',
        value: function openConnector(editor) {
            var _this3 = this;

            jQuery('.mce-ocb-connection-button').css({ transform: 'rotate(45deg)' });
            if (this.state.connectorScreen !== null) {
                this.closeConnector();
            } else {
                this.setState({
                    connectorScreen: _react2.default.createElement(_connector_screen2.default, {
                        editor: editor,
                        close: function close() {
                            return _this3.closeConnector();
                        },
                        connectionUpdate: this.connectionUpdate.bind(this) }),
                    editor: editor
                });
            }
        }
    }, {
        key: 'closeConnector',
        value: function closeConnector() {
            jQuery('.mce-ocb-connection-button').css({ transform: 'rotate(0deg)' });
            this.setState({ connectorScreen: null });
        }
    }, {
        key: 'newConnector',
        value: function newConnector() {
            var _this4 = this;

            this.setState({
                connectorScreen: _react2.default.createElement(_connector_screen2.default, {
                    editor: this.state.editor,
                    close: function close() {
                        return _this4.closeConnector();
                    },
                    connectionUpdate: this.connectionUpdate.bind(this),
                    connection: this.state.connection
                })
            });
        }
    }, {
        key: 'render',
        value: function render() {
            var _this5 = this;

            var toolbar = 'styleselect | bold italic strikethrough | bullist numlist | link unlink | alignleft aligncenter alignright | ocbmedia | code';
            var plugins = 'link image code paste lists wordpress wpautoresize wpeditimage wpemoji wpgallery wplink wpdialogs wptextpattern wpview';
            var setup = this.addConnectionButton.bind(this);

            if (this.props.toolbar != undefined && this.props.toolbar != false) {
                toolbar = this.props.toolbar;
            }

            if (this.props.plugins != undefined && this.props.plugins != false) {
                plugins = this.props.plugins;
            }

            var wrapClass = '';

            //Don't show the connector button if the user doesn't have permission
            if (OCBGlobalSettings.permissions.use_connector) {
                toolbar = 'ocbconnected ' + toolbar;
                wrapClass = 'ocb-textarea-connector';
            }

            var editor = _react2.default.createElement(_texteditor2.default, { value: this.props.value, plugins: plugins, toolbar: toolbar, update: this.props.update, setup: setup, editType: this.props.editType });

            if (this.state.connection != undefined && this.state.connection != false) {
                var settings = this.state.connection.options != undefined && this.state.connection.options != false && !jQuery.isEmptyObject(this.state.connection.options) ? _react2.default.createElement(
                    'div',
                    { className: 'ocb-sf-connection-control', onClick: function onClick() {
                            return _this5.newConnector();
                        } },
                    _react2.default.createElement('i', { className: 'fa fa-cog' })
                ) : null;

                editor = _react2.default.createElement(
                    'div',
                    { className: 'ocb-sf-connection' },
                    settings,
                    _react2.default.createElement(
                        'div',
                        { className: 'ocb-sf-connection-control ocb-sf-connection-control-remove', onClick: function onClick() {
                                return _this5.connectionUpdate(false);
                            } },
                        _react2.default.createElement('i', { className: 'fa fa-remove' })
                    ),
                    'Connected to ',
                    this.state.connection.name
                );
            }

            return _react2.default.createElement(
                'div',
                { className: wrapClass },
                this.state.connectorScreen,
                editor
            );
        }
    }]);

    return ConnectedTextEditor;
}(_react.Component);

exports.default = ConnectedTextEditor;

/***/ }),

/***/ 794:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _texteditor = __webpack_require__(73);

var _texteditor2 = _interopRequireDefault(_texteditor);

var _connector_screen = __webpack_require__(236);

var _connector_screen2 = _interopRequireDefault(_connector_screen);

var _radio_toggle = __webpack_require__(18);

var _radio_toggle2 = _interopRequireDefault(_radio_toggle);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ConnectedTextField = function (_Component) {
    _inherits(ConnectedTextField, _Component);

    function ConnectedTextField(props) {
        _classCallCheck(this, ConnectedTextField);

        var _this = _possibleConstructorReturn(this, (ConnectedTextField.__proto__ || Object.getPrototypeOf(ConnectedTextField)).call(this, props));

        _this.state = {
            connectorScreen: null,
            connection: _this.props.connection != undefined ? _this.props.connection : false,
            editor: false
        };

        _this.editorTimeout = null;
        return _this;
    }

    _createClass(ConnectedTextField, [{
        key: 'connectionUpdate',
        value: function connectionUpdate(update) {
            this.setState({ connection: update });
            this.props.connectionUpdate(update);
        }
    }, {
        key: 'openConnector',
        value: function openConnector(editor) {
            var _this2 = this;

            jQuery('.mce-ocb-connection-button').css({ transform: 'rotate(45deg)' });
            if (this.state.connectorScreen !== null) {
                this.closeConnector();
            } else {
                this.setState({
                    connectorScreen: _react2.default.createElement(_connector_screen2.default, {
                        editor: editor,
                        close: function close() {
                            return _this2.closeConnector();
                        },
                        connectionUpdate: this.connectionUpdate.bind(this),
                        noInsert: true
                    }),
                    editor: editor
                });
            }
        }
    }, {
        key: 'closeConnector',
        value: function closeConnector() {
            jQuery('.mce-ocb-connection-button').css({ transform: 'rotate(0deg)' });
            this.setState({ connectorScreen: null });
        }
    }, {
        key: 'newConnector',
        value: function newConnector() {
            var _this3 = this;

            this.setState({
                connectorScreen: _react2.default.createElement(_connector_screen2.default, {
                    editor: this.state.editor,
                    close: function close() {
                        return _this3.closeConnector();
                    },
                    connectionUpdate: this.connectionUpdate.bind(this),
                    connection: this.state.connection,
                    noInsert: true
                })
            });
        }
    }, {
        key: 'render',
        value: function render() {
            var _this4 = this;

            var wrapClass = '';

            //Don't show the connector button if the user doesn't have permission
            if (OCBGlobalSettings.permissions.use_connector) {
                wrapClass = 'ocb-textfield-connector';
            }

            var editor = {};
            var connectorButton = _react2.default.createElement(
                'div',
                { className: 'mce-ocb-connection-button ocb-connection-button', onClick: function onClick() {
                        return _this4.openConnector(editor);
                    } },
                _react2.default.createElement('i', { className: 'fa fa-plus' })
            );
            var textField = this.props.textfield;

            if (this.state.connection != undefined && this.state.connection != false) {
                var settings = this.state.connection.options != undefined && this.state.connection.options != false && !jQuery.isEmptyObject(this.state.connection.options) ? _react2.default.createElement(
                    'div',
                    { className: 'ocb-sf-connection-control', onClick: function onClick() {
                            return _this4.newConnector();
                        } },
                    _react2.default.createElement('i', { className: 'fa fa-cog' })
                ) : null;

                textField = _react2.default.createElement(
                    'div',
                    { className: 'ocb-sf-connection' },
                    settings,
                    _react2.default.createElement(
                        'div',
                        { className: 'ocb-sf-connection-control ocb-sf-connection-control-remove', onClick: function onClick() {
                                return _this4.connectionUpdate(false);
                            } },
                        _react2.default.createElement('i', { className: 'fa fa-remove' })
                    ),
                    'Connected to ',
                    this.state.connection.name
                );

                connectorButton = null;
            }

            return _react2.default.createElement(
                'div',
                { className: wrapClass },
                this.state.connectorScreen,
                textField,
                connectorButton
            );
        }
    }]);

    return ConnectedTextField;
}(_react.Component);

exports.default = ConnectedTextField;

/***/ }),

/***/ 795:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _rcSlider = __webpack_require__(98);

var _rcSlider2 = _interopRequireDefault(_rcSlider);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var CSSFilterField = function (_Component) {
    _inherits(CSSFilterField, _Component);

    function CSSFilterField(props) {
        _classCallCheck(this, CSSFilterField);

        var _this = _possibleConstructorReturn(this, (CSSFilterField.__proto__ || Object.getPrototypeOf(CSSFilterField)).call(this, props));

        _this.state = _this.props.values;
        return _this;
    }

    /**
     * Every field should have this function to make sure that settings get updated when a user switched devices
     */
    /*componentWillReceiveProps(){
     if( this.state.currentDevice != this.props.appFunctions.whichActive ){
     this.setState({ ...this.props.values, currentDevice: this.props.appFunctions.whichActive })
     }
     }*/

    /**
     * Every field should have this function and it should likely just be a copy of this
     * @param merge
     */


    _createClass(CSSFilterField, [{
        key: 'update',
        value: function update(merge) {
            var update = Object.assign(this.state, merge);
            this.props.appFunctions.fieldUpdate(this.props.field.id, update, this.props);
            this.setState(merge);
        }
    }, {
        key: 'changeDefault',
        value: function changeDefault(useDefault) {
            this.update({ useDefault: useDefault });
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var settings = this.props.values;
            var baseRadioClass = 'ocb-sf-radio';
            var defaultRadioClass = settings.useDefault == 'default' ? baseRadioClass + ' active' : baseRadioClass;
            var customRadioClass = settings.useDefault == 'custom' ? baseRadioClass + ' active' : baseRadioClass;
            var fullControls = null;

            if (settings.useDefault == 'custom') {

                var filters = [{
                    id: 'blur',
                    unit: 'px',
                    step: 1,
                    min: 0,
                    max: 20
                }, {
                    id: 'brightness',
                    unit: '%',
                    step: 5,
                    min: 0,
                    max: 200
                }, {
                    id: 'contrast',
                    unit: '%',
                    step: 5,
                    min: 0,
                    max: 200
                }, {
                    id: 'greyscale',
                    unit: '%',
                    step: 5,
                    min: 0,
                    max: 100
                }, {
                    id: 'hue_rotate',
                    unit: 'deg',
                    step: 10,
                    min: 0,
                    max: 360
                }, {
                    id: 'opacity',
                    unit: '%',
                    step: 5,
                    min: 0,
                    max: 100
                }, {
                    id: 'saturate',
                    unit: '%',
                    step: 5,
                    min: 0,
                    max: 200
                }, {
                    id: 'sepia',
                    unit: '%',
                    step: 5,
                    min: 0,
                    max: 100
                }];

                fullControls = filters.map(function (filter) {
                    var controlName = filter.id;

                    switch (controlName) {
                        case 'hue_rotate':
                            controlName = 'hue';
                            break;
                        case 'brightness':
                            controlName = 'bright';
                            break;
                        case 'greyscale':
                            controlName = 'grey';
                            break;
                    }

                    controlName += ' (' + filter.unit + ')';

                    return _react2.default.createElement(
                        'div',
                        { key: filter.id, className: 'ocb-sf-spacing-control' },
                        _react2.default.createElement(
                            'div',
                            { className: 'ocb-sf-spacing-label ocb' },
                            controlName
                        ),
                        _react2.default.createElement(_rcSlider2.default, {
                            className: 'ocb-sf-spacing-slider',
                            value: parseFloat(settings[filter.id]),
                            step: filter.step,
                            min: filter.min,
                            max: filter.max,
                            onChange: function onChange(newValue) {
                                return _this2.update(_defineProperty({}, filter.id, parseFloat(newValue)));
                            } }),
                        _react2.default.createElement('input', { className: 'ocb-sf-spacing-input', type: 'number', step: 'any',
                            onChange: function onChange(e) {
                                return _this2.update(_defineProperty({}, filter.id, parseFloat(e.target.value)));
                            },
                            onClick: function onClick(e) {
                                return e.target.select();
                            },
                            value: settings[filter.id] })
                    );
                });

                fullControls = _react2.default.createElement(
                    'div',
                    { className: 'mt-2' },
                    fullControls
                );
            }

            return _react2.default.createElement(
                'div',
                { className: 'ocb-sf-css-filter-field' },
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-sf-radio-group' },
                    _react2.default.createElement(
                        'div',
                        { className: defaultRadioClass, onClick: function onClick() {
                                return _this2.changeDefault('default');
                            } },
                        this.props.field.labels != undefined && this.props.field.labels.useDefault != undefined ? this.props.field.labels.useDefault : _react2.default.createElement('i', { className: 'fa fa-remove' })
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: customRadioClass, onClick: function onClick() {
                                return _this2.changeDefault('custom');
                            } },
                        this.props.field.labels != undefined && this.props.field.labels.useCustom != undefined ? this.props.field.labels.useCustom : _react2.default.createElement('i', { className: 'fa fa-check' })
                    )
                ),
                fullControls
            );
        }
    }]);

    return CSSFilterField;
}(_react.Component);

exports.default = CSSFilterField;

/***/ }),

/***/ 796:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactSelect = __webpack_require__(165);

var _reactSelect2 = _interopRequireDefault(_reactSelect);

var _dropdown_option = __webpack_require__(357);

var _dropdown_option2 = _interopRequireDefault(_dropdown_option);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var DropdownField = function (_Component) {
    _inherits(DropdownField, _Component);

    function DropdownField(props) {
        _classCallCheck(this, DropdownField);

        var _this = _possibleConstructorReturn(this, (DropdownField.__proto__ || Object.getPrototypeOf(DropdownField)).call(this, props));

        _this.state = _this.props.values;
        return _this;
    }

    _createClass(DropdownField, [{
        key: 'update',
        value: function update(merge) {
            //For some reason needs to use this.state instead of this.props.values when merging and creating a new object
            // in order to send a signal that the field has been updated, when you change the value multiple times in a row
            var update = Object.assign(this.state, merge);
            this.props.appFunctions.fieldUpdate(this.props.field.id, update, this.props);
            this.setState(merge);
        }
    }, {
        key: 'changeValue',
        value: function changeValue(newValue) {
            this.update({ choice: newValue });
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var settings = this.props.values;
            var select = null;
            var options = false;

            if (this.props.field.configuration != undefined && this.props.field.configuration.complex) {
                options = this.props.field.options.map(function (option) {
                    return _extends({}, option, { label: option.name });
                });

                select = _react2.default.createElement(_reactSelect2.default, {
                    value: settings.choice,
                    onChange: function onChange(e) {
                        return _this2.changeValue(e.value);
                    },
                    optionComponent: _dropdown_option2.default,
                    options: options
                });
            } else {
                options = this.props.field.options.map(function (option, index) {
                    if ((typeof option === 'undefined' ? 'undefined' : _typeof(option)) == 'object') {
                        return _react2.default.createElement(
                            'option',
                            { key: index, value: option.value },
                            option.name
                        );
                    } else if (typeof option == 'string') {
                        return _react2.default.createElement(
                            'option',
                            { key: index, value: option },
                            option
                        );
                    } else {
                        return _react2.default.createElement(
                            'option',
                            { key: index, value: '' },
                            'Option Formatted Improperly'
                        );
                    }
                });

                select = _react2.default.createElement(
                    'select',
                    { value: settings.choice, onChange: function onChange(e) {
                            return _this2.changeValue(e.target.value);
                        } },
                    options
                );
            }

            return _react2.default.createElement(
                'div',
                { className: 'ocb-sf-dropdown-field' },
                select
            );
        }
    }]);

    return DropdownField;
}(_react.Component);

exports.default = DropdownField;

/***/ }),

/***/ 797:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _field_builder = __webpack_require__(168);

var _field_builder2 = _interopRequireDefault(_field_builder);

var _settings_helpers = __webpack_require__(2);

var _settings_helpers2 = _interopRequireDefault(_settings_helpers);

var _settings_panel_tooltip = __webpack_require__(104);

var _settings_panel_tooltip2 = _interopRequireDefault(_settings_panel_tooltip);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var FieldGroup = function (_Component) {
    _inherits(FieldGroup, _Component);

    function FieldGroup() {
        _classCallCheck(this, FieldGroup);

        return _possibleConstructorReturn(this, (FieldGroup.__proto__ || Object.getPrototypeOf(FieldGroup)).apply(this, arguments));
    }

    _createClass(FieldGroup, [{
        key: 'shouldComponentUpdate',
        value: function shouldComponentUpdate(nextProps) {
            if (nextProps.appFunctions.activeGroup != this.props.appFunctions.activeGroup) {
                return true;
            }
            return true;
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            //Because standard settings are used for modules, columns, and rows, this flag allows certain fields
            // to only be shown for certain object types
            if (this.props.currentField.onlyObjectTypes != undefined) {
                if (!this.props.currentField.onlyObjectTypes.includes(this.props.object.type)) {
                    return null;
                }
            }

            var includedGroups = this.props.currentField.items;

            var fields = this.props.fields.filter(function (field) {
                var includeField = false;

                //Return the field if:
                // the field.id is included in this group field's items
                // or the field.id is included in one of the field's items of the field's items (nested groups)
                if (_this2.props.currentField.items.includes(field.id)) {
                    if (field.wrap == 'field_group') {
                        includedGroups = includedGroups.concat(field.items);
                    }
                    includeField = true;
                }

                if (includedGroups.includes(field.id)) {
                    includeField = true;
                }

                return includeField;
            });

            var children = null;
            var button = _react2.default.createElement(
                'div',
                { className: 'ocb-sf-group-button' },
                _react2.default.createElement('i', { className: 'fa fa-plus' })
            );
            var showingClass = '';
            var onClick = function onClick() {
                return _this2.props.appFunctions.updateActiveGroup(_this2.props.currentField.id);
            };
            if (this.props.appFunctions.activeGroup != false) {
                if (this.props.appFunctions.activeGroup.includes(this.props.currentField.id)) {
                    children = _react2.default.createElement(
                        'div',
                        { className: 'ocb-sf-group-items' },
                        _react2.default.createElement(_field_builder2.default, {
                            appFunctions: this.props.appFunctions,
                            object: this.props.object,
                            fields: fields,
                            mergedValues: this.props.mergedValues,
                            group: this.props.currentField.id,
                            repeater: this.props.repeater,
                            repeaterIndex: this.props.repeaterIndex,
                            defaultValues: this.props.defaultValues //if the group is coming from a repeater, we need to pass this through the group
                            , currentValues: this.props.currentValues //if the group is coming from a repeater, we need to pass this through the group
                            , whichActive: this.props.whichActive
                        })
                    );
                    button = _react2.default.createElement(
                        'div',
                        { className: 'ocb-sf-group-button' },
                        _react2.default.createElement('i', { className: 'fa fa-remove' })
                    );
                    showingClass = 'ocb-sf-group-showing';
                    onClick = function onClick() {
                        return _this2.props.appFunctions.deleteFromActiveGroups(_this2.props.currentField.id);
                    };
                }
            }

            var panelShowingClass = '';
            var hideClass = '';
            if (this.props.subgroupHide) {
                panelShowingClass = 'ocb-sf-hidden';
            }
            if (this.props.hide || this.props.subgroupHide && showingClass != 'ocb-sf-group-showing') {
                hideClass = 'ocb-sf-hidden';
            }
            if (!_settings_helpers2.default.passesFieldConditional(this.props.currentField, this.props.appFunctions.allValues)) {
                hideClass = 'ocb-sf-hidden';
            }

            var description = null;
            if (this.props.currentField.description != undefined && false) {
                description = _react2.default.createElement(_settings_panel_tooltip2.default, { tooltipContent: this.props.currentField.description });
            }

            var fieldInner = _react2.default.createElement(
                'div',
                { className: 'ocb-sf-inner ocb-sf-group-inner' },
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-sf-group-panel ' + panelShowingClass, onClick: onClick },
                    _react2.default.createElement(
                        'div',
                        { className: 'ocb-sf-title' },
                        _react2.default.createElement('i', { className: 'fa fa-arrow-left ocb-go-back mr-3' }),
                        this.props.currentField.title,
                        description,
                        button
                    )
                ),
                children
            );

            if (this.props.currentField.icon != undefined) {
                fieldInner = _react2.default.createElement(
                    'div',
                    { className: 'ocb-sf-has-icon' },
                    _react2.default.createElement(
                        'div',
                        { className: 'ocb-sf-field-icon' },
                        _react2.default.createElement('i', { className: 'fa fa-' + this.props.currentField.icon })
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'ocb-sf-inner ocb-sf-group-inner' },
                        _react2.default.createElement(
                            'div',
                            { className: 'ocb-sf-group-panel ' + panelShowingClass, onClick: onClick },
                            _react2.default.createElement(
                                'div',
                                { className: 'ocb-sf-title' },
                                _react2.default.createElement('i', { className: 'fa fa-arrow-left ocb-go-back mr-3' }),
                                _react2.default.createElement(
                                    'span',
                                    null,
                                    this.props.currentField.title
                                ),
                                description,
                                button
                            )
                        ),
                        children
                    )
                );
            }

            return _react2.default.createElement(
                'div',
                { className: 'ocb-sf ocb-sf-group ocb-sf-group-' + this.props.currentField.id + ' ' + showingClass + ' ' + hideClass },
                fieldInner
            );
        }
    }]);

    return FieldGroup;
}(_react.Component);

exports.default = FieldGroup;

/***/ }),

/***/ 798:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var OffsproutFieldMixinRegistryArray = [{
    id: 'button',
    fields: [{
        id: 'design_group',
        title: 'Button Design',
        description: 'Design options like colors, padding, and shadows',
        wrap: 'field_group',
        settingType: 'design',
        items: ['text_heading', 'font_size', 'letter_spacing', 'uppercase', 'bold', 'background', 'background_hover', 'color', 'color_hover', 'border', 'width', 'padding', 'shadow', 'border_radius', 'box_shadow']
    }, {
        id: 'text_heading',
        title: 'Text',
        wrap: 'field_wrap',
        type: 'heading',
        inline: true
    }, {
        id: 'font_size',
        title: 'Font Size',
        description: 'The size of the button font',
        wrap: 'field_wrap',
        type: 'slider_control',
        deviceSpecific: true,
        settingType: 'design',
        inline: true,
        configuration: [{ units: 'px', min: 8, max: 100, step: 1 }, { units: 'em', min: 0.2, max: 10, step: 0.1 }, { units: 'rem', min: 0.2, max: 10, step: 0.1 }]
    }, {
        id: 'letter_spacing',
        title: 'Letter Spacing',
        description: 'The space in between the letters',
        wrap: 'field_wrap',
        type: 'slider_control',
        settingType: 'design',
        inline: true,
        configuration: [{ units: 'px', min: -5, max: 5, step: 0.1 }]
    }, {
        id: 'uppercase',
        title: 'Uppercase',
        description: 'Make all of the letters uppercase',
        wrap: 'field_wrap',
        settingType: 'design',
        inline: true,
        type: 'switch'
    }, {
        id: 'bold',
        title: 'Bold',
        description: 'Make the button text bold',
        wrap: 'field_wrap',
        settingType: 'design',
        inline: true,
        type: 'switch'
    }, {
        id: 'background',
        title: 'Background',
        description: 'The background color of the button',
        wrap: 'field_wrap',
        settingType: 'design',
        configuration: {
            gradient: true
        },
        type: 'color'
    }, {
        id: 'background_hover',
        title: 'Background Hover',
        description: 'The background color of the button when a mouse is hovering over it',
        wrap: 'field_wrap',
        settingType: 'design',
        configuration: {
            gradient: true
        },
        type: 'color'
    }, {
        id: 'color',
        title: 'Text Color',
        description: 'The text color of the button',
        wrap: 'field_wrap',
        settingType: 'design',
        type: 'color'
    }, {
        id: 'color_hover',
        title: 'Text Color Hover',
        description: 'The text color of the button when a mouse is hovering over it',
        wrap: 'field_wrap',
        settingType: 'design',
        type: 'color'
    }, {
        id: 'width',
        title: 'Width',
        description: 'The width of the button',
        wrap: 'field_wrap',
        type: 'slider_control',
        settingType: 'design',
        deviceSpecific: true,
        configuration: [{ units: 'px', min: 40, max: 500, step: 5 }, { units: 'em', min: 1, max: 50, step: 0.5 }, { units: 'rem', min: 1, max: 50, step: 0.5 }]
    }, {
        id: 'padding',
        title: 'Padding',
        description: 'The space around the text in the button',
        wrap: 'field_wrap',
        type: 'linked_sliders',
        settingType: 'design',
        deviceSpecific: true,
        configuration: [{ units: 'px', min: 0, max: 200, step: 1 }, { units: '%', min: 0, max: 100, step: 1 }, { units: 'em', min: 0, max: 30, step: 0.1 }, { units: 'rem', min: 0, max: 30, step: 0.1 }]
    }, {
        id: 'border',
        title: 'Border',
        description: 'Border field example',
        wrap: 'field_wrap',
        settingType: 'design',
        type: 'border',
        configuration: [{ units: 'px', min: 0, max: 40, step: 1 }]
    }, {
        id: 'border_radius',
        title: 'Border Radius',
        description: 'The curve in the corners of the button',
        wrap: 'field_wrap',
        type: 'slider_control',
        settingType: 'design',
        configuration: [{ units: '%', min: 0, max: 100, step: 1 }, { units: 'px', min: 0, max: 200, step: 1 }]
    }, {
        id: 'box_shadow',
        title: 'Box Shadow',
        description: 'Add a shadow effect to the button',
        wrap: 'field_wrap',
        settingType: 'design',
        type: 'box_shadow'
    }],
    defaults: {
        font_size: {
            value: 1,
            units: 'em',
            useDefault: 'default'
        },
        icon_font_size: {
            value: 1,
            units: 'em',
            useDefault: 'default'
        },
        letter_spacing: {
            value: 0,
            units: 'px',
            useDefault: 'default'
        },
        uppercase: {
            yes: 0
        },
        bold: {
            yes: 0
        },
        background: {
            color: 'action'
        },
        background_hover: {
            color: 'action'
        },
        color: {
            color: 'white'
        },
        color_hover: {
            color: 'white'
        },
        border: {
            top: 1,
            left: 1,
            bottom: 1,
            right: 1,
            units: 'px',
            useDefault: 'default',
            type: 'solid',
            color: 'default',
            customColor: '#000000'
        },
        width: {
            value: 300,
            units: 'px',
            useDefault: 'default'
        },
        padding: {
            top: 15,
            left: 30,
            right: 30,
            bottom: 15,
            units: 'px',
            useDefault: 'default'
        },
        border_radius: {
            value: 0,
            units: '%',
            useDefault: 'default'
        },
        box_shadow: {
            useDefault: 'default',
            horizontal: 0,
            vertical: 0,
            blur: 1,
            spread: 3,
            color: 'rgba(0,0,0,0.2)'
        }
    }
}, {
    id: 'shape',
    fields: [{
        id: 'shape_include',
        title: 'Add',
        description: 'Choose whether or not to include a shape divider',
        wrap: 'field_wrap',
        settingType: 'content',
        inline: true,
        type: 'switch'
    }, {
        id: 'shape',
        title: 'Shape',
        description: 'Choose the shape of the divider',
        wrap: 'field_wrap',
        type: 'dropdown',
        settingType: 'content',
        options: [{
            name: 'Arrow',
            value: 'arrow'
        }, {
            name: 'Book',
            value: 'book'
        }, {
            name: 'Clouds',
            value: 'clouds'
        }, {
            name: 'Curve',
            value: 'curve'
        }, {
            name: 'Curve Asymmetrical',
            value: 'asymmetric_curve'
        }, {
            name: 'Droplets',
            value: 'droplets'
        }, {
            name: 'Fan',
            value: 'fan_opacity'
        }, {
            name: 'Mountains',
            value: 'mountains'
        }, {
            name: 'Pyramids',
            value: 'pyramids'
        }, {
            name: 'Split',
            value: 'split'
        }, {
            name: 'Teeth',
            value: 'teeth'
        }, {
            name: 'Tilt',
            value: 'tilt'
        }, {
            name: 'Tilt Opacity',
            value: 'tilt_opacity'
        }, {
            name: 'Triangle',
            value: 'triangle'
        }, {
            name: 'Triangle Asymmetrical',
            value: 'asymmetric_triangle'
        }, {
            name: 'Waves',
            value: 'waves'
        }, {
            name: 'Waves Brush',
            value: 'waves_brush'
        }, {
            name: 'Waves Pattern',
            value: 'waves_pattern'
        }, {
            name: 'Asymmetric 1',
            value: 'asymmetric1'
        }, {
            name: 'Asymmetric 2',
            value: 'asymmetric2'
        }, {
            name: 'Asymmetric 3',
            value: 'asymmetric3'
        }, {
            name: 'Asymmetric 4',
            value: 'asymmetric4'
        }, {
            name: 'Graph 1',
            value: 'graph1'
        }, {
            name: 'Graph 2',
            value: 'graph2'
        }, {
            name: 'Graph 3',
            value: 'graph3'
        }, {
            name: 'Graph 4',
            value: 'graph4'
        }, {
            name: 'Ramp 1',
            value: 'ramp1'
        }, {
            name: 'Ramp 2',
            value: 'ramp2'
        }],
        conditional: {
            conditions: [{
                id: 'shape_include',
                property: 'yes',
                value: 1
            }]
        }
    }, {
        id: 'shape_color',
        title: 'Color',
        description: 'The color of the shape',
        wrap: 'field_wrap',
        type: 'color',
        settingType: 'content',
        conditional: {
            conditions: [{
                id: 'shape_include',
                property: 'yes',
                value: 1
            }]
        }
    }, {
        id: 'shape_settings_heading',
        title: 'Settings',
        wrap: 'field_wrap',
        type: 'heading',
        inline: true,
        settingType: 'content',
        conditional: {
            conditions: [{
                id: 'shape_include',
                property: 'yes',
                value: 1
            }]
        }
    }, {
        id: 'shape_invert',
        title: 'Invert',
        description: 'Flip the direction of the shape divider',
        wrap: 'field_wrap',
        type: 'switch',
        settingType: 'content',
        inline: true,
        conditional: {
            conditions: [{
                id: 'shape_include',
                property: 'yes',
                value: 1
            }]
        }
    }, {
        id: 'shape_bring_front',
        title: 'Bring Front',
        description: 'Bring the shape divider in front of the content',
        wrap: 'field_wrap',
        type: 'switch',
        settingType: 'content',
        inline: true,
        conditional: {
            conditions: [{
                id: 'shape_include',
                property: 'yes',
                value: 1
            }]
        }
    }, {
        id: 'shape_width',
        title: 'Width',
        description: 'The width of the shape divider',
        wrap: 'field_wrap',
        type: 'slider_control',
        deviceSpecific: true,
        settingType: 'content',
        inline: true,
        configuration: [{ units: '%', min: 100, max: 500, step: 10 }],
        conditional: {
            conditions: [{
                id: 'shape_include',
                property: 'yes',
                value: 1
            }]
        }
    }, {
        id: 'shape_height',
        title: 'Height',
        description: 'The height of the shape divider',
        wrap: 'field_wrap',
        type: 'slider_control',
        deviceSpecific: true,
        settingType: 'content',
        inline: true,
        configuration: [{ units: 'px', min: 10, max: 600, step: 10 }],
        conditional: {
            conditions: [{
                id: 'shape_include',
                property: 'yes',
                value: 1
            }]
        }
    }],
    defaults: {
        shape_include: {
            yes: 0
        },
        shape: {
            choice: 'tilt'
        },
        shape_invert: {
            yes: 0
        },
        shape_bring_front: {
            yes: 0
        },
        shape_color: {
            color: 'default',
            customColor: '#ffffff'
        },
        shape_height: {
            value: 25,
            units: 'px',
            useDefault: 'default'
        },
        shape_width: {
            value: 100,
            units: '%',
            useDefault: 'default'
        }
    }
}, {
    id: 'icon',
    fields: [
    /*{
        id: 'size_group',
        title: 'Size',
        description: 'Control the size of the icon and the icon background',
        wrap: 'field_group',
        settingType: 'design',
        items: ['font_size', 'padding']
    },*/
    {
        id: 'size_heading',
        title: 'Size',
        wrap: 'field_wrap',
        type: 'heading',
        inline: true,
        settingType: 'design'
    }, {
        id: 'font_size',
        title: 'Icon',
        description: 'The size of the icon',
        wrap: 'field_wrap',
        type: 'slider_control',
        inline: true,
        settingType: 'design',
        configuration: [{ units: 'px', min: 8, max: 100, step: 1 }, { units: 'em', min: 0.2, max: 10, step: 0.1 }, { units: 'rem', min: 0.2, max: 10, step: 0.1 }]
    }, {
        id: 'padding',
        title: 'Background',
        description: 'The space around the icon if the icon background is using a color',
        wrap: 'field_wrap',
        type: 'slider_control',
        inline: true,
        settingType: 'design',
        configuration: [{ units: 'px', min: 0, max: 200, step: 1 }, { units: 'em', min: 0, max: 30, step: 0.1 }, { units: 'rem', min: 0, max: 30, step: 0.1 }]
    },
    /*{
        id: 'color_group',
        title: 'Colors',
        description: 'Choose the colors of the icon and background',
        wrap: 'field_group',
        settingType: 'design',
        items: ['color', 'background_color']
    },*/
    {
        id: 'color',
        title: 'Icon Color',
        description: 'The color of the icon',
        wrap: 'field_wrap',
        settingType: 'design',
        type: 'color'
    }, {
        id: 'background_color',
        title: 'Background Color',
        description: 'The background color of the icon',
        wrap: 'field_wrap',
        settingType: 'design',
        type: 'color',
        configuration: {
            gradient: true
        }
    },
    /*{
        id: 'border_group',
        title: 'Border',
        description: 'Design the border and the border radius',
        wrap: 'field_group',
        settingType: 'design',
        items: ['border', 'border_radius']
    },*/
    {
        id: 'border',
        title: 'Border',
        description: 'Border field example',
        wrap: 'field_wrap',
        type: 'border',
        settingType: 'design',
        configuration: [{ units: 'px', min: 0, max: 40, step: 1 }]
    }, {
        id: 'border_radius',
        title: 'Border Radius',
        description: 'The curve in the corners of the icon',
        wrap: 'field_wrap',
        settingType: 'design',
        type: 'slider_control',
        configuration: [{ units: '%', min: 0, max: 100, step: 1 }, { units: 'px', min: 0, max: 200, step: 1 }]
    }],
    defaults: {
        font_size: {
            value: 1,
            units: 'em',
            useDefault: 'default'
        },
        background_color: {
            color: 'default'
        },
        color: {
            color: 'default'
        },
        border: {
            top: 1,
            left: 1,
            bottom: 1,
            right: 1,
            units: 'px',
            useDefault: 'default',
            type: 'solid',
            color: 'default',
            customColor: '#000000'
        },
        padding: {
            value: 15,
            units: 'px',
            useDefault: 'default'
        },
        border_radius: {
            value: 0,
            units: '%',
            useDefault: 'default'
        }
    }
}, {
    id: 'row',
    fields: [{
        id: 'spacing_group',
        title: 'Spacing Options',
        description: 'Configure more advanced options for this object',
        wrap: 'field_group',
        items: ['margin', 'padding', 'max_width']
    }, {
        id: 'margin',
        title: 'Margin',
        description: 'Adjust the margin for this object',
        wrap: 'field_wrap',
        type: 'linked_sliders',
        deviceSpecific: true,
        configuration: [{ units: 'px', min: -200, max: 200, step: 1 }, { units: '%', min: -100, max: 100, step: 1 }, { units: 'em', min: -30, max: 30, step: 0.1 }, { units: 'rem', min: -30, max: 30, step: 0.1 }]
    }, {
        id: 'padding',
        title: 'Padding',
        description: 'Adjust the padding for this object',
        wrap: 'field_wrap',
        type: 'linked_sliders',
        deviceSpecific: true,
        configuration: [{ units: 'px', min: -200, max: 200, step: 1 }, { units: '%', min: -100, max: 100, step: 1 }, { units: 'em', min: -30, max: 30, step: 0.1 }]
    }, {
        id: 'max_width',
        title: 'Max Width',
        description: 'Set a maximum width for this module. (Will automatically center, overwriting left and right margins)',
        wrap: 'field_wrap',
        type: 'slider_control',
        deviceSpecific: true,
        configuration: [{ units: '%', min: 10, max: 100, step: 1 }, { units: 'px', min: 50, max: 1200, step: 10 }]
    }, {
        id: 'background_group',
        title: 'Background Options',
        description: 'Configure the background for this object',
        wrap: 'field_group',
        items: ['background_type', 'background_image', 'background_image_vertical', 'background_image_horizontal', 'background_parallax', 'background_type_screen', 'background', 'gradient_1', 'gradient_2', 'gradient_3', 'screen_opacity', 'background_screen', 'gradient_1_screen', 'gradient_2_screen', 'gradient_3_screen', 'gradient_angle']
    }, {
        id: 'background_type',
        title: 'Background Type',
        description: 'Choose the background for this object',
        wrap: 'field_wrap',
        type: 'dropdown',
        options: [{
            name: 'Color',
            value: 'color'
        }, {
            name: '2-Color Gradient',
            value: 'gradient_2'
        }, {
            name: '3-Color Gradient',
            value: 'gradient_3'
        }, {
            name: 'Image',
            value: 'image'
        }]
    }, {
        id: 'background_image',
        title: 'Background Image',
        description: 'Select a background image for this skin',
        wrap: 'field_wrap',
        type: 'media',
        conditional: {
            conditions: [{
                id: 'background_type',
                property: 'choice',
                value: 'image'
            }]
        }
    }, {
        id: 'background_image_vertical',
        title: 'Background Image Vertical',
        description: 'Vertical alignment of the background image',
        wrap: 'field_wrap',
        type: 'dropdown',
        options: [{
            name: 'Center',
            value: 'center'
        }, {
            name: 'Top',
            value: 'top'
        }, {
            name: 'Bottom',
            value: 'bottom'
        }],
        conditional: {
            type: 'or',
            conditions: [{
                id: 'background_type',
                property: 'choice',
                value: 'image'
            }]
        }
    }, {
        id: 'background_image_horizontal',
        title: 'Background Image Horizontal',
        description: 'Horizontal alignment of the background image',
        wrap: 'field_wrap',
        type: 'dropdown',
        options: [{
            name: 'Center',
            value: 'center'
        }, {
            name: 'Left',
            value: 'left'
        }, {
            name: 'Right',
            value: 'right'
        }],
        conditional: {
            type: 'or',
            conditions: [{
                id: 'background_type',
                property: 'choice',
                value: 'image'
            }]
        }
    }, {
        id: 'background_parallax',
        title: 'Background Parallax',
        description: 'Add a parallax effect to the image when you scroll',
        wrap: 'field_wrap',
        type: 'dropdown',
        options: [{
            name: 'None',
            value: 'none'
        }, {
            name: 'Full',
            value: 'fixed'
        }],
        conditional: {
            type: 'or',
            conditions: [{
                id: 'background_type',
                property: 'choice',
                value: 'image'
            }, {
                id: 'background_type',
                property: 'choice',
                value: 'custom_video'
            }, {
                id: 'background_type',
                property: 'choice',
                value: 'other_video'
            }]
        }
    }, {
        id: 'background_type_screen',
        title: 'Background Screen',
        description: 'Add a color screen over the image or video so that you can more clearly see text',
        wrap: 'field_wrap',
        type: 'dropdown',
        options: [{
            name: 'None',
            value: 'default'
        }, {
            name: 'Color',
            value: 'color'
        }, {
            name: '2-Color Gradient',
            value: 'gradient_2'
        }, {
            name: '3-Color Gradient',
            value: 'gradient_3'
        }],
        conditional: {
            type: 'or',
            conditions: [{
                id: 'background_type',
                property: 'choice',
                value: 'image'
            }, {
                id: 'background_type',
                property: 'choice',
                value: 'custom_video'
            }, {
                id: 'background_type',
                property: 'choice',
                value: 'other_video'
            }]
        }
    }, {
        id: 'background',
        title: 'Background Color',
        description: 'Select a background color for this object',
        wrap: 'field_wrap',
        type: 'color',
        conditional: {
            conditions: [{
                id: 'background_type',
                property: 'choice',
                value: 'color'
            }]
        }
    }, {
        id: 'gradient_1',
        title: 'Background Gradient 1',
        description: 'Select a starting background gradient color for this object',
        wrap: 'field_wrap',
        type: 'color',
        properties: {
            color: false
        },
        conditional: {
            type: 'or',
            conditions: [{
                id: 'background_type',
                property: 'choice',
                value: 'gradient_2'
            }, {
                id: 'background_type',
                property: 'choice',
                value: 'gradient_3'
            }]
        }
    }, {
        id: 'gradient_2',
        title: 'Background Gradient 2',
        description: 'Select a second background gradient color for this object',
        wrap: 'field_wrap',
        type: 'color',
        properties: {
            color: false
        },
        conditional: {
            type: 'or',
            conditions: [{
                id: 'background_type',
                property: 'choice',
                value: 'gradient_2'
            }, {
                id: 'background_type',
                property: 'choice',
                value: 'gradient_3'
            }]
        }
    }, {
        id: 'gradient_3',
        title: 'Background Gradient 3',
        description: 'Select a third background gradient color for this object',
        wrap: 'field_wrap',
        type: 'color',
        properties: {
            color: false
        },
        conditional: {
            conditions: [{
                id: 'background_type',
                property: 'choice',
                value: 'gradient_3'
            }]
        }
    }, {
        id: 'screen_opacity',
        title: 'Screen Opacity',
        description: 'How see-through the screen is. You can also adjust opacity within the color-picker itself.',
        wrap: 'field_wrap',
        type: 'slider_control',
        configuration: [{ units: '%', min: 0, max: 100, step: 1 }],
        conditional: {
            type: 'or',
            conditions: [{
                id: 'background_type_screen',
                property: 'choice',
                value: 'color'
            }, {
                id: 'background_type_screen',
                property: 'choice',
                value: 'gradient_2'
            }, {
                id: 'background_type_screen',
                property: 'choice',
                value: 'gradient_3'
            }]
        }
    }, {
        id: 'background_screen',
        title: 'Screen Color',
        description: 'Select a background screen color for this object',
        wrap: 'field_wrap',
        type: 'color',
        conditional: {
            conditions: [{
                id: 'background_type_screen',
                property: 'choice',
                value: 'color'
            }]
        }
    }, {
        id: 'gradient_1_screen',
        title: 'Screen Gradient 1',
        description: 'Select a starting background screen gradient color for this object',
        wrap: 'field_wrap',
        type: 'color',
        properties: {
            color: false
        },
        conditional: {
            type: 'or',
            conditions: [{
                id: 'background_type_screen',
                property: 'choice',
                value: 'gradient_2'
            }, {
                id: 'background_type_screen',
                property: 'choice',
                value: 'gradient_3'
            }]
        }
    }, {
        id: 'gradient_2_screen',
        title: 'Screen Gradient 2',
        description: 'Select a second background screen gradient color for this object',
        wrap: 'field_wrap',
        type: 'color',
        properties: {
            color: false
        },
        conditional: {
            type: 'or',
            conditions: [{
                id: 'background_type_screen',
                property: 'choice',
                value: 'gradient_2'
            }, {
                id: 'background_type_screen',
                property: 'choice',
                value: 'gradient_3'
            }]
        }
    }, {
        id: 'gradient_3_screen',
        title: 'Screen Gradient 3',
        description: 'Select a third background screen gradient color for this object',
        wrap: 'field_wrap',
        type: 'color',
        properties: {
            color: false
        },
        conditional: {
            conditions: [{
                id: 'background_type_screen',
                property: 'choice',
                value: 'gradient_3'
            }]
        }
    }, {
        id: 'gradient_angle',
        title: 'Background Gradient Angle',
        description: 'Select a third background gradient color for this object',
        wrap: 'field_wrap',
        type: 'dropdown',
        options: [{
            name: 'Vertical',
            value: 'vertical'
        }, {
            name: 'Horizontal',
            value: 'horizontal'
        }, {
            name: 'Diagonal Up',
            value: 'diag_up'
        }, {
            name: 'Diagonal Down',
            value: 'diag_down'
        }, {
            name: 'Radial',
            value: 'radial'
        }],
        conditional: {
            type: 'or',
            conditions: [{
                id: 'background_type',
                property: 'choice',
                value: 'gradient_2'
            }, {
                id: 'background_type',
                property: 'choice',
                value: 'gradient_3'
            }, {
                id: 'background_type_screen',
                property: 'choice',
                value: 'gradient_2'
            }, {
                id: 'background_type_screen',
                property: 'choice',
                value: 'gradient_3'
            }]
        }
    }, {
        id: 'text_group',
        title: 'Text Options',
        description: 'Configure text options for this object',
        wrap: 'field_group',
        items: ['color', 'base_font_size', 'line_height', 'letter_spacing']
    }, {
        id: 'color',
        title: 'Text Color',
        description: 'Select a text color for this object (can be overwritten by the object\'s settings',
        wrap: 'field_wrap',
        type: 'color'
    }, {
        id: 'base_font_size',
        title: 'Base Font Size',
        description: 'Adjust the base font size in this object',
        wrap: 'field_wrap',
        type: 'slider_control',
        deviceSpecific: true,
        configuration: [{ units: 'em', min: 0.5, max: 10, step: 0.1 }]
    }, {
        id: 'line_height',
        title: 'Line Height',
        description: 'The line height of the text in this object',
        wrap: 'field_wrap',
        type: 'slider_control',
        deviceSpecific: true,
        configuration: [{ units: 'px', min: 0, max: 100, step: 5 }, { units: 'em', min: 0, max: 10, step: 0.1 }, { units: 'rem', min: 0, max: 10, step: 0.1 }]
    }, {
        id: 'letter_spacing',
        title: 'Letter Spacing',
        description: 'The spacing between letters in text in this object',
        wrap: 'field_wrap',
        type: 'slider_control',
        deviceSpecific: true,
        configuration: [{ units: 'px', min: -5, max: 5, step: 1 }]
    }, {
        id: 'border_group',
        title: 'Border Options',
        description: 'Configure border options for this object',
        wrap: 'field_group',
        items: ['border', 'border_radius']
    }, {
        id: 'border',
        title: 'Border',
        description: 'Design a border for this object',
        wrap: 'field_wrap',
        type: 'border',
        deviceSpecific: true,
        configuration: [{ units: 'px', min: 0, max: 40, step: 1 }]
    }, {
        id: 'border_radius',
        title: 'Border Radius',
        description: 'Curve the borders of this object',
        wrap: 'field_wrap',
        type: 'linked_sliders',
        labels: {
            top: 'topLeft',
            right: 'topRight',
            bottom: 'bottomRight',
            left: 'bottomLeft',
            useDefault: 'None',
            useCustom: 'Add'
        },
        deviceSpecific: true,
        configuration: [{ units: '%', min: 0, max: 100, step: 1 }, { units: 'px', min: 0, max: 100, step: 1 }]
    }],
    defaults: {
        classes: {
            text: ''
        },
        html_id: {
            text: ''
        },
        margin: {
            top: 0,
            left: 0,
            right: 0,
            bottom: 1,
            units: 'em',
            useDefault: 'default'
        },
        padding: {
            top: 1,
            left: 1,
            right: 1,
            bottom: 1,
            units: 'em',
            useDefault: 'default'
        },
        max_width: {
            value: 700,
            units: 'px',
            useDefault: 'default'
        },
        background_type: {
            choice: 'color'
        },
        background_image: {
            url: ''
        },
        background_image_vertical: {
            choice: 'center'
        },
        background_image_horizontal: {
            choice: 'center'
        },
        background_custom_video: {
            text: ''
        },
        background_other_video: {
            text: ''
        },
        background_parallax: {
            choice: 'none'
        },
        background_type_screen: {
            choice: 'default'
        },
        background: {
            color: 'default'
        },
        gradient_1: {
            color: 'custom',
            customColor: '#B300C8'
        },
        gradient_2: {
            color: 'custom',
            customColor: '#4E00C7'
        },
        gradient_3: {
            color: 'custom',
            customColor: '#2E17FF'
        },
        screen_opacity: {
            value: 70,
            units: '%',
            useDefault: 'default'
        },
        background_screen: {
            color: 'black',
            customColor: '#000000'
        },
        gradient_1_screen: {
            color: 'custom',
            customColor: '#B300C8'
        },
        gradient_2_screen: {
            color: 'custom',
            customColor: '#4E00C7'
        },
        gradient_3_screen: {
            color: 'custom',
            customColor: '#2E17FF'
        },
        gradient_angle: {
            choice: 'diag_down'
        },
        color: {
            color: 'default'
        },
        border: {
            useDefault: 'default',
            units: 'px',
            top: 1,
            left: 1,
            right: 1,
            bottom: 1,
            type: 'solid',
            color: 'default'
        },
        border_radius: {
            value: 0,
            units: 'px',
            top: 1,
            left: 1,
            right: 1,
            bottom: 1,
            useDefault: 'default'
        },
        base_font_size: {
            value: 1,
            units: 'em',
            useDefault: 'default'
        },
        line_height: {
            value: 1,
            units: 'em',
            useDefault: 'default'
        },
        letter_spacing: {
            value: 0,
            units: 'px',
            useDefault: 'default'
        }
    }
}];

//Seems like this can still be reached via window.OffsproutModuleRegistry even via modules that are loaded in the iFrame
//You'd think that you'd have to use parent.OffsproutModuleRegistry, but that seems to screw up the tinyMCE
if (window.OffsproutFieldMixinRegistry == undefined) {
    window.OffsproutFieldMixinRegistry = OffsproutFieldMixinRegistryArray;
} else {
    window.OffsproutFieldMixinRegistry.concat(OffsproutFieldMixinRegistryArray);
}

/***/ }),

/***/ 799:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _field_builder = __webpack_require__(168);

var _field_builder2 = _interopRequireDefault(_field_builder);

var _settings_helpers = __webpack_require__(2);

var _settings_helpers2 = _interopRequireDefault(_settings_helpers);

var _settings_panel_tooltip = __webpack_require__(104);

var _settings_panel_tooltip2 = _interopRequireDefault(_settings_panel_tooltip);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var FieldPanel = function (_Component) {
    _inherits(FieldPanel, _Component);

    function FieldPanel(props) {
        _classCallCheck(this, FieldPanel);

        var _this = _possibleConstructorReturn(this, (FieldPanel.__proto__ || Object.getPrototypeOf(FieldPanel)).call(this, props));

        _this.state = {
            active: false
        };
        return _this;
    }

    _createClass(FieldPanel, [{
        key: 'getPanelTitle',
        value: function getPanelTitle() {
            //Fallback
            var title = this.props.currentField.panelButtonFallback != undefined ? this.props.currentField.panelButtonFallback : this.props.currentField.title;

            //Should have the ability to designate a panel field value to show here
            if (this.props.currentField.panelButtonText != undefined && _typeof(this.props.currentField.panelButtonText) === 'object' && this.props.currentField.panelButtonText.length == 2) {
                var key1 = this.props.currentField.panelButtonText[0];
                var key2 = this.props.currentField.panelButtonText[1];
                if (this.props.mergedValues[key1] != undefined && this.props.mergedValues[key1][key2] != undefined && this.props.mergedValues[key1][key2] != false) {
                    return this.props.mergedValues[key1][key2];
                }
            }

            return title;
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var includedGroups = this.props.currentField.items;

            var fields = this.props.fields.filter(function (field) {
                var includeField = false;

                //Return the field if:
                // the field.id is included in this group field's items
                // or the field.id is included in one of the field's items of the field's items (nested groups)
                if (_this2.props.currentField.items.includes(field.id)) {
                    if (field.wrap == 'field_group') {
                        includedGroups = includedGroups.concat(field.items);
                    }
                    includeField = true;
                }

                if (includedGroups.includes(field.id)) {
                    includeField = true;
                }

                return includeField;
            });

            var childClass = '';
            var button = _react2.default.createElement(
                'div',
                { className: 'ocb-sf-panel-open d-flex align-items-center mt-3' },
                _react2.default.createElement(
                    'span',
                    { className: 'ocb-sf-panel-title' },
                    this.getPanelTitle()
                ),
                _react2.default.createElement('i', { className: 'fa fa-chevron-right ml-auto' })
            );
            var showingClass = '';
            var onClick = function onClick() {
                return _this2.props.appFunctions.updateActivePanel(_this2.props.currentField.id);
            };
            if (this.props.appFunctions.activePanel != false) {
                if (this.props.appFunctions.activePanel.includes(this.props.currentField.id)) {
                    childClass = 'active';
                    showingClass = 'ocb-sf-panel-showing';
                    onClick = null;
                }
            }

            var children = _react2.default.createElement(
                'div',
                { className: 'ocb-sf-panel-items ocb-sf-panel-parent ' + childClass },
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-sf-panel-back mb-2 d-flex align-items-center', onClick: function onClick() {
                            return _this2.props.appFunctions.updateActivePanel(false);
                        } },
                    _react2.default.createElement('i', { className: 'fa fa-chevron-left' }),
                    _react2.default.createElement(
                        'span',
                        { className: 'ocb-sf-panel-title' },
                        this.getPanelTitle()
                    )
                ),
                _react2.default.createElement(_field_builder2.default, {
                    appFunctions: this.props.appFunctions,
                    object: this.props.object,
                    fields: fields,
                    mergedValues: this.props.mergedValues,
                    group: this.props.currentField.id,
                    repeater: this.props.repeater,
                    repeaterIndex: this.props.repeaterIndex,
                    defaultValues: this.props.defaultValues //if the group is coming from a repeater, we need to pass this through the group
                    , currentValues: this.props.currentValues //if the group is coming from a repeater, we need to pass this through the group
                    , whichActive: this.props.whichActive
                })
            );

            var panelShowingClass = '';
            var hideClass = '';
            if (this.props.subgroupHide) {
                panelShowingClass = 'ocb-sf-hidden';
            }
            if (this.props.hide || this.props.subgroupHide && showingClass != 'ocb-sf-panel-showing') {
                hideClass = 'ocb-sf-hidden';
            }
            if (!_settings_helpers2.default.passesFieldConditional(this.props.currentField, this.props.appFunctions.allValues)) {
                hideClass = 'ocb-sf-hidden';
            }

            var description = null;
            if (this.props.currentField.description != undefined) {
                description = _react2.default.createElement(_settings_panel_tooltip2.default, { tooltipContent: this.props.currentField.description });
            }

            return _react2.default.createElement(
                'div',
                { className: 'ocb-sf ocb-sf-panel ocb-sf-panel-' + this.props.currentField.id + ' ' + showingClass + ' ' + hideClass },
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-sf-inner ocb-sf-group-inner' },
                    _react2.default.createElement(
                        'div',
                        { className: 'ocb-sf-panel-panel ' + panelShowingClass, onClick: onClick },
                        description,
                        _react2.default.createElement(
                            'div',
                            { className: 'ocb-sf-title' },
                            this.props.currentField.title
                        ),
                        button
                    ),
                    children
                )
            );
        }
    }]);

    return FieldPanel;
}(_react.Component);

exports.default = FieldPanel;

/***/ }),

/***/ 8:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
var saveState = exports.saveState = function saveState() {
    return {
        type: 'SAVE_STATE'
    };
};
var discardState = exports.discardState = function discardState() {
    return {
        type: 'DISCARD_STATE'
    };
};
var updateObjectSettings = exports.updateObjectSettings = function updateObjectSettings(object, update) {
    var useTemplateId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
    var extra = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};
    return {
        type: 'UPDATE_OBJECT_SETTINGS',
        object: object,
        update: update,
        useTemplateId: useTemplateId,
        extra: extra
    };
};
var updateObjectStandard = exports.updateObjectStandard = function updateObjectStandard(object, update) {
    var useTemplateId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
    var extra = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};
    return {
        type: 'UPDATE_OBJECT_STANDARD',
        object: object,
        update: update,
        useTemplateId: useTemplateId,
        extra: extra
    };
};
var updateObjectProperty = exports.updateObjectProperty = function updateObjectProperty(object, update) {
    var useTemplateId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
    var extra = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};
    return {
        type: 'UPDATE_OBJECT_PROPERTY',
        object: object,
        update: update,
        useTemplateId: useTemplateId,
        extra: extra
    };
};
var deleteObject = exports.deleteObject = function deleteObject(object) {
    return {
        type: 'DELETE_OBJECT',
        object: object
    };
};
var duplicateObject = exports.duplicateObject = function duplicateObject(object) {
    return {
        type: 'DUPLICATE_OBJECT',
        object: object
    };
};
var addObject = exports.addObject = function addObject(object, objectTo, direction) {
    return {
        type: 'ADD_OBJECT',
        object: object,
        objectTo: objectTo,
        direction: direction
    };
};
var objectUpdated = exports.objectUpdated = function objectUpdated(object) {
    return {
        type: 'OBJECT_UPDATED',
        object: object
    };
};
var equalizeColumnWidths = exports.equalizeColumnWidths = function equalizeColumnWidths(row) {
    return {
        type: 'EQUALIZE_COLUMN_WIDTHS',
        object: row
    };
};
var moveObject = exports.moveObject = function moveObject(object, objectTo, direction) {
    var newObjectToValue = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
    var newObjectToValue2 = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;
    return {
        type: 'MOVE_OBJECT',
        object: object,
        objectTo: objectTo,
        direction: direction,
        newObjectToValue: newObjectToValue,
        newObjectToValue2: newObjectToValue2
    };
};
var resetRow = exports.resetRow = function resetRow(row) {
    return {
        type: 'RESET_ROW',
        row: row
    };
};
var joinObject = exports.joinObject = function joinObject(object) {
    return {
        type: 'JOIN_OBJECT',
        object: object
    };
};

var appMakeSettingsActive = exports.appMakeSettingsActive = function appMakeSettingsActive(settings, which, parentRow, parentColumn) {
    var skin = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;
    return {
        type: 'APP_MAKE_SETTINGS_ACTIVE',
        settings: settings,
        which: which,
        parentRow: parentRow,
        parentColumn: parentColumn,
        skin: skin
    };
};
var appSwitchActiveSettings = exports.appSwitchActiveSettings = function appSwitchActiveSettings(which) {
    return {
        type: 'APP_SWITCH_ACTIVE_SETTINGS',
        which: which
    };
};
var appSwitchActiveObject = exports.appSwitchActiveObject = function appSwitchActiveObject(settings, which) {
    return {
        type: 'APP_SWITCH_ACTIVE_OBJECT',
        settings: settings,
        which: which
    };
};
var appMaybeSwitchActiveObjectGroup = exports.appMaybeSwitchActiveObjectGroup = function appMaybeSwitchActiveObjectGroup(actionType) {
    var settings = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
    var which = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
    var parentColumn = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
    var parentRow = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;
    return {
        type: 'APP_MAYBE_SWITCH_ACTIVE_OBJECT_GROUP',
        actionType: actionType,
        settings: settings,
        which: which,
        parentColumn: parentColumn,
        parentRow: parentRow
    };
};
var appAddBackSettingsPanel = exports.appAddBackSettingsPanel = function appAddBackSettingsPanel(which) {
    return {
        type: 'APP_ADD_BACK_SETTINGS_PANEL',
        which: which
    };
};
var appMakeSettingsInactive = exports.appMakeSettingsInactive = function appMakeSettingsInactive() {
    return {
        type: 'APP_MAKE_SETTINGS_INACTIVE'
    };
};
var appSaveSettings = exports.appSaveSettings = function appSaveSettings(object) {
    var closeSettingsPanel = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
    return {
        type: 'APP_SAVE_SETTINGS',
        object: object,
        closeSettingsPanel: closeSettingsPanel
    };
};
var appRevertSettings = exports.appRevertSettings = function appRevertSettings() {
    return {
        type: 'APP_REVERT_SETTINGS'
    };
};
var appUpdateObject = exports.appUpdateObject = function appUpdateObject(device, property, update) {
    var deviceShared = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
    return {
        type: 'APP_UPDATE_OBJECT',
        device: device,
        property: property,
        update: update,
        deviceShared: deviceShared
    };
};
var appUpdateObjectStandard = exports.appUpdateObjectStandard = function appUpdateObjectStandard(update) {
    return {
        type: 'APP_UPDATE_OBJECT_STANDARD',
        update: update
    };
};
var appUpdateObjectStandardProp = exports.appUpdateObjectStandardProp = function appUpdateObjectStandardProp(device, prop, update) {
    return {
        type: 'APP_UPDATE_OBJECT_STANDARD_PROP',
        device: device,
        prop: prop,
        update: update
    };
};
var appUpdateObjectSettings = exports.appUpdateObjectSettings = function appUpdateObjectSettings(update) {
    return {
        type: 'APP_UPDATE_OBJECT_SETTINGS',
        update: update
    };
};
var appUpdateObjectSettingsProp = exports.appUpdateObjectSettingsProp = function appUpdateObjectSettingsProp(device, prop, update) {
    return {
        type: 'APP_UPDATE_OBJECT_SETTINGS_PROP',
        device: device,
        prop: prop,
        update: update
    };
};
var appUpdateObjectSite = exports.appUpdateObjectSite = function appUpdateObjectSite(update) {
    return {
        type: 'APP_UPDATE_OBJECT_SITE',
        update: update
    };
};
var appUpdateObjectProperty = exports.appUpdateObjectProperty = function appUpdateObjectProperty(object, update, device) {
    return {
        type: 'APP_UPDATE_OBJECT_PROPERTY',
        object: object,
        update: update,
        device: device
    };
};
var appUpdateWorkspaceProperty = exports.appUpdateWorkspaceProperty = function appUpdateWorkspaceProperty(property, update) {
    return {
        type: 'APP_UPDATE_WORKSPACE_PROP',
        property: property,
        update: update
    };
};
var appRefreshFields = exports.appRefreshFields = function appRefreshFields() {
    return {
        type: 'APP_REFRESH_FIELDS'
    };
};
var reduxGatewayUpdate = exports.reduxGatewayUpdate = function reduxGatewayUpdate(gatewayName, gatewayId, gatewayShow, gateway) {
    return {
        type: 'REDUX_GATEWAY_UPDATE',
        gatewayName: gatewayName,
        gatewayId: gatewayId,
        gatewayShow: gatewayShow,
        gateway: gateway
    };
};
var updateTreeStateFromAPI = exports.updateTreeStateFromAPI = function updateTreeStateFromAPI(newState, area) {
    return {
        type: 'UPDATE_TREE_STATE_FROM_API',
        newState: newState,
        area: area
    };
};
var resetTree = exports.resetTree = function resetTree() {
    return {
        type: 'RESET_TREE'
    };
};
var updateSiteStateFromAPI = exports.updateSiteStateFromAPI = function updateSiteStateFromAPI(newState) {
    return {
        type: 'UPDATE_SITE_STATE_FROM_API',
        newState: newState
    };
};
var updateSiteSetting = exports.updateSiteSetting = function updateSiteSetting(property, update) {
    return {
        type: 'UPDATE_SITE_SETTING',
        property: property,
        update: update
    };
};
var updateSiteSettings = exports.updateSiteSettings = function updateSiteSettings(update) {
    return {
        type: 'UPDATE_SITE_SETTINGS',
        update: update
    };
};
var updatePageStateFromAPI = exports.updatePageStateFromAPI = function updatePageStateFromAPI(newState) {
    return {
        type: 'UPDATE_PAGE_STATE_FROM_API',
        newState: newState
    };
};
var updatePageSetting = exports.updatePageSetting = function updatePageSetting(property, update) {
    return {
        type: 'UPDATE_PAGE_SETTING',
        property: property,
        update: update
    };
};
var updateTemplateGlobals = exports.updateTemplateGlobals = function updateTemplateGlobals(id, update) {
    return {
        type: 'UPDATE_TEMPLATE_GLOBALS',
        id: id,
        update: update
    };
};
var updateTemplateUniques = exports.updateTemplateUniques = function updateTemplateUniques(object) {
    return {
        type: 'UPDATE_TEMPLATE_UNIQUES',
        object: object
    };
};
var saveTemplateGlobalRevert = exports.saveTemplateGlobalRevert = function saveTemplateGlobalRevert(update) {
    return {
        type: 'SAVE_TEMPLATE_GLOBAL_REVERT',
        update: update
    };
};
var replaceChildIds = exports.replaceChildIds = function replaceChildIds(object) {
    var extra = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var useTemplateId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
    return {
        type: 'REPLACE_CHILD_IDS',
        object: object,
        extra: extra,
        useTemplateId: useTemplateId
    };
};
var assignChildTemplateUniqueIds = exports.assignChildTemplateUniqueIds = function assignChildTemplateUniqueIds(object) {
    var extra = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    return {
        type: 'ASSIGN_CHILD_TEMPLATE_UNIQUE_IDS',
        object: object,
        extra: extra
    };
};
var updateAppState = exports.updateAppState = function updateAppState(property, update) {
    return {
        type: 'UPDATE_APP_STATE',
        property: property,
        update: update
    };
};

/**********************************************************
 * UNDO REDO
 *********************************************************/

var undoRedoUndo = exports.undoRedoUndo = function undoRedoUndo(theState, object) {
    return {
        type: 'UNDO_REDO_UNDO',
        theState: theState,
        object: object
    };
};
var undoRedoRedo = exports.undoRedoRedo = function undoRedoRedo(theState, object) {
    return {
        type: 'UNDO_REDO_REDO',
        theState: theState,
        object: object
    };
};
var undoRedoAdd = exports.undoRedoAdd = function undoRedoAdd(theState, theSiteState, message, when, object) {
    return {
        type: 'UNDO_REDO_ADD',
        theState: theState,
        theSiteState: theSiteState,
        message: message,
        when: when,
        object: object
    };
};
var undoRedoRestore = exports.undoRedoRestore = function undoRedoRestore(stateIndex) {
    return {
        type: 'UNDO_REDO_RESTORE',
        stateIndex: stateIndex
    };
};
var undoRedoGoto = exports.undoRedoGoto = function undoRedoGoto(stateIndex) {
    return {
        type: 'UNDO_REDO_GOTO',
        stateIndex: stateIndex
    };
};
var undoRedoReplaceGlobal = exports.undoRedoReplaceGlobal = function undoRedoReplaceGlobal(object) {
    return {
        type: 'UNDO_REDO_REPLACE_GLOBAL',
        object: object
    };
};
var undoRedoSaveHappened = exports.undoRedoSaveHappened = function undoRedoSaveHappened(object) {
    return {
        type: 'UNDO_REDO_SAVE_HAPPENED',
        object: object
    };
};

/**********************************************************
 * MENU
 *********************************************************/

var menuOpen = exports.menuOpen = function menuOpen() {
    var topSelected = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
    var subSelected = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
    return {
        type: 'MENU_OPEN',
        topSelected: topSelected,
        subSelected: subSelected
    };
};
var menuClose = exports.menuClose = function menuClose() {
    return {
        type: 'MENU_CLOSE'
    };
};

/**********************************************************
 * MOVE
 *********************************************************/

var moveStart = exports.moveStart = function moveStart() {
    return {
        type: 'MOVE_START'
    };
};

var moveStop = exports.moveStop = function moveStop() {
    return {
        type: 'MOVE_STOP'
    };
};

var moveFrom = exports.moveFrom = function moveFrom(moduleMove, columnMoveFrom, rowMoveFrom) {
    return {
        type: 'MOVE_FROM',
        moduleMove: moduleMove,
        columnMoveFrom: columnMoveFrom,
        rowMoveFrom: rowMoveFrom
    };
};

var moveTo = exports.moveTo = function moveTo(objectMoveTo, columnMoveTo, rowMoveTo, moveToDirection) {
    return {
        type: 'MOVE_TO',
        objectMoveTo: objectMoveTo,
        columnMoveTo: columnMoveTo,
        rowMoveTo: rowMoveTo,
        moveToDirection: moveToDirection
    };
};

var moveToReset = exports.moveToReset = function moveToReset() {
    return {
        type: 'MOVE_TO_RESET'
    };
};

var moveGetHover = exports.moveGetHover = function moveGetHover(e, treeState) {
    var setTheState = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
    return {
        type: 'MOVE_GET_HOVER',
        e: e,
        treeState: treeState,
        setTheState: setTheState
    };
};

/**********************************************************
 * INLINE EDITING
 *********************************************************/

var inlineEditStart = exports.inlineEditStart = function inlineEditStart(object) {
    return {
        type: 'INLINE_EDIT_START',
        object: object
    };
};

var inlineEditStop = exports.inlineEditStop = function inlineEditStop() {
    return {
        type: 'INLINE_EDIT_STOP'
    };
};

var inlineEditOpenConnector = exports.inlineEditOpenConnector = function inlineEditOpenConnector(editor) {
    return {
        type: 'INLINE_EDIT_OPEN_CONNECTOR',
        editor: editor
    };
};

var inlineEditCloseConnector = exports.inlineEditCloseConnector = function inlineEditCloseConnector() {
    return {
        type: 'INLINE_EDIT_CLOSE_CONNECTOR'
    };
};

/**********************************************************
 * SITE GROWER
 *********************************************************/

var updateSiteGrowerProps = exports.updateSiteGrowerProps = function updateSiteGrowerProps(update) {
    return {
        type: 'UPDATE_SITE_GROWER_PROPS',
        update: update
    };
};
var updateSiteGrowerStep = exports.updateSiteGrowerStep = function updateSiteGrowerStep(prop, update) {
    return {
        type: 'UPDATE_SITE_GROWER_STEP',
        prop: prop,
        update: update
    };
};
var resetSiteGrower = exports.resetSiteGrower = function resetSiteGrower() {
    return {
        type: 'RESET_SITE_GROWER'
    };
};

/**********************************************************
 * SKINS
 *********************************************************/

var updateSkin = exports.updateSkin = function updateSkin(id, update) {
    return {
        type: 'UPDATE_SKIN_STATE',
        id: id,
        update: update
    };
};

var updateSkinStateFromAPI = exports.updateSkinStateFromAPI = function updateSkinStateFromAPI(update) {
    return {
        type: 'UPDATE_SKIN_STATE_FROM_API',
        update: update
    };
};

var deleteSkin = exports.deleteSkin = function deleteSkin(id) {
    return {
        type: 'DELETE_SKIN',
        id: id
    };
};

var importSkins = exports.importSkins = function importSkins(skins) {
    return {
        type: 'IMPORT_SKINS',
        skins: skins
    };
};

var replaceSkins = exports.replaceSkins = function replaceSkins(skins) {
    return {
        type: 'REPLACE_SKINS',
        skins: skins
    };
};

/***/ }),

/***/ 800:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _border_field = __webpack_require__(788);

var _border_field2 = _interopRequireDefault(_border_field);

var _box_shadow_field = __webpack_require__(789);

var _box_shadow_field2 = _interopRequireDefault(_box_shadow_field);

var _builder_role_field = __webpack_require__(790);

var _builder_role_field2 = _interopRequireDefault(_builder_role_field);

var _color_field = __webpack_require__(791);

var _color_field2 = _interopRequireDefault(_color_field);

var _css_filter_field = __webpack_require__(795);

var _css_filter_field2 = _interopRequireDefault(_css_filter_field);

var _dropdown_field = __webpack_require__(796);

var _dropdown_field2 = _interopRequireDefault(_dropdown_field);

var _google_font_field = __webpack_require__(806);

var _google_font_field2 = _interopRequireDefault(_google_font_field);

var _gradient_field = __webpack_require__(807);

var _gradient_field2 = _interopRequireDefault(_gradient_field);

var _forms_field = __webpack_require__(805);

var _forms_field2 = _interopRequireDefault(_forms_field);

var _icon_field = __webpack_require__(808);

var _icon_field2 = _interopRequireDefault(_icon_field);

var _input_field = __webpack_require__(809);

var _input_field2 = _interopRequireDefault(_input_field);

var _items_field = __webpack_require__(810);

var _items_field2 = _interopRequireDefault(_items_field);

var _link_field = __webpack_require__(811);

var _link_field2 = _interopRequireDefault(_link_field);

var _linked_sliders_field = __webpack_require__(812);

var _linked_sliders_field2 = _interopRequireDefault(_linked_sliders_field);

var _media_field = __webpack_require__(813);

var _media_field2 = _interopRequireDefault(_media_field);

var _menus_field = __webpack_require__(814);

var _menus_field2 = _interopRequireDefault(_menus_field);

var _multi_select_field = __webpack_require__(815);

var _multi_select_field2 = _interopRequireDefault(_multi_select_field);

var _presets_field = __webpack_require__(818);

var _presets_field2 = _interopRequireDefault(_presets_field);

var _post_field = __webpack_require__(816);

var _post_field2 = _interopRequireDefault(_post_field);

var _post_type_field = __webpack_require__(817);

var _post_type_field2 = _interopRequireDefault(_post_type_field);

var _query_filter_field = __webpack_require__(819);

var _query_filter_field2 = _interopRequireDefault(_query_filter_field);

var _radio_toggle_field = __webpack_require__(820);

var _radio_toggle_field2 = _interopRequireDefault(_radio_toggle_field);

var _remote_templates_url_field = __webpack_require__(821);

var _remote_templates_url_field2 = _interopRequireDefault(_remote_templates_url_field);

var _skin_field = __webpack_require__(824);

var _skin_field2 = _interopRequireDefault(_skin_field);

var _skin_converter_field = __webpack_require__(823);

var _skin_converter_field2 = _interopRequireDefault(_skin_converter_field);

var _slider_control_field = __webpack_require__(825);

var _slider_control_field2 = _interopRequireDefault(_slider_control_field);

var _switch_field = __webpack_require__(827);

var _switch_field2 = _interopRequireDefault(_switch_field);

var _switch_group_field = __webpack_require__(828);

var _switch_group_field2 = _interopRequireDefault(_switch_group_field);

var _type_selector_field = __webpack_require__(834);

var _type_selector_field2 = _interopRequireDefault(_type_selector_field);

var _targets_field = __webpack_require__(829);

var _targets_field2 = _interopRequireDefault(_targets_field);

var _template_taxonomy_field = __webpack_require__(830);

var _template_taxonomy_field2 = _interopRequireDefault(_template_taxonomy_field);

var _text_field = __webpack_require__(832);

var _text_field2 = _interopRequireDefault(_text_field);

var _texteditor_field = __webpack_require__(833);

var _texteditor_field2 = _interopRequireDefault(_texteditor_field);

var _testimonials_field = __webpack_require__(831);

var _testimonials_field2 = _interopRequireDefault(_testimonials_field);

var _wp_widget_field = __webpack_require__(837);

var _wp_widget_field2 = _interopRequireDefault(_wp_widget_field);

var _wp_menus_field = __webpack_require__(836);

var _wp_menus_field2 = _interopRequireDefault(_wp_menus_field);

var _xy_slider_field = __webpack_require__(838);

var _xy_slider_field2 = _interopRequireDefault(_xy_slider_field);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var OffsproutFieldRegistryArray = [{
    type: 'border',
    component: _border_field2.default,
    properties: ['top', 'left', 'bottom', 'right', 'units', 'useDefault', 'type', 'color', 'customColor']
}, {
    type: 'box_shadow',
    component: _box_shadow_field2.default,
    properties: ['horizontal', 'vertical', 'blur', 'spread', 'color']
}, {
    type: 'builder_role',
    component: _builder_role_field2.default,
    properties: ['choices']
}, {
    type: 'color',
    component: _color_field2.default,
    properties: ['color']
}, {
    type: 'css_filter',
    component: _css_filter_field2.default,
    properties: ['blur', 'brightness', 'contrast', 'greyscale', 'hue_rotate', 'opacity', 'saturate', 'sepia']
}, {
    type: 'dropdown',
    component: _dropdown_field2.default,
    properties: ['choice']
}, {
    type: 'forms',
    component: _forms_field2.default,
    properties: ['formId', 'form']
}, {
    type: 'google_font',
    component: _google_font_field2.default,
    properties: ['choice', 'variant', 'variants']
}, {
    type: 'gradient',
    component: _gradient_field2.default,
    properties: ['colors', 'color1', 'color2', 'color3', 'color4', 'color1Start', 'color2Start', 'color3Start', 'color4Start', 'angle']
}, {
    type: 'icon',
    component: _icon_field2.default,
    properties: ['icon']
}, {
    type: 'input',
    component: _input_field2.default,
    properties: ['type', 'size', 'placeholder', 'label', 'defaultValue', 'options', 'required', 'value']
}, {
    type: 'items',
    component: _items_field2.default,
    properties: []
}, {
    type: 'link',
    component: _link_field2.default,
    properties: ['url']
}, {
    type: 'linked_sliders',
    component: _linked_sliders_field2.default,
    properties: ['top', 'left', 'bottom', 'right', 'units', 'useDefault']
}, {
    type: 'media',
    component: _media_field2.default,
    properties: ['url', 'files']
}, {
    type: 'menus',
    component: _menus_field2.default,
    properties: ['menuId', 'menu']
}, {
    type: 'multi_select',
    component: _multi_select_field2.default,
    properties: ['choices']
}, {
    type: 'query_filter',
    component: _query_filter_field2.default,
    properties: ['items', 'type']
}, {
    type: 'presets',
    component: _presets_field2.default,
    properties: ['preset']
}, {
    type: 'post',
    component: _post_field2.default,
    properties: []
}, {
    type: 'post_type',
    component: _post_type_field2.default,
    properties: ['choice']
}, {
    type: 'radio_toggle',
    component: _radio_toggle_field2.default,
    properties: ['choice']
}, {
    type: 'remote_templates_url',
    component: _remote_templates_url_field2.default,
    properties: ['text', 'cache']
}, {
    type: 'skin',
    component: _skin_field2.default,
    properties: ['choice']
}, {
    type: 'skin_converter',
    component: _skin_converter_field2.default,
    properties: ['choice']
}, {
    type: 'slider_control',
    component: _slider_control_field2.default,
    properties: ['value', 'units', 'useDefault']
}, {
    type: 'switch',
    component: _switch_field2.default,
    properties: ['yes'] //0 or 1
}, {
    type: 'switch_group',
    component: _switch_group_field2.default,
    properties: []
}, {
    type: 'type_selector',
    component: _type_selector_field2.default,
    properties: ['items']
}, {
    type: 'targets',
    component: _targets_field2.default,
    properties: ['target']
}, {
    type: 'template_taxonomy',
    component: _template_taxonomy_field2.default,
    properties: ['choice']
}, {
    type: 'text',
    component: _text_field2.default,
    properties: ['text']
}, {
    type: 'texteditor',
    component: _texteditor_field2.default,
    properties: ['text']
}, {
    type: 'testimonials',
    component: _testimonials_field2.default,
    properties: ['testimonials', 'source']
}, {
    type: 'wp_widget',
    component: _wp_widget_field2.default,
    properties: ['widget']
}, {
    type: 'wp_menu',
    component: _wp_menus_field2.default,
    properties: ['choice']
}, {
    type: 'xy_slider',
    component: _xy_slider_field2.default,
    properties: ['x', 'y']
}];

//Seems like this can still be reached via window.OffsproutModuleRegistry even via modules that are loaded in the iFrame
//You'd think that you'd have to use parent.OffsproutModuleRegistry, but that seems to screw up the tinyMCE
//Import all fields
if (window.OffsproutFieldRegistry == undefined) {
    window.OffsproutFieldRegistry = OffsproutFieldRegistryArray;
} else {
    window.OffsproutFieldRegistry = window.OffsproutFieldRegistry.concat(OffsproutFieldRegistryArray);
}

/***/ }),

/***/ 801:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _field_builder = __webpack_require__(168);

var _field_builder2 = _interopRequireDefault(_field_builder);

var _field_note = __webpack_require__(358);

var _field_note2 = _interopRequireDefault(_field_note);

var _reactSortableHoc = __webpack_require__(71);

var _settings_panel_tooltip = __webpack_require__(104);

var _settings_panel_tooltip2 = _interopRequireDefault(_settings_panel_tooltip);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var RepeaterItem = function RepeaterItem(_ref) {
    var repeaterProps = _ref.repeaterProps,
        index = _ref.index,
        item = _ref.item,
        sort = _ref.sort,
        repeaterThis = _ref.repeaterThis;

    var groupFieldIds = [];
    var currentFieldItemFields = JSON.parse(JSON.stringify(repeaterProps.currentField.items.fields));

    //If there is more than one field contained within the repeater, create a group
    if (currentFieldItemFields.length > 1 || repeaterProps.currentField.forceGroup != undefined && repeaterProps.currentField.forceGroup == true) {
        //Make sure that all of the fields have the group
        currentFieldItemFields = currentFieldItemFields.map(function (field) {
            groupFieldIds.push(field.id);
            field.group = repeaterProps.currentField.id + '-' + index;
            return field;
        });

        var itemName = repeaterProps.currentField.itemName != undefined ? repeaterProps.currentField.itemName : 'Item';

        if (repeaterProps.currentField.itemNameField != undefined && item != undefined) {
            var itemFieldProp = repeaterProps.currentField.itemNameField;
            var itemValueProp = 'text';
            if (typeof repeaterProps.currentField.itemNameField != 'String') {
                itemFieldProp = repeaterProps.currentField.itemNameField[0];
                itemValueProp = repeaterProps.currentField.itemNameField[1];
            }

            if (item[itemFieldProp] != undefined && item[itemFieldProp][itemValueProp] != undefined && item[itemFieldProp][itemValueProp] != false) {
                var itemNameLength = item[itemFieldProp][itemValueProp].length;
                if (itemNameLength > 50) {
                    itemName = item[itemFieldProp][itemValueProp].substring(0, 50) + '...';
                } else {
                    itemName = item[itemFieldProp][itemValueProp];
                }
            }
        }

        var div = document.createElement("div");
        div.innerHTML = itemName;
        itemName = div.innerText;

        //Add the group field
        currentFieldItemFields.unshift({
            id: repeaterProps.currentField.id + '-' + index,
            title: itemName,
            description: repeaterProps.currentField.itemDescription,
            wrap: 'field_group',
            items: groupFieldIds
        });
    }

    var controlButton = _react2.default.createElement(
        'div',
        { className: 'ocb-sf-repeater-control-button ocb-sf-repeater-remove', onClick: function onClick() {
                return repeaterThis.deleteRepeaterItem(index);
            } },
        _react2.default.createElement('i', { className: 'fa fa-remove ocb-sf-repeater-remove' })
    );

    var duplicateButton = _react2.default.createElement(
        'div',
        { className: 'ocb-sf-repeater-control-button ocb-sf-repeater-duplicate', onClick: function onClick() {
                return repeaterThis.duplicateRepeaterItem(index);
            } },
        _react2.default.createElement('i', { className: 'fa fa-copy' })
    );

    var sortItemBlanket = null;
    var sortingClass = '';

    if (sort) {
        controlButton = _react2.default.createElement(SortableDragHandle, null);
        sortItemBlanket = _react2.default.createElement('div', { className: 'ocb-sf-repeater-sort-item-blanket' });
        sortingClass = 'ocb-sf-repeater-item-sort-active';
        duplicateButton = null;
    }

    /*console.log('repeater', {
        object: repeaterProps.object,
        fields: currentFieldItemFields,
        defaultValues: repeaterProps.currentField.items.default,
        currentValues: item
    });*/

    //whichActive has to be linked for now because when it was repeaterProps.whichActive,
    // there was a JSON error
    //Eventually we should fix this so that Repeaters can have per-device settings
    //I believe that can be done in object_settings.js in switchWhichActive
    return _react2.default.createElement(
        'div',
        { key: index, className: 'ocb-sf-repeater-item ' + sortingClass },
        controlButton,
        duplicateButton,
        _react2.default.createElement(
            'div',
            { className: 'ocb-sf-repeater-field' },
            _react2.default.createElement(_field_builder2.default, {
                appFunctions: repeaterProps.appFunctions,
                object: repeaterProps.object,
                fields: currentFieldItemFields,
                defaultValues: repeaterProps.currentField.items.default,
                currentValues: item,
                repeater: repeaterProps.currentField.id,
                repeaterIndex: index,
                whichActive: 'linked'
            }),
            sortItemBlanket
        )
    );
};
var RepeaterItems = function RepeaterItems(_ref2) {
    var repeaterProps = _ref2.repeaterProps,
        items = _ref2.items,
        sort = _ref2.sort,
        repeaterThis = _ref2.repeaterThis;

    return _react2.default.createElement(
        'div',
        { className: 'ocb-sf-repeater-items' },
        items.map(function (each, index) {
            if (sort) {
                return _react2.default.createElement(SortableRepeaterItem, { key: index, item: each, index: index, repeaterProps: repeaterProps, repeaterThis: repeaterThis });
            } else {
                return _react2.default.createElement(RepeaterItem, { key: index, item: each, index: index, repeaterProps: repeaterProps, repeaterThis: repeaterThis });
            }
        })
    );
};
var SortableDragHandle = (0, _reactSortableHoc.SortableHandle)(function () {
    return _react2.default.createElement(
        'div',
        { className: 'ocb-sf-repeater-control-button ocb-sf-repeater-sort-button' },
        _react2.default.createElement('i', { className: 'fa fa-bars ocb-sf-repeater-sort' })
    );
});
var SortableRepeaterItem = (0, _reactSortableHoc.SortableElement)(function (_ref3) {
    var repeaterProps = _ref3.repeaterProps,
        index = _ref3.index,
        repeaterThis = _ref3.repeaterThis,
        item = _ref3.item;

    return _react2.default.createElement(RepeaterItem, { repeaterProps: repeaterProps, index: index, sort: true, repeaterThis: repeaterThis, item: item });
});
var SortableRepeaterItems = (0, _reactSortableHoc.SortableContainer)(function (_ref4) {
    var repeaterProps = _ref4.repeaterProps,
        items = _ref4.items,
        repeaterThis = _ref4.repeaterThis;

    return _react2.default.createElement(RepeaterItems, { repeaterProps: repeaterProps, items: items, sort: true, repeaterThis: repeaterThis });
});

var FieldRepeater = function (_Component) {
    _inherits(FieldRepeater, _Component);

    function FieldRepeater(props) {
        _classCallCheck(this, FieldRepeater);

        var _this = _possibleConstructorReturn(this, (FieldRepeater.__proto__ || Object.getPrototypeOf(FieldRepeater)).call(this, props));

        _this.state = {
            items: _this.props.mergedValues[_this.props.currentField.id].items,
            sorting: false
        };

        _this.deleteRepeaterItem = _this.deleteRepeaterItem.bind(_this);
        return _this;
    }

    /**
     * Capture the update from the fields (via field_wrap) and update the repeater rather than using the standard field update
     *
     * @param property
     * @param update
     * @param forceDevice
     * @param deviceShared
     * @param repeaterIndex
     */


    _createClass(FieldRepeater, [{
        key: 'update',
        value: function update(property, _update) {
            var forceDevice = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
            var deviceShared = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
            var repeaterIndex = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;

            /*console.log('updating the repeater', {
                property,
                update,
                forceDevice,
                deviceShared,
                repeaterIndex
            });*/

            //WARNING: We're intentionally mutating this.props.mergedValues[this.props.currentField.id] here with repeaterFull
            // This is because we need this part of this.props.mergedValues to be up-to-date with each call of this update function
            var repeaterProperty = this.props.currentField.id;
            var repeaterFull = this.props.mergedValues[repeaterProperty];

            if (repeaterFull.items == undefined) {
                repeaterFull.items = [];
            }

            if (repeaterFull.items[repeaterIndex] == undefined) {
                repeaterFull.items[repeaterIndex] = {};
            }

            repeaterFull.items[repeaterIndex][property] = _update;
            //console.log('repeaterFull1', repeaterFull);

            this.setState({ items: repeaterFull.items });
            this.props.appFunctions.objectUpdate(repeaterProperty, repeaterFull, forceDevice, deviceShared);
        }
    }, {
        key: 'updateSort',
        value: function updateSort(items) {
            var repeaterProperty = this.props.currentField.id;
            var repeaterFull = this.props.mergedValues[repeaterProperty];

            repeaterFull.items = items;

            this.props.appFunctions.objectUpdate(repeaterProperty, repeaterFull);
            this.maybeFireOnChange();
        }
    }, {
        key: 'addRepeaterItem',
        value: function addRepeaterItem() {
            var newState = this.state.items;
            newState.push({});
            this.setState({ items: newState });

            var repeaterProperty = this.props.currentField.id;
            var repeaterFull = this.props.mergedValues[repeaterProperty];

            repeaterFull.items = newState;
            this.props.appFunctions.objectUpdate(repeaterProperty, repeaterFull);
            this.maybeFireOnChange();
        }
    }, {
        key: 'deleteRepeaterItem',
        value: function deleteRepeaterItem(index) {
            var newState = this.state.items;
            newState.splice(index, 1);
            this.setState({ items: newState });

            //Run the update function and remove the item there too
            var repeaterProperty = this.props.currentField.id;
            var repeaterFull = this.props.mergedValues[repeaterProperty];

            repeaterFull.items = newState;
            this.props.appFunctions.objectUpdate(repeaterProperty, repeaterFull);
            this.maybeFireOnChange();
        }
    }, {
        key: 'duplicateRepeaterItem',
        value: function duplicateRepeaterItem(index) {
            //let newState = JSON.parse( JSON.stringify( this.state.items ) );
            var copied = JSON.parse(JSON.stringify(this.state.items[index]));
            var newState = JSON.parse(JSON.stringify(this.state.items));
            newState.splice(index, 0, copied);
            this.setState({ items: newState });

            //Run the update function and remove the item there too
            var repeaterProperty = this.props.currentField.id;
            var repeaterFull = this.props.mergedValues[repeaterProperty];

            repeaterFull.items = newState;
            this.props.appFunctions.objectUpdate(repeaterProperty, repeaterFull);
            this.maybeFireOnChange();
        }
    }, {
        key: 'onSortEnd',
        value: function onSortEnd(_ref5) {
            var oldIndex = _ref5.oldIndex,
                newIndex = _ref5.newIndex;

            //console.log('on sort end', this.state.items, arrayMove(this.state.items, oldIndex, newIndex), oldIndex, newIndex);
            var newOrder = (0, _reactSortableHoc.arrayMove)(this.state.items, oldIndex, newIndex);
            this.setState({
                items: newOrder
            });
            this.updateSort(newOrder);
        }
    }, {
        key: 'maybeFireOnChange',
        value: function maybeFireOnChange() {
            if (this.props.currentField.onChange != undefined) {
                //console.log('onChange', this.props);
                if (window[this.props.currentField.onChange] != undefined) {
                    var id = this.props.object != undefined && this.props.object.id != undefined ? this.props.object.id : '';
                    window[this.props.currentField.onChange](id);
                    //console.log('did onChange', this.props.currentField.onChange);
                }
            } else {
                    //console.log('no onChange', this.props);
                }
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            this.props.appFunctions.repeaterUpdate = this.update.bind(this);

            //console.log('render the repeater state', this.state.items);

            var sortText = 'Sort';
            var sortingFunction = function sortingFunction() {
                return _this2.setState({ sorting: true });
            };
            var children = _react2.default.createElement(RepeaterItems, { items: this.state.items, repeaterProps: this.props, repeaterThis: this });

            if (this.state.sorting) {
                children = _react2.default.createElement(SortableRepeaterItems, { items: this.state.items, repeaterProps: this.props, repeaterThis: this, onSortEnd: this.onSortEnd.bind(this), useDragHandle: true, helperClass: 'ocb-sf-repeater-item-sorting' });
                sortText = 'Stop Sorting';
                sortingFunction = function sortingFunction() {
                    return _this2.setState({ sorting: false });
                };
            }

            var addButton = _react2.default.createElement(
                'div',
                { className: 'ocb-sf-button ocb-sf-repeater-button mr-4', onClick: this.addRepeaterItem.bind(this) },
                _react2.default.createElement('i', { className: 'fa fa-plus' }),
                ' Add Item'
            );
            var sortButton = _react2.default.createElement(
                'div',
                { className: 'ocb-sf-button ocb-sf-repeater-button mr-1', onClick: sortingFunction },
                sortText
            );

            var hideClass = '';

            if (this.props.hide) {
                hideClass = 'ocb-sf-hidden';
            }

            var inAGroupClass = '';
            if (this.props.appFunctions.activeGroup) {
                inAGroupClass = 'ocb-sf-group-active';
            }

            var note = null;
            if (this.props.currentField.note != undefined) {
                note = _react2.default.createElement(_field_note2.default, { note: this.props.currentField.note });
            }

            var description = null;
            if (this.props.currentField.description != undefined) {
                description = _react2.default.createElement(_settings_panel_tooltip2.default, { tooltipContent: this.props.currentField.description });
            }

            return _react2.default.createElement(
                'div',
                { className: 'ocb-sf ocb-sf-repeater ocb-sf-repeater-' + this.props.currentField.id + ' ' + hideClass + ' ' + inAGroupClass },
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-sf-inner ocb-sf-repeater-inner' },
                    _react2.default.createElement(
                        'div',
                        { className: 'ocb-sf-repeater-panel' },
                        _react2.default.createElement(
                            'div',
                            { className: 'ocb-sf-title' },
                            this.props.currentField.title
                        ),
                        addButton,
                        sortButton,
                        description,
                        note
                    ),
                    children
                )
            );
        }
    }]);

    return FieldRepeater;
}(_react.Component);

exports.default = FieldRepeater;

/***/ }),

/***/ 802:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _settings_helpers = __webpack_require__(2);

var _settings_helpers2 = _interopRequireDefault(_settings_helpers);

var _field_note = __webpack_require__(358);

var _field_note2 = _interopRequireDefault(_field_note);

var _settings_panel_tooltip = __webpack_require__(104);

var _settings_panel_tooltip2 = _interopRequireDefault(_settings_panel_tooltip);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var FieldWrap = function (_Component) {
    _inherits(FieldWrap, _Component);

    function FieldWrap(props) {
        _classCallCheck(this, FieldWrap);

        var _this = _possibleConstructorReturn(this, (FieldWrap.__proto__ || Object.getPrototypeOf(FieldWrap)).call(this, props));

        _this.state = {};
        return _this;
    }

    /*componentWillReceiveProps(nextProps){
        console.log('nextProps.appFunctions.allValues', nextProps.appFunctions.allValues);
        console.log('this.props.appFunctions.allValues', this.props.appFunctions.allValues);
    }*/

    _createClass(FieldWrap, [{
        key: 'shouldComponentUpdate',
        value: function shouldComponentUpdate(nextProps) {
            var _this2 = this;

            //Never update this component type
            if (this.props.currentField.type == 'textarea') {
                return false;
            }

            //If hide prop changed, we should update
            if (this.props.hide != nextProps.hide || this.props.subgroupHide != nextProps.subgroupHide) {
                return true;
            }

            //If another field changed and this field's display relies on that other field, we should update
            if (_settings_helpers2.default.fieldConditionalUpdated(this.props.currentField, this.props.mergedValues, nextProps.mergedValues)) {
                return true;
            }

            var fields = _settings_helpers2.default.getFieldRegistry();

            var fieldIndex = fields.findIndex(function (field) {
                return field.type == _this2.props.currentField.type;
            });

            if (fieldIndex == -1) {
                return false;
            }

            //If the value of this field changed, we should update
            if (_settings_helpers2.default.shouldFieldWrapUpdate(fields[fieldIndex].properties, this.props.mergedValues[this.props.currentField.id], nextProps.mergedValues[this.props.currentField.id])) {
                return true;
            }

            if (nextProps.whichActive != this.props.whichActive) {
                return true;
            }

            return false;
        }
    }, {
        key: 'update',
        value: function update(property, _update) {
            var other = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
            var forceDevice = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;

            var _this3 = this;

            var deviceShared = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;
            var specific = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;

            var repeaterIndex = other.repeaterIndex;
            var field = other.field;

            //We're passing the deviceShared prop to the field so let's collect it here to send back to app.js
            //This is used so to update all devices if a setting can't be set on a per-device basis
            if (!deviceShared) {
                deviceShared = other.deviceShared;
            }

            if (this.props.appFunctions.specificFieldUpdate != undefined && this.props.appFunctions.specificFieldUpdate[property] != undefined && specific == false) {
                return this.props.appFunctions.specificFieldUpdate[property](property, _update, { repeaterIndex: repeaterIndex, field: field }, forceDevice, deviceShared, true);
            }

            if (field != undefined && field.onChange != undefined) {
                var onChangeFunctions = [field.onChange];
                if (field.onChange.includes('|')) {
                    onChangeFunctions = field.onChange.split('|');
                }
                onChangeFunctions.forEach(function (onChangeFunction) {
                    if (window[onChangeFunction] != undefined) {
                        var id = _this3.props.object != undefined && _this3.props.object.id != undefined ? _this3.props.object.id : '';
                        window[onChangeFunction](id);
                    }
                });
            }

            if (repeaterIndex != undefined) {
                this.props.appFunctions.repeaterUpdate(property, _update, forceDevice, deviceShared, repeaterIndex);
            } else {
                this.props.appFunctions.objectUpdate(property, _update, forceDevice, deviceShared);
            }
        }
    }, {
        key: 'render',
        value: function render() {
            var _this4 = this;

            var theSetting = null;
            var deviceSharedMessage = null;
            var skinMessage = null;
            var deviceShared = true;
            var moreClasses = '';
            this.props.appFunctions.fieldUpdate = this.update.bind(this);

            if (this.props.appFunctions.specificFieldUpdate == undefined) {
                this.props.appFunctions.specificFieldUpdate = {};
            }
            this.props.appFunctions.specificFieldUpdate[this.props.currentField.id] = this.update.bind(this);

            //Because standard settings are used for modules, columns, and rows, this flag allows certain fields
            // to only be shown for certain object types
            if (this.props.currentField.onlyObjectTypes != undefined) {
                if (!this.props.currentField.onlyObjectTypes.includes(this.props.object.type)) {
                    return null;
                }
            }

            var headingClass = '';

            //If the deviceSpecific flag is set to true, that means that each device can have its own settings, and therefore settings are not shared
            if (this.props.currentField.deviceSpecific != undefined && this.props.currentField.deviceSpecific) {
                deviceShared = false;
            }

            //Setting the deviceSpecific flag to true, will allow a field to be managed separately for each device
            if (this.props.currentField.deviceSpecific != undefined && this.props.currentField.deviceSpecific && this.props.appFunctions.whichActive != 'linked') {
                //deviceSharedMessage = ( <div className="alert alert-danger">Setting always shared by all devices</div> );
                var deviceSharedMessageIcon = this.props.whichActive == 'phone' ? 'mobile-phone' : this.props.whichActive;
                deviceSharedMessage = _react2.default.createElement(_settings_panel_tooltip2.default, { tooltipContent: 'Settings for ' + this.props.whichActive, wrapClass: 'ocb-sf-description ocb-sf-description-device', content: _react2.default.createElement('i', { className: 'fa fa-' + deviceSharedMessageIcon }) });
            } else if ((this.props.currentField.deviceSpecific == undefined || this.props.currentField.deviceSpecific == false) && this.props.appFunctions.whichActive != 'linked') {
                deviceSharedMessage = _react2.default.createElement(_settings_panel_tooltip2.default, { tooltipContent: 'Settings shared by all devices', wrapClass: 'ocb-sf-description ocb-sf-description-linked', content: _react2.default.createElement('i', { className: 'fa fa-globe' }) });
            }

            if (this.props.appFunctions.editingSkin && this.props.currentField.settingType != 'design' && this.props.appFunctions.settingsOrStandard != 'settings') {
                skinMessage = _react2.default.createElement(_settings_panel_tooltip2.default, { tooltipContent: 'Setting not part of skin', wrapClass: 'ocb-sf-description ocb-sf-description-linked', content: _react2.default.createElement('i', { className: 'fa fa-exclamation' }) });
            }

            var fields = _settings_helpers2.default.getFieldRegistry();

            var fieldIndex = fields.findIndex(function (field) {
                return field.type == _this4.props.currentField.type;
            });

            if (fieldIndex != -1 && fields[fieldIndex].component != undefined) {

                var FieldComponent = fields[fieldIndex].component;

                theSetting = _react2.default.createElement(FieldComponent, {
                    field: this.props.currentField,
                    values: this.props.mergedValues[this.props.currentField.id],
                    appFunctions: this.props.appFunctions,
                    repeater: this.props.repeater,
                    repeaterIndex: this.props.repeaterIndex,
                    deviceShared: deviceShared
                });
            } else {

                if (this.props.currentField.type == 'heading') {
                    headingClass = ' ocb-sf-heading';
                    theSetting = null;
                    deviceSharedMessage = null;
                } else if (this.props.currentField.type == 'note') {
                    theSetting = null;
                    deviceSharedMessage = null;
                } else {
                    theSetting = _react2.default.createElement(
                        'div',
                        null,
                        'Field type not registered'
                    );
                }
            }

            var hideClass = '';

            var passes = _settings_helpers2.default.passesFieldConditional(this.props.currentField, this.props.appFunctions.allValues, this.props.mergedValues, this.props.repeaterIndex);

            if (!passes) {
                hideClass = ' ocb-sf-hidden';
            }

            if (this.props.hide || this.props.subgroupHide) {
                hideClass = ' ocb-sf-hidden';
            }

            var note = null;

            if (this.props.currentField.note != undefined) {
                note = _react2.default.createElement(_field_note2.default, { note: this.props.currentField.note });
            }

            if (this.props.currentField.panel != undefined) {
                hideClass += ' ocb-sf-panel-item-field';
            }

            var title = this.props.currentField.title;

            if (title.includes('fa-')) {
                title = _react2.default.createElement('i', { className: 'fa ' + title });
            }

            var description = null;

            if (this.props.currentField.description != undefined) {
                description = _react2.default.createElement(_settings_panel_tooltip2.default, { tooltipContent: this.props.currentField.description });
            }

            var fieldTitle = _react2.default.createElement(
                'div',
                { className: 'ocb-sf-title' },
                deviceSharedMessage,
                title,
                skinMessage
            );

            if (this.props.currentField.inline != undefined && this.props.currentField.inline && this.props.currentField.type == 'note') {
                fieldTitle = null;
            }

            var fieldSetting = _react2.default.createElement(
                'div',
                { className: 'ocb-sf-setting' },
                theSetting
            );

            var fieldInner = _react2.default.createElement(
                'div',
                { className: 'ocb-sf-inner' },
                description,
                fieldTitle,
                note,
                fieldSetting
            );

            moreClasses += hideClass;
            moreClasses += headingClass;

            if (this.props.currentField.inline != undefined && this.props.currentField.inline) {
                moreClasses += ' ocb-sf-inline';
            }

            /*if( this.props.currentField.icon != undefined ){
                fieldInner = (
                    <div className="ocb-sf-inner ocb-sf-has-icon">
                        <div className="ocb-sf-field-icon">
                            <i className={ `fa fa-${this.props.currentField.icon}` } />
                        </div>
                        <div className="ocb-sf-inner-field">
                            { fieldTitle }
                            { note }
                            { fieldSetting }
                        </div>
                    </div>
                )
            }*/

            return _react2.default.createElement(
                'div',
                { className: 'ocb-sf ocb-sf-type-' + this.props.currentField.type + moreClasses, id: 'ocb-sf-' + this.props.currentField.id },
                fieldInner
            );
        }
    }]);

    return FieldWrap;
}(_react.Component);

exports.default = FieldWrap;

/***/ }),

/***/ 803:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactSortableHoc = __webpack_require__(71);

var _settings_helpers = __webpack_require__(2);

var _settings_helpers2 = _interopRequireDefault(_settings_helpers);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var FormInput = function (_Component) {
    _inherits(FormInput, _Component);

    function FormInput(props) {
        _classCallCheck(this, FormInput);

        var _this = _possibleConstructorReturn(this, (FormInput.__proto__ || Object.getPrototypeOf(FormInput)).call(this, props));

        _this.state = _extends({}, _this.props.values, { showFields: false });
        _this.optionTimer = false;
        return _this;
    }

    _createClass(FormInput, [{
        key: 'update',
        value: function update(merge) {
            var update = Object.assign(this.state, merge);
            this.props.update(this.props.index, update);
            this.setState(merge);
        }
    }, {
        key: 'changeValue',
        value: function changeValue(key, newValue) {
            var _this2 = this;

            if (['name', 'placeholder', 'label', 'defaultValue', 'value'].includes(key)) {
                clearTimeout(this.optionTimer);
                var time = 300;
                this.optionTimer = setTimeout(function () {
                    _this2.update(_defineProperty({}, key, newValue));
                }, time);
            } else {
                this.update(_defineProperty({}, key, newValue));
            }
        }
    }, {
        key: 'onSortEnd',
        value: function onSortEnd(_ref) {
            var oldIndex = _ref.oldIndex,
                newIndex = _ref.newIndex;

            var newOrder = (0, _reactSortableHoc.arrayMove)(this.state.options, oldIndex, newIndex);
            this.changeValue('options', newOrder);
        }
    }, {
        key: 'getWrapped',
        value: function getWrapped(name, field) {
            return _react2.default.createElement(
                'div',
                { className: 'ocb-sf-row' },
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-sf-row-label' },
                    name
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-sf-row-input' },
                    field
                )
            );
        }
    }, {
        key: 'getType',
        value: function getType(value) {
            var _this3 = this;

            var field = _react2.default.createElement(
                'select',
                { defaultValue: value, onChange: function onChange(e) {
                        return _this3.changeValue('type', e.target.value);
                    } },
                _react2.default.createElement(
                    'option',
                    { value: 'text' },
                    'Text'
                ),
                _react2.default.createElement(
                    'option',
                    { value: 'url' },
                    'URL'
                ),
                _react2.default.createElement(
                    'option',
                    { value: 'tel' },
                    'Telephone'
                ),
                _react2.default.createElement(
                    'option',
                    { value: 'email' },
                    'Email'
                ),
                _react2.default.createElement(
                    'option',
                    { value: 'date' },
                    'Date'
                ),
                _react2.default.createElement(
                    'option',
                    { value: 'number' },
                    'Number'
                ),
                _react2.default.createElement(
                    'option',
                    { value: 'textarea' },
                    'Text Box'
                ),
                _react2.default.createElement(
                    'option',
                    { value: 'select' },
                    'Select'
                ),
                _react2.default.createElement(
                    'option',
                    { value: 'radio' },
                    'Radio'
                ),
                _react2.default.createElement(
                    'option',
                    { value: 'checkbox' },
                    'Checkbox'
                ),
                _react2.default.createElement(
                    'option',
                    { value: 'html' },
                    'HTML'
                ),
                _react2.default.createElement(
                    'option',
                    { value: 'hidden' },
                    'Hidden'
                ),
                _react2.default.createElement(
                    'option',
                    { value: 'honeypot' },
                    'Honey Pot'
                ),
                _react2.default.createElement(
                    'option',
                    { value: 'math' },
                    'Math Verification'
                )
            );

            return this.getWrapped('Type', field);
        }
    }, {
        key: 'getSize',
        value: function getSize(value) {
            var _this4 = this;

            var text = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'Size';
            var option = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'size';

            var field = _react2.default.createElement(
                'select',
                { defaultValue: value, onChange: function onChange(e) {
                        return _this4.changeValue(option, e.target.value);
                    } },
                _react2.default.createElement(
                    'option',
                    { value: '100' },
                    'Full'
                ),
                _react2.default.createElement(
                    'option',
                    { value: '75' },
                    'Three Fourths'
                ),
                _react2.default.createElement(
                    'option',
                    { value: '66' },
                    'Two Thirds'
                ),
                _react2.default.createElement(
                    'option',
                    { value: '50' },
                    'Half'
                ),
                _react2.default.createElement(
                    'option',
                    { value: '33' },
                    'Third'
                ),
                _react2.default.createElement(
                    'option',
                    { value: '25' },
                    'Fourth'
                )
            );

            return this.getWrapped(text, field);
        }
    }, {
        key: 'getName',
        value: function getName(value) {
            var _this5 = this;

            var field = _react2.default.createElement('input', { type: 'text', defaultValue: value, onChange: function onChange(e) {
                    return _this5.changeValue('name', e.target.value);
                } });

            return this.getWrapped('Field Name', field);
        }
    }, {
        key: 'getPlaceholder',
        value: function getPlaceholder(value) {
            var _this6 = this;

            var field = _react2.default.createElement('input', { type: 'text', defaultValue: value, onChange: function onChange(e) {
                    return _this6.changeValue('placeholder', e.target.value);
                } });

            return this.getWrapped('Placeholder', field);
        }
    }, {
        key: 'getLabel',
        value: function getLabel(value) {
            var _this7 = this;

            var field = _react2.default.createElement('input', { type: 'text', defaultValue: value, onChange: function onChange(e) {
                    return _this7.changeValue('label', e.target.value);
                } });

            return this.getWrapped('Label', field);
        }
    }, {
        key: 'getDefault',
        value: function getDefault(value) {
            var _this8 = this;

            var inputType = 'text';
            if (['text', 'tel', 'number', 'email', 'url', 'date'].includes(this.state.type)) {
                inputType = this.state.type;
            }

            var field = _react2.default.createElement('input', { type: inputType, defaultValue: value, onChange: function onChange(e) {
                    return _this8.changeValue('defaultValue', e.target.value);
                } });

            return this.getWrapped('Default', field);
        }
    }, {
        key: 'getHTML',
        value: function getHTML(value) {
            var _this9 = this;

            var field = _react2.default.createElement(
                'div',
                { className: 'ocb-sf-row' },
                _react2.default.createElement('textarea', { defaultValue: value, onChange: function onChange(e) {
                        return _this9.changeValue('defaultValue', e.target.value);
                    } })
            );

            return field;
        }
    }, {
        key: 'getRequired',
        value: function getRequired(value) {
            var _this10 = this;

            var field = _react2.default.createElement('input', { type: 'checkbox', defaultChecked: value, onChange: function onChange(e) {
                    return _this10.changeValue('required', e.target.checked);
                } });

            return this.getWrapped('Required', field);
        }
    }, {
        key: 'getValue',
        value: function getValue(value) {
            var _this11 = this;

            var field = _react2.default.createElement('input', { type: 'text', defaultValue: value, onChange: function onChange(e) {
                    return _this11.changeValue('value', e.target.value);
                } });

            return this.getWrapped('Value', field);
        }
    }, {
        key: 'getOptions',
        value: function getOptions(value) {
            var _this12 = this;

            var Handle = (0, _reactSortableHoc.SortableHandle)(function () {
                return _react2.default.createElement(
                    'div',
                    { className: 'ocb-sf-input-options-sort' },
                    _react2.default.createElement('i', { className: 'fa fa-bars' })
                );
            });

            var options = value.map(function (option, mapIndex) {
                var TheOption = (0, _reactSortableHoc.SortableElement)(function (index) {
                    return _react2.default.createElement(
                        'div',
                        { className: 'ocb-sf-input-options-option d-flex align-items-center' },
                        _react2.default.createElement(Handle, null),
                        _react2.default.createElement(
                            'div',
                            { className: 'ocb-sf-input-option p-2' },
                            _react2.default.createElement('input', { type: 'text', defaultValue: option, onChange: function onChange(e) {
                                    return _this12.updateOption(e.target.value, mapIndex);
                                } })
                        ),
                        _react2.default.createElement(
                            'div',
                            { className: 'ocb-sf-input-option-delete', onClick: function onClick() {
                                    return _this12.deleteOption(mapIndex);
                                } },
                            _react2.default.createElement('i', { className: 'fa fa-remove' })
                        )
                    );
                });
                return _react2.default.createElement(TheOption, { key: mapIndex, index: mapIndex });
            });

            var Field = (0, _reactSortableHoc.SortableContainer)(function () {
                return _react2.default.createElement(
                    'div',
                    { className: 'ocb-sf-input-options' },
                    options
                );
            });

            var field = _react2.default.createElement(
                'div',
                { className: 'ocb-sf-input-full' },
                _react2.default.createElement(Field, { onSortEnd: this.onSortEnd.bind(this), useDragHandle: true, helperClass: 'ocb-sf-repeater-item-sorting' }),
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-sf-button', onClick: function onClick() {
                            return _this12.addOption();
                        } },
                    'Add Option'
                )
            );

            return this.getWrapped('Options', field);
        }
    }, {
        key: 'addOption',
        value: function addOption() {
            var newOptions = this.state.options;
            newOptions = newOptions.concat('new');
            this.changeValue('options', newOptions);
        }
    }, {
        key: 'deleteOption',
        value: function deleteOption(index) {
            var newOptions = this.state.options;
            newOptions.splice(index, 1);
            this.changeValue('options', newOptions);
        }
    }, {
        key: 'updateOption',
        value: function updateOption(value, index) {
            var _this13 = this;

            var newOptions = this.state.options;
            newOptions[index] = value;
            clearTimeout(this.optionTimer);
            this.optionTimer = setTimeout(function () {
                _this13.changeValue('options', newOptions);
            }, 1500);
        }
    }, {
        key: 'getExpandedFields',
        value: function getExpandedFields(settings) {
            var fields = null;

            switch (settings.type) {
                case 'math':
                case 'honeypot':
                    fields = _react2.default.createElement(
                        'div',
                        { className: 'ocb-sf-input-expanded-fields animated fadeIn' },
                        this.getType(settings.type)
                    );
                    break;
                case 'hidden':
                    fields = _react2.default.createElement(
                        'div',
                        { className: 'ocb-sf-input-expanded-fields animated fadeIn' },
                        this.getType(settings.type),
                        this.getValue(settings.value)
                    );
                    break;
                case 'select':
                case 'radio':
                    fields = _react2.default.createElement(
                        'div',
                        { className: 'ocb-sf-input-expanded-fields animated fadeIn' },
                        this.getType(settings.type),
                        this.getSize(settings.size),
                        this.getSize(settings.mobileSize, 'Mobile Size', 'mobileSize'),
                        this.getLabel(settings.label),
                        this.getDefault(settings.defaultValue),
                        this.getRequired(settings.required),
                        this.getOptions(this.state.options)
                    );
                    break;
                case 'html':
                    fields = _react2.default.createElement(
                        'div',
                        { className: 'ocb-sf-input-expanded-fields animated fadeIn' },
                        this.getType(settings.type),
                        this.getHTML(settings.defaultValue)
                    );
                    break;
                default:
                    fields = _react2.default.createElement(
                        'div',
                        { className: 'ocb-sf-input-expanded-fields animated fadeIn' },
                        this.getType(settings.type),
                        this.getSize(settings.size),
                        this.getSize(settings.mobileSize, 'Mobile Size', 'mobileSize'),
                        this.getPlaceholder(settings.placeholder),
                        this.getLabel(settings.label),
                        this.getDefault(settings.defaultValue),
                        this.getRequired(settings.required)
                    );
            }

            return fields;
        }
    }, {
        key: 'render',
        value: function render() {
            var _this14 = this;

            var settings = this.state;
            var defaultSettings = _settings_helpers2.default.getDefaultFormInput();

            settings = Object.assign(defaultSettings, settings);

            var showButton = null;

            if (this.props.configuration == undefined || this.props.configuration.expandButton !== false) {
                var buttonText = this.state.showFields ? 'Hide Input Options' : 'Show Input Options';
                showButton = _react2.default.createElement(
                    'div',
                    { className: 'ocb-sf-button ocb-sf-button-regular mt-2',
                        onClick: function onClick() {
                            return _this14.setState({ showFields: !_this14.state.showFields });
                        } },
                    buttonText
                );
            }

            var expandedFields = null;

            if (this.state.showFields || this.props.configuration != undefined && this.props.configuration.expandButton == false) {
                expandedFields = this.getExpandedFields(settings);
            }

            return _react2.default.createElement(
                'div',
                { className: 'ocb-sf-input-field' },
                this.getName(settings.name),
                showButton,
                expandedFields
            );
        }
    }]);

    return FormInput;
}(_react.Component);

exports.default = FormInput;

/***/ }),

/***/ 804:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _texteditor = __webpack_require__(73);

var _texteditor2 = _interopRequireDefault(_texteditor);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var FormNotification = function (_Component) {
    _inherits(FormNotification, _Component);

    function FormNotification(props) {
        _classCallCheck(this, FormNotification);

        var _this = _possibleConstructorReturn(this, (FormNotification.__proto__ || Object.getPrototypeOf(FormNotification)).call(this, props));

        _this.state = _extends({}, _this.props.values, { showFields: false });
        return _this;
    }

    _createClass(FormNotification, [{
        key: 'update',
        value: function update(merge) {
            var update = Object.assign(this.state, merge);
            this.props.update(this.props.index, update);
            this.setState(merge);
        }
    }, {
        key: 'updateMessage',
        value: function updateMessage(message) {
            this.update({ message: message });
        }
    }, {
        key: 'getExpandedFields',
        value: function getExpandedFields(settings) {
            var _this2 = this;

            return _react2.default.createElement(
                'div',
                null,
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-sf-row' },
                    _react2.default.createElement(
                        'div',
                        { className: 'ocb-sf-row-label' },
                        'To Email'
                    ),
                    _react2.default.createElement('input', { className: 'ocb-sf-row-input', type: 'text', defaultValue: settings.toEmail, onChange: function onChange(e) {
                            return _this2.update({ toEmail: e.target.value });
                        } })
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-sf-row' },
                    _react2.default.createElement(
                        'div',
                        { className: 'ocb-sf-row-label' },
                        'From Email'
                    ),
                    _react2.default.createElement('input', { className: 'ocb-sf-row-input', type: 'text', defaultValue: settings.fromEmail, onChange: function onChange(e) {
                            return _this2.update({ fromEmail: e.target.value });
                        } })
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-sf-row' },
                    _react2.default.createElement(
                        'div',
                        { className: 'ocb-sf-row-label' },
                        'From Name'
                    ),
                    _react2.default.createElement('input', { className: 'ocb-sf-row-input', type: 'text', defaultValue: settings.fromName, onChange: function onChange(e) {
                            return _this2.update({ fromName: e.target.value });
                        } })
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-sf-row' },
                    _react2.default.createElement(
                        'div',
                        { className: 'ocb-sf-row-label' },
                        'ReplyTo Email'
                    ),
                    _react2.default.createElement('input', { className: 'ocb-sf-row-input', type: 'text', defaultValue: settings.replyToEmail, onChange: function onChange(e) {
                            return _this2.update({ replyToEmail: e.target.value });
                        } })
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-sf-row' },
                    _react2.default.createElement(
                        'div',
                        { className: 'ocb-sf-row-label' },
                        'CC Email'
                    ),
                    _react2.default.createElement('input', { className: 'ocb-sf-row-input', type: 'text', defaultValue: settings.cc, onChange: function onChange(e) {
                            return _this2.update({ cc: e.target.value });
                        } })
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-sf-row' },
                    _react2.default.createElement(
                        'div',
                        { className: 'ocb-sf-row-label' },
                        'Subject'
                    ),
                    _react2.default.createElement('input', { className: 'ocb-sf-row-input', type: 'text', defaultValue: settings.subject, onChange: function onChange(e) {
                            return _this2.update({ subject: e.target.value });
                        } })
                ),
                _react2.default.createElement(
                    'div',
                    null,
                    'Message'
                ),
                _react2.default.createElement(_texteditor2.default, { value: this.state.message, update: this.updateMessage.bind(this) })
            );
        }
    }, {
        key: 'render',
        value: function render() {
            var _this3 = this;

            var settings = this.state;
            var defaultSettings = {
                name: 'Admin',
                toEmail: 'youremail@yourdomain.com',
                replyToEmail: '{{Email}}',
                fromEmail: 'contact@yourdomain.com',
                fromName: '{{Name}}',
                subject: 'New Contact Form Submission from {{Name}}',
                message: '{{All}}'
            };

            settings = Object.assign(defaultSettings, settings);

            var showButton = null;

            if (this.props.configuration == undefined || this.props.configuration.expandButton !== false) {
                var buttonText = this.state.showFields ? 'Hide Notification Options' : 'Show Notification Options';
                showButton = _react2.default.createElement(
                    'div',
                    { className: 'ocb-sf-button ocb-sf-button-regular mt-2',
                        onClick: function onClick() {
                            return _this3.setState({ showFields: !_this3.state.showFields });
                        } },
                    buttonText
                );
            }

            var expandedFields = null;

            if (this.state.showFields || this.props.configuration != undefined && this.props.configuration.expandButton == false) {
                expandedFields = this.getExpandedFields(settings);
            }

            return _react2.default.createElement(
                'div',
                { className: 'ocb-sf-form-notification' },
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-sf-row' },
                    _react2.default.createElement(
                        'div',
                        { className: 'ocb-sf-row-label' },
                        'Name'
                    ),
                    _react2.default.createElement('input', { className: 'ocb-sf-row-input', type: 'text', defaultValue: settings.name, onChange: function onChange(e) {
                            return _this3.update({ name: e.target.value });
                        } })
                ),
                showButton,
                expandedFields
            );
        }
    }]);

    return FormNotification;
}(_react.Component);

exports.default = FormNotification;

/***/ }),

/***/ 805:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactRedux = __webpack_require__(5);

var _redux = __webpack_require__(7);

var _reactSortableHoc = __webpack_require__(71);

var _settings_helpers = __webpack_require__(2);

var _settings_helpers2 = _interopRequireDefault(_settings_helpers);

var _form_input = __webpack_require__(803);

var _form_input2 = _interopRequireDefault(_form_input);

var _form_notification = __webpack_require__(804);

var _form_notification2 = _interopRequireDefault(_form_notification);

var _texteditor = __webpack_require__(73);

var _texteditor2 = _interopRequireDefault(_texteditor);

var _link = __webpack_require__(169);

var _link2 = _interopRequireDefault(_link);

var _api_helpers = __webpack_require__(6);

var _api_helpers2 = _interopRequireDefault(_api_helpers);

var _app_overlay = __webpack_require__(13);

var _app_overlay2 = _interopRequireDefault(_app_overlay);

var _index = __webpack_require__(8);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var SortableInputHandle = (0, _reactSortableHoc.SortableHandle)(function () {
    return _react2.default.createElement(
        'div',
        { className: 'ocb-sf-move-handle d-flex align-items-center' },
        _react2.default.createElement('i', { className: 'fa fa-ellipsis-v' })
    );
});

var SortableInput = (0, _reactSortableHoc.SortableElement)(function (_ref) {
    var index = _ref.index,
        theIndex = _ref.theIndex,
        input = _ref.input,
        classThis = _ref.classThis;

    return _react2.default.createElement(
        'div',
        { key: theIndex, className: 'ocb-sf-form-input d-flex' },
        _react2.default.createElement(SortableInputHandle, null),
        _react2.default.createElement(_form_input2.default, { key: theIndex, values: input, index: theIndex, update: classThis.updateFormFields.bind(classThis) }),
        _react2.default.createElement(
            'div',
            { className: 'ocb-sf-form-field-delete d-flex align-items-center', onClick: function onClick() {
                    return classThis.deleteField(theIndex);
                } },
            _react2.default.createElement('i', { className: 'fa fa-remove' })
        )
    );
});

var SortableInputs = (0, _reactSortableHoc.SortableContainer)(function (_ref2) {
    var inputs = _ref2.inputs,
        classThis = _ref2.classThis;

    return _react2.default.createElement(
        'div',
        null,
        inputs.map(function (input, theIndex) {
            return _react2.default.createElement(SortableInput, { key: theIndex, theIndex: theIndex, index: theIndex, classThis: classThis, input: input });
        })
    );
});

var FormsField = function (_Component) {
    _inherits(FormsField, _Component);

    function FormsField(props) {
        _classCallCheck(this, FormsField);

        var _this = _possibleConstructorReturn(this, (FormsField.__proto__ || Object.getPrototypeOf(FormsField)).call(this, props));

        _this.state = _extends({}, _this.props.values, {
            forms: [],
            activeForm: false,
            activePanels: [],
            refreshFields: false
        });

        _this.optionTimer = false;
        return _this;
    }

    _createClass(FormsField, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            this.getAllForms();
        }
    }, {
        key: 'componentDidUpdate',
        value: function componentDidUpdate() {
            if (this.state.refreshFields) this.setState({ refreshFields: false });
        }
    }, {
        key: 'getAllForms',
        value: function getAllForms() {
            var _this2 = this;

            //Get all forms through the API and update state
            var forms = _api_helpers2.default.doRequest('getCustom', {
                post_type: 'ocb_form',
                withMeta: ['ocb_form_config'],
                status: 'any'
            });

            forms.then(function (result) {
                _this2.setState({ forms: result });
            }).catch(function (error) {
                _this2.setState({ forms: [] });
            });
        }
    }, {
        key: 'update',
        value: function update(merge) {
            var theState = Object.assign({}, this.state);
            delete theState.forms;
            delete theState.activeForm;
            delete theState.activePanels;
            delete theState.refreshFields;
            delete theState.revert_title;
            delete theState.revert_form;
            var update = Object.assign(theState, merge);
            this.props.appFunctions.fieldUpdate(this.props.field.id, update, this.props);
            this.setState(merge);
        }
    }, {
        key: 'changeValue',
        value: function changeValue(key, newValue) {
            this.update(_defineProperty({}, key, newValue));
        }
    }, {
        key: 'addForm',
        value: function addForm() {
            var _this3 = this;

            var newForm = _api_helpers2.default.doRequest('createCustom', {
                post_type: 'ocb_form',
                title: 'New Form',
                status: 'publish'
            });

            newForm.then(function (result, error) {
                var form = _api_helpers2.default.doRequest('getCustom', {
                    id: result.id,
                    post_type: 'ocb_form',
                    withMeta: ['ocb_form_config']
                });
                form.then(function (theForm, error) {
                    _this3.getAllForms();
                }).catch(function (error) {
                    alert('Could retrieve new form');
                });
            }).catch(function (error) {
                alert('Could not add form');
            });
        }
    }, {
        key: 'saveForm',
        value: function saveForm() {
            var _this4 = this;

            var updateForm = _settings_helpers2.default.saveForm(this.props.appFunctions.currentlyEditing.id, this.state.form_id, this.state.form_title, this.state.form);

            updateForm.then(function (result, error) {
                _this4.setState({
                    activePanels: _this4.state.activePanels.filter(function (each) {
                        return 'editForm' != each;
                    })
                });
                _this4.getAllForms();
            });
        }
    }, {
        key: 'deleteForm',
        value: function deleteForm(formId) {
            var _this5 = this;

            var action = _api_helpers2.default.doRequest('deleteCustom', { post_id: formId });
            action.then(function (response, error) {
                //update the chosen form if it is the form that was just deleted
                if (_this5.state.activeForm == formId) {
                    _this5.update({
                        form: {
                            inputs: [],
                            notifications: [],
                            submit: {
                                type: 'message',
                                message: 'Thanks! We will be in touch shortly.',
                                url: ''
                            }
                        },
                        form_id: false,
                        form_title: ''
                    });
                }
                _this5.getAllForms();
            });
        }
    }, {
        key: 'maybeDeleteForm',
        value: function maybeDeleteForm(formId) {
            var r = confirm('Are you sure you want to delete this form? This will affect ALL pages using this form!');
            if (r == true) {
                this.deleteForm(formId);
            }
        }
    }, {
        key: 'removeActivePanel',
        value: function removeActivePanel(panel) {
            var _this6 = this;

            if (panel == 'editForm') {
                //Revert the form - if it has been saved, this function isn't run for editForm
                //Use of this.update() is effectively the same as setState as far as closing the panel
                var overlayOptions = [{
                    classes: 'ocb-success',
                    onClick: function onClick() {
                        return _this6.doSave();
                    },
                    text: 'Save'
                }, {
                    classes: 'ocb-danger',
                    onClick: function onClick() {
                        return _this6.doRevert(panel);
                    },
                    text: 'Revert'
                }];

                var overlay = _react2.default.createElement(_app_overlay2.default, {
                    title: 'Save Form?',
                    content: 'Save any changes you\'ve made to the form',
                    stacked: '1',
                    overlayStyle: 'small',
                    options: overlayOptions
                });

                this.props.updateAppState('overlay', overlay);
            } else {
                this.setState({
                    activePanels: this.state.activePanels.filter(function (each) {
                        return panel != each;
                    })
                });
            }
        }
    }, {
        key: 'doSave',
        value: function doSave() {
            this.saveForm();
            this.props.updateAppState('overlay', null);
        }
    }, {
        key: 'doRevert',
        value: function doRevert(panel) {
            this.update({
                form: this.state.revert_form,
                form_title: this.state.revert_title,
                activePanels: this.state.activePanels.filter(function (each) {
                    return panel != each;
                })
            });
            this.props.updateAppState('overlay', null);
        }
    }, {
        key: 'getPanelTitle',
        value: function getPanelTitle(panel) {
            var title = panel;
            switch (panel) {
                case 'editForm':
                    title = 'Edit form: ' + this.state.form_title;
                    break;
                case 'editFormFields':
                    title = 'Edit fields for ' + this.state.form_title;
                    break;
                case 'editFormNotifications':
                    title = 'Edit notifications for ' + this.state.form_title;
                    break;
                case 'editFormNotification':
                    title = 'Edit notification for ' + this.state.form_title;
                    break;
                case 'editFormSubmitAction':
                    title = 'Edit submit action for ' + this.state.form_title;
                    break;
                case 'editFormSettings':
                    title = 'Edit settings for ' + this.state.form_title;
                    break;
            }
            return title;
        }
    }, {
        key: 'getPanel',
        value: function getPanel(panel, content) {
            var _this7 = this;

            var depth = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 2;

            return _react2.default.createElement(
                'div',
                { className: 'ocb-sf-panel-items ocb-sf-panel-depth-' + depth + ' animated fast fadeInLeft' },
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-sf-panel-back mb-2 d-flex align-items-center', onClick: function onClick() {
                            return _this7.removeActivePanel(panel);
                        } },
                    _react2.default.createElement('i', { className: 'fa fa-chevron-left' }),
                    _react2.default.createElement(
                        'span',
                        { className: 'ocb-sf-panel-title' },
                        this.getPanelTitle(panel)
                    )
                ),
                content
            );
        }
    }, {
        key: 'updateActiveForm',
        value: function updateActiveForm(id) {
            var edit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

            var form = this.state.forms.find(function (form) {
                return form.ID == id;
            });
            var theForm = form.meta.ocb_form_config ? form.meta.ocb_form_config : _settings_helpers2.default.getDefaultForm();
            this.update({
                activeForm: form.ID,
                form_id: form.ID,
                form_title: form.post_title,
                form: JSON.parse(JSON.stringify(theForm)),
                revert_title: form.post_title,
                revert_form: JSON.parse(JSON.stringify(theForm)), //copy the form object so that it isn't somehow linked to state.form
                activePanels: edit ? this.state.activePanels.concat('editForm') : this.state.activePanels
            });
        }
    }, {
        key: 'getForms',
        value: function getForms() {
            var _this8 = this;

            //Get all the forms
            //Add, delete
            if (!this.state.forms || !this.state.forms.length) {
                return _react2.default.createElement(
                    'div',
                    { className: 'mt-2 mb-3' },
                    'There are no forms. Please create one using the button below.'
                );
            }

            return this.state.forms.map(function (form, index) {
                var active = _this8.state.form_id == form.ID ? 'active' : '';

                return _react2.default.createElement(
                    'div',
                    { key: index, className: 'ocb-sf-form ocb-sf-external-post-list d-flex align-items-center' },
                    _react2.default.createElement('i', { className: 'fa fa-check p-3 ocb-sf-cursor-pointer ' + active, onClick: function onClick() {
                            return _this8.updateActiveForm(form.ID);
                        } }),
                    _react2.default.createElement(
                        'div',
                        { className: 'ocb-sf-form-title pt-3 pb-3 ocb-sf-cursor-pointer', onClick: function onClick() {
                                return _this8.updateActiveForm(form.ID);
                            } },
                        form.post_title
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'ml-auto ocb-sf-icons-block' },
                        _react2.default.createElement('i', { className: 'fa fa-pencil p-3 ocb-sf-cursor-pointer', onClick: function onClick() {
                                return _this8.updateActiveForm(form.ID, true);
                            } }),
                        _react2.default.createElement('i', { className: 'fa fa-remove p-3 ocb-sf-cursor-pointer', onClick: function onClick() {
                                return _this8.maybeDeleteForm(form.ID);
                            } })
                    )
                );
            });
        }
    }, {
        key: 'editFormTitle',
        value: function editFormTitle(value) {
            var _this9 = this;

            clearTimeout(this.optionTimer);
            this.optionTimer = setTimeout(function () {
                _this9.update({ form_title: value });
            }, 300);
        }
    }, {
        key: 'editForm',
        value: function editForm() {
            var _this10 = this;

            if (!this.state.activeForm || !this.state.activePanels.includes('editForm')) return null;

            //When this is closed, we either need to revert or save the form

            var panelContent = _react2.default.createElement(
                'div',
                { className: 'ocb-sf-form-controls' },
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-sf-row p-3' },
                    _react2.default.createElement(
                        'div',
                        { className: 'ocb-sf-row-label' },
                        'Form Title'
                    ),
                    _react2.default.createElement('input', { className: 'ocb-sf-row-input', type: 'text', defaultValue: this.state.form_title, onChange: function onChange(e) {
                            return _this10.editFormTitle(e.target.value);
                        } })
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-sf-form-edit ocb-sf-cursor-pointer d-flex align-items-center p-3', onClick: function onClick() {
                            return _this10.setState({ activePanels: _this10.state.activePanels.concat('editFormFields') });
                        } },
                    _react2.default.createElement(
                        'span',
                        null,
                        'Edit Form Fields'
                    ),
                    _react2.default.createElement('i', { className: 'fa fa-chevron-right ml-auto' })
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-sf-form-edit ocb-sf-cursor-pointer d-flex align-items-center p-3', onClick: function onClick() {
                            return _this10.setState({ activePanels: _this10.state.activePanels.concat('editFormNotifications') });
                        } },
                    _react2.default.createElement(
                        'span',
                        null,
                        'Edit Form Notifications'
                    ),
                    _react2.default.createElement('i', { className: 'fa fa-chevron-right ml-auto' })
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-sf-form-edit ocb-sf-cursor-pointer d-flex align-items-center p-3', onClick: function onClick() {
                            return _this10.setState({ activePanels: _this10.state.activePanels.concat('editFormSettings') });
                        } },
                    _react2.default.createElement(
                        'span',
                        null,
                        'Edit Form Settings'
                    ),
                    _react2.default.createElement('i', { className: 'fa fa-chevron-right ml-auto' })
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-sf-form-edit ocb-sf-cursor-pointer d-flex align-items-center p-3', onClick: function onClick() {
                            return _this10.setState({ activePanels: _this10.state.activePanels.concat('editFormSubmitAction') });
                        } },
                    _react2.default.createElement(
                        'span',
                        null,
                        'Edit Form Submit Action'
                    ),
                    _react2.default.createElement('i', { className: 'fa fa-chevron-right ml-auto' })
                )
            );

            return this.getPanel('editForm', panelContent);
        }
    }, {
        key: 'onFieldSortEnd',
        value: function onFieldSortEnd(_ref3) {
            var oldIndex = _ref3.oldIndex,
                newIndex = _ref3.newIndex;

            var newOrder = (0, _reactSortableHoc.arrayMove)(this.state.form.inputs, oldIndex, newIndex);
            var currentForm = this.state.form;
            currentForm.inputs = newOrder;
            this.update({ form: currentForm, refreshFields: true });
        }
    }, {
        key: 'deleteField',
        value: function deleteField(index) {
            var currentForm = this.state.form;
            currentForm.inputs.splice(index, 1);
            this.update({ form: currentForm, refreshFields: true });
        }
    }, {
        key: 'addFormField',
        value: function addFormField() {
            var currentForm = this.state.form;
            currentForm.inputs = currentForm.inputs.concat(_settings_helpers2.default.getDefaultFormInput());
            this.update({ form: currentForm, refreshFields: true });
        }
    }, {
        key: 'updateFormFields',
        value: function updateFormFields(index, fields) {
            var currentFields = this.state.form.inputs;
            currentFields[index] = fields;
            var currentForm = this.state.form;
            currentForm.inputs = currentFields;
            this.update({ form: currentForm });
        }
    }, {
        key: 'editFormFields',
        value: function editFormFields() {
            var _this11 = this;

            if (!this.state.activeForm || !this.state.activePanels.includes('editFormFields')) return null;

            var panelContent = null;

            //Need this refreshFields because even though the state was accurate, the fields weren't showing as sorted or properly deleted
            //Also need SortableInputs in its own component above because when it was being created in this function,
            // any update would refresh FormInput state to the point where you could only enter one letter at a time
            if (!this.state.refreshFields) {
                panelContent = _react2.default.createElement(
                    'div',
                    { className: 'ocb-sf-form-fields' },
                    _react2.default.createElement(SortableInputs, { onSortEnd: this.onFieldSortEnd.bind(this), useDragHandle: true, inputs: this.state.form.inputs, classThis: this }),
                    _react2.default.createElement(
                        'div',
                        { className: 'm-3' },
                        _react2.default.createElement(
                            'div',
                            { className: 'ocb-sf-button', onClick: function onClick() {
                                    return _this11.addFormField();
                                } },
                            'Add Field'
                        )
                    )
                );
            }

            return this.getPanel('editFormFields', panelContent, 3);
        }
    }, {
        key: 'addFormNotification',
        value: function addFormNotification() {
            var currentForm = this.state.form;
            if (currentForm.notifications == undefined) currentForm.notifications = [];
            currentForm.notifications = currentForm.notifications.concat({
                name: 'Admin',
                toEmail: 'youremail@yourdomain.com',
                replyToEmail: '{{Email}}',
                fromEmail: 'contact@yourdomain.com',
                fromName: '{{Name}}',
                cc: '',
                subject: 'New Contact Form Submission from {{Name}}',
                message: '{{All}}'
            });
            this.update({ form: currentForm });
        }
    }, {
        key: 'deleteFormNotification',
        value: function deleteFormNotification(index) {
            var currentForm = this.state.form;
            currentForm.notifications.splice(index, 1);
            this.update({ form: currentForm });
        }
    }, {
        key: 'updateFormNotifications',
        value: function updateFormNotifications(index, notification) {
            var currentFields = this.state.form.notifications;
            currentFields[index] = notification;
            var currentForm = this.state.form;
            currentForm.notifications = currentFields;
            this.update({ form: currentForm });
        }
    }, {
        key: 'getVariablesNote',
        value: function getVariablesNote() {
            var variables = this.state.form.inputs.map(function (field, index) {
                return _react2.default.createElement(
                    'div',
                    { key: index },
                    '{{' + field.name + '}}'
                );
            });

            return _react2.default.createElement(
                'div',
                { className: 'ocb-sf-form-notification-variables m-3' },
                _react2.default.createElement(
                    'p',
                    null,
                    _react2.default.createElement(
                        'strong',
                        null,
                        'Available Variables:'
                    )
                ),
                _react2.default.createElement(
                    'p',
                    null,
                    'These variables can be used to reference values submitted in the form.'
                ),
                _react2.default.createElement(
                    'div',
                    null,
                    '{{All}}'
                ),
                variables
            );
        }
    }, {
        key: 'editFormNotifications',
        value: function editFormNotifications() {
            var _this12 = this;

            if (!this.state.activeForm || !this.state.activePanels.includes('editFormNotifications')) return null;

            var panelContent = _react2.default.createElement(
                'div',
                { className: 'm-3' },
                'Add a notification using the button below:'
            );

            if (this.state.form.notifications != undefined && this.state.form.notifications.length) {

                panelContent = this.state.form.notifications.map(function (notification, index) {
                    return _react2.default.createElement(
                        'div',
                        { key: index, className: 'ocb-sf-form-notification-wrap d-flex' },
                        _react2.default.createElement(_form_notification2.default, { values: notification, index: index, message: notification.message, update: _this12.updateFormNotifications.bind(_this12) }),
                        _react2.default.createElement(
                            'div',
                            { className: 'ocb-sf-form-field-delete d-flex align-items-center', onClick: function onClick() {
                                    return _this12.deleteFormNotification(index);
                                } },
                            _react2.default.createElement('i', { className: 'fa fa-remove' })
                        )
                    );
                });
            }

            panelContent = _react2.default.createElement(
                'div',
                { className: 'ocb-sf-form-notifications' },
                this.getVariablesNote(),
                panelContent,
                _react2.default.createElement(
                    'div',
                    { className: 'm-3' },
                    _react2.default.createElement(
                        'div',
                        { className: 'ocb-sf-button', onClick: function onClick() {
                                return _this12.addFormNotification();
                            } },
                        'Add Notification'
                    )
                )
            );

            return this.getPanel('editFormNotifications', panelContent, 3);
        }
    }, {
        key: 'updateSubmitAction',
        value: function updateSubmitAction(key, value) {
            this.setState({
                form: _extends({}, this.state.form, {
                    submit: _extends({}, this.state.form.submit, _defineProperty({}, key, value))
                })
            });
        }
    }, {
        key: 'updateSubmitMessage',
        value: function updateSubmitMessage(value) {
            this.updateSubmitAction('message', value);
        }
    }, {
        key: 'editFormSubmitAction',
        value: function editFormSubmitAction() {
            var _this13 = this;

            if (!this.state.activeForm || !this.state.activePanels.includes('editFormSubmitAction')) return null;

            var action = null;
            var type = this.state.form.submit != undefined && this.state.form.submit.type != undefined ? this.state.form.submit.type : 'message';

            if (this.state.form.submit != undefined && this.state.form.submit.type == 'redirect') {
                action = _react2.default.createElement(
                    'div',
                    { className: 'mt-3' },
                    _react2.default.createElement(_link2.default, { values: { url: this.state.form.submit.url }, update: function update(url) {
                            return _this13.updateSubmitAction('url', url.url);
                        } })
                );
            } else {
                var message = this.state.form.submit != undefined && this.state.form.submit.message != undefined ? this.state.form.submit.message : '';
                action = _react2.default.createElement(
                    'div',
                    { className: 'mt-3' },
                    this.getVariablesNote(),
                    _react2.default.createElement(_texteditor2.default, { value: message, update: this.updateSubmitMessage.bind(this) })
                );
            }

            var panelContent = _react2.default.createElement(
                'div',
                { className: 'm-3' },
                _react2.default.createElement(
                    'select',
                    { onChange: function onChange(e) {
                            return _this13.updateSubmitAction('type', e.target.value);
                        }, defaultValue: type },
                    _react2.default.createElement(
                        'option',
                        { value: 'message' },
                        'Message'
                    ),
                    _react2.default.createElement(
                        'option',
                        { value: 'redirect' },
                        'Redirect'
                    )
                ),
                action
            );

            return this.getPanel('editFormSubmitAction', panelContent, 3);
        }
    }, {
        key: 'updateFormSetting',
        value: function updateFormSetting(key, value) {
            this.update({
                form: _extends({}, this.state.form, {
                    settings: _extends({}, this.state.form.settings, _defineProperty({}, key, value))
                })
            });
        }
    }, {
        key: 'editFormSettings',
        value: function editFormSettings() {
            var _this14 = this;

            if (!this.state.activeForm || !this.state.activePanels.includes('editFormSettings')) return null;

            var title = this.state.form.settings != undefined && this.state.form.settings.title != undefined ? this.state.form.settings.title : 'Form Submission From {{Name}}';
            var submitText = this.state.form.settings != undefined && this.state.form.settings.submitText != undefined ? this.state.form.settings.submitText : 'Submit';

            var panelContent = _react2.default.createElement(
                'div',
                { className: 'mt-3' },
                this.getVariablesNote(),
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-sf-row m-3' },
                    _react2.default.createElement(
                        'div',
                        { className: 'ocb-sf-row-label' },
                        'Form Submission Post Title'
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'ocb-sf-row-input' },
                        _react2.default.createElement('input', { type: 'text', defaultValue: title, onChange: function onChange(e) {
                                return _this14.updateFormSetting('title', e.target.value);
                            } })
                    )
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-sf-row m-3' },
                    _react2.default.createElement(
                        'div',
                        { className: 'ocb-sf-row-label' },
                        'Submit Button Text'
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'ocb-sf-row-input' },
                        _react2.default.createElement('input', { type: 'text', defaultValue: submitText, onChange: function onChange(e) {
                                return _this14.updateFormSetting('submitText', e.target.value);
                            } })
                    )
                )
            );

            return this.getPanel('editFormSettings', panelContent, 3);
        }
    }, {
        key: 'render',
        value: function render() {
            var _this15 = this;

            return _react2.default.createElement(
                'div',
                { className: 'ocb-sf-forms-field' },
                this.getForms(),
                this.editForm(),
                this.editFormFields(),
                this.editFormNotifications(),
                this.editFormSettings(),
                this.editFormSubmitAction(),
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-sf-button', onClick: function onClick() {
                            return _this15.addForm();
                        } },
                    'Add Form'
                )
            );
        }
    }]);

    return FormsField;
}(_react.Component);

function mapDispatchToProps(dispatch) {
    return (0, _redux.bindActionCreators)({ updateAppState: _index.updateAppState }, dispatch);
}

exports.default = (0, _reactRedux.connect)(null, mapDispatchToProps)(FormsField);

/***/ }),

/***/ 806:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var GoogleFontField = function (_Component) {
    _inherits(GoogleFontField, _Component);

    _createClass(GoogleFontField, [{
        key: 'getGoogleFontArray',
        value: function getGoogleFontArray() {
            return [{ name: 'default', variants: ['none'], category: 'sans-serif', source: 'builtIn' }, { name: 'Arial', variants: ['300', 'regular', '700'], category: 'sans-serif', source: 'builtIn' }, { name: 'Arial Black', variants: ['regular'], category: 'sans-serif', source: 'builtIn' }, { name: 'Comic Sans MS', variants: ['regular'], category: 'sans-serif', source: 'builtIn' }, { name: 'Impact', variants: ['regular'], category: 'sans-serif', source: 'builtIn' }, { name: 'Lucida Sans Unicode', variants: ['300', 'regular', '700'], category: 'sans-serif', source: 'builtIn' }, { name: 'Tahoma', variants: ['300', 'regular', '700'], category: 'sans-serif', source: 'builtIn' }, { name: 'Trebuchet MS', variants: ['300', 'regular', '700'], category: 'sans-serif', source: 'builtIn' }, { name: 'Verdana', variants: ['300', 'regular', '700'], category: 'sans-serif', source: 'builtIn' }, { name: 'Georgia', variants: ['300', 'regular', '700'], category: 'serif', source: 'builtIn' }, { name: 'Palatino Linotype', variants: ['300', 'regular', '700'], category: 'serif', source: 'builtIn' }, { name: 'Times New Roman', variants: ['300', 'regular', '700'], category: 'serif', source: 'builtIn' }, { name: 'Courier New', variants: ['regular'], category: 'monospace', source: 'builtIn' }, { name: 'Lucida Console', variants: ['regular'], category: 'monospace', source: 'builtIn' }, { name: 'ABeeZee', variants: ['regular', 'italic'], category: 'sans-serif' }, { name: 'Abel', variants: ['regular'], category: 'sans-serif' }, { name: 'Abhaya Libre', variants: ['regular', '500', '600', '700', '800'], category: 'serif' }, { name: 'Abril Fatface', variants: ['regular'], category: 'display' }, { name: 'Aclonica', variants: ['regular'], category: 'sans-serif' }, { name: 'Acme', variants: ['regular'], category: 'sans-serif' }, { name: 'Actor', variants: ['regular'], category: 'sans-serif' }, { name: 'Adamina', variants: ['regular'], category: 'serif' }, { name: 'Advent Pro', variants: ['100', '200', '300', 'regular', '500', '600', '700'], category: 'sans-serif' }, { name: 'Aguafina Script', variants: ['regular'], category: 'handwriting' }, { name: 'Akronim', variants: ['regular'], category: 'display' }, { name: 'Aladin', variants: ['regular'], category: 'handwriting' }, { name: 'Aldrich', variants: ['regular'], category: 'sans-serif' }, { name: 'Alef', variants: ['regular', '700'], category: 'sans-serif' }, { name: 'Alegreya', variants: ['regular', 'italic', '700', '700italic', '900', '900italic'], category: 'serif' }, { name: 'Alegreya SC', variants: ['regular', 'italic', '700', '700italic', '900', '900italic'], category: 'serif' }, { name: 'Alegreya Sans', variants: ['100', '100italic', '300', '300italic', 'regular', 'italic', '500', '500italic', '700', '700italic', '800', '800italic', '900', '900italic'], category: 'sans-serif' }, { name: 'Alegreya Sans SC', variants: ['100', '100italic', '300', '300italic', 'regular', 'italic', '500', '500italic', '700', '700italic', '800', '800italic', '900', '900italic'], category: 'sans-serif' }, { name: 'Alex Brush', variants: ['regular'], category: 'handwriting' }, { name: 'Alfa Slab One', variants: ['regular'], category: 'display' }, { name: 'Alice', variants: ['regular'], category: 'serif' }, { name: 'Alike', variants: ['regular'], category: 'serif' }, { name: 'Alike Angular', variants: ['regular'], category: 'serif' }, { name: 'Allan', variants: ['regular', '700'], category: 'display' }, { name: 'Allerta', variants: ['regular'], category: 'sans-serif' }, { name: 'Allerta Stencil', variants: ['regular'], category: 'sans-serif' }, { name: 'Allura', variants: ['regular'], category: 'handwriting' }, { name: 'Almendra', variants: ['regular', 'italic', '700', '700italic'], category: 'serif' }, { name: 'Almendra Display', variants: ['regular'], category: 'display' }, { name: 'Almendra SC', variants: ['regular'], category: 'serif' }, { name: 'Amarante', variants: ['regular'], category: 'display' }, { name: 'Amaranth', variants: ['regular', 'italic', '700', '700italic'], category: 'sans-serif' }, { name: 'Amatic SC', variants: ['regular', '700'], category: 'handwriting' }, { name: 'Amatica SC', variants: ['regular', '700'], category: 'display' }, { name: 'Amethysta', variants: ['regular'], category: 'serif' }, { name: 'Amiko', variants: ['regular', '600', '700'], category: 'sans-serif' }, { name: 'Amiri', variants: ['regular', 'italic', '700', '700italic'], category: 'serif' }, { name: 'Amita', variants: ['regular', '700'], category: 'handwriting' }, { name: 'Anaheim', variants: ['regular'], category: 'sans-serif' }, { name: 'Andada', variants: ['regular'], category: 'serif' }, { name: 'Andika', variants: ['regular'], category: 'sans-serif' }, { name: 'Angkor', variants: ['regular'], category: 'display' }, { name: 'Annie Use Your Telescope', variants: ['regular'], category: 'handwriting' }, { name: 'Anonymous Pro', variants: ['regular', 'italic', '700', '700italic'], category: 'monospace' }, { name: 'Antic', variants: ['regular'], category: 'sans-serif' }, { name: 'Antic Didone', variants: ['regular'], category: 'serif' }, { name: 'Antic Slab', variants: ['regular'], category: 'serif' }, { name: 'Anton', variants: ['regular'], category: 'sans-serif' }, { name: 'Arapey', variants: ['regular', 'italic'], category: 'serif' }, { name: 'Arbutus', variants: ['regular'], category: 'display' }, { name: 'Arbutus Slab', variants: ['regular'], category: 'serif' }, { name: 'Architects Daughter', variants: ['regular'], category: 'handwriting' }, { name: 'Archivo', variants: ['regular', 'italic', '500', '500italic', '600', '600italic', '700', '700italic'], category: 'sans-serif' }, { name: 'Archivo Black', variants: ['regular'], category: 'sans-serif' }, { name: 'Archivo Narrow', variants: ['regular', 'italic', '500', '500italic', '600', '600italic', '700', '700italic'], category: 'sans-serif' }, { name: 'Aref Ruqaa', variants: ['regular', '700'], category: 'serif' }, { name: 'Arima Madurai', variants: ['100', '200', '300', 'regular', '500', '700', '800', '900'], category: 'display' }, { name: 'Arimo', variants: ['regular', 'italic', '700', '700italic'], category: 'sans-serif' }, { name: 'Arizonia', variants: ['regular'], category: 'handwriting' }, { name: 'Armata', variants: ['regular'], category: 'sans-serif' }, { name: 'Arsenal', variants: ['regular', 'italic', '700', '700italic'], category: 'sans-serif' }, { name: 'Artifika', variants: ['regular'], category: 'serif' }, { name: 'Arvo', variants: ['regular', 'italic', '700', '700italic'], category: 'serif' }, { name: 'Arya', variants: ['regular', '700'], category: 'sans-serif' }, { name: 'Asap', variants: ['regular', 'italic', '500', '500italic', '600', '600italic', '700', '700italic'], category: 'sans-serif' }, { name: 'Asap Condensed', variants: ['regular', 'italic', '500', '500italic', '600', '600italic', '700', '700italic'], category: 'sans-serif' }, { name: 'Asar', variants: ['regular'], category: 'serif' }, { name: 'Asset', variants: ['regular'], category: 'display' }, { name: 'Assistant', variants: ['200', '300', 'regular', '600', '700', '800'], category: 'sans-serif' }, { name: 'Astloch', variants: ['regular', '700'], category: 'display' }, { name: 'Asul', variants: ['regular', '700'], category: 'sans-serif' }, { name: 'Athiti', variants: ['200', '300', 'regular', '500', '600', '700'], category: 'sans-serif' }, { name: 'Atma', variants: ['300', 'regular', '500', '600', '700'], category: 'display' }, { name: 'Atomic Age', variants: ['regular'], category: 'display' }, { name: 'Aubrey', variants: ['regular'], category: 'display' }, { name: 'Audiowide', variants: ['regular'], category: 'display' }, { name: 'Autour One', variants: ['regular'], category: 'display' }, { name: 'Average', variants: ['regular'], category: 'serif' }, { name: 'Average Sans', variants: ['regular'], category: 'sans-serif' }, { name: 'Averia Gruesa Libre', variants: ['regular'], category: 'display' }, { name: 'Averia Libre', variants: ['300', '300italic', 'regular', 'italic', '700', '700italic'], category: 'display' }, { name: 'Averia Sans Libre', variants: ['300', '300italic', 'regular', 'italic', '700', '700italic'], category: 'display' }, { name: 'Averia Serif Libre', variants: ['300', '300italic', 'regular', 'italic', '700', '700italic'], category: 'display' }, { name: 'Bad Script', variants: ['regular'], category: 'handwriting' }, { name: 'Bahiana', variants: ['regular'], category: 'display' }, { name: 'Baloo', variants: ['regular'], category: 'display' }, { name: 'Baloo Bhai', variants: ['regular'], category: 'display' }, { name: 'Baloo Bhaijaan', variants: ['regular'], category: 'display' }, { name: 'Baloo Bhaina', variants: ['regular'], category: 'display' }, { name: 'Baloo Chettan', variants: ['regular'], category: 'display' }, { name: 'Baloo Da', variants: ['regular'], category: 'display' }, { name: 'Baloo Paaji', variants: ['regular'], category: 'display' }, { name: 'Baloo Tamma', variants: ['regular'], category: 'display' }, { name: 'Baloo Tammudu', variants: ['regular'], category: 'display' }, { name: 'Baloo Thambi', variants: ['regular'], category: 'display' }, { name: 'Balthazar', variants: ['regular'], category: 'serif' }, { name: 'Bangers', variants: ['regular'], category: 'display' }, { name: 'Barrio', variants: ['regular'], category: 'display' }, { name: 'Basic', variants: ['regular'], category: 'sans-serif' }, { name: 'Battambang', variants: ['regular', '700'], category: 'display' }, { name: 'Baumans', variants: ['regular'], category: 'display' }, { name: 'Bayon', variants: ['regular'], category: 'display' }, { name: 'Belgrano', variants: ['regular'], category: 'serif' }, { name: 'Bellefair', variants: ['regular'], category: 'serif' }, { name: 'Belleza', variants: ['regular'], category: 'sans-serif' }, { name: 'BenchNine', variants: ['300', 'regular', '700'], category: 'sans-serif' }, { name: 'Bentham', variants: ['regular'], category: 'serif' }, { name: 'Berkshire Swash', variants: ['regular'], category: 'handwriting' }, { name: 'Bevan', variants: ['regular'], category: 'display' }, { name: 'Bigelow Rules', variants: ['regular'], category: 'display' }, { name: 'Bigshot One', variants: ['regular'], category: 'display' }, { name: 'Bilbo', variants: ['regular'], category: 'handwriting' }, { name: 'Bilbo Swash Caps', variants: ['regular'], category: 'handwriting' }, { name: 'BioRhyme', variants: ['200', '300', 'regular', '700', '800'], category: 'serif' }, { name: 'BioRhyme Expanded', variants: ['200', '300', 'regular', '700', '800'], category: 'serif' }, { name: 'Biryani', variants: ['200', '300', 'regular', '600', '700', '800', '900'], category: 'sans-serif' }, { name: 'Bitter', variants: ['regular', 'italic', '700'], category: 'serif' }, { name: 'Black Ops One', variants: ['regular'], category: 'display' }, { name: 'Bokor', variants: ['regular'], category: 'display' }, { name: 'Bonbon', variants: ['regular'], category: 'handwriting' }, { name: 'Boogaloo', variants: ['regular'], category: 'display' }, { name: 'Bowlby One', variants: ['regular'], category: 'display' }, { name: 'Bowlby One SC', variants: ['regular'], category: 'display' }, { name: 'Brawler', variants: ['regular'], category: 'serif' }, { name: 'Bree Serif', variants: ['regular'], category: 'serif' }, { name: 'Bubblegum Sans', variants: ['regular'], category: 'display' }, { name: 'Bubbler One', variants: ['regular'], category: 'sans-serif' }, { name: 'Buda', variants: ['300'], category: 'display' }, { name: 'Buenard', variants: ['regular', '700'], category: 'serif' }, { name: 'Bungee', variants: ['regular'], category: 'display' }, { name: 'Bungee Hairline', variants: ['regular'], category: 'display' }, { name: 'Bungee Inline', variants: ['regular'], category: 'display' }, { name: 'Bungee Outline', variants: ['regular'], category: 'display' }, { name: 'Bungee Shade', variants: ['regular'], category: 'display' }, { name: 'Butcherman', variants: ['regular'], category: 'display' }, { name: 'Butterfly Kids', variants: ['regular'], category: 'handwriting' }, { name: 'Cabin', variants: ['regular', 'italic', '500', '500italic', '600', '600italic', '700', '700italic'], category: 'sans-serif' }, { name: 'Cabin Condensed', variants: ['regular', '500', '600', '700'], category: 'sans-serif' }, { name: 'Cabin Sketch', variants: ['regular', '700'], category: 'display' }, { name: 'Caesar Dressing', variants: ['regular'], category: 'display' }, { name: 'Cagliostro', variants: ['regular'], category: 'sans-serif' }, { name: 'Cairo', variants: ['200', '300', 'regular', '600', '700', '900'], category: 'sans-serif' }, { name: 'Calligraffitti', variants: ['regular'], category: 'handwriting' }, { name: 'Cambay', variants: ['regular', 'italic', '700', '700italic'], category: 'sans-serif' }, { name: 'Cambo', variants: ['regular'], category: 'serif' }, { name: 'Candal', variants: ['regular'], category: 'sans-serif' }, { name: 'Cantarell', variants: ['regular', 'italic', '700', '700italic'], category: 'sans-serif' }, { name: 'Cantata One', variants: ['regular'], category: 'serif' }, { name: 'Cantora One', variants: ['regular'], category: 'sans-serif' }, { name: 'Capriola', variants: ['regular'], category: 'sans-serif' }, { name: 'Cardo', variants: ['regular', 'italic', '700'], category: 'serif' }, { name: 'Carme', variants: ['regular'], category: 'sans-serif' }, { name: 'Carrois Gothic', variants: ['regular'], category: 'sans-serif' }, { name: 'Carrois Gothic SC', variants: ['regular'], category: 'sans-serif' }, { name: 'Carter One', variants: ['regular'], category: 'display' }, { name: 'Catamaran', variants: ['100', '200', '300', 'regular', '500', '600', '700', '800', '900'], category: 'sans-serif' }, { name: 'Caudex', variants: ['regular', 'italic', '700', '700italic'], category: 'serif' }, { name: 'Caveat', variants: ['regular', '700'], category: 'handwriting' }, { name: 'Caveat Brush', variants: ['regular'], category: 'handwriting' }, { name: 'Cedarville Cursive', variants: ['regular'], category: 'handwriting' }, { name: 'Ceviche One', variants: ['regular'], category: 'display' }, { name: 'Changa', variants: ['200', '300', 'regular', '500', '600', '700', '800'], category: 'sans-serif' }, { name: 'Changa One', variants: ['regular', 'italic'], category: 'display' }, { name: 'Chango', variants: ['regular'], category: 'display' }, { name: 'Chathura', variants: ['100', '300', 'regular', '700', '800'], category: 'sans-serif' }, { name: 'Chau Philomene One', variants: ['regular', 'italic'], category: 'sans-serif' }, { name: 'Chela One', variants: ['regular'], category: 'display' }, { name: 'Chelsea Market', variants: ['regular'], category: 'display' }, { name: 'Chenla', variants: ['regular'], category: 'display' }, { name: 'Cherry Cream Soda', variants: ['regular'], category: 'display' }, { name: 'Cherry Swash', variants: ['regular', '700'], category: 'display' }, { name: 'Chewy', variants: ['regular'], category: 'display' }, { name: 'Chicle', variants: ['regular'], category: 'display' }, { name: 'Chivo', variants: ['300', '300italic', 'regular', 'italic', '700', '700italic', '900', '900italic'], category: 'sans-serif' }, { name: 'Chonburi', variants: ['regular'], category: 'display' }, { name: 'Cinzel', variants: ['regular', '700', '900'], category: 'serif' }, { name: 'Cinzel Decorative', variants: ['regular', '700', '900'], category: 'display' }, { name: 'Clicker Script', variants: ['regular'], category: 'handwriting' }, { name: 'Coda', variants: ['regular', '800'], category: 'display' }, { name: 'Coda Caption', variants: ['800'], category: 'sans-serif' }, { name: 'Codystar', variants: ['300', 'regular'], category: 'display' }, { name: 'Coiny', variants: ['regular'], category: 'display' }, { name: 'Combo', variants: ['regular'], category: 'display' }, { name: 'Comfortaa', variants: ['300', 'regular', '700'], category: 'display' }, { name: 'Coming Soon', variants: ['regular'], category: 'handwriting' }, { name: 'Concert One', variants: ['regular'], category: 'display' }, { name: 'Condiment', variants: ['regular'], category: 'handwriting' }, { name: 'Content', variants: ['regular', '700'], category: 'display' }, { name: 'Contrail One', variants: ['regular'], category: 'display' }, { name: 'Convergence', variants: ['regular'], category: 'sans-serif' }, { name: 'Cookie', variants: ['regular'], category: 'handwriting' }, { name: 'Copse', variants: ['regular'], category: 'serif' }, { name: 'Corben', variants: ['regular', '700'], category: 'display' }, { name: 'Cormorant', variants: ['300', '300italic', 'regular', 'italic', '500', '500italic', '600', '600italic', '700', '700italic'], category: 'serif' }, { name: 'Cormorant Garamond', variants: ['300', '300italic', 'regular', 'italic', '500', '500italic', '600', '600italic', '700', '700italic'], category: 'serif' }, { name: 'Cormorant Infant', variants: ['300', '300italic', 'regular', 'italic', '500', '500italic', '600', '600italic', '700', '700italic'], category: 'serif' }, { name: 'Cormorant SC', variants: ['300', 'regular', '500', '600', '700'], category: 'serif' }, { name: 'Cormorant Unicase', variants: ['300', 'regular', '500', '600', '700'], category: 'serif' }, { name: 'Cormorant Upright', variants: ['300', 'regular', '500', '600', '700'], category: 'serif' }, { name: 'Courgette', variants: ['regular'], category: 'handwriting' }, { name: 'Cousine', variants: ['regular', 'italic', '700', '700italic'], category: 'monospace' }, { name: 'Coustard', variants: ['regular', '900'], category: 'serif' }, { name: 'Covered By Your Grace', variants: ['regular'], category: 'handwriting' }, { name: 'Crafty Girls', variants: ['regular'], category: 'handwriting' }, { name: 'Creepster', variants: ['regular'], category: 'display' }, { name: 'Crete Round', variants: ['regular', 'italic'], category: 'serif' }, { name: 'Crimson Text', variants: ['regular', 'italic', '600', '600italic', '700', '700italic'], category: 'serif' }, { name: 'Croissant One', variants: ['regular'], category: 'display' }, { name: 'Crushed', variants: ['regular'], category: 'display' }, { name: 'Cuprum', variants: ['regular', 'italic', '700', '700italic'], category: 'sans-serif' }, { name: 'Cutive', variants: ['regular'], category: 'serif' }, { name: 'Cutive Mono', variants: ['regular'], category: 'monospace' }, { name: 'Damion', variants: ['regular'], category: 'handwriting' }, { name: 'Dancing Script', variants: ['regular', '700'], category: 'handwriting' }, { name: 'Dangrek', variants: ['regular'], category: 'display' }, { name: 'David Libre', variants: ['regular', '500', '700'], category: 'serif' }, { name: 'Dawning of a New Day', variants: ['regular'], category: 'handwriting' }, { name: 'Days One', variants: ['regular'], category: 'sans-serif' }, { name: 'Dekko', variants: ['regular'], category: 'handwriting' }, { name: 'Delius', variants: ['regular'], category: 'handwriting' }, { name: 'Delius Swash Caps', variants: ['regular'], category: 'handwriting' }, { name: 'Delius Unicase', variants: ['regular', '700'], category: 'handwriting' }, { name: 'Della Respira', variants: ['regular'], category: 'serif' }, { name: 'Denk One', variants: ['regular'], category: 'sans-serif' }, { name: 'Devonshire', variants: ['regular'], category: 'handwriting' }, { name: 'Dhurjati', variants: ['regular'], category: 'sans-serif' }, { name: 'Didact Gothic', variants: ['regular'], category: 'sans-serif' }, { name: 'Diplomata', variants: ['regular'], category: 'display' }, { name: 'Diplomata SC', variants: ['regular'], category: 'display' }, { name: 'Domine', variants: ['regular', '700'], category: 'serif' }, { name: 'Donegal One', variants: ['regular'], category: 'serif' }, { name: 'Doppio One', variants: ['regular'], category: 'sans-serif' }, { name: 'Dorsa', variants: ['regular'], category: 'sans-serif' }, { name: 'Dosis', variants: ['200', '300', 'regular', '500', '600', '700', '800'], category: 'sans-serif' }, { name: 'Dr Sugiyama', variants: ['regular'], category: 'handwriting' }, { name: 'Droid Sans', variants: ['regular', '700'], category: 'sans-serif' }, { name: 'Droid Sans Mono', variants: ['regular'], category: 'monospace' }, { name: 'Droid Serif', variants: ['regular', 'italic', '700', '700italic'], category: 'serif' }, { name: 'Duru Sans', variants: ['regular'], category: 'sans-serif' }, { name: 'Dynalight', variants: ['regular'], category: 'display' }, { name: 'EB Garamond', variants: ['regular'], category: 'serif' }, { name: 'Eagle Lake', variants: ['regular'], category: 'handwriting' }, { name: 'Eater', variants: ['regular'], category: 'display' }, { name: 'Economica', variants: ['regular', 'italic', '700', '700italic'], category: 'sans-serif' }, { name: 'Eczar', variants: ['regular', '500', '600', '700', '800'], category: 'serif' }, { name: 'El Messiri', variants: ['regular', '500', '600', '700'], category: 'sans-serif' }, { name: 'Electrolize', variants: ['regular'], category: 'sans-serif' }, { name: 'Elsie', variants: ['regular', '900'], category: 'display' }, { name: 'Elsie Swash Caps', variants: ['regular', '900'], category: 'display' }, { name: 'Emblema One', variants: ['regular'], category: 'display' }, { name: 'Emilys Candy', variants: ['regular'], category: 'display' }, { name: 'Encode Sans', variants: ['100', '200', '300', 'regular', '500', '600', '700', '800', '900'], category: 'sans-serif' }, { name: 'Encode Sans Condensed', variants: ['100', '200', '300', 'regular', '500', '600', '700', '800', '900'], category: 'sans-serif' }, { name: 'Encode Sans Expanded', variants: ['100', '200', '300', 'regular', '500', '600', '700', '800', '900'], category: 'sans-serif' }, { name: 'Encode Sans Semi Condensed', variants: ['100', '200', '300', 'regular', '500', '600', '700', '800', '900'], category: 'sans-serif' }, { name: 'Encode Sans Semi Expanded', variants: ['100', '200', '300', 'regular', '500', '600', '700', '800', '900'], category: 'sans-serif' }, { name: 'Engagement', variants: ['regular'], category: 'handwriting' }, { name: 'Englebert', variants: ['regular'], category: 'sans-serif' }, { name: 'Enriqueta', variants: ['regular', '700'], category: 'serif' }, { name: 'Erica One', variants: ['regular'], category: 'display' }, { name: 'Esteban', variants: ['regular'], category: 'serif' }, { name: 'Euphoria Script', variants: ['regular'], category: 'handwriting' }, { name: 'Ewert', variants: ['regular'], category: 'display' }, { name: 'Exo', variants: ['100', '100italic', '200', '200italic', '300', '300italic', 'regular', 'italic', '500', '500italic', '600', '600italic', '700', '700italic', '800', '800italic', '900', '900italic'], category: 'sans-serif' }, { name: 'Exo 2', variants: ['100', '100italic', '200', '200italic', '300', '300italic', 'regular', 'italic', '500', '500italic', '600', '600italic', '700', '700italic', '800', '800italic', '900', '900italic'], category: 'sans-serif' }, { name: 'Expletus Sans', variants: ['regular', 'italic', '500', '500italic', '600', '600italic', '700', '700italic'], category: 'display' }, { name: 'Fanwood Text', variants: ['regular', 'italic'], category: 'serif' }, { name: 'Farsan', variants: ['regular'], category: 'display' }, { name: 'Fascinate', variants: ['regular'], category: 'display' }, { name: 'Fascinate Inline', variants: ['regular'], category: 'display' }, { name: 'Faster One', variants: ['regular'], category: 'display' }, { name: 'Fasthand', variants: ['regular'], category: 'serif' }, { name: 'Fauna One', variants: ['regular'], category: 'serif' }, { name: 'Faustina', variants: ['regular', 'italic', '500', '500italic', '600', '600italic', '700', '700italic'], category: 'serif' }, { name: 'Federant', variants: ['regular'], category: 'display' }, { name: 'Federo', variants: ['regular'], category: 'sans-serif' }, { name: 'Felipa', variants: ['regular'], category: 'handwriting' }, { name: 'Fenix', variants: ['regular'], category: 'serif' }, { name: 'Finger Paint', variants: ['regular'], category: 'display' }, { name: 'Fira Mono', variants: ['regular', '500', '700'], category: 'monospace' }, { name: 'Fira Sans', variants: ['100', '100italic', '200', '200italic', '300', '300italic', 'regular', 'italic', '500', '500italic', '600', '600italic', '700', '700italic', '800', '800italic', '900', '900italic'], category: 'sans-serif' }, { name: 'Fira Sans Condensed', variants: ['100', '100italic', '200', '200italic', '300', '300italic', 'regular', 'italic', '500', '500italic', '600', '600italic', '700', '700italic', '800', '800italic', '900', '900italic'], category: 'sans-serif' }, { name: 'Fira Sans Extra Condensed', variants: ['100', '100italic', '200', '200italic', '300', '300italic', 'regular', 'italic', '500', '500italic', '600', '600italic', '700', '700italic', '800', '800italic', '900', '900italic'], category: 'sans-serif' }, { name: 'Fjalla One', variants: ['regular'], category: 'sans-serif' }, { name: 'Fjord One', variants: ['regular'], category: 'serif' }, { name: 'Flamenco', variants: ['300', 'regular'], category: 'display' }, { name: 'Flavors', variants: ['regular'], category: 'display' }, { name: 'Fondamento', variants: ['regular', 'italic'], category: 'handwriting' }, { name: 'Fontdiner Swanky', variants: ['regular'], category: 'display' }, { name: 'Forum', variants: ['regular'], category: 'display' }, { name: 'Francois One', variants: ['regular'], category: 'sans-serif' }, { name: 'Frank Ruhl Libre', variants: ['300', 'regular', '500', '700', '900'], category: 'serif' }, { name: 'Freckle Face', variants: ['regular'], category: 'display' }, { name: 'Fredericka the Great', variants: ['regular'], category: 'display' }, { name: 'Fredoka One', variants: ['regular'], category: 'display' }, { name: 'Freehand', variants: ['regular'], category: 'display' }, { name: 'Fresca', variants: ['regular'], category: 'sans-serif' }, { name: 'Frijole', variants: ['regular'], category: 'display' }, { name: 'Fruktur', variants: ['regular'], category: 'display' }, { name: 'Fugaz One', variants: ['regular'], category: 'display' }, { name: 'GFS Didot', variants: ['regular'], category: 'serif' }, { name: 'GFS Neohellenic', variants: ['regular', 'italic', '700', '700italic'], category: 'sans-serif' }, { name: 'Gabriela', variants: ['regular'], category: 'serif' }, { name: 'Gafata', variants: ['regular'], category: 'sans-serif' }, { name: 'Galada', variants: ['regular'], category: 'display' }, { name: 'Galdeano', variants: ['regular'], category: 'sans-serif' }, { name: 'Galindo', variants: ['regular'], category: 'display' }, { name: 'Gentium Basic', variants: ['regular', 'italic', '700', '700italic'], category: 'serif' }, { name: 'Gentium Book Basic', variants: ['regular', 'italic', '700', '700italic'], category: 'serif' }, { name: 'Geo', variants: ['regular', 'italic'], category: 'sans-serif' }, { name: 'Geostar', variants: ['regular'], category: 'display' }, { name: 'Geostar Fill', variants: ['regular'], category: 'display' }, { name: 'Germania One', variants: ['regular'], category: 'display' }, { name: 'Gidugu', variants: ['regular'], category: 'sans-serif' }, { name: 'Gilda Display', variants: ['regular'], category: 'serif' }, { name: 'Give You Glory', variants: ['regular'], category: 'handwriting' }, { name: 'Glass Antiqua', variants: ['regular'], category: 'display' }, { name: 'Glegoo', variants: ['regular', '700'], category: 'serif' }, { name: 'Gloria Hallelujah', variants: ['regular'], category: 'handwriting' }, { name: 'Goblin One', variants: ['regular'], category: 'display' }, { name: 'Gochi Hand', variants: ['regular'], category: 'handwriting' }, { name: 'Gorditas', variants: ['regular', '700'], category: 'display' }, { name: 'Goudy Bookletter 1911', variants: ['regular'], category: 'serif' }, { name: 'Graduate', variants: ['regular'], category: 'display' }, { name: 'Grand Hotel', variants: ['regular'], category: 'handwriting' }, { name: 'Gravitas One', variants: ['regular'], category: 'display' }, { name: 'Great Vibes', variants: ['regular'], category: 'handwriting' }, { name: 'Griffy', variants: ['regular'], category: 'display' }, { name: 'Gruppo', variants: ['regular'], category: 'display' }, { name: 'Gudea', variants: ['regular', 'italic', '700'], category: 'sans-serif' }, { name: 'Gurajada', variants: ['regular'], category: 'serif' }, { name: 'Habibi', variants: ['regular'], category: 'serif' }, { name: 'Halant', variants: ['300', 'regular', '500', '600', '700'], category: 'serif' }, { name: 'Hammersmith One', variants: ['regular'], category: 'sans-serif' }, { name: 'Hanalei', variants: ['regular'], category: 'display' }, { name: 'Hanalei Fill', variants: ['regular'], category: 'display' }, { name: 'Handlee', variants: ['regular'], category: 'handwriting' }, { name: 'Hanuman', variants: ['regular', '700'], category: 'serif' }, { name: 'Happy Monkey', variants: ['regular'], category: 'display' }, { name: 'Harmattan', variants: ['regular'], category: 'sans-serif' }, { name: 'Headland One', variants: ['regular'], category: 'serif' }, { name: 'Heebo', variants: ['100', '300', 'regular', '500', '700', '800', '900'], category: 'sans-serif' }, { name: 'Henny Penny', variants: ['regular'], category: 'display' }, { name: 'Herr Von Muellerhoff', variants: ['regular'], category: 'handwriting' }, { name: 'Hind', variants: ['300', 'regular', '500', '600', '700'], category: 'sans-serif' }, { name: 'Hind Guntur', variants: ['300', 'regular', '500', '600', '700'], category: 'sans-serif' }, { name: 'Hind Madurai', variants: ['300', 'regular', '500', '600', '700'], category: 'sans-serif' }, { name: 'Hind Siliguri', variants: ['300', 'regular', '500', '600', '700'], category: 'sans-serif' }, { name: 'Hind Vadodara', variants: ['300', 'regular', '500', '600', '700'], category: 'sans-serif' }, { name: 'Holtwood One SC', variants: ['regular'], category: 'serif' }, { name: 'Homemade Apple', variants: ['regular'], category: 'handwriting' }, { name: 'Homenaje', variants: ['regular'], category: 'sans-serif' }, { name: 'IM Fell DW Pica', variants: ['regular', 'italic'], category: 'serif' }, { name: 'IM Fell DW Pica SC', variants: ['regular'], category: 'serif' }, { name: 'IM Fell Double Pica', variants: ['regular', 'italic'], category: 'serif' }, { name: 'IM Fell Double Pica SC', variants: ['regular'], category: 'serif' }, { name: 'IM Fell English', variants: ['regular', 'italic'], category: 'serif' }, { name: 'IM Fell English SC', variants: ['regular'], category: 'serif' }, { name: 'IM Fell French Canon', variants: ['regular', 'italic'], category: 'serif' }, { name: 'IM Fell French Canon SC', variants: ['regular'], category: 'serif' }, { name: 'IM Fell Great Primer', variants: ['regular', 'italic'], category: 'serif' }, { name: 'IM Fell Great Primer SC', variants: ['regular'], category: 'serif' }, { name: 'Iceberg', variants: ['regular'], category: 'display' }, { name: 'Iceland', variants: ['regular'], category: 'display' }, { name: 'Imprima', variants: ['regular'], category: 'sans-serif' }, { name: 'Inconsolata', variants: ['regular', '700'], category: 'monospace' }, { name: 'Inder', variants: ['regular'], category: 'sans-serif' }, { name: 'Indie Flower', variants: ['regular'], category: 'handwriting' }, { name: 'Inika', variants: ['regular', '700'], category: 'serif' }, { name: 'Inknut Antiqua', variants: ['300', 'regular', '500', '600', '700', '800', '900'], category: 'serif' }, { name: 'Irish Grover', variants: ['regular'], category: 'display' }, { name: 'Istok Web', variants: ['regular', 'italic', '700', '700italic'], category: 'sans-serif' }, { name: 'Italiana', variants: ['regular'], category: 'serif' }, { name: 'Italianno', variants: ['regular'], category: 'handwriting' }, { name: 'Itim', variants: ['regular'], category: 'handwriting' }, { name: 'Jacques Francois', variants: ['regular'], category: 'serif' }, { name: 'Jacques Francois Shadow', variants: ['regular'], category: 'display' }, { name: 'Jaldi', variants: ['regular', '700'], category: 'sans-serif' }, { name: 'Jim Nightshade', variants: ['regular'], category: 'handwriting' }, { name: 'Jockey One', variants: ['regular'], category: 'sans-serif' }, { name: 'Jolly Lodger', variants: ['regular'], category: 'display' }, { name: 'Jomhuria', variants: ['regular'], category: 'display' }, { name: 'Josefin Sans', variants: ['100', '100italic', '300', '300italic', 'regular', 'italic', '600', '600italic', '700', '700italic'], category: 'sans-serif' }, { name: 'Josefin Slab', variants: ['100', '100italic', '300', '300italic', 'regular', 'italic', '600', '600italic', '700', '700italic'], category: 'serif' }, { name: 'Joti One', variants: ['regular'], category: 'display' }, { name: 'Judson', variants: ['regular', 'italic', '700'], category: 'serif' }, { name: 'Julee', variants: ['regular'], category: 'handwriting' }, { name: 'Julius Sans One', variants: ['regular'], category: 'sans-serif' }, { name: 'Junge', variants: ['regular'], category: 'serif' }, { name: 'Jura', variants: ['300', 'regular', '500', '600', '700'], category: 'sans-serif' }, { name: 'Just Another Hand', variants: ['regular'], category: 'handwriting' }, { name: 'Just Me Again Down Here', variants: ['regular'], category: 'handwriting' }, { name: 'Kadwa', variants: ['regular', '700'], category: 'serif' }, { name: 'Kalam', variants: ['300', 'regular', '700'], category: 'handwriting' }, { name: 'Kameron', variants: ['regular', '700'], category: 'serif' }, { name: 'Kanit', variants: ['100', '100italic', '200', '200italic', '300', '300italic', 'regular', 'italic', '500', '500italic', '600', '600italic', '700', '700italic', '800', '800italic', '900', '900italic'], category: 'sans-serif' }, { name: 'Kantumruy', variants: ['300', 'regular', '700'], category: 'sans-serif' }, { name: 'Karla', variants: ['regular', 'italic', '700', '700italic'], category: 'sans-serif' }, { name: 'Karma', variants: ['300', 'regular', '500', '600', '700'], category: 'serif' }, { name: 'Katibeh', variants: ['regular'], category: 'display' }, { name: 'Kaushan Script', variants: ['regular'], category: 'handwriting' }, { name: 'Kavivanar', variants: ['regular'], category: 'handwriting' }, { name: 'Kavoon', variants: ['regular'], category: 'display' }, { name: 'Kdam Thmor', variants: ['regular'], category: 'display' }, { name: 'Keania One', variants: ['regular'], category: 'display' }, { name: 'Kelly Slab', variants: ['regular'], category: 'display' }, { name: 'Kenia', variants: ['regular'], category: 'display' }, { name: 'Khand', variants: ['300', 'regular', '500', '600', '700'], category: 'sans-serif' }, { name: 'Khmer', variants: ['regular'], category: 'display' }, { name: 'Khula', variants: ['300', 'regular', '600', '700', '800'], category: 'sans-serif' }, { name: 'Kite One', variants: ['regular'], category: 'sans-serif' }, { name: 'Knewave', variants: ['regular'], category: 'display' }, { name: 'Kotta One', variants: ['regular'], category: 'serif' }, { name: 'Koulen', variants: ['regular'], category: 'display' }, { name: 'Kranky', variants: ['regular'], category: 'display' }, { name: 'Kreon', variants: ['300', 'regular', '700'], category: 'serif' }, { name: 'Kristi', variants: ['regular'], category: 'handwriting' }, { name: 'Krona One', variants: ['regular'], category: 'sans-serif' }, { name: 'Kumar One', variants: ['regular'], category: 'display' }, { name: 'Kumar One Outline', variants: ['regular'], category: 'display' }, { name: 'Kurale', variants: ['regular'], category: 'serif' }, { name: 'La Belle Aurore', variants: ['regular'], category: 'handwriting' }, { name: 'Laila', variants: ['300', 'regular', '500', '600', '700'], category: 'serif' }, { name: 'Lakki Reddy', variants: ['regular'], category: 'handwriting' }, { name: 'Lalezar', variants: ['regular'], category: 'display' }, { name: 'Lancelot', variants: ['regular'], category: 'display' }, { name: 'Lateef', variants: ['regular'], category: 'handwriting' }, { name: 'Lato', variants: ['100', '100italic', '300', '300italic', 'regular', 'italic', '700', '700italic', '900', '900italic'], category: 'sans-serif' }, { name: 'League Script', variants: ['regular'], category: 'handwriting' }, { name: 'Leckerli One', variants: ['regular'], category: 'handwriting' }, { name: 'Ledger', variants: ['regular'], category: 'serif' }, { name: 'Lekton', variants: ['regular', 'italic', '700'], category: 'sans-serif' }, { name: 'Lemon', variants: ['regular'], category: 'display' }, { name: 'Lemonada', variants: ['300', 'regular', '600', '700'], category: 'display' }, { name: 'Libre Barcode 128', variants: ['regular'], category: 'display' }, { name: 'Libre Barcode 128 Text', variants: ['regular'], category: 'display' }, { name: 'Libre Barcode 39', variants: ['regular'], category: 'display' }, { name: 'Libre Barcode 39 Extended', variants: ['regular'], category: 'display' }, { name: 'Libre Barcode 39 Extended Text', variants: ['regular'], category: 'display' }, { name: 'Libre Barcode 39 Text', variants: ['regular'], category: 'display' }, { name: 'Libre Baskerville', variants: ['regular', 'italic', '700'], category: 'serif' }, { name: 'Libre Franklin', variants: ['100', '100italic', '200', '200italic', '300', '300italic', 'regular', 'italic', '500', '500italic', '600', '600italic', '700', '700italic', '800', '800italic', '900', '900italic'], category: 'sans-serif' }, { name: 'Life Savers', variants: ['regular', '700'], category: 'display' }, { name: 'Lilita One', variants: ['regular'], category: 'display' }, { name: 'Lily Script One', variants: ['regular'], category: 'display' }, { name: 'Limelight', variants: ['regular'], category: 'display' }, { name: 'Linden Hill', variants: ['regular', 'italic'], category: 'serif' }, { name: 'Lobster', variants: ['regular'], category: 'display' }, { name: 'Lobster Two', variants: ['regular', 'italic', '700', '700italic'], category: 'display' }, { name: 'Londrina Outline', variants: ['regular'], category: 'display' }, { name: 'Londrina Shadow', variants: ['regular'], category: 'display' }, { name: 'Londrina Sketch', variants: ['regular'], category: 'display' }, { name: 'Londrina Solid', variants: ['100', '300', 'regular', '900'], category: 'display' }, { name: 'Lora', variants: ['regular', 'italic', '700', '700italic'], category: 'serif' }, { name: 'Love Ya Like A Sister', variants: ['regular'], category: 'display' }, { name: 'Loved by the King', variants: ['regular'], category: 'handwriting' }, { name: 'Lovers Quarrel', variants: ['regular'], category: 'handwriting' }, { name: 'Luckiest Guy', variants: ['regular'], category: 'display' }, { name: 'Lusitana', variants: ['regular', '700'], category: 'serif' }, { name: 'Lustria', variants: ['regular'], category: 'serif' }, { name: 'Macondo', variants: ['regular'], category: 'display' }, { name: 'Macondo Swash Caps', variants: ['regular'], category: 'display' }, { name: 'Mada', variants: ['200', '300', 'regular', '500', '600', '700', '900'], category: 'sans-serif' }, { name: 'Magra', variants: ['regular', '700'], category: 'sans-serif' }, { name: 'Maiden Orange', variants: ['regular'], category: 'display' }, { name: 'Maitree', variants: ['200', '300', 'regular', '500', '600', '700'], category: 'serif' }, { name: 'Mako', variants: ['regular'], category: 'sans-serif' }, { name: 'Mallanna', variants: ['regular'], category: 'sans-serif' }, { name: 'Mandali', variants: ['regular'], category: 'sans-serif' }, { name: 'Manuale', variants: ['regular', 'italic', '500', '500italic', '600', '600italic', '700', '700italic'], category: 'serif' }, { name: 'Marcellus', variants: ['regular'], category: 'serif' }, { name: 'Marcellus SC', variants: ['regular'], category: 'serif' }, { name: 'Marck Script', variants: ['regular'], category: 'handwriting' }, { name: 'Margarine', variants: ['regular'], category: 'display' }, { name: 'Marko One', variants: ['regular'], category: 'serif' }, { name: 'Marmelad', variants: ['regular'], category: 'sans-serif' }, { name: 'Martel', variants: ['200', '300', 'regular', '600', '700', '800', '900'], category: 'serif' }, { name: 'Martel Sans', variants: ['200', '300', 'regular', '600', '700', '800', '900'], category: 'sans-serif' }, { name: 'Marvel', variants: ['regular', 'italic', '700', '700italic'], category: 'sans-serif' }, { name: 'Mate', variants: ['regular', 'italic'], category: 'serif' }, { name: 'Mate SC', variants: ['regular'], category: 'serif' }, { name: 'Maven Pro', variants: ['regular', '500', '700', '900'], category: 'sans-serif' }, { name: 'McLaren', variants: ['regular'], category: 'display' }, { name: 'Meddon', variants: ['regular'], category: 'handwriting' }, { name: 'MedievalSharp', variants: ['regular'], category: 'display' }, { name: 'Medula One', variants: ['regular'], category: 'display' }, { name: 'Meera Inimai', variants: ['regular'], category: 'sans-serif' }, { name: 'Megrim', variants: ['regular'], category: 'display' }, { name: 'Meie Script', variants: ['regular'], category: 'handwriting' }, { name: 'Merienda', variants: ['regular', '700'], category: 'handwriting' }, { name: 'Merienda One', variants: ['regular'], category: 'handwriting' }, { name: 'Merriweather', variants: ['300', '300italic', 'regular', 'italic', '700', '700italic', '900', '900italic'], category: 'serif' }, { name: 'Merriweather Sans', variants: ['300', '300italic', 'regular', 'italic', '700', '700italic', '800', '800italic'], category: 'sans-serif' }, { name: 'Metal', variants: ['regular'], category: 'display' }, { name: 'Metal Mania', variants: ['regular'], category: 'display' }, { name: 'Metamorphous', variants: ['regular'], category: 'display' }, { name: 'Metrophobic', variants: ['regular'], category: 'sans-serif' }, { name: 'Michroma', variants: ['regular'], category: 'sans-serif' }, { name: 'Milonga', variants: ['regular'], category: 'display' }, { name: 'Miltonian', variants: ['regular'], category: 'display' }, { name: 'Miltonian Tattoo', variants: ['regular'], category: 'display' }, { name: 'Miniver', variants: ['regular'], category: 'display' }, { name: 'Miriam Libre', variants: ['regular', '700'], category: 'sans-serif' }, { name: 'Mirza', variants: ['regular', '500', '600', '700'], category: 'display' }, { name: 'Miss Fajardose', variants: ['regular'], category: 'handwriting' }, { name: 'Mitr', variants: ['200', '300', 'regular', '500', '600', '700'], category: 'sans-serif' }, { name: 'Modak', variants: ['regular'], category: 'display' }, { name: 'Modern Antiqua', variants: ['regular'], category: 'display' }, { name: 'Mogra', variants: ['regular'], category: 'display' }, { name: 'Molengo', variants: ['regular'], category: 'sans-serif' }, { name: 'Molle', variants: ['italic'], category: 'handwriting' }, { name: 'Monda', variants: ['regular', '700'], category: 'sans-serif' }, { name: 'Monofett', variants: ['regular'], category: 'display' }, { name: 'Monoton', variants: ['regular'], category: 'display' }, { name: 'Monsieur La Doulaise', variants: ['regular'], category: 'handwriting' }, { name: 'Montaga', variants: ['regular'], category: 'serif' }, { name: 'Montez', variants: ['regular'], category: 'handwriting' }, { name: 'Montserrat', variants: ['100', '100italic', '200', '200italic', '300', '300italic', 'regular', 'italic', '500', '500italic', '600', '600italic', '700', '700italic', '800', '800italic', '900', '900italic'], category: 'sans-serif' }, { name: 'Montserrat Alternates', variants: ['100', '100italic', '200', '200italic', '300', '300italic', 'regular', 'italic', '500', '500italic', '600', '600italic', '700', '700italic', '800', '800italic', '900', '900italic'], category: 'sans-serif' }, { name: 'Montserrat Subrayada', variants: ['regular', '700'], category: 'sans-serif' }, { name: 'Moul', variants: ['regular'], category: 'display' }, { name: 'Moulpali', variants: ['regular'], category: 'display' }, { name: 'Mountains of Christmas', variants: ['regular', '700'], category: 'display' }, { name: 'Mouse Memoirs', variants: ['regular'], category: 'sans-serif' }, { name: 'Mr Bedfort', variants: ['regular'], category: 'handwriting' }, { name: 'Mr Dafoe', variants: ['regular'], category: 'handwriting' }, { name: 'Mr De Haviland', variants: ['regular'], category: 'handwriting' }, { name: 'Mrs Saint Delafield', variants: ['regular'], category: 'handwriting' }, { name: 'Mrs Sheppards', variants: ['regular'], category: 'handwriting' }, { name: 'Mukta', variants: ['200', '300', 'regular', '500', '600', '700', '800'], category: 'sans-serif' }, { name: 'Mukta Mahee', variants: ['200', '300', 'regular', '500', '600', '700', '800'], category: 'sans-serif' }, { name: 'Mukta Malar', variants: ['200', '300', 'regular', '500', '600', '700', '800'], category: 'sans-serif' }, { name: 'Mukta Vaani', variants: ['200', '300', 'regular', '500', '600', '700', '800'], category: 'sans-serif' }, { name: 'Muli', variants: ['200', '200italic', '300', '300italic', 'regular', 'italic', '600', '600italic', '700', '700italic', '800', '800italic', '900', '900italic'], category: 'sans-serif' }, { name: 'Mystery Quest', variants: ['regular'], category: 'display' }, { name: 'NTR', variants: ['regular'], category: 'sans-serif' }, { name: 'Neucha', variants: ['regular'], category: 'handwriting' }, { name: 'Neuton', variants: ['200', '300', 'regular', 'italic', '700', '800'], category: 'serif' }, { name: 'New Rocker', variants: ['regular'], category: 'display' }, { name: 'News Cycle', variants: ['regular', '700'], category: 'sans-serif' }, { name: 'Niconne', variants: ['regular'], category: 'handwriting' }, { name: 'Nixie One', variants: ['regular'], category: 'display' }, { name: 'Nobile', variants: ['regular', 'italic', '500', '500italic', '700', '700italic'], category: 'sans-serif' }, { name: 'Nokora', variants: ['regular', '700'], category: 'serif' }, { name: 'Norican', variants: ['regular'], category: 'handwriting' }, { name: 'Nosifer', variants: ['regular'], category: 'display' }, { name: 'Nothing You Could Do', variants: ['regular'], category: 'handwriting' }, { name: 'Noticia Text', variants: ['regular', 'italic', '700', '700italic'], category: 'serif' }, { name: 'Noto Sans', variants: ['regular', 'italic', '700', '700italic'], category: 'sans-serif' }, { name: 'Noto Serif', variants: ['regular', 'italic', '700', '700italic'], category: 'serif' }, { name: 'Nova Cut', variants: ['regular'], category: 'display' }, { name: 'Nova Flat', variants: ['regular'], category: 'display' }, { name: 'Nova Mono', variants: ['regular'], category: 'monospace' }, { name: 'Nova Oval', variants: ['regular'], category: 'display' }, { name: 'Nova Round', variants: ['regular'], category: 'display' }, { name: 'Nova Script', variants: ['regular'], category: 'display' }, { name: 'Nova Slim', variants: ['regular'], category: 'display' }, { name: 'Nova Square', variants: ['regular'], category: 'display' }, { name: 'Numans', variants: ['regular'], category: 'sans-serif' }, { name: 'Nunito', variants: ['200', '200italic', '300', '300italic', 'regular', 'italic', '600', '600italic', '700', '700italic', '800', '800italic', '900', '900italic'], category: 'sans-serif' }, { name: 'Nunito Sans', variants: ['200', '200italic', '300', '300italic', 'regular', 'italic', '600', '600italic', '700', '700italic', '800', '800italic', '900', '900italic'], category: 'sans-serif' }, { name: 'Odor Mean Chey', variants: ['regular'], category: 'display' }, { name: 'Offside', variants: ['regular'], category: 'display' }, { name: 'Old Standard TT', variants: ['regular', 'italic', '700'], category: 'serif' }, { name: 'Oldenburg', variants: ['regular'], category: 'display' }, { name: 'Oleo Script', variants: ['regular', '700'], category: 'display' }, { name: 'Oleo Script Swash Caps', variants: ['regular', '700'], category: 'display' }, { name: 'Open Sans', variants: ['300', '300italic', 'regular', 'italic', '600', '600italic', '700', '700italic', '800', '800italic'], category: 'sans-serif' }, { name: 'Open Sans Condensed', variants: ['300', '300italic', '700'], category: 'sans-serif' }, { name: 'Oranienbaum', variants: ['regular'], category: 'serif' }, { name: 'Orbitron', variants: ['regular', '500', '700', '900'], category: 'sans-serif' }, { name: 'Oregano', variants: ['regular', 'italic'], category: 'display' }, { name: 'Orienta', variants: ['regular'], category: 'sans-serif' }, { name: 'Original Surfer', variants: ['regular'], category: 'display' }, { name: 'Oswald', variants: ['200', '300', 'regular', '500', '600', '700'], category: 'sans-serif' }, { name: 'Over the Rainbow', variants: ['regular'], category: 'handwriting' }, { name: 'Overlock', variants: ['regular', 'italic', '700', '700italic', '900', '900italic'], category: 'display' }, { name: 'Overlock SC', variants: ['regular'], category: 'display' }, { name: 'Overpass', variants: ['100', '100italic', '200', '200italic', '300', '300italic', 'regular', 'italic', '600', '600italic', '700', '700italic', '800', '800italic', '900', '900italic'], category: 'sans-serif' }, { name: 'Overpass Mono', variants: ['300', 'regular', '600', '700'], category: 'monospace' }, { name: 'Ovo', variants: ['regular'], category: 'serif' }, { name: 'Oxygen', variants: ['300', 'regular', '700'], category: 'sans-serif' }, { name: 'Oxygen Mono', variants: ['regular'], category: 'monospace' }, { name: 'PT Mono', variants: ['regular'], category: 'monospace' }, { name: 'PT Sans', variants: ['regular', 'italic', '700', '700italic'], category: 'sans-serif' }, { name: 'PT Sans Caption', variants: ['regular', '700'], category: 'sans-serif' }, { name: 'PT Sans Narrow', variants: ['regular', '700'], category: 'sans-serif' }, { name: 'PT Serif', variants: ['regular', 'italic', '700', '700italic'], category: 'serif' }, { name: 'PT Serif Caption', variants: ['regular', 'italic'], category: 'serif' }, { name: 'Pacifico', variants: ['regular'], category: 'handwriting' }, { name: 'Padauk', variants: ['regular', '700'], category: 'sans-serif' }, { name: 'Palanquin', variants: ['100', '200', '300', 'regular', '500', '600', '700'], category: 'sans-serif' }, { name: 'Palanquin Dark', variants: ['regular', '500', '600', '700'], category: 'sans-serif' }, { name: 'Pangolin', variants: ['regular'], category: 'handwriting' }, { name: 'Paprika', variants: ['regular'], category: 'display' }, { name: 'Parisienne', variants: ['regular'], category: 'handwriting' }, { name: 'Passero One', variants: ['regular'], category: 'display' }, { name: 'Passion One', variants: ['regular', '700', '900'], category: 'display' }, { name: 'Pathway Gothic One', variants: ['regular'], category: 'sans-serif' }, { name: 'Patrick Hand', variants: ['regular'], category: 'handwriting' }, { name: 'Patrick Hand SC', variants: ['regular'], category: 'handwriting' }, { name: 'Pattaya', variants: ['regular'], category: 'sans-serif' }, { name: 'Patua One', variants: ['regular'], category: 'display' }, { name: 'Pavanam', variants: ['regular'], category: 'sans-serif' }, { name: 'Paytone One', variants: ['regular'], category: 'sans-serif' }, { name: 'Peddana', variants: ['regular'], category: 'serif' }, { name: 'Peralta', variants: ['regular'], category: 'display' }, { name: 'Permanent Marker', variants: ['regular'], category: 'handwriting' }, { name: 'Petit Formal Script', variants: ['regular'], category: 'handwriting' }, { name: 'Petrona', variants: ['regular'], category: 'serif' }, { name: 'Philosopher', variants: ['regular', 'italic', '700', '700italic'], category: 'sans-serif' }, { name: 'Piedra', variants: ['regular'], category: 'display' }, { name: 'Pinyon Script', variants: ['regular'], category: 'handwriting' }, { name: 'Pirata One', variants: ['regular'], category: 'display' }, { name: 'Plaster', variants: ['regular'], category: 'display' }, { name: 'Play', variants: ['regular', '700'], category: 'sans-serif' }, { name: 'Playball', variants: ['regular'], category: 'display' }, { name: 'Playfair Display', variants: ['regular', 'italic', '700', '700italic', '900', '900italic'], category: 'serif' }, { name: 'Playfair Display SC', variants: ['regular', 'italic', '700', '700italic', '900', '900italic'], category: 'serif' }, { name: 'Podkova', variants: ['regular', '500', '600', '700', '800'], category: 'serif' }, { name: 'Poiret One', variants: ['regular'], category: 'display' }, { name: 'Poller One', variants: ['regular'], category: 'display' }, { name: 'Poly', variants: ['regular', 'italic'], category: 'serif' }, { name: 'Pompiere', variants: ['regular'], category: 'display' }, { name: 'Pontano Sans', variants: ['regular'], category: 'sans-serif' }, { name: 'Poppins', variants: ['100', '100italic', '200', '200italic', '300', '300italic', 'regular', 'italic', '500', '500italic', '600', '600italic', '700', '700italic', '800', '800italic', '900', '900italic'], category: 'sans-serif' }, { name: 'Port Lligat Sans', variants: ['regular'], category: 'sans-serif' }, { name: 'Port Lligat Slab', variants: ['regular'], category: 'serif' }, { name: 'Pragati Narrow', variants: ['regular', '700'], category: 'sans-serif' }, { name: 'Prata', variants: ['regular'], category: 'serif' }, { name: 'Preahvihear', variants: ['regular'], category: 'display' }, { name: 'Press Start 2P', variants: ['regular'], category: 'display' }, { name: 'Pridi', variants: ['200', '300', 'regular', '500', '600', '700'], category: 'serif' }, { name: 'Princess Sofia', variants: ['regular'], category: 'handwriting' }, { name: 'Prociono', variants: ['regular'], category: 'serif' }, { name: 'Prompt', variants: ['100', '100italic', '200', '200italic', '300', '300italic', 'regular', 'italic', '500', '500italic', '600', '600italic', '700', '700italic', '800', '800italic', '900', '900italic'], category: 'sans-serif' }, { name: 'Prosto One', variants: ['regular'], category: 'display' }, { name: 'Proza Libre', variants: ['regular', 'italic', '500', '500italic', '600', '600italic', '700', '700italic', '800', '800italic'], category: 'sans-serif' }, { name: 'Puritan', variants: ['regular', 'italic', '700', '700italic'], category: 'sans-serif' }, { name: 'Purple Purse', variants: ['regular'], category: 'display' }, { name: 'Quando', variants: ['regular'], category: 'serif' }, { name: 'Quantico', variants: ['regular', 'italic', '700', '700italic'], category: 'sans-serif' }, { name: 'Quattrocento', variants: ['regular', '700'], category: 'serif' }, { name: 'Quattrocento Sans', variants: ['regular', 'italic', '700', '700italic'], category: 'sans-serif' }, { name: 'Questrial', variants: ['regular'], category: 'sans-serif' }, { name: 'Quicksand', variants: ['300', 'regular', '500', '700'], category: 'sans-serif' }, { name: 'Quintessential', variants: ['regular'], category: 'handwriting' }, { name: 'Qwigley', variants: ['regular'], category: 'handwriting' }, { name: 'Racing Sans One', variants: ['regular'], category: 'display' }, { name: 'Radley', variants: ['regular', 'italic'], category: 'serif' }, { name: 'Rajdhani', variants: ['300', 'regular', '500', '600', '700'], category: 'sans-serif' }, { name: 'Rakkas', variants: ['regular'], category: 'display' }, { name: 'Raleway', variants: ['100', '100italic', '200', '200italic', '300', '300italic', 'regular', 'italic', '500', '500italic', '600', '600italic', '700', '700italic', '800', '800italic', '900', '900italic'], category: 'sans-serif' }, { name: 'Raleway Dots', variants: ['regular'], category: 'display' }, { name: 'Ramabhadra', variants: ['regular'], category: 'sans-serif' }, { name: 'Ramaraja', variants: ['regular'], category: 'serif' }, { name: 'Rambla', variants: ['regular', 'italic', '700', '700italic'], category: 'sans-serif' }, { name: 'Rammetto One', variants: ['regular'], category: 'display' }, { name: 'Ranchers', variants: ['regular'], category: 'display' }, { name: 'Rancho', variants: ['regular'], category: 'handwriting' }, { name: 'Ranga', variants: ['regular', '700'], category: 'display' }, { name: 'Rasa', variants: ['300', 'regular', '500', '600', '700'], category: 'serif' }, { name: 'Rationale', variants: ['regular'], category: 'sans-serif' }, { name: 'Ravi Prakash', variants: ['regular'], category: 'display' }, { name: 'Redressed', variants: ['regular'], category: 'handwriting' }, { name: 'Reem Kufi', variants: ['regular'], category: 'sans-serif' }, { name: 'Reenie Beanie', variants: ['regular'], category: 'handwriting' }, { name: 'Revalia', variants: ['regular'], category: 'display' }, { name: 'Rhodium Libre', variants: ['regular'], category: 'serif' }, { name: 'Ribeye', variants: ['regular'], category: 'display' }, { name: 'Ribeye Marrow', variants: ['regular'], category: 'display' }, { name: 'Righteous', variants: ['regular'], category: 'display' }, { name: 'Risque', variants: ['regular'], category: 'display' }, { name: 'Roboto', variants: ['100', '100italic', '300', '300italic', 'regular', 'italic', '500', '500italic', '700', '700italic', '900', '900italic'], category: 'sans-serif' }, { name: 'Roboto Condensed', variants: ['300', '300italic', 'regular', 'italic', '700', '700italic'], category: 'sans-serif' }, { name: 'Roboto Mono', variants: ['100', '100italic', '300', '300italic', 'regular', 'italic', '500', '500italic', '700', '700italic'], category: 'monospace' }, { name: 'Roboto Slab', variants: ['100', '300', 'regular', '700'], category: 'serif' }, { name: 'Rochester', variants: ['regular'], category: 'handwriting' }, { name: 'Rock Salt', variants: ['regular'], category: 'handwriting' }, { name: 'Rokkitt', variants: ['100', '200', '300', 'regular', '500', '600', '700', '800', '900'], category: 'serif' }, { name: 'Romanesco', variants: ['regular'], category: 'handwriting' }, { name: 'Ropa Sans', variants: ['regular', 'italic'], category: 'sans-serif' }, { name: 'Rosario', variants: ['regular', 'italic', '700', '700italic'], category: 'sans-serif' }, { name: 'Rosarivo', variants: ['regular', 'italic'], category: 'serif' }, { name: 'Rouge Script', variants: ['regular'], category: 'handwriting' }, { name: 'Rozha One', variants: ['regular'], category: 'serif' }, { name: 'Rubik', variants: ['300', '300italic', 'regular', 'italic', '500', '500italic', '700', '700italic', '900', '900italic'], category: 'sans-serif' }, { name: 'Rubik Mono One', variants: ['regular'], category: 'sans-serif' }, { name: 'Ruda', variants: ['regular', '700', '900'], category: 'sans-serif' }, { name: 'Rufina', variants: ['regular', '700'], category: 'serif' }, { name: 'Ruge Boogie', variants: ['regular'], category: 'handwriting' }, { name: 'Ruluko', variants: ['regular'], category: 'sans-serif' }, { name: 'Rum Raisin', variants: ['regular'], category: 'sans-serif' }, { name: 'Ruslan Display', variants: ['regular'], category: 'display' }, { name: 'Russo One', variants: ['regular'], category: 'sans-serif' }, { name: 'Ruthie', variants: ['regular'], category: 'handwriting' }, { name: 'Rye', variants: ['regular'], category: 'display' }, { name: 'Sacramento', variants: ['regular'], category: 'handwriting' }, { name: 'Sahitya', variants: ['regular', '700'], category: 'serif' }, { name: 'Sail', variants: ['regular'], category: 'display' }, { name: 'Saira', variants: ['100', '200', '300', 'regular', '500', '600', '700', '800', '900'], category: 'sans-serif' }, { name: 'Saira Condensed', variants: ['100', '200', '300', 'regular', '500', '600', '700', '800', '900'], category: 'sans-serif' }, { name: 'Saira Extra Condensed', variants: ['100', '200', '300', 'regular', '500', '600', '700', '800', '900'], category: 'sans-serif' }, { name: 'Saira Semi Condensed', variants: ['100', '200', '300', 'regular', '500', '600', '700', '800', '900'], category: 'sans-serif' }, { name: 'Salsa', variants: ['regular'], category: 'display' }, { name: 'Sanchez', variants: ['regular', 'italic'], category: 'serif' }, { name: 'Sancreek', variants: ['regular'], category: 'display' }, { name: 'Sansita', variants: ['regular', 'italic', '700', '700italic', '800', '800italic', '900', '900italic'], category: 'sans-serif' }, { name: 'Sarala', variants: ['regular', '700'], category: 'sans-serif' }, { name: 'Sarina', variants: ['regular'], category: 'display' }, { name: 'Sarpanch', variants: ['regular', '500', '600', '700', '800', '900'], category: 'sans-serif' }, { name: 'Satisfy', variants: ['regular'], category: 'handwriting' }, { name: 'Scada', variants: ['regular', 'italic', '700', '700italic'], category: 'sans-serif' }, { name: 'Scheherazade', variants: ['regular', '700'], category: 'serif' }, { name: 'Schoolbell', variants: ['regular'], category: 'handwriting' }, { name: 'Scope One', variants: ['regular'], category: 'serif' }, { name: 'Seaweed Script', variants: ['regular'], category: 'display' }, { name: 'Secular One', variants: ['regular'], category: 'sans-serif' }, { name: 'Sedgwick Ave', variants: ['regular'], category: 'handwriting' }, { name: 'Sedgwick Ave Display', variants: ['regular'], category: 'handwriting' }, { name: 'Sevillana', variants: ['regular'], category: 'display' }, { name: 'Seymour One', variants: ['regular'], category: 'sans-serif' }, { name: 'Shadows Into Light', variants: ['regular'], category: 'handwriting' }, { name: 'Shadows Into Light Two', variants: ['regular'], category: 'handwriting' }, { name: 'Shanti', variants: ['regular'], category: 'sans-serif' }, { name: 'Share', variants: ['regular', 'italic', '700', '700italic'], category: 'display' }, { name: 'Share Tech', variants: ['regular'], category: 'sans-serif' }, { name: 'Share Tech Mono', variants: ['regular'], category: 'monospace' }, { name: 'Shojumaru', variants: ['regular'], category: 'display' }, { name: 'Short Stack', variants: ['regular'], category: 'handwriting' }, { name: 'Shrikhand', variants: ['regular'], category: 'display' }, { name: 'Siemreap', variants: ['regular'], category: 'display' }, { name: 'Sigmar One', variants: ['regular'], category: 'display' }, { name: 'Signika', variants: ['300', 'regular', '600', '700'], category: 'sans-serif' }, { name: 'Signika Negative', variants: ['300', 'regular', '600', '700'], category: 'sans-serif' }, { name: 'Simonetta', variants: ['regular', 'italic', '900', '900italic'], category: 'display' }, { name: 'Sintony', variants: ['regular', '700'], category: 'sans-serif' }, { name: 'Sirin Stencil', variants: ['regular'], category: 'display' }, { name: 'Six Caps', variants: ['regular'], category: 'sans-serif' }, { name: 'Skranji', variants: ['regular', '700'], category: 'display' }, { name: 'Slabo 13px', variants: ['regular'], category: 'serif' }, { name: 'Slabo 27px', variants: ['regular'], category: 'serif' }, { name: 'Slackey', variants: ['regular'], category: 'display' }, { name: 'Smokum', variants: ['regular'], category: 'display' }, { name: 'Smythe', variants: ['regular'], category: 'display' }, { name: 'Sniglet', variants: ['regular', '800'], category: 'display' }, { name: 'Snippet', variants: ['regular'], category: 'sans-serif' }, { name: 'Snowburst One', variants: ['regular'], category: 'display' }, { name: 'Sofadi One', variants: ['regular'], category: 'display' }, { name: 'Sofia', variants: ['regular'], category: 'handwriting' }, { name: 'Sonsie One', variants: ['regular'], category: 'display' }, { name: 'Sorts Mill Goudy', variants: ['regular', 'italic'], category: 'serif' }, { name: 'Source Code Pro', variants: ['200', '300', 'regular', '500', '600', '700', '900'], category: 'monospace' }, { name: 'Source Sans Pro', variants: ['200', '200italic', '300', '300italic', 'regular', 'italic', '600', '600italic', '700', '700italic', '900', '900italic'], category: 'sans-serif' }, { name: 'Source Serif Pro', variants: ['regular', '600', '700'], category: 'serif' }, { name: 'Space Mono', variants: ['regular', 'italic', '700', '700italic'], category: 'monospace' }, { name: 'Special Elite', variants: ['regular'], category: 'display' }, { name: 'Spectral', variants: ['200', '200italic', '300', '300italic', 'regular', 'italic', '500', '500italic', '600', '600italic', '700', '700italic', '800', '800italic'], category: 'serif' }, { name: 'Spicy Rice', variants: ['regular'], category: 'display' }, { name: 'Spinnaker', variants: ['regular'], category: 'sans-serif' }, { name: 'Spirax', variants: ['regular'], category: 'display' }, { name: 'Squada One', variants: ['regular'], category: 'display' }, { name: 'Sree Krushnadevaraya', variants: ['regular'], category: 'serif' }, { name: 'Sriracha', variants: ['regular'], category: 'handwriting' }, { name: 'Stalemate', variants: ['regular'], category: 'handwriting' }, { name: 'Stalinist One', variants: ['regular'], category: 'display' }, { name: 'Stardos Stencil', variants: ['regular', '700'], category: 'display' }, { name: 'Stint Ultra Condensed', variants: ['regular'], category: 'display' }, { name: 'Stint Ultra Expanded', variants: ['regular'], category: 'display' }, { name: 'Stoke', variants: ['300', 'regular'], category: 'serif' }, { name: 'Strait', variants: ['regular'], category: 'sans-serif' }, { name: 'Sue Ellen Francisco', variants: ['regular'], category: 'handwriting' }, { name: 'Suez One', variants: ['regular'], category: 'serif' }, { name: 'Sumana', variants: ['regular', '700'], category: 'serif' }, { name: 'Sunshiney', variants: ['regular'], category: 'handwriting' }, { name: 'Supermercado One', variants: ['regular'], category: 'display' }, { name: 'Sura', variants: ['regular', '700'], category: 'serif' }, { name: 'Suranna', variants: ['regular'], category: 'serif' }, { name: 'Suravaram', variants: ['regular'], category: 'serif' }, { name: 'Suwannaphum', variants: ['regular'], category: 'display' }, { name: 'Swanky and Moo Moo', variants: ['regular'], category: 'handwriting' }, { name: 'Syncopate', variants: ['regular', '700'], category: 'sans-serif' }, { name: 'Tangerine', variants: ['regular', '700'], category: 'handwriting' }, { name: 'Taprom', variants: ['regular'], category: 'display' }, { name: 'Tauri', variants: ['regular'], category: 'sans-serif' }, { name: 'Taviraj', variants: ['100', '100italic', '200', '200italic', '300', '300italic', 'regular', 'italic', '500', '500italic', '600', '600italic', '700', '700italic', '800', '800italic', '900', '900italic'], category: 'serif' }, { name: 'Teko', variants: ['300', 'regular', '500', '600', '700'], category: 'sans-serif' }, { name: 'Telex', variants: ['regular'], category: 'sans-serif' }, { name: 'Tenali Ramakrishna', variants: ['regular'], category: 'sans-serif' }, { name: 'Tenor Sans', variants: ['regular'], category: 'sans-serif' }, { name: 'Text Me One', variants: ['regular'], category: 'sans-serif' }, { name: 'The Girl Next Door', variants: ['regular'], category: 'handwriting' }, { name: 'Tienne', variants: ['regular', '700', '900'], category: 'serif' }, { name: 'Tillana', variants: ['regular', '500', '600', '700', '800'], category: 'handwriting' }, { name: 'Timmana', variants: ['regular'], category: 'sans-serif' }, { name: 'Tinos', variants: ['regular', 'italic', '700', '700italic'], category: 'serif' }, { name: 'Titan One', variants: ['regular'], category: 'display' }, { name: 'Titillium Web', variants: ['200', '200italic', '300', '300italic', 'regular', 'italic', '600', '600italic', '700', '700italic', '900'], category: 'sans-serif' }, { name: 'Trade Winds', variants: ['regular'], category: 'display' }, { name: 'Trirong', variants: ['100', '100italic', '200', '200italic', '300', '300italic', 'regular', 'italic', '500', '500italic', '600', '600italic', '700', '700italic', '800', '800italic', '900', '900italic'], category: 'serif' }, { name: 'Trocchi', variants: ['regular'], category: 'serif' }, { name: 'Trochut', variants: ['regular', 'italic', '700'], category: 'display' }, { name: 'Trykker', variants: ['regular'], category: 'serif' }, { name: 'Tulpen One', variants: ['regular'], category: 'display' }, { name: 'Ubuntu', variants: ['300', '300italic', 'regular', 'italic', '500', '500italic', '700', '700italic'], category: 'sans-serif' }, { name: 'Ubuntu Condensed', variants: ['regular'], category: 'sans-serif' }, { name: 'Ubuntu Mono', variants: ['regular', 'italic', '700', '700italic'], category: 'monospace' }, { name: 'Ultra', variants: ['regular'], category: 'serif' }, { name: 'Uncial Antiqua', variants: ['regular'], category: 'display' }, { name: 'Underdog', variants: ['regular'], category: 'display' }, { name: 'Unica One', variants: ['regular'], category: 'display' }, { name: 'UnifrakturCook', variants: ['700'], category: 'display' }, { name: 'UnifrakturMaguntia', variants: ['regular'], category: 'display' }, { name: 'Unkempt', variants: ['regular', '700'], category: 'display' }, { name: 'Unlock', variants: ['regular'], category: 'display' }, { name: 'Unna', variants: ['regular', 'italic', '700', '700italic'], category: 'serif' }, { name: 'VT323', variants: ['regular'], category: 'monospace' }, { name: 'Vampiro One', variants: ['regular'], category: 'display' }, { name: 'Varela', variants: ['regular'], category: 'sans-serif' }, { name: 'Varela Round', variants: ['regular'], category: 'sans-serif' }, { name: 'Vast Shadow', variants: ['regular'], category: 'display' }, { name: 'Vesper Libre', variants: ['regular', '500', '700', '900'], category: 'serif' }, { name: 'Vibur', variants: ['regular'], category: 'handwriting' }, { name: 'Vidaloka', variants: ['regular'], category: 'serif' }, { name: 'Viga', variants: ['regular'], category: 'sans-serif' }, { name: 'Voces', variants: ['regular'], category: 'display' }, { name: 'Volkhov', variants: ['regular', 'italic', '700', '700italic'], category: 'serif' }, { name: 'Vollkorn', variants: ['regular', 'italic', '600', '600italic', '700', '700italic', '900', '900italic'], category: 'serif' }, { name: 'Voltaire', variants: ['regular'], category: 'sans-serif' }, { name: 'Waiting for the Sunrise', variants: ['regular'], category: 'handwriting' }, { name: 'Wallpoet', variants: ['regular'], category: 'display' }, { name: 'Walter Turncoat', variants: ['regular'], category: 'handwriting' }, { name: 'Warnes', variants: ['regular'], category: 'display' }, { name: 'Wellfleet', variants: ['regular'], category: 'display' }, { name: 'Wendy One', variants: ['regular'], category: 'sans-serif' }, { name: 'Wire One', variants: ['regular'], category: 'sans-serif' }, { name: 'Work Sans', variants: ['100', '200', '300', 'regular', '500', '600', '700', '800', '900'], category: 'sans-serif' }, { name: 'Yanone Kaffeesatz', variants: ['200', '300', 'regular', '700'], category: 'sans-serif' }, { name: 'Yantramanav', variants: ['100', '300', 'regular', '500', '700', '900'], category: 'sans-serif' }, { name: 'Yatra One', variants: ['regular'], category: 'display' }, { name: 'Yellowtail', variants: ['regular'], category: 'handwriting' }, { name: 'Yeseva One', variants: ['regular'], category: 'display' }, { name: 'Yesteryear', variants: ['regular'], category: 'handwriting' }, { name: 'Yrsa', variants: ['300', 'regular', '500', '600', '700'], category: 'serif' }, { name: 'Zeyada', variants: ['regular'], category: 'handwriting' }, { name: 'Zilla Slab', variants: ['300', '300italic', 'regular', 'italic', '500', '500italic', '600', '600italic', '700', '700italic'], category: 'serif' }, { name: 'Zilla Slab Highlight', variants: ['regular', '700'], category: 'display' }];
        }
    }]);

    function GoogleFontField(props) {
        _classCallCheck(this, GoogleFontField);

        var _this = _possibleConstructorReturn(this, (GoogleFontField.__proto__ || Object.getPrototypeOf(GoogleFontField)).call(this, props));

        _this.state = _this.props.values;
        return _this;
    }

    _createClass(GoogleFontField, [{
        key: 'update',
        value: function update(merge) {
            //For some reason needs to use this.state instead of this.props.values when merging and creating a new object
            // in order to send a signal that the field has been updated, when you change the value multiple times in a row
            var update = Object.assign(this.state, merge);
            this.props.appFunctions.fieldUpdate(this.props.field.id, update, this.props);
            this.setState(merge);
        }
    }, {
        key: 'changeValue',
        value: function changeValue(newValue) {
            this.update(newValue);
        }
    }, {
        key: 'changeFont',
        value: function changeFont(newValue) {
            var _this2 = this;

            var variants = this.getNewVariants('regular');
            var fonts = this.getGoogleFontArray();
            var font = fonts.find(function (font) {
                return font.name == newValue;
            });
            var fallback = font.category;
            var source = font.source != undefined ? font.source : 'google';

            this.update({ choice: newValue, variant: 'regular', fallback: fallback, source: source });

            setTimeout(function () {
                _this2.update({ variants: variants });
            }, 500);
        }
    }, {
        key: 'changeVariant',
        value: function changeVariant(newValue) {
            var variants = this.props.values.variants;
            if (this.props.values.variants == undefined) {
                variants = [newValue];
            } else if (!this.props.values.variants.includes(newValue)) {
                variants.push(newValue);
            }
            this.update({
                variant: newValue,
                variants: variants
            });
        }
    }, {
        key: 'getNewVariants',
        value: function getNewVariants(variant) {
            var currentVariants = this.props.values.variants;
            if (currentVariants == undefined) {
                if (this.props.values.variant != undefined) {
                    currentVariants = [this.props.values.variant];
                } else {
                    currentVariants = [];
                }
            }
            var newVariants = [];
            if (currentVariants.includes(variant)) {
                //remove the variant if the list of current variants includes it and it has been clicked
                currentVariants.forEach(function (each) {
                    if (each != variant) newVariants.push(each);
                });
            } else {
                newVariants = currentVariants;
                newVariants.push(variant);
            }
            if (this.props.values.variant != undefined && !newVariants.includes(this.props.values.variant)) {
                newVariants.push(this.props.values.variant);
            }
            return newVariants;
        }
    }, {
        key: 'changeVariants',
        value: function changeVariants(variant) {
            var newVariants = this.getNewVariants(variant);
            this.update({ variants: newVariants });
        }
    }, {
        key: 'render',
        value: function render() {
            var _this3 = this;

            var settings = this.props.values;
            var fonts = this.getGoogleFontArray();
            var useGoogleFonts = this.props.appFunctions.allValues.use_google_fonts != undefined ? this.props.appFunctions.allValues.use_google_fonts.yes : window.OffsproutSiteSettings.use_google_fonts != undefined && window.OffsproutSiteSettings.use_google_fonts.yes ? true : false;

            var options = fonts.map(function (option, index) {
                var source = option.source != undefined ? option.source : 'google';

                if (!useGoogleFonts && source == 'google') return null;

                return _react2.default.createElement(
                    'option',
                    { key: index, value: option.name },
                    option.name
                );
            });

            var variant = settings.variant != undefined ? settings.variant : 'regular';
            var variants = fonts.find(function (font) {
                return font.name == settings.choice;
            }).variants;
            var variantOptions = variants.map(function (theVariant, index) {
                return _react2.default.createElement(
                    'option',
                    { key: index, value: theVariant },
                    theVariant
                );
            });
            var variantButtons = variants.map(function (theVariant, index) {
                var disabled = '';
                if (settings.variants == undefined || !settings.variants.length || !settings.variants.includes(theVariant)) disabled = 'disabled';
                if (theVariant == variant) disabled = '';
                return _react2.default.createElement(
                    'div',
                    { key: index, className: 'ocb-sf-button ' + disabled, onClick: function onClick() {
                            return _this3.changeVariants(theVariant);
                        } },
                    theVariant
                );
            });

            return _react2.default.createElement(
                'div',
                { className: 'ocb-sf-google-font-field' },
                _react2.default.createElement(
                    'div',
                    null,
                    'Font'
                ),
                _react2.default.createElement(
                    'select',
                    { value: settings.choice, onChange: function onChange(e) {
                            return _this3.changeFont(e.target.value);
                        } },
                    options
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'mt-2' },
                    'Default Variant'
                ),
                _react2.default.createElement(
                    'select',
                    { value: variant, onChange: function onChange(e) {
                            return _this3.changeVariant(e.target.value);
                        } },
                    variantOptions
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'mt-2' },
                    'Load Variants'
                ),
                variantButtons
            );
        }

        /**
         * Use to print out the array that is returned in getGoogleFontArray
         * Can add it to a codepen to get the print-out
         */

    }, {
        key: 'getGoogleFonts',
        value: function getGoogleFonts() {
            var json = $.getJSON('https://www.googleapis.com/webfonts/v1/webfonts?key=AIzaSyBwIX97bVWr3-6AIUvGkcNnmFgirefZ6Sw', function (data) {
                $.each(data.items, function (index, font) {
                    $('.combobox').append($('<option></option>').attr('value', font.family).text(font.family));
                    var variants = '[';
                    var length = font.variants.length - 1;
                    $.each(font.variants, function (index, variant) {
                        variants += "'" + variant + "'";
                        if (length != index) variants += ",";
                    });
                    variants += ']';
                    $('.google-fonts').append("{name:'" + font.family + "',variants:" + variants + ",category:'" + font.category + "'},<br>");
                });
            });
            return _react2.default.createElement(
                'div',
                null,
                _react2.default.createElement('select', { name: 'combobox', 'class': 'combobox' }),
                _react2.default.createElement('div', { 'class': 'google-fonts' })
            );
        }
    }]);

    return GoogleFontField;
}(_react.Component);

exports.default = GoogleFontField;

/***/ }),

/***/ 807:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _rcSlider = __webpack_require__(98);

var _rcSlider2 = _interopRequireDefault(_rcSlider);

var _reactColor = __webpack_require__(99);

var _radio_toggle = __webpack_require__(18);

var _radio_toggle2 = _interopRequireDefault(_radio_toggle);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var GradientField = function (_Component) {
    _inherits(GradientField, _Component);

    function GradientField(props) {
        _classCallCheck(this, GradientField);

        var _this = _possibleConstructorReturn(this, (GradientField.__proto__ || Object.getPrototypeOf(GradientField)).call(this, props));

        _this.state = _this.props.values;
        return _this;
    }

    _createClass(GradientField, [{
        key: 'update',
        value: function update(merge) {
            var update = Object.assign(this.state, merge);
            console.log('udpate', update);
            this.props.appFunctions.fieldUpdate(this.props.field.id, update, this.props);
            this.setState(merge);
        }
    }, {
        key: 'changeValue',
        value: function changeValue(newValue, where) {
            var updateObject = _defineProperty({}, where, newValue);
            this.update(updateObject);
        }
    }, {
        key: 'changeColor',
        value: function changeColor(newValue, where) {
            var newColor = 'rgba(' + newValue.rgb.r + ',' + newValue.rgb.g + ',' + newValue.rgb.b + ',' + newValue.rgb.a + ')';
            this.update(_defineProperty({}, where, newValue.rgb));
        }
    }, {
        key: 'changeNumber',
        value: function changeNumber(newValue) {
            this.update({ number: newValue });
        }
    }, {
        key: 'togglePicker',
        value: function togglePicker(number) {
            var openOpt = 'color' + number + 'Open';
            this.update(_defineProperty({}, openOpt, this.state[openOpt] == undefined ? true : !this.state[openOpt]));
        }
    }, {
        key: 'changeRange',
        value: function changeRange(value) {
            var theUpdate = {
                color1Start: value[0],
                color2Start: value[1]
            };

            if (this.state.number == 3) {
                theUpdate.color3Start = value[2];
            }

            if (this.state.number == 4) {
                theUpdate.color4Start = value[3];
            }

            this.update(theUpdate);
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var settings = this.state;
            var colors = [1, 2, 3, 4];
            var color1 = _typeof(settings.color1) == 'object' ? 'rgba(' + settings.color1.r + ',' + settings.color1.g + ',' + settings.color1.b + ',' + settings.color1.a + ')' : settings.color1;
            var color2 = _typeof(settings.color2) == 'object' ? 'rgba(' + settings.color2.r + ',' + settings.color2.g + ',' + settings.color2.b + ',' + settings.color2.a + ')' : settings.color2;
            var color3 = _typeof(settings.color3) == 'object' ? 'rgba(' + settings.color3.r + ',' + settings.color3.g + ',' + settings.color3.b + ',' + settings.color3.a + ')' : settings.color3;
            var color4 = _typeof(settings.color4) == 'object' ? 'rgba(' + settings.color4.r + ',' + settings.color4.g + ',' + settings.color4.b + ',' + settings.color4.a + ')' : settings.color4;

            console.log('settings', settings);

            if (settings.number == 2) colors = [1, 2];
            if (settings.number == 3) colors = [1, 2, 3];

            var step = 1;
            var numMin = 2;
            var numMax = 4;
            var angleMin = 0;
            var angleMax = 360;

            var controls = colors.map(function (number) {
                var prevColor = number - 1;
                var openOpt = 'color' + number + 'Open';
                var startOpt = 'color' + number + 'Start';
                var colorOpt = 'color' + number;
                var prevStartOpt = 'color' + prevColor + 'Start';
                var min = number == 1 ? 0 : parseInt(settings[prevStartOpt]);
                var max = 100;
                var picker = null;

                var theColor = _typeof(settings[colorOpt]) == 'object' ? 'rgba(' + settings[colorOpt].r + ',' + settings[colorOpt].g + ',' + settings[colorOpt].b + ',' + settings[colorOpt].a + ')' : settings[colorOpt];
                var colorBox = _react2.default.createElement('div', { className: 'ocb-sf-gradient-color', style: { background: theColor }, onClick: function onClick() {
                        return _this2.togglePicker(number);
                    } });

                if (settings[openOpt] != undefined && settings[openOpt]) {
                    picker = _react2.default.createElement(
                        'div',
                        { className: 'mt-2' },
                        _react2.default.createElement(_reactColor.SketchPicker, { color: settings[colorOpt], onChange: function onChange(value) {
                                return _this2.changeColor(value, colorOpt);
                            } })
                    );
                }

                return _react2.default.createElement(
                    'div',
                    { className: 'mt-3', key: number },
                    _react2.default.createElement(
                        'div',
                        { className: 'ocb-sf-gradient-control' },
                        colorBox,
                        _react2.default.createElement(_rcSlider2.default, {
                            className: 'ocb-sf-spacing-slider',
                            value: parseInt(settings[startOpt]),
                            step: step,
                            min: min,
                            max: max,
                            onChange: function onChange(newValue) {
                                return _this2.changeValue(newValue, startOpt);
                            } }),
                        _react2.default.createElement('input', { className: 'ocb-sf-spacing-input', type: 'number', step: 'any',
                            onChange: function onChange(e) {
                                return _this2.changeValue(parseInt(e.target.value), startOpt);
                            },
                            onClick: function onClick(e) {
                                return e.target.select();
                            },
                            value: parseInt(settings[startOpt]) })
                    ),
                    picker
                );
            });

            var starts = [settings.color1Start, settings.color2Start];
            var theColors = [{ backgroundColor: color1 }, { backgroundColor: color2 }];

            if (settings.number == 3 || settings.number == 4) {
                starts = starts.concat(settings.color3Start);
                theColors = theColors.concat({ backgroundColor: color3 });
            }

            if (settings.number == 4) {
                starts = starts.concat(settings.color4Start);
                theColors = theColors.concat({ backgroundColor: color4 });
            }

            var range = _react2.default.createElement(
                'div',
                { className: 'ocb-sf-gradient-control mt-3' },
                _react2.default.createElement(
                    'strong',
                    null,
                    'Starts'
                ),
                _react2.default.createElement(_rcSlider.Range, {
                    step: 1,
                    min: 0,
                    max: 100,
                    count: settings.number - 1,
                    value: starts,
                    pushable: true,
                    handleStyle: theColors,
                    onChange: this.changeRange.bind(this)
                })
            );

            var gradientCSS = 'linear-gradient(' + settings.angle + 'deg, ' + color1 + ' ' + settings.color1Start + '%, ' + color2 + ' ' + settings.color2Start + '%';

            if (settings.number == 3 || settings.number == 4) {
                gradientCSS += ', ' + color3 + ' ' + settings.color3Start + '%';
            }

            if (settings.number == 4) {
                gradientCSS += ', ' + color4 + ' ' + settings.color4Start + '%';
            }

            gradientCSS += ')';

            var gradient = _react2.default.createElement('div', { className: 'ocb-sf-gradient-show', style: {
                    background: gradientCSS
                } });

            return _react2.default.createElement(
                'div',
                null,
                gradient,
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-sf-gradient-control mt-2' },
                    _react2.default.createElement(_radio_toggle2.default, { update: this.changeNumber.bind(this), items: [{
                            name: '2 Colors',
                            value: 2
                        }, {
                            name: '3 Colors',
                            value: 3
                        }, {
                            name: '4 Colors',
                            value: 4
                        }], value: settings.number, flex: true })
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-sf-gradient-control mt-3' },
                    _react2.default.createElement(
                        'strong',
                        null,
                        'Angle'
                    ),
                    _react2.default.createElement(_rcSlider2.default, {
                        className: 'ocb-sf-spacing-slider',
                        value: parseInt(settings['angle']),
                        step: step,
                        min: angleMin,
                        max: angleMax,
                        onChange: function onChange(newValue) {
                            return _this2.changeValue(newValue, 'angle');
                        } }),
                    _react2.default.createElement('input', { className: 'ocb-sf-spacing-input', type: 'number', step: 'any',
                        onChange: function onChange(e) {
                            return _this2.changeValue(parseInt(e.target.value), 'angle');
                        },
                        onClick: function onClick(e) {
                            return e.target.select();
                        },
                        value: parseInt(settings['angle']) })
                ),
                controls
            );
        }
    }]);

    return GradientField;
}(_react.Component);

exports.default = GradientField;

/***/ }),

/***/ 808:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _color_combined = __webpack_require__(235);

var _color_combined2 = _interopRequireDefault(_color_combined);

var _icon_selector = __webpack_require__(359);

var _icon_selector2 = _interopRequireDefault(_icon_selector);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var IconField = function (_Component) {
    _inherits(IconField, _Component);

    function IconField() {
        _classCallCheck(this, IconField);

        return _possibleConstructorReturn(this, (IconField.__proto__ || Object.getPrototypeOf(IconField)).apply(this, arguments));
    }

    _createClass(IconField, [{
        key: 'update',
        value: function update(merge) {
            var update = Object.assign(this.props.values, merge);
            this.props.appFunctions.fieldUpdate(this.props.field.id, update, this.props);
        }
    }, {
        key: 'updateBackgroundColor',
        value: function updateBackgroundColor(update) {
            this.update({ backgroundColor: update.color, backgroundCustomColor: update.customColor });
        }
    }, {
        key: 'render',
        value: function render() {
            var settings = this.props.values;

            return _react2.default.createElement(
                'div',
                { className: 'ocb-sf-icon-field' },
                _react2.default.createElement(_icon_selector2.default, { settings: settings, update: this.update.bind(this) })
            );
        }
    }]);

    return IconField;
}(_react.Component);

exports.default = IconField;

/***/ }),

/***/ 809:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactSortableHoc = __webpack_require__(71);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var InputField = function (_Component) {
    _inherits(InputField, _Component);

    function InputField(props) {
        _classCallCheck(this, InputField);

        var _this = _possibleConstructorReturn(this, (InputField.__proto__ || Object.getPrototypeOf(InputField)).call(this, props));

        _this.state = _extends({}, _this.props.values, { showFields: false });
        _this.optionTimer = false;
        return _this;
    }

    _createClass(InputField, [{
        key: 'update',
        value: function update(merge) {
            var update = Object.assign(this.state, merge);
            this.props.appFunctions.fieldUpdate(this.props.field.id, update, this.props);
            this.setState(merge);
        }
    }, {
        key: 'changeValue',
        value: function changeValue(key, newValue) {
            this.update(_defineProperty({}, key, newValue));
        }
    }, {
        key: 'onSortEnd',
        value: function onSortEnd(_ref) {
            var oldIndex = _ref.oldIndex,
                newIndex = _ref.newIndex;

            var newOrder = (0, _reactSortableHoc.arrayMove)(this.state.options, oldIndex, newIndex);
            this.changeValue('options', newOrder);
        }
    }, {
        key: 'getWrapped',
        value: function getWrapped(name, field) {
            return _react2.default.createElement(
                'div',
                { className: 'ocb-sf-row' },
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-sf-row-label' },
                    name
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-sf-row-input' },
                    field
                )
            );
        }
    }, {
        key: 'getType',
        value: function getType(value) {
            var _this2 = this;

            var field = _react2.default.createElement(
                'select',
                { defaultValue: value, onChange: function onChange(e) {
                        return _this2.changeValue('type', e.target.value);
                    } },
                _react2.default.createElement(
                    'option',
                    { value: 'text' },
                    'Text'
                ),
                _react2.default.createElement(
                    'option',
                    { value: 'url' },
                    'URL'
                ),
                _react2.default.createElement(
                    'option',
                    { value: 'tel' },
                    'Telephone'
                ),
                _react2.default.createElement(
                    'option',
                    { value: 'email' },
                    'Email'
                ),
                _react2.default.createElement(
                    'option',
                    { value: 'date' },
                    'Date'
                ),
                _react2.default.createElement(
                    'option',
                    { value: 'number' },
                    'Number'
                ),
                _react2.default.createElement(
                    'option',
                    { value: 'textarea' },
                    'Text Box'
                ),
                _react2.default.createElement(
                    'option',
                    { value: 'select' },
                    'Select'
                ),
                _react2.default.createElement(
                    'option',
                    { value: 'radio' },
                    'Radio'
                ),
                _react2.default.createElement(
                    'option',
                    { value: 'checkbox' },
                    'Checkbox'
                ),
                _react2.default.createElement(
                    'option',
                    { value: 'hidden' },
                    'Hidden'
                ),
                _react2.default.createElement(
                    'option',
                    { value: 'honeypot' },
                    'Honey Pot'
                ),
                _react2.default.createElement(
                    'option',
                    { value: 'math' },
                    'Math Verification'
                )
            );

            return this.getWrapped('Type', field);
        }
    }, {
        key: 'getSize',
        value: function getSize(value) {
            var _this3 = this;

            var field = _react2.default.createElement(
                'select',
                { defaultValue: value, onChange: function onChange(e) {
                        return _this3.changeValue('size', e.target.value);
                    } },
                _react2.default.createElement(
                    'option',
                    { value: '100' },
                    'Full'
                ),
                _react2.default.createElement(
                    'option',
                    { value: '75' },
                    'Three Fourths'
                ),
                _react2.default.createElement(
                    'option',
                    { value: '66' },
                    'Two Thirds'
                ),
                _react2.default.createElement(
                    'option',
                    { value: '50' },
                    'Half'
                ),
                _react2.default.createElement(
                    'option',
                    { value: '33' },
                    'Third'
                ),
                _react2.default.createElement(
                    'option',
                    { value: '25' },
                    'Fourth'
                )
            );

            return this.getWrapped('Size', field);
        }
    }, {
        key: 'getName',
        value: function getName(value) {
            var _this4 = this;

            var field = _react2.default.createElement('input', { type: 'text', defaultValue: value, onChange: function onChange(e) {
                    return _this4.changeValue('name', e.target.value);
                } });

            return this.getWrapped('Field Name', field);
        }
    }, {
        key: 'getPlaceholder',
        value: function getPlaceholder(value) {
            var _this5 = this;

            var field = _react2.default.createElement('input', { type: 'text', defaultValue: value, onChange: function onChange(e) {
                    return _this5.changeValue('placeholder', e.target.value);
                } });

            return this.getWrapped('Placeholder', field);
        }
    }, {
        key: 'getLabel',
        value: function getLabel(value) {
            var _this6 = this;

            var field = _react2.default.createElement('input', { type: 'text', defaultValue: value, onChange: function onChange(e) {
                    return _this6.changeValue('label', e.target.value);
                } });

            return this.getWrapped('Label', field);
        }
    }, {
        key: 'getDefault',
        value: function getDefault(value) {
            var _this7 = this;

            var inputType = 'text';
            if (['text', 'tel', 'number', 'email', 'url', 'date'].includes(this.state.type)) {
                inputType = this.state.type;
            }

            var field = _react2.default.createElement('input', { type: inputType, defaultValue: value, onChange: function onChange(e) {
                    return _this7.changeValue('defaultValue', e.target.value);
                } });

            return this.getWrapped('Default', field);
        }
    }, {
        key: 'getRequired',
        value: function getRequired(value) {
            var _this8 = this;

            var field = _react2.default.createElement('input', { type: 'checkbox', checked: value, onChange: function onChange(e) {
                    return _this8.changeValue('required', e.target.checked);
                } });

            return this.getWrapped('Required', field);
        }
    }, {
        key: 'getValue',
        value: function getValue(value) {
            var _this9 = this;

            var field = _react2.default.createElement('input', { type: 'text', defaultValue: value, onChange: function onChange(e) {
                    return _this9.changeValue('value', e.target.value);
                } });

            return this.getWrapped('Value', field);
        }
    }, {
        key: 'getOptions',
        value: function getOptions(value) {
            var _this10 = this;

            var Handle = (0, _reactSortableHoc.SortableHandle)(function () {
                return _react2.default.createElement(
                    'div',
                    { className: 'ocb-sf-input-options-sort' },
                    _react2.default.createElement('i', { className: 'fa fa-bars' })
                );
            });

            var options = value.map(function (option, mapIndex) {
                var TheOption = (0, _reactSortableHoc.SortableElement)(function (index) {
                    return _react2.default.createElement(
                        'div',
                        { className: 'ocb-sf-input-options-option d-flex align-items-center' },
                        _react2.default.createElement(Handle, null),
                        _react2.default.createElement(
                            'div',
                            { className: 'ocb-sf-input-option p-2' },
                            _react2.default.createElement('input', { type: 'text', defaultValue: option, onChange: function onChange(e) {
                                    return _this10.updateOption(e.target.value, mapIndex);
                                } })
                        ),
                        _react2.default.createElement(
                            'div',
                            { className: 'ocb-sf-input-option-delete', onClick: function onClick() {
                                    return _this10.deleteOption(mapIndex);
                                } },
                            _react2.default.createElement('i', { className: 'fa fa-remove' })
                        )
                    );
                });
                return _react2.default.createElement(TheOption, { key: mapIndex, index: mapIndex });
            });

            var Field = (0, _reactSortableHoc.SortableContainer)(function () {
                return _react2.default.createElement(
                    'div',
                    { className: 'ocb-sf-input-options' },
                    options
                );
            });

            var field = _react2.default.createElement(
                'div',
                { className: 'ocb-sf-input-full' },
                _react2.default.createElement(Field, { onSortEnd: this.onSortEnd.bind(this), useDragHandle: true, helperClass: 'ocb-sf-repeater-item-sorting' }),
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-sf-button', onClick: function onClick() {
                            return _this10.addOption();
                        } },
                    'Add Option'
                )
            );

            return this.getWrapped('Options', field);
        }
    }, {
        key: 'addOption',
        value: function addOption() {
            var newOptions = this.state.options;
            newOptions = newOptions.concat('new');
            this.changeValue('options', newOptions);
        }
    }, {
        key: 'deleteOption',
        value: function deleteOption(index) {
            var newOptions = this.state.options;
            newOptions.splice(index, 1);
            this.changeValue('options', newOptions);
        }
    }, {
        key: 'updateOption',
        value: function updateOption(value, index) {
            var _this11 = this;

            var newOptions = this.state.options;
            newOptions[index] = value;
            clearTimeout(this.optionTimer);
            this.optionTimer = setTimeout(function () {
                _this11.changeValue('options', newOptions);
            }, 1500);
        }
    }, {
        key: 'getExpandedFields',
        value: function getExpandedFields(settings) {
            var fields = null;

            switch (settings.type) {
                case 'math':
                case 'honeypot':
                    fields = _react2.default.createElement(
                        'div',
                        { className: 'ocb-sf-input-expanded-fields animated fadeIn' },
                        this.getType(settings.type)
                    );
                    break;
                case 'hidden':
                    fields = _react2.default.createElement(
                        'div',
                        { className: 'ocb-sf-input-expanded-fields animated fadeIn' },
                        this.getType(settings.type),
                        this.getValue(settings.value)
                    );
                    break;
                case 'select':
                case 'radio':
                    fields = _react2.default.createElement(
                        'div',
                        { className: 'ocb-sf-input-expanded-fields animated fadeIn' },
                        this.getType(settings.type),
                        this.getSize(settings.size),
                        this.getLabel(settings.label),
                        this.getDefault(settings.defaultValue),
                        this.getRequired(settings.required),
                        this.getOptions(this.state.options)
                    );
                    break;
                default:
                    fields = _react2.default.createElement(
                        'div',
                        { className: 'ocb-sf-input-expanded-fields animated fadeIn' },
                        this.getType(settings.type),
                        this.getSize(settings.size),
                        this.getPlaceholder(settings.placeholder),
                        this.getLabel(settings.label),
                        this.getDefault(settings.defaultValue),
                        this.getRequired(settings.required)
                    );
            }

            return fields;
        }
    }, {
        key: 'render',
        value: function render() {
            var _this12 = this;

            var settings = this.state;
            var defaultSettings = {
                name: 'Name',
                type: 'text',
                size: 100,
                placeholder: 'Enter text',
                label: '',
                defaultValue: '',
                options: ['one', 'two', 'three'],
                required: 0,
                value: ''
            };

            settings = Object.assign(defaultSettings, settings);

            var showButton = null;

            if (this.props.field.configuration == undefined || this.props.field.configuration.expandButton !== false) {
                var buttonText = this.state.showFields ? 'Hide Input Options' : 'Show Input Options';
                showButton = _react2.default.createElement(
                    'div',
                    { className: 'ocb-sf-button ocb-sf-button-regular mt-2',
                        onClick: function onClick() {
                            return _this12.setState({ showFields: !_this12.state.showFields });
                        } },
                    buttonText
                );
            }

            var expandedFields = null;

            if (this.state.showFields || this.props.field.configuration != undefined && this.props.field.configuration.expandButton == false) {
                expandedFields = this.getExpandedFields(settings);
            }

            return _react2.default.createElement(
                'div',
                { className: 'ocb-sf-input-field' },
                this.getName(settings.name),
                showButton,
                expandedFields
            );
        }
    }]);

    return InputField;
}(_react.Component);

exports.default = InputField;

/***/ }),

/***/ 81:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

exports.default = function () {
    var which = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'default';

    var modules = _settings_helpers2.default.getModuleRegistry();

    var navigationModule = modules.find(function (module) {
        return module.type == 'navigation';
    });
    var contentModule = modules.find(function (module) {
        return module.type == 'content';
    });
    var textModule = modules.find(function (module) {
        return module.type == 'text';
    });
    var blogPostModule = modules.find(function (module) {
        return module.type == 'posts';
    });
    var headingModule = modules.find(function (module) {
        return module.type == 'header';
    });
    var commentsModule = modules.find(function (module) {
        return module.type == 'comments';
    });

    //_______________MODULE SETTINGS_______________

    //Navigation Module

    var defaultNavigation = Object.assign({}, navigationModule.default.default, {
        menu_align: {
            choice: "right"
        },
        include_logo: {
            yes: 1
        }
    });

    //Content Module

    var defaultContent = Object.assign({}, contentModule.default.default);
    var noRowPaddingContent = Object.assign({}, contentModule.default.default, { remove_row_padding: { yes: 1 } });

    //Comments Module

    var defaultComments = Object.assign({}, commentsModule.default.default);

    //Text

    var defaultText = Object.assign({}, textModule.default.default, {
        alignment: {
            choice: 'center'
        },
        mobile_alignment: {
            choice: 'center'
        },
        text: {
            text: '<p>Built by [ocbconnect company:name]. Copyright [ocbconnect utility:year].</p>',
            startingText: '<p>Built by [ocbconnect company:name]. Copyright [ocbconnect utility:year].</p>'
        }
    });

    //Headings

    var postTitleHeadline = Object.assign({}, headingModule.default.default, {
        alignment: {
            choice: 'center'
        },
        mobile_alignment: {
            choice: 'center'
        },
        text: {
            text: 'Post Title',
            connection: {
                key: 'post_title',
                name: 'Post Title',
                options: [],
                type: 'post'
            }
        },
        type: {
            choice: 'h1'
        }
    });

    var dateTitleHeadline = Object.assign({}, headingModule.default.default, {
        alignment: {
            choice: 'center'
        },
        mobile_alignment: {
            choice: 'center'
        },
        text: {
            text: 'Post Date',
            connection: {
                key: 'post_date',
                name: 'Post Date',
                options: {
                    format: 'F jS, Y'
                },
                type: 'post'
            }
        },
        type: {
            choice: 'span'
        }
    });

    var archiveHeadline = Object.assign({}, headingModule.default.default, {
        alignment: {
            choice: 'center'
        },
        mobile_alignment: {
            choice: 'center'
        },
        add_line: {
            yes: 1
        },
        line_width: {
            value: 50,
            units: 'px',
            useDefault: 'custom'
        },
        line_thickness: {
            value: 5,
            units: 'px',
            useDefault: 'custom'
        },
        line_color: {
            color: 'primary',
            customColor: '#000000'
        },
        line_align: {
            choice: 'center'
        },
        text: {
            text: 'Blog'
        },
        type: {
            choice: 'h1'
        }
    });

    var fourfourHeadline = Object.assign({}, headingModule.default.default, {
        alignment: {
            choice: 'center'
        },
        mobile_alignment: {
            choice: 'center'
        },
        add_line: {
            yes: 1
        },
        line_width: {
            value: 50,
            units: 'px',
            useDefault: 'custom'
        },
        line_thickness: {
            value: 5,
            units: 'px',
            useDefault: 'custom'
        },
        line_color: {
            color: 'primary',
            customColor: '#000000'
        },
        line_align: {
            choice: 'center'
        },
        text: {
            text: 'Oops! We can\'t find that page.'
        },
        type: {
            choice: 'h1'
        }
    });

    var fourfourSub = Object.assign({}, headingModule.default.default, {
        alignment: {
            choice: 'center'
        },
        mobile_alignment: {
            choice: 'center'
        },
        line_align: {
            choice: 'center'
        },
        text: {
            text: 'Why not read one of our recent posts?'
        },
        type: {
            choice: 'span'
        }
    });

    //Posts

    var archivePosts = Object.assign({}, blogPostModule.default.default, {
        include_button: {
            yes: 1
        },
        button_skin: {
            choice: 'custom'
        },
        item_content_align: {
            choice: 'center'
        },
        item_title_align: {
            choice: 'center'
        },
        item_bottom_margin: {
            units: 'em',
            value: 5,
            useDefault: 'custom'
        },
        item_image_include: {
            yes: 1
        },
        item_image_position: {
            choice: 'topfull'
        },
        item_meta_date_include: {
            yes: 1
        },
        item_padding: {
            bottom: 2,
            left: 1,
            right: 1,
            top: 2,
            units: 'em',
            useDefault: 'custom'
        },
        posts_query_source: {
            choice: 'main'
        },
        button_alignment: {
            choice: 'stretch'
        },
        item_meta_date_align: {
            choice: 'center'
        },
        item_meta_align: {
            choice: 'center'
        }
    });

    var fourfourPosts = Object.assign({}, blogPostModule.default.default, {
        include_button: {
            yes: 1
        },
        button_skin: {
            choice: 'custom'
        },
        item_content_align: {
            choice: 'center'
        },
        item_title_align: {
            choice: 'center'
        },
        item_bottom_margin: {
            units: 'em',
            value: 5,
            useDefault: 'custom'
        },
        item_image_include: {
            yes: 1
        },
        item_image_position: {
            choice: 'topfull'
        },
        item_meta_date_include: {
            yes: 1
        },
        item_padding: {
            bottom: 2,
            left: 1,
            right: 1,
            top: 2,
            units: 'em',
            useDefault: 'custom'
        },
        posts_query_source: {
            choice: 'custom'
        },
        button_alignment: {
            choice: 'stretch'
        },
        item_meta_date_align: {
            choice: 'center'
        },
        item_meta_align: {
            choice: 'center'
        }
    });

    var defaultStandard = (0, _default_standard2.default)().default;

    //_______________ROW STYLES_______________

    //Row Styles

    var defaultTopRow = Object.assign({}, defaultStandard, {
        padding: {
            bottom: 1,
            left: 1,
            right: 1,
            top: 1,
            units: "em",
            useDefault: "custom"
        }
    });

    var defaultHeroRow = Object.assign({}, defaultStandard, {
        color: {
            color: 'white'
        },
        padding: {
            bottom: 7,
            left: 2,
            right: 2,
            top: 7,
            units: "em",
            useDefault: "custom"
        },
        background_type: {
            choice: 'image'
        },
        background_image: {
            size: 'large',
            url: 'https://s3-us-west-2.amazonaws.com/s.cdpn.io/142996/slider-2.jpg',
            useWhich: 'featured'
        },
        background_screen: {
            color: 'primary',
            customColor: "#000000"
        },
        background_type_screen: {
            choice: 'color'
        },
        screen_opacity: {
            units: '%',
            useDefault: 'default',
            value: 70
        }
    });

    var defaultMiddleRow = Object.assign({}, defaultStandard, {
        padding: {
            bottom: 0,
            left: 0,
            right: 0,
            top: 0,
            units: "em",
            useDefault: "custom"
        },
        max_width: {
            units: '%',
            useDefault: 'custom',
            value: 100
        }
    });

    var skinnyMiddleRow = Object.assign({}, defaultStandard, {
        padding: {
            bottom: 5,
            left: 2,
            right: 2,
            top: 5,
            units: "em",
            useDefault: "custom"
        },
        max_width: {
            units: 'px',
            useDefault: 'custom',
            value: 800
        }
    });

    var defaultBottomRow = Object.assign({}, defaultStandard, {
        background: { color: "primary" },
        color: { color: "white" },
        padding: {
            bottom: 4,
            left: 1,
            right: 1,
            top: 4,
            units: "em",
            useDefault: "custom"
        }
    });

    //_______________ROWS_______________

    //Header/Footer Rows

    var standardHeader = {
        id: _settings_helpers2.default.generateId('row'),
        type: 'row',
        settings: {
            verticalAlign: 'top'
        },
        standard: {
            linked: defaultTopRow
        },
        items: [{
            id: _settings_helpers2.default.generateId('col'),
            type: 'column',
            width: 100,
            standard: {
                linked: defaultStandard
            },
            items: [{
                containsItems: null,
                id: _settings_helpers2.default.generateId('mod'),
                items: false,
                moduleType: 'navigation',
                settings: {
                    linked: defaultNavigation
                },
                standard: {
                    linked: defaultStandard
                },
                type: 'module'
            }]
        }]
    };

    var standardFooter = {
        id: _settings_helpers2.default.generateId('row'),
        type: 'row',
        settings: {
            verticalAlign: 'top'
        },
        standard: {
            linked: defaultBottomRow
        },
        items: [{
            id: _settings_helpers2.default.generateId('col'),
            type: 'column',
            width: 100,
            standard: {
                linked: defaultStandard
            },
            items: [{
                containsItems: null,
                id: _settings_helpers2.default.generateId('mod'),
                items: false,
                moduleType: 'text',
                settings: {
                    linked: defaultText
                },
                standard: {
                    linked: defaultStandard
                },
                type: 'module'
            }]
        }]
    };

    //Content Placeholder Rows

    var standardContent = {
        id: _settings_helpers2.default.generateId('row'),
        type: 'row',
        settings: {
            verticalAlign: 'top'
        },
        standard: {
            linked: defaultMiddleRow
        },
        items: [{
            id: _settings_helpers2.default.generateId('col'),
            type: 'column',
            width: 100,
            standard: {
                linked: defaultStandard
            },
            items: [{
                containsItems: null,
                id: _settings_helpers2.default.generateId('mod'),
                items: false,
                moduleType: 'content',
                settings: {
                    linked: defaultContent
                },
                standard: {
                    linked: defaultStandard
                },
                type: 'module'
            }]
        }]
    };

    var skinnyContent = {
        id: _settings_helpers2.default.generateId('row'),
        type: 'row',
        settings: {
            verticalAlign: 'top'
        },
        standard: {
            linked: skinnyMiddleRow
        },
        items: [{
            id: _settings_helpers2.default.generateId('col'),
            type: 'column',
            width: 100,
            standard: {
                linked: defaultStandard
            },
            items: [{
                containsItems: null,
                id: _settings_helpers2.default.generateId('mod'),
                items: false,
                moduleType: 'content',
                settings: {
                    linked: noRowPaddingContent
                },
                standard: {
                    linked: defaultStandard
                },
                type: 'module'
            }, {
                containsItems: null,
                id: _settings_helpers2.default.generateId('mod'),
                items: false,
                moduleType: 'comments',
                settings: {
                    linked: defaultComments
                },
                standard: {
                    linked: defaultStandard
                },
                type: 'module'
            }]
        }]
    };

    //Hero Rows

    var blogHero = {
        id: _settings_helpers2.default.generateId('row'),
        type: 'row',
        settings: {
            verticalAlign: 'top'
        },
        standard: {
            linked: defaultHeroRow
        },
        items: [{
            id: _settings_helpers2.default.generateId('col'),
            type: 'column',
            width: 100,
            standard: {
                linked: defaultStandard
            },
            items: [{
                containsItems: null,
                id: _settings_helpers2.default.generateId('mod'),
                items: false,
                moduleType: 'header',
                settings: {
                    linked: postTitleHeadline
                },
                standard: {
                    linked: defaultStandard
                },
                type: 'module'
            }, {
                containsItems: null,
                id: _settings_helpers2.default.generateId('mod'),
                items: false,
                moduleType: 'header',
                settings: {
                    linked: dateTitleHeadline
                },
                standard: {
                    linked: defaultStandard
                },
                type: 'module'
            }]
        }]
    };

    //Blog Post Rows

    var blogPosts = {
        id: _settings_helpers2.default.generateId('row'),
        type: 'row',
        settings: {
            verticalAlign: 'top'
        },
        standard: {
            linked: skinnyMiddleRow
        },
        items: [{
            id: _settings_helpers2.default.generateId('col'),
            type: 'column',
            width: 100,
            standard: {
                linked: defaultStandard
            },
            items: [{
                containsItems: null,
                id: _settings_helpers2.default.generateId('mod'),
                items: false,
                moduleType: 'header',
                settings: {
                    linked: archiveHeadline
                },
                standard: {
                    linked: defaultStandard
                },
                type: 'module'
            }, {
                containsItems: null,
                id: _settings_helpers2.default.generateId('mod'),
                items: false,
                moduleType: 'posts',
                settings: {
                    linked: archivePosts
                },
                standard: {
                    linked: defaultStandard
                },
                type: 'module'
            }]
        }]
    };

    var fourfourPostsRow = {
        id: _settings_helpers2.default.generateId('row'),
        type: 'row',
        settings: {
            verticalAlign: 'top'
        },
        standard: {
            linked: skinnyMiddleRow
        },
        items: [{
            id: _settings_helpers2.default.generateId('col'),
            type: 'column',
            width: 100,
            standard: {
                linked: defaultStandard
            },
            items: [{
                containsItems: null,
                id: _settings_helpers2.default.generateId('mod'),
                items: false,
                moduleType: 'header',
                settings: {
                    linked: fourfourHeadline
                },
                standard: {
                    linked: defaultStandard
                },
                type: 'module'
            }, {
                containsItems: null,
                id: _settings_helpers2.default.generateId('mod'),
                items: false,
                moduleType: 'header',
                settings: {
                    linked: fourfourSub
                },
                standard: {
                    linked: defaultStandard
                },
                type: 'module'
            }, {
                containsItems: null,
                id: _settings_helpers2.default.generateId('mod'),
                items: false,
                moduleType: 'posts',
                settings: {
                    linked: fourfourPosts
                },
                standard: {
                    linked: defaultStandard
                },
                type: 'module'
            }]
        }]
    };

    var items = [];

    switch (which) {
        case 'default':
            items = items.concat(standardHeader);
            items = items.concat(standardContent);
            items = items.concat(standardFooter);
            break;
        case 'justContent':
            items = items.concat(standardContent);
            break;
        case 'blogPost':
            items = items.concat(standardHeader);
            items = items.concat(blogHero);
            items = items.concat(skinnyContent);
            items = items.concat(standardFooter);
            break;
        case 'archive':
            items = items.concat(standardHeader);
            items = items.concat(blogPosts);
            items = items.concat(standardFooter);
            break;
        case '404':
            items = items.concat(standardHeader);
            items = items.concat(fourfourPostsRow);
            items = items.concat(standardFooter);
            break;
    }

    var defaultStructure = {
        defaultUsed: false,
        id: _settings_helpers2.default.generateId('tree'),
        items: items,
        lastUpdated: new Date(),
        type: 'tree'
    };

    return defaultStructure;
};

var _default_standard = __webpack_require__(16);

var _default_standard2 = _interopRequireDefault(_default_standard);

var _settings_helpers = __webpack_require__(2);

var _settings_helpers2 = _interopRequireDefault(_settings_helpers);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/***/ }),

/***/ 810:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactSortableHoc = __webpack_require__(71);

var _tree_reducer_functions = __webpack_require__(28);

var _tree_reducer_functions2 = _interopRequireDefault(_tree_reducer_functions);

var _icon_selector = __webpack_require__(359);

var _icon_selector2 = _interopRequireDefault(_icon_selector);

var _settings_helpers = __webpack_require__(2);

var _settings_helpers2 = _interopRequireDefault(_settings_helpers);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var SortableDragHandle = (0, _reactSortableHoc.SortableHandle)(function () {
    return _react2.default.createElement(
        'div',
        { className: 'ocb-sf-items-field-control-button ocb-sf-items-sort-button p-3 d-flex align-items-center' },
        _react2.default.createElement('i', { className: 'fa fa-bars ocb-sf-repeater-sort' })
    );
});
var SortableRepeaterItem = (0, _reactSortableHoc.SortableElement)(function (_ref) {
    var itemProps = _ref.itemProps,
        itemIndex = _ref.itemIndex,
        itemThis = _ref.itemThis;

    var inner = _react2.default.createElement(
        'div',
        { className: 'ocb-sf-items-field-item-inner d-flex align-items-center p-2' },
        _react2.default.createElement(
            'div',
            { className: 'ocb-sf-items-field-item-name mb-1' },
            _react2.default.createElement('input', { onChange: function onChange(e) {
                    return itemThis.updateItemName(e.target.value, itemIndex);
                }, placeholder: 'Name', value: itemProps.name })
        ),
        _react2.default.createElement(
            'div',
            { className: 'ocb-sf-items-field-item-description mb-1' },
            _react2.default.createElement('input', { onChange: function onChange(e) {
                    return itemThis.updateItemDescription(e.target.value, itemIndex);
                }, placeholder: 'Description', value: itemProps.description })
        ),
        _react2.default.createElement(
            'div',
            { className: 'ocb-sf-items-field-item-icon' },
            _react2.default.createElement(_icon_selector2.default, { settings: { icon: itemProps.icon }, update: itemThis.updateItemIcon.bind(itemThis), index: itemIndex })
        )
    );

    if (itemThis.props.field.configuration != undefined && itemThis.props.field.configuration.itemType != undefined && itemThis.props.field.configuration.itemType == 'module') {
        var moduleTypes = _settings_helpers2.default.getModuleRegistry();

        var moduleTypeDropdown = _react2.default.createElement(
            'select',
            { style: { width: 'auto' }, onChange: function onChange(e) {
                    return itemThis.updateItemName(e.target.value, itemIndex);
                }, value: itemProps.name },
            _react2.default.createElement(
                'option',
                { value: '' },
                'Choose a module type'
            ),
            moduleTypes.map(function (type) {
                if (itemThis.props.field.configuration.exclude != undefined && itemThis.props.field.configuration.exclude.includes(type.type)) return null;
                return _react2.default.createElement(
                    'option',
                    { value: type.type, key: type.type },
                    type.name
                );
            })
        );

        inner = _react2.default.createElement(
            'div',
            { className: 'ocb-sf-items-field-item-inner d-flex align-items-center p-2' },
            moduleTypeDropdown,
            _react2.default.createElement('i', { className: 'ml-2 fa fa-edit ocb-cursor-pointer', onClick: function onClick() {
                    return itemThis.props.appFunctions.switchActiveObject(itemProps.id, 'settings');
                } })
        );
    }

    return _react2.default.createElement(
        'div',
        { key: itemIndex, className: 'ocb-sf-items-field-item d-flex align-items-stretch mb-2 justify-content-between' },
        _react2.default.createElement(SortableDragHandle, null),
        inner,
        _react2.default.createElement(
            'div',
            { className: 'ocb-sf-items-field-control-button ocb-sf-items-remove-button p-3 d-flex align-items-center', onClick: function onClick() {
                    return itemThis.deleteItem(itemIndex);
                } },
            _react2.default.createElement('i', { className: 'fa fa-remove ocb-sf-repeater-remove' })
        )
    );
});
var SortableRepeaterItems = (0, _reactSortableHoc.SortableContainer)(function (_ref2) {
    var itemProps = _ref2.itemProps,
        items = _ref2.items,
        itemThis = _ref2.itemThis;

    return _react2.default.createElement(
        'div',
        { className: 'ocb-sf-items-field-items' },
        items.map(function (each, index) {
            return _react2.default.createElement(SortableRepeaterItem, { key: index, itemProps: each, index: index, itemIndex: index, itemThis: itemThis });
        })
    );
});

var ItemsField = function (_Component) {
    _inherits(ItemsField, _Component);

    function ItemsField(props) {
        _classCallCheck(this, ItemsField);

        var _this = _possibleConstructorReturn(this, (ItemsField.__proto__ || Object.getPrototypeOf(ItemsField)).call(this, props));

        _this.state = _this.props.values;

        if (_this.props.values.items != undefined) {
            var needsUpdate = false;
            var newItems = _this.props.values.items.map(function (item) {
                if (item.id == undefined || item.id == false) {
                    item.id = _settings_helpers2.default.generateId('mod');
                    needsUpdate = true;
                }
                return item;
            });
            if (needsUpdate) _this.update({ items: newItems });
        }
        return _this;
    }

    _createClass(ItemsField, [{
        key: 'update',
        value: function update(merge) {
            //console.log('update items', merge);
            var type = this.props.field.configuration != undefined && this.props.field.configuration.itemType != undefined ? this.props.field.configuration.itemType : 'container';
            var update = Object.assign(this.state, { itemType: type }, merge);
            this.props.appFunctions.fieldUpdate(this.props.field.id, update, this.props);
            this.setState(merge);
        }
    }, {
        key: 'deleteItem',
        value: function deleteItem(index) {
            var newState = this.state.items;
            newState.splice(index, 1);
            var update = { items: newState };

            //May need to run the update function and delete the item there too
            this.update(update);
        }
    }, {
        key: 'changeValue',
        value: function changeValue(newValue) {
            this.update({ yes: newValue });
        }
    }, {
        key: 'onSortEnd',
        value: function onSortEnd(_ref3) {
            var oldIndex = _ref3.oldIndex,
                newIndex = _ref3.newIndex;

            var newOrder = (0, _reactSortableHoc.arrayMove)(this.state.items, oldIndex, newIndex);
            var update = { items: newOrder };
            this.update(update);
        }
    }, {
        key: 'updateItemName',
        value: function updateItemName(name, index) {
            var newState = this.state.items;
            newState[index].name = name;
            this.update({ items: newState });
        }
    }, {
        key: 'updateItemDescription',
        value: function updateItemDescription(description, index) {
            var newState = this.state.items;
            newState[index].description = description;
            this.update({ items: newState });
        }
    }, {
        key: 'updateItemIcon',
        value: function updateItemIcon(icon, index) {
            var newState = this.state.items;
            newState[index].icon = icon.icon;
            this.update({ items: newState });
        }
    }, {
        key: 'addItem',
        value: function addItem() {
            var newState = this.state.items;
            var newItemId = _tree_reducer_functions2.default.generateId('cont');

            if (this.props.field.configuration != undefined && this.props.field.configuration.itemType != undefined && this.props.field.configuration.itemType == 'module') {
                newItemId = _tree_reducer_functions2.default.generateId('mod');
            }
            newState.push({
                name: '[Enter Item Name]',
                id: newItemId
            });
            this.setState({ items: newState });
        }
    }, {
        key: 'render',
        value: function render() {
            var settings = this.state;

            //this.props.appFunctions.switchActiveObject( this.props.appFunctions.parentRow, 'standard' )

            //console.log('items field props', this.props);
            var addButton = _react2.default.createElement(
                'div',
                { className: 'ocb-sf-button ocb-sf-item-button', onClick: this.addItem.bind(this) },
                _react2.default.createElement('i', { className: 'fa fa-plus' }),
                ' Add Item'
            );

            return _react2.default.createElement(
                'div',
                { className: 'ocb-sf-items-field' },
                _react2.default.createElement(SortableRepeaterItems, { itemProps: null, items: settings.items, itemThis: this, onSortEnd: this.onSortEnd.bind(this), useDragHandle: true, helperClass: 'ocb-sf-field-item-sorting' }),
                addButton
            );
        }
    }]);

    return ItemsField;
}(_react.Component);

exports.default = ItemsField;

/***/ }),

/***/ 811:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _link = __webpack_require__(169);

var _link2 = _interopRequireDefault(_link);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var LinkField = function (_Component) {
    _inherits(LinkField, _Component);

    function LinkField() {
        _classCallCheck(this, LinkField);

        return _possibleConstructorReturn(this, (LinkField.__proto__ || Object.getPrototypeOf(LinkField)).apply(this, arguments));
    }

    _createClass(LinkField, [{
        key: 'update',
        value: function update(merge) {
            var update = Object.assign(this.props.values, merge);
            this.props.appFunctions.fieldUpdate(this.props.field.id, update, this.props);
        }
    }, {
        key: 'render',
        value: function render() {
            return _react2.default.createElement(
                'div',
                { className: 'ocb-sf-link-field' },
                _react2.default.createElement(_link2.default, { configuration: this.props.field.configuration, values: this.props.values, update: this.update.bind(this) })
            );
        }
    }]);

    return LinkField;
}(_react.Component);

exports.default = LinkField;

/***/ }),

/***/ 812:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _linked_sliders = __webpack_require__(360);

var _linked_sliders2 = _interopRequireDefault(_linked_sliders);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var LinkedSlidersField = function (_Component) {
    _inherits(LinkedSlidersField, _Component);

    function LinkedSlidersField(props) {
        _classCallCheck(this, LinkedSlidersField);

        var _this = _possibleConstructorReturn(this, (LinkedSlidersField.__proto__ || Object.getPrototypeOf(LinkedSlidersField)).call(this, props));

        _this.state = _this.props.values;
        return _this;
    }

    /**
     * Every field should have this function to make sure that settings get updated when a user switched devices
     */
    /*componentWillReceiveProps(){
        if( this.state.currentDevice != this.props.appFunctions.whichActive ){
            this.setState({ ...this.props.values, currentDevice: this.props.appFunctions.whichActive })
        }
    }*/

    /**
     * Every field should have this function and it should likely just be a copy of this
     * @param merge
     */


    _createClass(LinkedSlidersField, [{
        key: 'update',
        value: function update(merge) {
            var update = Object.assign(this.state, merge);
            this.props.appFunctions.fieldUpdate(this.props.field.id, update, this.props);
            this.setState(merge);
        }
    }, {
        key: 'changeDefault',
        value: function changeDefault(useDefault) {
            this.update({ useDefault: useDefault });
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var settings = this.state;
            var appFunctions = this.props.appFunctions;
            var baseRadioClass = 'ocb-sf-radio';
            var defaultRadioClass = settings.useDefault == 'default' ? baseRadioClass + ' active' : baseRadioClass;
            var customRadioClass = settings.useDefault == 'custom' ? baseRadioClass + ' active' : baseRadioClass;
            var fullControls = null;

            if (settings.useDefault == 'custom') {
                fullControls = _react2.default.createElement(
                    'div',
                    { className: 'mt-3' },
                    _react2.default.createElement(_linked_sliders2.default, { field: this.props.field, values: this.state, appFunctions: appFunctions, update: this.update.bind(this) })
                );
            }

            return _react2.default.createElement(
                'div',
                { className: 'ocb-sf-spacing-controls' },
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-sf-radio-group' },
                    _react2.default.createElement(
                        'div',
                        { className: defaultRadioClass, onClick: function onClick() {
                                return _this2.changeDefault('default');
                            } },
                        this.props.field.labels != undefined && this.props.field.labels.useDefault != undefined ? this.props.field.labels.useDefault : _react2.default.createElement('i', { className: 'fa fa-remove' })
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: customRadioClass, onClick: function onClick() {
                                return _this2.changeDefault('custom');
                            } },
                        this.props.field.labels != undefined && this.props.field.labels.useCustom != undefined ? this.props.field.labels.useCustom : _react2.default.createElement('i', { className: 'fa fa-check' })
                    )
                ),
                fullControls
            );
        }
    }]);

    return LinkedSlidersField;
}(_react.Component);

exports.default = LinkedSlidersField;

/***/ }),

/***/ 813:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _radio_toggle = __webpack_require__(18);

var _radio_toggle2 = _interopRequireDefault(_radio_toggle);

var _settings_helpers = __webpack_require__(2);

var _settings_helpers2 = _interopRequireDefault(_settings_helpers);

var _reactSortableHoc = __webpack_require__(71);

var _unsplash = __webpack_require__(835);

var _unsplash2 = _interopRequireDefault(_unsplash);

var _svg_image = __webpack_require__(826);

var _svg_image2 = _interopRequireDefault(_svg_image);

var _color_combined = __webpack_require__(235);

var _color_combined2 = _interopRequireDefault(_color_combined);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var SortableDragHandle = (0, _reactSortableHoc.SortableHandle)(function () {
    return _react2.default.createElement(
        'div',
        { className: 'ocb-sf-media-file-button ocb-sf-file-image-move' },
        _react2.default.createElement('i', { className: 'fa fa-arrows' })
    );
});
var SortableRepeaterItem = (0, _reactSortableHoc.SortableElement)(function (_ref) {
    var itemProps = _ref.itemProps,
        itemIndex = _ref.itemIndex,
        itemThis = _ref.itemThis;

    var imageURL = itemProps.sizes != undefined && itemProps.sizes.thumbnail != undefined ? itemProps.sizes.thumbnail.url : itemProps.url;

    if (OCBGlobalSettings.isSSL) {
        imageURL = imageURL.replace('http://', 'https://');
    }

    var isLibrary = itemProps.url && itemProps.url.includes('//' + OCBGlobalSettings.domain);
    var edit = null;

    if (isLibrary) {
        edit = _react2.default.createElement(
            'div',
            { className: 'ocb-sf-media-file-button ocb-sf-file-image-edit', onClick: function onClick() {
                    return itemThis.editFile(itemIndex);
                } },
            _react2.default.createElement('i', { className: 'fa fa-pencil' })
        );
    }

    return _react2.default.createElement(
        'div',
        { key: itemIndex, className: 'ocb-sf-multi-image-preview mt-1 mb-1' },
        _react2.default.createElement(SortableDragHandle, null),
        edit,
        _react2.default.createElement(
            'div',
            { className: 'ocb-sf-media-file-button ocb-sf-file-image-remove', onClick: function onClick() {
                    return itemThis.removeFile(itemIndex);
                } },
            _react2.default.createElement('i', { className: 'fa fa-remove' })
        ),
        _react2.default.createElement('img', { src: _settings_helpers2.default.getImageURL(imageURL) })
    );
});
var SortableRepeaterItems = (0, _reactSortableHoc.SortableContainer)(function (_ref2) {
    var itemProps = _ref2.itemProps,
        items = _ref2.items,
        itemThis = _ref2.itemThis;

    return _react2.default.createElement(
        'div',
        { className: 'ocb-sf-media-field-items' },
        items.map(function (each, index) {
            return _react2.default.createElement(SortableRepeaterItem, { key: index, itemProps: each, index: index, itemIndex: index, itemThis: itemThis });
        })
    );
});

var MediaField = function (_Component) {
    _inherits(MediaField, _Component);

    function MediaField(props) {
        _classCallCheck(this, MediaField);

        var _this = _possibleConstructorReturn(this, (MediaField.__proto__ || Object.getPrototypeOf(MediaField)).call(this, props));

        _this.state = Object.assign({}, { useWhich: 'library' }, _this.props.values);

        _this.timer = null;
        return _this;
    }

    _createClass(MediaField, [{
        key: 'update',
        value: function update(merge) {
            var update = Object.assign(this.state, merge);
            this.props.appFunctions.fieldUpdate(this.props.field.id, update, this.props);
            this.setState(merge);
        }
    }, {
        key: 'changeValue',
        value: function changeValue(newValue) {
            this.update(newValue);
        }
    }, {
        key: 'updateImage',
        value: function updateImage(newValue) {
            this.changeValue({
                url: newValue.url,
                size: 'full'
            });
        }
    }, {
        key: 'updateSVG',
        value: function updateSVG(image) {
            var theColor = this.state.svgCustomColor ? this.state.svgCustomColor : window.OffsproutSiteSettings['primary_color'].customColor;
            theColor = _settings_helpers2.default.rgb2hex(theColor);
            theColor = theColor.replace('#', '');

            var imageSrc = this.getSVGUrl(theColor, image.filename);

            this.changeValue({
                url: imageSrc,
                svgId: image.filename,
                svgColor: this.state.svgColor == undefined ? 'primary' : this.state.svgColor,
                files: {
                    alt: image.title,
                    caption: '',
                    title: image.title
                }
            });
        }
    }, {
        key: 'updateUnsplash',
        value: function updateUnsplash(image) {
            this.changeValue({
                url: this.getUnsplashUrl(image.id, false, image),
                unsplashId: image.id,
                files: {
                    width: image.width,
                    height: image.height,
                    alt: image.description,
                    caption: '',
                    title: image.description
                }
            });
        }
    }, {
        key: 'getUnsplashUrl',
        value: function getUnsplashUrl(imageId) {
            var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
            var image = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

            var width = 2600;
            var height = 1800;

            var theSize = this.state.size;

            if (size) theSize = size;

            switch (theSize) {
                case 'large':
                    width = 1800;
                    break;
                case 'medium':
                    width = 1200;
                    break;
                case 'small':
                    width = 600;
                    break;
                case 'thumbnail':
                    width = 300;
                    height = 300;
                    break;
            }

            var origWidth = image ? image.width : this.state.files != undefined ? this.state.files.width : false;

            var origHeight = image ? image.height : this.state.files != undefined ? this.state.files.height : false;

            if (origWidth && origHeight && theSize != 'thumbnail') {
                height = origHeight * width / origWidth;
                height = parseInt(height);
            }

            return 'https://source.unsplash.com/' + imageId + '/' + width + 'x' + height;
        }
    }, {
        key: 'getSVGUrl',
        value: function getSVGUrl(color) {
            var svgId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

            color = _settings_helpers2.default.rgb2hex(color);
            svgId = svgId ? svgId : this.state.svgId;
            return 'https://offsprout-svg.herokuapp.com/' + color + '/' + svgId + '.svg';
        }
    }, {
        key: 'updateSize',
        value: function updateSize(newSize) {
            if (this.props.field.configuration != undefined && this.props.field.configuration.multiple == true) {
                this.update({
                    size: newSize
                });
            } else if (this.state.useWhich == 'unsplash') {
                this.update({
                    size: newSize,
                    url: this.getUnsplashUrl(this.state.unsplashId, newSize)
                });
            } else {
                this.update({
                    size: newSize,
                    url: this.state.files.sizes[newSize].url
                });
            }
        }
    }, {
        key: 'updateColor',
        value: function updateColor(color) {
            var _this2 = this;

            clearTimeout(this.timer);

            var time = 1000;

            //We only really need the timer if it's a custom color to prevent a million calls to the svg api
            if (color.color != 'custom') time = 50;

            this.timer = setTimeout(function () {
                var theColor = color.color != 'custom' ? window.OffsproutSiteSettings[color.color + '_color'].customColor.replace('#', '') : color.customColor;
                theColor = _settings_helpers2.default.rgb2hex(theColor);
                theColor = theColor.replace('#', '');

                _this2.update({
                    svgColor: color.color,
                    svgCustomColor: theColor,
                    url: _this2.getSVGUrl(theColor)
                });
            }, time);
        }
    }, {
        key: 'updateFeaturedSize',
        value: function updateFeaturedSize(newSize) {
            this.update({
                size: newSize,
                url: _settings_helpers2.default.getFeaturedImageUrl(newSize)
            });
        }
    }, {
        key: 'onSortEnd',
        value: function onSortEnd(_ref3) {
            var oldIndex = _ref3.oldIndex,
                newIndex = _ref3.newIndex;

            var newOrder = (0, _reactSortableHoc.arrayMove)(this.state.files, oldIndex, newIndex);
            var update = { files: newOrder };
            this.update(update);
        }
    }, {
        key: 'openMediaLibrary',
        value: function openMediaLibrary() {
            var file_frame = null;

            if (file_frame) {
                file_frame.open();
                return;
            }

            var multiple = false;
            var library = false;

            if (this.props.field.configuration != undefined) {
                if (this.props.field.configuration.multiple != undefined) {
                    multiple = this.props.field.configuration.multiple;
                }
                if (this.props.field.configuration.type != undefined) {
                    library = { type: this.props.field.configuration.type };
                }
            }

            file_frame = wp.media.frames.file_frame = wp.media({
                title: 'Select Media',
                button: {
                    text: 'Select'
                },
                library: library,
                multiple: multiple // set this to true for multiple file selection
            });

            var classThis = this;

            file_frame.on('select', function () {
                var attachments = void 0;

                if (classThis.props.field.configuration != undefined && classThis.props.field.configuration.multiple == true) {
                    attachments = file_frame.state().get('selection').toJSON();
                    if (classThis.state.files != undefined && classThis.state.files.length) {
                        //attachments = classThis.state.files.concat(attachments);
                        var newAttachments = classThis.state.files;
                        attachments.forEach(function (attachment) {
                            newAttachments.splice(newAttachments.length, 0, attachment);
                        });
                        attachments = newAttachments;
                    }
                    classThis.changeValue({ files: attachments });
                } else {
                    attachments = file_frame.state().get('selection').first().toJSON();
                    classThis.changeValue({ files: attachments, url: attachments.url });

                    //remove the URL from the custom URL field
                    //classThis.refs.mediaExternalInput = '';
                }
            });

            file_frame.open();
        }
    }, {
        key: 'addFileFromUrl',
        value: function addFileFromUrl() {
            var files = this.state.files;

            //if files doesn't have length then it is probably not an array. Need it to be an array to splice
            if (files == undefined || !files.length) {
                files = [];
            }
            var url = this.refs.mediaExternalInput.value;
            //console.log('refs', this.refs, this.refs.mediaExternalInput.value);
            files.splice(files.length, 0, { url: url });
            this.changeValue({ files: files });
        }
    }, {
        key: 'removeFile',
        value: function removeFile(index) {
            var newFiles = [];
            var update = {};

            if (index === false) {
                update.url = '';
            } else {
                newFiles = this.state.files;
                newFiles.splice(index, 1);
            }

            update.files = newFiles;

            this.update(update);
        }
    }, {
        key: 'editFile',
        value: function editFile() {
            var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;

            var file_frame = wp.media.frames.file_frame = wp.media({
                title: 'Edit Media',
                button: {
                    text: 'Save'
                },
                multiple: false
            });

            var image = this.state.files.length ? this.state.files[index] : this.state.files;

            var classThis = this;

            file_frame.on('select', function () {

                var attachments = void 0;

                if (classThis.props.field.configuration != undefined && classThis.props.field.configuration.multiple == true) {
                    attachments = file_frame.state().get('selection').toJSON();
                    if (classThis.state.files != undefined && classThis.state.files.length) {
                        //attachments = classThis.state.files.concat(attachments);
                        var newAttachments = classThis.state.files;
                        attachments.forEach(function (attachment) {
                            newAttachments.splice(newAttachments.length, 0, attachment);
                        });
                        attachments = newAttachments;
                    }
                    classThis.changeValue({ files: attachments });
                } else {
                    attachments = file_frame.state().get('selection').first().toJSON();
                    classThis.changeValue({ files: attachments, url: attachments.url });

                    //remove the URL from the custom URL field
                    //classThis.refs.mediaExternalInput = '';
                }
            });

            // Select the attachment when the frame opens
            // https://stackoverflow.com/questions/13936080/pre-select-images-when-opening-wordpress-3-5-media-manager
            file_frame.on('open', function () {
                var selection = file_frame.state().get('selection');
                if (image.id) {
                    var theAttachment = wp.media.attachment(image.id);
                    theAttachment.fetch();
                    selection.reset(image.id ? [theAttachment] : []);
                }
            });

            file_frame.open();

            file_frame.on('close', function () {
                file_frame.detach();
            });
        }

        /*editFile(index = 0){
             let image = this.state.files.length ? this.state.files[index] : this.state.files;
             let file_frame = wp.media.frames.file_frame = wp.media({
                title: 'Edit Media',
                button: {
                    text: 'Save'
                },
                frame: 'image',
                state: 'image-details',
                metadata: { ...image, attachment_id: image.id }
            });
             let classThis = this;
             file_frame.on( 'select', function() {
                 let attachments;
                 if( classThis.props.field.configuration != undefined && classThis.props.field.configuration.multiple == true ){
                    attachments = file_frame.state().get('selection').toJSON();
                    if( classThis.state.files != undefined && classThis.state.files.length ){
                        //attachments = classThis.state.files.concat(attachments);
                        let newAttachments = classThis.state.files;
                        attachments.forEach((attachment) => {
                            newAttachments.splice(newAttachments.length, 0, attachment);
                        });
                        attachments = newAttachments;
                    }
                    classThis.changeValue( { files: attachments } );
                } else {
                    attachments = file_frame.state().get('selection').first().toJSON();
                    classThis.changeValue( { files: attachments, url: attachments.url } );
                     //remove the URL from the custom URL field
                    //classThis.refs.mediaExternalInput = '';
                }
            });
             file_frame.open();
             file_frame.on( 'close', function() {
                file_frame.detach();
            });
        }*/

    }, {
        key: 'render',
        value: function render() {
            var _this3 = this;

            //let settings = this.props.field.settings[this.props.appFunctions.whichActive];
            var settings = this.state;
            var preview = null;
            var multiple = this.props.field.configuration != undefined && this.props.field.configuration.multiple == true ? true : false;

            var type = this.props.field.configuration != undefined && this.props.field.configuration.type != undefined ? this.props.field.configuration.type : 'image';

            if (type == 'image') {
                if (multiple) {
                    if (settings.files != undefined && settings.files.length) {
                        preview = _react2.default.createElement(
                            'div',
                            { className: 'ocb-sf-multi-image-wrapper clearfix' },
                            _react2.default.createElement(SortableRepeaterItems, { itemProps: null, items: settings.files, itemThis: this, onSortEnd: this.onSortEnd.bind(this), axis: 'xy', useDragHandle: true, helperClass: 'ocb-sf-media-field-sorting' })
                        );
                    } else {
                        preview = _react2.default.createElement(
                            'div',
                            { className: 'mt-1 mb-1' },
                            'Select images'
                        );
                    }
                } else {
                    var isLibrary = settings.url && settings.url.includes('//' + OCBGlobalSettings.domain);

                    var imageUrl = settings.url;

                    if (settings.useWhich == 'featured') {
                        if (window.OCBGlobalSettings.featuredImage.medium) {
                            imageUrl = window.OCBGlobalSettings.featuredImage.medium;
                        } else if (window.OCBGlobalSettings.featuredImageFallback) {
                            imageUrl = window.OCBGlobalSettings.featuredImageFallback;
                        }
                    }

                    var thumbnail = imageUrl ? _react2.default.createElement('img', { className: 'ocb-sf-media-file-preview ocb-sf-file-image-preview', src: _settings_helpers2.default.getImageURL(imageUrl) }) : _react2.default.createElement(
                        'div',
                        null,
                        'No image selected'
                    );

                    var editButton = null;
                    if (isLibrary && settings.useWhich != 'featured') {
                        editButton = _react2.default.createElement(
                            'div',
                            { className: 'ocb-sf-media-file-button ocb-sf-file-image-edit', onClick: function onClick() {
                                    return _this3.editFile();
                                } },
                            _react2.default.createElement('i', { className: 'fa fa-pencil' })
                        );
                    }

                    var deleteButton = null;
                    if (imageUrl) {
                        deleteButton = _react2.default.createElement(
                            'div',
                            { className: 'ocb-sf-media-file-button ocb-sf-file-image-remove', onClick: function onClick() {
                                    return _this3.removeFile(false);
                                } },
                            _react2.default.createElement('i', { className: 'fa fa-remove' })
                        );
                    }
                    preview = _react2.default.createElement(
                        'div',
                        { className: 'text-center mt-1 mb-1 ocb-sf-media-image-preview' },
                        editButton,
                        deleteButton,
                        thumbnail
                    );
                }
            } else if (type == 'video') {
                var _isLibrary = settings.url && settings.url.includes('//' + OCBGlobalSettings.domain);

                var _thumbnail = settings.url ? _react2.default.createElement(
                    'video',
                    { className: 'ocb-sf-media-video-preview', controls: true },
                    _react2.default.createElement('source', { src: settings.url, type: 'video/mp4' })
                ) : _react2.default.createElement(
                    'div',
                    null,
                    'No video selected'
                );

                var _editButton = null;
                if (_isLibrary && settings.useWhich != 'featured') {
                    _editButton = _react2.default.createElement(
                        'div',
                        { className: 'ocb-sf-media-file-button ocb-sf-file-image-edit', onClick: function onClick() {
                                return _this3.editFile();
                            } },
                        _react2.default.createElement('i', { className: 'fa fa-pencil' })
                    );
                }

                var _deleteButton = null;
                if (settings.url) {
                    _deleteButton = _react2.default.createElement(
                        'div',
                        { className: 'ocb-sf-media-file-button ocb-sf-file-image-remove', onClick: function onClick() {
                                return _this3.removeFile(false);
                            } },
                        _react2.default.createElement('i', { className: 'fa fa-remove' })
                    );
                }
                preview = _react2.default.createElement(
                    'div',
                    { className: 'text-center mt-1 mb-1 ocb-sf-media-image-preview' },
                    _thumbnail,
                    _editButton,
                    _deleteButton
                );
            }

            var input = null;

            if (this.state.useWhich == 'external') {

                var externalInput = null;

                if (this.props.field.configuration != undefined && this.props.field.configuration.multiple == true) {
                    externalInput = _react2.default.createElement(
                        'div',
                        { className: 'ocb-sf-media-external-add' },
                        _react2.default.createElement('input', { ref: 'mediaExternalInput', type: 'text', placeholder: 'Custom URL...', onKeyPress: function onKeyPress(e) {
                                if (e.key === 'Enter') _this3.addFileFromUrl();
                            } }),
                        _react2.default.createElement(
                            'div',
                            { className: 'ocb-sf-button', onClick: this.addFileFromUrl.bind(this) },
                            'Add'
                        )
                    );
                } else {
                    externalInput = _react2.default.createElement('input', { ref: 'mediaExternalInput', type: 'text', placeholder: 'Custom URL...',
                        onChange: function onChange(e) {
                            return _this3.updateImage({ url: e.target.value });
                        } });
                }

                if (this.props.field.configuration != undefined && this.props.field.configuration.input == false) {
                    externalInput = _react2.default.createElement(
                        'div',
                        null,
                        'External Images Disabled'
                    );
                }

                input = _react2.default.createElement(
                    'div',
                    { className: 'mb-1' },
                    externalInput,
                    _react2.default.createElement(
                        'div',
                        null,
                        settings.url
                    )
                );
            } else if (this.state.useWhich == 'featured' && (this.props.field.configuration == undefined || this.props.field.configuration.multiple == undefined || this.props.field.configuration.multiple == false)) {

                var setFeatureImage = _react2.default.createElement(
                    'div',
                    { className: 'ocb-sf-button mb-2', onClick: this.openMediaLibrary.bind(this) },
                    'Set Featured Image'
                );

                //eventually let's let people set featured image here
                setFeatureImage = null;

                input = _react2.default.createElement(
                    'div',
                    { className: 'mb-1' },
                    setFeatureImage,
                    _react2.default.createElement(_radio_toggle2.default, { update: this.updateFeaturedSize.bind(this), items: ['full', 'large', 'medium', 'thumbnail'], value: settings.size })
                );
            } else if (this.state.useWhich == 'unsplash') {

                input = _react2.default.createElement(
                    'div',
                    { className: 'mb-1' },
                    _react2.default.createElement(_unsplash2.default, { update: this.updateUnsplash.bind(this) }),
                    _react2.default.createElement(_radio_toggle2.default, { update: this.updateSize.bind(this), items: ['full', 'large', 'medium', 'small', 'thumbnail'], value: settings.size })
                );
            } else if (this.state.useWhich == 'svg') {

                var theColor = settings.svgCustomColor ? settings.svgCustomColor : window.OffsproutSiteSettings['primary_color'].customColor;
                theColor = _settings_helpers2.default.rgb2hex(theColor);
                theColor = theColor.replace('#', '');

                input = _react2.default.createElement(
                    'div',
                    { className: 'mb-1' },
                    _react2.default.createElement(_svg_image2.default, { update: this.updateSVG.bind(this), color: theColor }),
                    _react2.default.createElement(_color_combined2.default, { values: { color: settings.svgColor, customColor: '#' + theColor }, update: this.updateColor.bind(this) })
                );
            } else {

                var sizeToggle = null;
                if ((this.props.field.configuration != undefined && this.props.field.configuration.multiple == true || settings.url && settings.url.includes('//' + OCBGlobalSettings.domain)) && (this.props.field.configuration == undefined || this.props.field.configuration.type != 'video')) {
                    sizeToggle = _react2.default.createElement(_radio_toggle2.default, { update: this.updateSize.bind(this), items: ['full', 'large', 'medium', 'thumbnail'], value: settings.size });
                }

                input = _react2.default.createElement(
                    'div',
                    { className: 'mb-1' },
                    _react2.default.createElement(
                        'div',
                        { className: 'ocb-sf-button mb-2', onClick: this.openMediaLibrary.bind(this) },
                        'Open Media Library'
                    ),
                    sizeToggle
                );
            }

            var baseRadioClass = 'ocb-sf-radio';
            var externalRadioClass = this.state.useWhich == 'external' ? baseRadioClass + ' active' : baseRadioClass;
            var libraryRadioClass = this.state.useWhich == 'library' ? baseRadioClass + ' active' : baseRadioClass;
            var featuredRadioClass = '';
            var featuredRadio = null;

            if (OCBGlobalSettings.permissions.has_theme && this.props.field.configuration != undefined && this.props.field.configuration.featured == true) {
                featuredRadioClass = this.state.useWhich == 'featured' ? baseRadioClass + ' active' : baseRadioClass;
                featuredRadio = _react2.default.createElement(
                    'div',
                    { className: featuredRadioClass, onClick: function onClick() {
                            return _this3.update({ useWhich: 'featured', url: _settings_helpers2.default.getFeaturedImageUrl('large'), size: 'large' });
                        } },
                    'Featured'
                );
            }

            var stockRadioClass = '';
            var unsplashRadioClass = '';
            var svgRadioClass = '';
            var unsplashRadio = null;
            var unsplashOrSVG = null;

            if (this.props.field.configuration == undefined || this.props.field.configuration.unsplash == undefined || this.props.field.configuration.unsplash == true) {
                //Don't allow in multiple yet
                if (!multiple && type == 'image') {
                    stockRadioClass = this.state.useWhich == 'unsplash' || this.state.useWhich == 'svg' ? baseRadioClass + ' active' : baseRadioClass;
                    unsplashRadioClass = this.state.useWhich == 'unsplash' ? baseRadioClass + ' active' : baseRadioClass;
                    unsplashRadio = _react2.default.createElement(
                        'div',
                        { className: stockRadioClass, onClick: function onClick() {
                                return _this3.update({ useWhich: 'unsplash' });
                            } },
                        'Stock'
                    );

                    if (this.state.useWhich == 'unsplash' || this.state.useWhich == 'svg') {
                        svgRadioClass = this.state.useWhich == 'svg' ? baseRadioClass + ' active' : baseRadioClass;
                        unsplashOrSVG = _react2.default.createElement(
                            'div',
                            { className: 'ocb-sf-radio-group mb-3' },
                            _react2.default.createElement(
                                'div',
                                { className: unsplashRadioClass, onClick: function onClick() {
                                        return _this3.setState({ useWhich: 'unsplash' });
                                    } },
                                'Photos'
                            ),
                            _react2.default.createElement(
                                'div',
                                { className: svgRadioClass, onClick: function onClick() {
                                        return _this3.setState({ useWhich: 'svg' });
                                    } },
                                'SVG'
                            )
                        );
                    }
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'ocb-sf-media-field' },
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-sf-radio-group mb-3' },
                    _react2.default.createElement(
                        'div',
                        { className: externalRadioClass, onClick: function onClick() {
                                return _this3.setState({ useWhich: 'external' });
                            } },
                        'External'
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: libraryRadioClass, onClick: function onClick() {
                                return _this3.setState({ useWhich: 'library' });
                            } },
                        'Library'
                    ),
                    featuredRadio,
                    unsplashRadio
                ),
                unsplashOrSVG,
                preview,
                input
            );
        }
    }]);

    return MediaField;
}(_react.Component);

exports.default = MediaField;

/***/ }),

/***/ 814:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactRedux = __webpack_require__(5);

var _redux = __webpack_require__(7);

var _reactSortableTree = __webpack_require__(231);

var _reactSortableTree2 = _interopRequireDefault(_reactSortableTree);

var _settings_panel_tooltip = __webpack_require__(104);

var _settings_panel_tooltip2 = _interopRequireDefault(_settings_panel_tooltip);

var _settings_helpers = __webpack_require__(2);

var _settings_helpers2 = _interopRequireDefault(_settings_helpers);

var _radio_toggle = __webpack_require__(18);

var _radio_toggle2 = _interopRequireDefault(_radio_toggle);

var _texteditor = __webpack_require__(73);

var _texteditor2 = _interopRequireDefault(_texteditor);

var _link = __webpack_require__(169);

var _link2 = _interopRequireDefault(_link);

var _api_helpers = __webpack_require__(6);

var _api_helpers2 = _interopRequireDefault(_api_helpers);

var _app_overlay = __webpack_require__(13);

var _app_overlay2 = _interopRequireDefault(_app_overlay);

var _index = __webpack_require__(8);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var MenusField = function (_Component) {
    _inherits(MenusField, _Component);

    function MenusField(props) {
        _classCallCheck(this, MenusField);

        var _this = _possibleConstructorReturn(this, (MenusField.__proto__ || Object.getPrototypeOf(MenusField)).call(this, props));

        _this.state = _extends({}, _this.props.values, {
            menus: [],
            activeMenu: false,
            activePanels: [],
            itemConfig: null,
            refreshFields: false
        });

        _this.optionTimer = false;
        return _this;
    }

    _createClass(MenusField, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            this.getAllMenus();
        }
    }, {
        key: 'componentDidUpdate',
        value: function componentDidUpdate() {
            if (this.state.refreshFields) this.setState({ refreshFields: false });
        }
    }, {
        key: 'getAllMenus',
        value: function getAllMenus() {
            var _this2 = this;

            //Get all menus through the API and update state
            var menus = _api_helpers2.default.doRequest('getCustom', {
                post_type: 'ocb_menu',
                withMeta: ['ocb_menu_config'],
                status: 'any'
            });

            menus.then(function (result) {
                _this2.setState({ menus: result });
            }).catch(function (error) {
                _this2.setState({ menus: [] });
            });
        }
    }, {
        key: 'update',
        value: function update(merge) {
            var theState = Object.assign({}, this.state);
            delete theState.menus;
            delete theState.activeMenu;
            delete theState.activePanels;
            delete theState.refreshFields;
            delete theState.revert_title;
            delete theState.revert_menu;
            var update = Object.assign(theState, merge);
            this.props.appFunctions.fieldUpdate(this.props.field.id, update, this.props);
            this.setState(merge);
        }
    }, {
        key: 'changeValue',
        value: function changeValue(key, newValue) {
            this.update(_defineProperty({}, key, newValue));
        }
    }, {
        key: 'addMenu',
        value: function addMenu() {
            var _this3 = this;

            var newMenu = _api_helpers2.default.doRequest('createCustom', {
                post_type: 'ocb_menu',
                title: 'New Menu',
                status: 'publish'
            });

            newMenu.then(function (result, error) {
                var menu = _api_helpers2.default.doRequest('getCustom', {
                    id: result.id,
                    post_type: 'ocb_menu',
                    withMeta: ['ocb_menu_config']
                });
                menu.then(function (theMenu, error) {
                    _this3.getAllMenus();
                }).catch(function (error) {
                    alert('Could retrieve new menu');
                });
            }).catch(function (error) {
                alert('Could not add menu');
            });
        }
    }, {
        key: 'saveMenu',
        value: function saveMenu() {
            var _this4 = this;

            //Get HTML
            var updateMenu = _settings_helpers2.default.saveNavigationMenu(this.props.appFunctions.currentlyEditing.id, this.state.menu_id, this.state.menu_title, this.state.menu);

            updateMenu.then(function (result, error) {
                _this4.setState({
                    activePanels: _this4.state.activePanels.filter(function (each) {
                        return 'editMenu' != each;
                    })
                });
                _this4.getAllMenus();
            });
        }
    }, {
        key: 'deleteMenu',
        value: function deleteMenu(menuId) {
            var _this5 = this;

            var action = _api_helpers2.default.doRequest('deleteCustom', { post_id: menuId });
            action.then(function (response, error) {
                //update the chosen menu if it is the menu that was just deleted
                if (_this5.state.activeMenu == menuId) {
                    _this5.update({
                        menu: {
                            items: []
                        },
                        menu_id: false,
                        menu_title: ''
                    });
                }
                _this5.getAllMenus();
            });
        }
    }, {
        key: 'maybeDeleteMenu',
        value: function maybeDeleteMenu(menuId) {
            var r = confirm('Are you sure you want to delete this menu? This will affect ALL pages using this menu!');
            if (r == true) {
                this.deleteMenu(menuId);
            }
        }
    }, {
        key: 'removeActivePanel',
        value: function removeActivePanel(panel) {
            var _this6 = this;

            if (panel == 'editMenu') {
                //Revert the menu - if it has been saved, this function isn't run for editMenu
                //Use of this.update() is effectively the same as setState as far as closing the panel
                var overlayOptions = [{
                    classes: 'ocb-success',
                    onClick: function onClick() {
                        return _this6.doSave();
                    },
                    text: 'Save'
                }, {
                    classes: 'ocb-danger',
                    onClick: function onClick() {
                        return _this6.doRevert(panel);
                    },
                    text: 'Revert'
                }];

                var overlay = _react2.default.createElement(_app_overlay2.default, {
                    title: 'Save Menu?',
                    content: 'Save any changes you\'ve made to the menu',
                    stacked: '1',
                    overlayStyle: 'small',
                    options: overlayOptions
                });

                this.props.updateAppState('overlay', overlay);
            } else {
                this.setState({
                    activePanels: this.state.activePanels.filter(function (each) {
                        return panel != each;
                    })
                });
            }
        }
    }, {
        key: 'doSave',
        value: function doSave() {
            this.saveMenu();
            this.props.updateAppState('overlay', null);
        }
    }, {
        key: 'doRevert',
        value: function doRevert(panel) {
            this.update({
                menu: this.state.revert_menu,
                menu_title: this.state.revert_title,
                activePanels: this.state.activePanels.filter(function (each) {
                    return panel != each;
                })
            });
            this.props.updateAppState('overlay', null);
        }
    }, {
        key: 'getPanelTitle',
        value: function getPanelTitle(panel) {
            var title = panel;
            switch (panel) {
                case 'editMenu':
                    title = 'Edit menu: ' + this.state.menu_title;
                    break;
                case 'editMenuItems':
                    title = 'Edit items for ' + this.state.menu_title;
                    break;
            }
            return title;
        }
    }, {
        key: 'getPanel',
        value: function getPanel(panel, content) {
            var _this7 = this;

            var depth = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 2;

            return _react2.default.createElement(
                'div',
                { className: 'ocb-sf-panel-items ocb-sf-panel-depth-' + depth + ' animated fast fadeInLeft' },
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-sf-panel-back mb-2 d-flex align-items-center', onClick: function onClick() {
                            return _this7.removeActivePanel(panel);
                        } },
                    _react2.default.createElement('i', { className: 'fa fa-chevron-left' }),
                    _react2.default.createElement(
                        'span',
                        { className: 'ocb-sf-panel-title' },
                        this.getPanelTitle(panel)
                    )
                ),
                content
            );
        }
    }, {
        key: 'getDefaultMenu',
        value: function getDefaultMenu() {
            return {
                items: [{
                    name: 'Home',
                    id: _settings_helpers2.default.generateId('menu')
                }]
            };
        }
    }, {
        key: 'updateActiveMenu',
        value: function updateActiveMenu(id) {
            var edit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

            var menu = this.state.menus.find(function (menu) {
                return menu.ID == id;
            });
            var theMenu = menu.meta.ocb_menu_config ? menu.meta.ocb_menu_config : this.getDefaultMenu();
            this.update({
                activeMenu: menu.ID,
                menu_id: menu.ID,
                menu_title: menu.post_title,
                menu: JSON.parse(JSON.stringify(theMenu)),
                revert_title: menu.post_title,
                revert_menu: JSON.parse(JSON.stringify(theMenu)), //copy the menu object so that it isn't somehow linked to state.menu
                activePanels: edit ? this.state.activePanels.concat('editMenu') : this.state.activePanels
            });
        }
    }, {
        key: 'duplicateMenu',
        value: function duplicateMenu(id) {
            var _this8 = this;

            var menu = this.state.menus.find(function (menu) {
                return menu.ID == id;
            });

            var newContent = _api_helpers2.default.doRequest('runUtility', {
                action: 'duplicatePost',
                post_title: menu.post_title + ' Copy',
                post_id: id
            });

            newContent.then(function (response) {
                _this8.getAllMenus();
            }).catch(function (error) {
                console.log('duplication error', error);
            });
        }
    }, {
        key: 'getMenus',
        value: function getMenus() {
            var _this9 = this;

            //Get all the menus
            //Add, delete
            if (!this.state.menus || !this.state.menus.length) {
                return _react2.default.createElement(
                    'div',
                    { className: 'mt-2 mb-3' },
                    'There are no menus. Please create one using the button below.'
                );
            }

            return this.state.menus.map(function (menu, index) {
                var active = _this9.state.menu_id == menu.ID ? 'active' : '';

                return _react2.default.createElement(
                    'div',
                    { key: index, className: 'ocb-sf-menu ocb-sf-external-post-list d-flex align-items-center' },
                    _react2.default.createElement('i', { className: 'fa fa-check p-3 ocb-sf-cursor-pointer ' + active, onClick: function onClick() {
                            return _this9.updateActiveMenu(menu.ID);
                        } }),
                    _react2.default.createElement(
                        'div',
                        { className: 'ocb-sf-menu-title pt-3 pb-3 ocb-sf-cursor-pointer', onClick: function onClick() {
                                return _this9.updateActiveMenu(menu.ID);
                            } },
                        menu.post_title
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'ml-auto ocb-sf-icons-block' },
                        _react2.default.createElement('i', { className: 'fa fa-pencil p-3 ocb-sf-cursor-pointer', onClick: function onClick() {
                                return _this9.updateActiveMenu(menu.ID, true);
                            } }),
                        _react2.default.createElement('i', { className: 'fa fa-copy p-3 ocb-sf-cursor-pointer', onClick: function onClick() {
                                return _this9.duplicateMenu(menu.ID, true);
                            } }),
                        _react2.default.createElement('i', { className: 'fa fa-remove p-3 ocb-sf-cursor-pointer', onClick: function onClick() {
                                return _this9.maybeDeleteMenu(menu.ID);
                            } })
                    )
                );
            });
        }
    }, {
        key: 'editMenuTitle',
        value: function editMenuTitle(value) {
            var _this10 = this;

            clearTimeout(this.optionTimer);
            this.optionTimer = setTimeout(function () {
                _this10.update({ menu_title: value });
            }, 300);
        }
    }, {
        key: 'editMenu',
        value: function editMenu() {
            var _this11 = this;

            if (!this.state.activeMenu || !this.state.activePanels.includes('editMenu')) return null;

            //When this is closed, we either need to revert or save the menu

            var panelContent = _react2.default.createElement(
                'div',
                { className: 'ocb-sf-menu-controls' },
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-sf-row p-3' },
                    _react2.default.createElement(
                        'div',
                        { className: 'ocb-sf-row-label' },
                        'Menu Title'
                    ),
                    _react2.default.createElement('input', { className: 'ocb-sf-row-item', type: 'text', defaultValue: this.state.menu_title, onChange: function onChange(e) {
                            return _this11.editMenuTitle(e.target.value);
                        } })
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-sf-menu-edit ocb-sf-cursor-pointer d-flex align-items-center p-3', onClick: function onClick() {
                            return _this11.setState({ activePanels: _this11.state.activePanels.concat('editMenuItems') });
                        } },
                    _react2.default.createElement(
                        'span',
                        null,
                        'Edit Menu Items'
                    ),
                    _react2.default.createElement('i', { className: 'fa fa-chevron-right ml-auto' })
                )
            );

            return this.getPanel('editMenu', panelContent);
        }
    }, {
        key: 'onItemSortEnd',
        value: function onItemSortEnd(_ref) {
            var oldIndex = _ref.oldIndex,
                newIndex = _ref.newIndex;

            var newOrder = arrayMove(this.state.menu.items, oldIndex, newIndex);
            var currentMenu = this.state.menu;
            currentMenu.items = newOrder;
            this.update({ menu: currentMenu, refreshFields: true });
        }
    }, {
        key: 'deleteItem',
        value: function deleteItem(index) {
            var currentMenu = this.state.menu;
            currentMenu.items.splice(index, 1);
            this.update({ menu: currentMenu, refreshFields: true });
        }
    }, {
        key: 'getDefaultMenuItem',
        value: function getDefaultMenuItem() {
            return {
                name: 'Menu Item',
                id: _settings_helpers2.default.generateId('menu')
            };
        }
    }, {
        key: 'addMenuItem',
        value: function addMenuItem() {
            var currentMenu = this.state.menu;
            currentMenu.items = currentMenu.items.concat(this.getDefaultMenuItem());
            this.update({ menu: currentMenu });
        }
    }, {
        key: 'addMenuItemSpecific',
        value: function addMenuItemSpecific(full) {
            var currentMenu = JSON.parse(JSON.stringify(this.state.menu));

            //Get a better sense of where in the tree this item exists so we can add an item after it
            var topNumber = this.state.menu.items.length - 1;
            var secondNumber = 0;
            var thirdNumber = 0;
            var top = full.lowerSiblingCounts[0] != undefined ? Math.abs(full.lowerSiblingCounts[0] - topNumber) : false;
            var second = false;
            var third = false;
            if (full.lowerSiblingCounts[1] != undefined) {
                secondNumber = this.state.menu.items[top].children != undefined ? this.state.menu.items[top].children.length - 1 : 0;
                second = Math.abs(full.lowerSiblingCounts[1] - secondNumber);
            }
            if (full.lowerSiblingCounts[2] != undefined) {
                thirdNumber = this.state.menu.items[top].children[second].children != undefined ? this.state.menu.items[top].children[second].children.length - 1 : 0;
                third = Math.abs(full.lowerSiblingCounts[1] - thirdNumber);
            }

            //splice the item onto the menu
            if (second === false && third === false) {
                currentMenu.items.splice(top + 1, 0, this.getDefaultMenuItem());
            } else if (third === false) {
                currentMenu.items[top].children.splice(second + 1, 0, this.getDefaultMenuItem());
            } else {
                currentMenu.items[top].children[second].children.splice(third + 1, 0, this.getDefaultMenuItem());
            }

            this.update({ menu: currentMenu });
        }
    }, {
        key: 'updateMenuItem',
        value: function updateMenuItem(index, fields) {
            var currentFields = this.state.menu.items;
            currentFields[index] = fields;
            var currentMenu = this.state.menu;
            currentMenu.items = currentFields;
            this.update({ menu: currentMenu });
        }
    }, {
        key: 'updateMenuItemName',
        value: function updateMenuItemName(_ref2) {
            var event = _ref2.event,
                node = _ref2.node,
                path = _ref2.path,
                getNodeKey = _ref2.getNodeKey;

            var name = event.target.value;

            this.updateMenuItemProp({ value: event.target.value, property: 'name', node: node, path: path, getNodeKey: getNodeKey });

            /*this.update({
                menu: {
                    ...this.state.menu,
                    items: changeNodeAtPath({
                        treeData: this.state.menu.items,
                        path,
                        getNodeKey,
                        newNode: {...node, name: name}
                    })
                }
            });*/
        }
    }, {
        key: 'updateMenuItemProp',
        value: function updateMenuItemProp(_ref3) {
            var property = _ref3.property,
                value = _ref3.value,
                node = _ref3.node,
                path = _ref3.path,
                getNodeKey = _ref3.getNodeKey;

            this.update({
                menu: _extends({}, this.state.menu, {
                    items: (0, _reactSortableTree.changeNodeAtPath)({
                        treeData: this.state.menu.items,
                        path: path,
                        getNodeKey: getNodeKey,
                        newNode: _extends({}, node, _defineProperty({}, property, value))
                    })
                })
            });
        }
    }, {
        key: 'deleteMenuItem',
        value: function deleteMenuItem(_ref4) {
            var path = _ref4.path,
                getNodeKey = _ref4.getNodeKey;

            this.update({
                menu: _extends({}, this.state.menu, {
                    items: (0, _reactSortableTree.removeNodeAtPath)({
                        treeData: this.state.menu.items,
                        path: path,
                        getNodeKey: getNodeKey
                    })
                })
            });
        }
    }, {
        key: 'editMenuItem',
        value: function editMenuItem(full, getNodeKey) {
            var _this12 = this;

            var node = full.node,
                path = full.path;

            var secondWithThird = node.children != undefined && node.children.length && full.parentNode != undefined && full.parentNode != null;
            var rightLeft = null;

            if (secondWithThird) {
                rightLeft = _react2.default.createElement(
                    'div',
                    { className: 'mb-2' },
                    _react2.default.createElement(
                        'div',
                        { className: 'ocb-sf-row' },
                        _react2.default.createElement(
                            'div',
                            { className: 'ocb-sf-row-label' },
                            '3rd Level Menu Position'
                        ),
                        _react2.default.createElement(
                            'div',
                            { className: 'ocb-sf-row-input' },
                            _react2.default.createElement(_radio_toggle2.default, { items: [{ value: 'left', name: 'Left' }, { value: 'default', name: 'Default' }, { value: 'right', name: 'Right' }],
                                value: node.rightLeft != undefined ? node.rightLeft : 'default',
                                flex: true,
                                update: function update(value) {
                                    _this12.updateMenuItemProp({ property: 'rightLeft', value: value, node: node, path: path, getNodeKey: getNodeKey });
                                    node.rightLeft = value;
                                } })
                        )
                    )
                );
            }

            var modal = _react2.default.createElement(
                'div',
                { className: 'ocb-sf-modal ocb-sf-modal-medium' },
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-sf-modal-heading' },
                    _react2.default.createElement('i', { className: 'fa fa-remove', onClick: function onClick() {
                            return _this12.closeEditMenuItem();
                        } })
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-sf-modal-body' },
                    _react2.default.createElement(
                        'div',
                        { className: 'p-3' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mb-2' },
                            _react2.default.createElement(
                                'strong',
                                null,
                                'Configuring ',
                                node.name
                            )
                        ),
                        _react2.default.createElement(
                            'div',
                            { className: 'mb-2' },
                            _react2.default.createElement(
                                'div',
                                { className: 'ocb-sf-row' },
                                _react2.default.createElement(
                                    'div',
                                    { className: 'ocb-sf-row-label' },
                                    'Custom Class'
                                ),
                                _react2.default.createElement(
                                    'div',
                                    { className: 'ocb-sf-row-input' },
                                    _react2.default.createElement('input', { type: 'text', defaultValue: node.classes, onChange: function onChange(e) {
                                            _this12.updateMenuItemProp({ property: 'classes', value: e.target.value, node: node, path: path, getNodeKey: getNodeKey });
                                            node.classes = e.target.value;
                                        } })
                                )
                            )
                        ),
                        rightLeft,
                        _react2.default.createElement(
                            'div',
                            { className: 'mb-2' },
                            _react2.default.createElement(
                                'div',
                                { className: 'ocb-sf-row' },
                                _react2.default.createElement(
                                    'div',
                                    { className: 'ocb-sf-row-label' },
                                    'Open In New Window'
                                ),
                                _react2.default.createElement(
                                    'div',
                                    { className: 'ocb-sf-row-input' },
                                    _react2.default.createElement(_radio_toggle2.default, { items: [{ value: 'no', name: 'No' }, { value: 'yes', name: 'Yes' }],
                                        value: node.newWindow != undefined ? node.newWindow : 'no',
                                        flex: true,
                                        update: function update(value) {
                                            _this12.updateMenuItemProp({ property: 'newWindow', value: value, node: node, path: path, getNodeKey: getNodeKey });
                                            node.newWindow = value;
                                        } })
                                )
                            )
                        ),
                        _react2.default.createElement(
                            'div',
                            { className: 'mb-2' },
                            _react2.default.createElement(_link2.default, { values: { url: node.url != undefined ? node.url : '' }, update: function update(newValue) {
                                    _this12.updateMenuItemProp({ node: node, path: path, getNodeKey: getNodeKey, property: 'url', value: newValue.url });
                                    node.url = newValue.url;
                                } })
                        )
                    )
                )
            );

            this.setState({ itemConfig: modal });
        }
    }, {
        key: 'closeEditMenuItem',
        value: function closeEditMenuItem() {
            this.setState({ itemConfig: null });
        }
    }, {
        key: 'editMenuItems',
        value: function editMenuItems() {
            var _this13 = this;

            if (!this.state.activeMenu || !this.state.activePanels.includes('editMenuItems')) return null;

            var panelContent = null;

            var items = this.state.menu.items;

            //Need this refreshFields because even though the state was accurate, the fields weren't showing as sorted or properly deleted
            //Also need SortableInputs in its own component above because when it was being created in this function,
            // any update would refresh MenuInput state to the point where you could only enter one letter at a time
            if (!this.state.refreshFields) {
                var getNodeKey = function getNodeKey(_ref5) {
                    var treeIndex = _ref5.treeIndex;
                    return treeIndex;
                };

                panelContent = _react2.default.createElement(
                    'div',
                    { className: 'ocb-sf-menu-fields' },
                    _react2.default.createElement(
                        'div',
                        { style: { height: "77vh" } },
                        _react2.default.createElement(_reactSortableTree2.default, {
                            treeData: items,
                            onChange: function onChange(treeData) {
                                var stateMenu = JSON.parse(JSON.stringify(_this13.state.menu));
                                stateMenu.items = treeData;

                                _this13.update({
                                    menu: stateMenu
                                });
                            },
                            generateNodeProps: function generateNodeProps(full) {
                                return {
                                    title: _react2.default.createElement(
                                        'div',
                                        { className: 'ocb-sf-menu-item-inner' },
                                        full.node.url != undefined && full.node.url ? _react2.default.createElement(
                                            'a',
                                            { className: 'ocb-sf-link-icon', href: full.node.url, target: '_blank' },
                                            _react2.default.createElement('i', { className: 'fa fa-link' })
                                        ) : _react2.default.createElement(_settings_panel_tooltip2.default, { tooltipContent: 'Please set a URL for this item', content: _react2.default.createElement('i', { className: 'fa fa-exclamation-circle' }), wrapClass: 'ocb-tooltip-warning-icon' }),
                                        _react2.default.createElement('input', {
                                            className: 'ocb-sf-menu-item-input',
                                            value: full.node.name,
                                            onChange: function onChange(event) {
                                                return _this13.updateMenuItemName({ event: event, node: full.node, path: full.path, getNodeKey: getNodeKey });
                                            }
                                        }),
                                        _react2.default.createElement(
                                            'div',
                                            { className: 'ocb-admin-button ocb-admin-button-square', onClick: function onClick() {
                                                    return _this13.editMenuItem(full, getNodeKey);
                                                } },
                                            _react2.default.createElement('i', { className: 'fa fa-pencil' })
                                        ),
                                        _react2.default.createElement(
                                            'div',
                                            { className: 'ocb-admin-button ocb-danger ocb-admin-button-square', onClick: function onClick() {
                                                    return _this13.deleteMenuItem({ path: full.path, getNodeKey: getNodeKey });
                                                } },
                                            _react2.default.createElement('i', { className: 'fa fa-remove' })
                                        ),
                                        _react2.default.createElement(
                                            'div',
                                            { className: 'ocb-admin-button ocb-sf-menu-item-add-button', onClick: function onClick() {
                                                    return _this13.addMenuItemSpecific(full);
                                                } },
                                            _react2.default.createElement('i', { className: 'fa fa-plus' })
                                        )
                                    )
                                };
                            }
                        })
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'm-3' },
                        _react2.default.createElement(
                            'div',
                            { className: 'ocb-sf-button', onClick: function onClick() {
                                    return _this13.addMenuItem();
                                } },
                            'Add Item'
                        )
                    ),
                    this.state.itemConfig
                );
            }

            return this.getPanel('editMenuItems', panelContent, 3);
        }
    }, {
        key: 'render',
        value: function render() {
            var _this14 = this;

            return _react2.default.createElement(
                'div',
                { className: 'ocb-sf-menus-field' },
                this.getMenus(),
                this.editMenu(),
                this.editMenuItems(),
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-sf-button', onClick: function onClick() {
                            return _this14.addMenu();
                        } },
                    'Add Menu'
                )
            );
        }
    }]);

    return MenusField;
}(_react.Component);

function mapDispatchToProps(dispatch) {
    return (0, _redux.bindActionCreators)({ updateAppState: _index.updateAppState }, dispatch);
}

exports.default = (0, _reactRedux.connect)(null, mapDispatchToProps)(MenusField);

/***/ }),

/***/ 815:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var MultiSelectField = function (_Component) {
    _inherits(MultiSelectField, _Component);

    function MultiSelectField(props) {
        _classCallCheck(this, MultiSelectField);

        var _this = _possibleConstructorReturn(this, (MultiSelectField.__proto__ || Object.getPrototypeOf(MultiSelectField)).call(this, props));

        _this.state = _this.props.values;
        return _this;
    }

    _createClass(MultiSelectField, [{
        key: 'update',
        value: function update(merge) {
            //For some reason needs to use this.state instead of this.props.values when merging and creating a new object
            // in order to send a signal that the field has been updated, when you change the value multiple times in a row
            var update = Object.assign(this.state, merge);
            this.props.appFunctions.fieldUpdate(this.props.field.id, update, this.props);
            this.setState(merge);
        }
    }, {
        key: 'changeChoices',
        value: function changeChoices(option) {
            var currentChoices = this.props.values.choices;
            if (currentChoices == undefined) {
                currentChoices = [];
            }
            var newChoices = [];
            if (currentChoices.includes(option)) {
                //remove the variant if the list of current variants includes it and it has been clicked
                currentChoices.forEach(function (each) {
                    if (each != option) newChoices.push(each);
                });
            } else {
                newChoices = currentChoices;
                newChoices.push(option);
            }
            this.update({ choices: newChoices });
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var settings = this.props.values;

            var choiceButtons = this.props.field.options.map(function (option, index) {
                var disabled = '';
                if (settings.choices == undefined || !settings.choices.length || !settings.choices.includes(option.value)) disabled = 'disabled';
                return _react2.default.createElement(
                    'div',
                    { key: index, className: 'ocb-sf-button ' + disabled, onClick: function onClick() {
                            return _this2.changeChoices(option.value);
                        } },
                    option.name
                );
            });

            return _react2.default.createElement(
                'div',
                { className: 'ocb-sf-multi-select-field ocb-sf-radio-toggle' },
                choiceButtons
            );
        }
    }]);

    return MultiSelectField;
}(_react.Component);

exports.default = MultiSelectField;

/***/ }),

/***/ 816:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _api_helpers = __webpack_require__(6);

var _api_helpers2 = _interopRequireDefault(_api_helpers);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var PostField = function (_Component) {
    _inherits(PostField, _Component);

    function PostField(props) {
        _classCallCheck(this, PostField);

        var _this = _possibleConstructorReturn(this, (PostField.__proto__ || Object.getPrototypeOf(PostField)).call(this, props));

        _this.state = {
            posts: [],
            chosen: '',
            urlFilter: ''
        };
        return _this;
    }

    _createClass(PostField, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _this2 = this;

            var postType = 'post';
            var configuration = this.props.field.configuration;

            if (configuration != undefined && configuration.postType != undefined) {
                postType = configuration.postType;
            }

            _api_helpers2.default.doRequest('getOfPostType', null, { type: postType }).then(function (response) {
                _this2.setState({ posts: response });
            }).catch(function (error) {
                console.log('could not find posts', error);
            });
        }
    }, {
        key: 'update',
        value: function update(merge) {
            var update = Object.assign(this.props.values, merge);
            this.props.appFunctions.fieldUpdate(this.props.field.id, update, this.props);
        }
    }, {
        key: 'addPost',
        value: function addPost(post) {
            this.update(post);
            this.setState({ chosen: post });
        }
    }, {
        key: 'render',
        value: function render() {
            var _this3 = this;

            var settings = this.props.values;
            var configuration = this.props.field.configuration;
            var postType = 'post';

            if (configuration != undefined && configuration.postType != undefined) {
                postType = configuration.postType;
            }

            var linkIterator = 0;

            var addable = _react2.default.createElement(
                'div',
                { className: 'ocb-sf-link-' + postType },
                'Loading...'
            );

            if (this.state.posts.length) {

                addable = _react2.default.createElement(
                    'div',
                    { className: 'ocb-sf-link-' + postType },
                    this.state.posts.map(function (item, index) {
                        if (linkIterator >= 20) {
                            return null;
                        }
                        if (_this3.state.urlFilter && !item.post_title.toLowerCase().includes(_this3.state.urlFilter.toLowerCase()) && !item.post_name.includes(_this3.state.urlFilter)) {
                            return null;
                        }
                        linkIterator++;
                        return _react2.default.createElement(
                            'div',
                            { key: index, className: 'ocb-sf-link-addable d-flex align-items-stretch mb-1' },
                            _react2.default.createElement(
                                'div',
                                { className: 'ocb-sf-link-addable-text p-1' },
                                _react2.default.createElement(
                                    'div',
                                    null,
                                    _react2.default.createElement(
                                        'strong',
                                        null,
                                        item.post_title
                                    )
                                ),
                                _react2.default.createElement(
                                    'div',
                                    null,
                                    _react2.default.createElement(
                                        'span',
                                        null,
                                        item.post_name
                                    )
                                )
                            ),
                            _react2.default.createElement(
                                'div',
                                {
                                    className: 'ocb-sf-link-addable-add d-flex align-items-center justify-content-center',
                                    onClick: function onClick() {
                                        return _this3.addPost(item);
                                    } },
                                _react2.default.createElement('i', { className: 'fa fa-plus' })
                            )
                        );
                    })
                );
            }

            var filter = null;

            if (this.state.posts.length > 5) {
                filter = _react2.default.createElement('input', { className: 'mb-1', type: 'text', placeholder: 'filter results...', value: this.state.urlFilter, onChange: function onChange(e) {
                        return _this3.setState({ urlFilter: e.target.value });
                    } });
            }

            var chosen = null;

            if (settings.post_title != undefined) {

                chosen = _react2.default.createElement(
                    'div',
                    null,
                    _react2.default.createElement(
                        'span',
                        null,
                        settings.post_title
                    )
                );

                if (configuration != undefined && configuration.addEditLink == true) {
                    chosen = _react2.default.createElement(
                        'div',
                        null,
                        _react2.default.createElement(
                            'span',
                            null,
                            _react2.default.createElement(
                                'a',
                                { href: OCBGlobalSettings.adminURL + 'post.php?post=' + settings.ID + '&action=edit', target: '_blank' },
                                settings.post_title
                            )
                        )
                    );
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'ocb-sf-post' },
                _react2.default.createElement(
                    'div',
                    { className: 'mt-3' },
                    _react2.default.createElement(
                        'div',
                        null,
                        _react2.default.createElement(
                            'strong',
                            null,
                            'Chosen'
                        )
                    ),
                    chosen
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'mt-3' },
                    filter,
                    addable
                )
            );
        }
    }]);

    return PostField;
}(_react.Component);

exports.default = PostField;

/***/ }),

/***/ 817:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _radio_toggle = __webpack_require__(18);

var _radio_toggle2 = _interopRequireDefault(_radio_toggle);

var _api_helpers = __webpack_require__(6);

var _api_helpers2 = _interopRequireDefault(_api_helpers);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var PostTypeField = function (_Component) {
    _inherits(PostTypeField, _Component);

    function PostTypeField(props) {
        _classCallCheck(this, PostTypeField);

        var _this = _possibleConstructorReturn(this, (PostTypeField.__proto__ || Object.getPrototypeOf(PostTypeField)).call(this, props));

        _this.state = {
            types: {}
        };
        return _this;
    }

    _createClass(PostTypeField, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _this2 = this;

            var options = {
                action: 'getPostTypes',
                public: true
            };

            if (this.props.field.configuration != undefined && this.props.field.configuration.options != undefined) {
                options = Object.assign(options, this.props.field.configuration.options);
            }

            var postTypes = _api_helpers2.default.doRequest('runUtility', options);

            postTypes.then(function (result) {

                if (result.ocb_structure != undefined) delete result.ocb_structure;

                if (_this2.props.field.configuration != undefined && _this2.props.field.configuration.remove != undefined) {
                    _this2.props.field.configuration.remove.forEach(function (remove) {
                        if (result[remove] != undefined) delete result[remove];
                    });
                }

                _this2.setState({ types: result });
            }).catch(function (error) {});
        }
    }, {
        key: 'update',
        value: function update(merge) {
            var update = Object.assign(this.props.values, merge);
            this.props.appFunctions.fieldUpdate(this.props.field.id, update, this.props);
        }
    }, {
        key: 'changeValue',
        value: function changeValue(newValue) {
            this.update({ choice: newValue });
        }
    }, {
        key: 'render',
        value: function render() {
            var settings = this.props.values;

            var options = Object.keys(this.state.types).map(function (key, index) {
                return {
                    name: key,
                    value: key
                };
            });

            return _react2.default.createElement(
                'div',
                { className: 'ocb-sf-post-type-field' },
                _react2.default.createElement(_radio_toggle2.default, { update: this.changeValue.bind(this), items: options, value: settings.choice })
            );
        }
    }]);

    return PostTypeField;
}(_react.Component);

exports.default = PostTypeField;

/***/ }),

/***/ 818:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _radio_toggle = __webpack_require__(18);

var _radio_toggle2 = _interopRequireDefault(_radio_toggle);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var PresetsField = function (_Component) {
    _inherits(PresetsField, _Component);

    function PresetsField() {
        _classCallCheck(this, PresetsField);

        return _possibleConstructorReturn(this, (PresetsField.__proto__ || Object.getPrototypeOf(PresetsField)).apply(this, arguments));
    }

    _createClass(PresetsField, [{
        key: 'update',
        value: function update() {
            var preset = this.refs.preset.value;
            console.log('presetId', preset);
            var fullPreset = this.props.field.presets.find(function (thePreset) {
                return thePreset.id == preset;
            }).preset;
            console.log('fullPreset', fullPreset);

            this.props.appFunctions.updateMergeObjectSettings(fullPreset);

            /*for( let id in fullPreset ){
                if( ! fullPreset.hasOwnProperty(id) ) continue;
                 console.log('updating with preset', id, fullPreset[id]);
                 if( id == 'columns') {
                    this.props.appFunctions.fieldUpdate(id, fullPreset[id], this.props.repeaterIndex);
                }
            }*/
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var presets = this.props.field.presets;
            var warning = this.props.field.warning != undefined ? this.props.field.warning : 'This will overwrite a number of design features, but will not overwrite content.';

            var presetOptions = presets.map(function (preset, index) {
                return _react2.default.createElement(
                    'option',
                    { key: index, value: preset.id },
                    preset.name
                );
            });
            return _react2.default.createElement(
                'div',
                { className: 'ocb-sf-presets-field' },
                _react2.default.createElement(
                    'div',
                    { className: 'alert alert-warning' },
                    warning
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'mb-1' },
                    _react2.default.createElement(
                        'select',
                        { ref: 'preset' },
                        _react2.default.createElement(
                            'option',
                            { value: '' },
                            'Choose a Preset'
                        ),
                        presetOptions
                    )
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-sf-button', onClick: function onClick() {
                            return _this2.update();
                        } },
                    'Overwrite With Preset'
                )
            );
        }
    }]);

    return PresetsField;
}(_react.Component);

exports.default = PresetsField;

/***/ }),

/***/ 819:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _type_selector = __webpack_require__(362);

var _type_selector2 = _interopRequireDefault(_type_selector);

var _api_helpers = __webpack_require__(6);

var _api_helpers2 = _interopRequireDefault(_api_helpers);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var QueryFilterField = function (_Component) {
    _inherits(QueryFilterField, _Component);

    function QueryFilterField(props) {
        _classCallCheck(this, QueryFilterField);

        var _this = _possibleConstructorReturn(this, (QueryFilterField.__proto__ || Object.getPrototypeOf(QueryFilterField)).call(this, props));

        _this.state = {
            taxonomies: {},
            useCustom: false
        };
        return _this;
    }

    _createClass(QueryFilterField, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _this2 = this;

            var selector = this.props.field.configuration != undefined && this.props.field.configuration.selector != undefined ? this.props.field.configuration.selector : 'post';

            if (selector == '_custom_') {
                _api_helpers2.default.doRequest('getTaxonomies').then(function (result) {
                    _this2.setState({ taxonomies: result, useCustom: true });
                }).catch(function (error) {});
            }
        }
    }, {
        key: 'update',
        value: function update(merge) {
            var update = Object.assign(this.props.values, merge);
            this.props.appFunctions.fieldUpdate(this.props.field.id, update, this.props);
        }
    }, {
        key: 'render',
        value: function render() {
            var _this3 = this;

            var selector = this.props.field.configuration != undefined && this.props.field.configuration.selector != undefined ? this.props.field.configuration.selector : 'post';
            var related = this.props.field.configuration != undefined && this.props.field.configuration.related != undefined ? this.props.field.configuration.related : false;
            var options = [{
                explanation: 'Posts that are IN selected',
                value: 'in'
            }, {
                explanation: 'Posts that are NOT IN selected',
                value: 'not_in'
            }];

            var andOption = {
                explanation: 'Posts that are IN ALL selected',
                value: 'and'
            };

            switch (selector) {
                case 'category':
                    options = options.concat(andOption);
                    if (related) {
                        options = options.concat({
                            explanation: 'Posts that are IN CATEGORY OF POST',
                            value: 'in_related'
                        });
                    }
                    break;
                case 'tag':
                    options = options.concat(andOption);
                    if (related) {
                        options = options.concat({
                            explanation: 'Posts that are IN TAG(S) OF POST',
                            value: 'in_related'
                        });
                    }
                    break;
            }

            var select = _react2.default.createElement(
                'select',
                { onChange: function onChange(e) {
                        return _this3.update({ type: e.target.value });
                    }, defaultValue: this.props.values.type },
                options.map(function (option, key) {
                    return _react2.default.createElement(
                        'option',
                        { key: key, value: option.value },
                        option.explanation
                    );
                })
            );

            var typeSelector = null;

            if (this.props.values.type != 'in_related') {
                typeSelector = _react2.default.createElement(_type_selector2.default, {
                    values: this.props.values,
                    update: this.update.bind(this),
                    field: this.props.field
                });
            }

            var taxonomy = null;
            if (this.state.useCustom) {
                var taxonomies = Object.keys(this.state.taxonomies).map(function (tax, key) {
                    return _react2.default.createElement(
                        'option',
                        { key: key, value: _this3.state.taxonomies[tax].slug },
                        _this3.state.taxonomies[tax].name
                    );
                });

                taxonomy = _react2.default.createElement(
                    'div',
                    { className: 'mb-3' },
                    _react2.default.createElement(
                        'select',
                        { onChange: function onChange(e) {
                                return _this3.update({ taxonomy: e.target.value });
                            }, defaultValue: this.props.values.taxonomy },
                        taxonomies
                    )
                );
            }

            return _react2.default.createElement(
                'div',
                { className: 'ocb-sf-query-filter-field' },
                taxonomy,
                _react2.default.createElement(
                    'div',
                    { className: 'mb-3' },
                    select
                ),
                typeSelector
            );
        }
    }]);

    return QueryFilterField;
}(_react.Component);

exports.default = QueryFilterField;

/***/ }),

/***/ 82:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _server = __webpack_require__(151);

var _object = __webpack_require__(35);

var _object2 = _interopRequireDefault(_object);

var _module_selector = __webpack_require__(102);

var _module_selector2 = _interopRequireDefault(_module_selector);

var _help_button = __webpack_require__(101);

var _help_button2 = _interopRequireDefault(_help_button);

var _default_standard = __webpack_require__(16);

var _default_standard2 = _interopRequireDefault(_default_standard);

var _app_overlay = __webpack_require__(13);

var _app_overlay2 = _interopRequireDefault(_app_overlay);

var _save_template = __webpack_require__(103);

var _save_template2 = _interopRequireDefault(_save_template);

var _settings_helpers = __webpack_require__(2);

var _settings_helpers2 = _interopRequireDefault(_settings_helpers);

var _url_helpers = __webpack_require__(27);

var _url_helpers2 = _interopRequireDefault(_url_helpers);

var _deepmerge = __webpack_require__(9);

var _deepmerge2 = _interopRequireDefault(_deepmerge);

var _module_helpers = __webpack_require__(12);

var _module_helpers2 = _interopRequireDefault(_module_helpers);

var _default_tree_content = __webpack_require__(83);

var _default_tree_content2 = _interopRequireDefault(_default_tree_content);

var _reactRedux = __webpack_require__(5);

var _api_helpers = __webpack_require__(6);

var _api_helpers2 = _interopRequireDefault(_api_helpers);

var _index = __webpack_require__(8);

var _redux = __webpack_require__(7);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Tree = function (_Component) {
    _inherits(Tree, _Component);

    function Tree(props) {
        _classCallCheck(this, Tree);

        var _this = _possibleConstructorReturn(this, (Tree.__proto__ || Object.getPrototypeOf(Tree)).call(this, props));

        _this.state = {
            moving: false,
            templateObject: false,
            templateSaving: false,
            templateFolder: '',
            templateFolderInput: 'select',
            templateName: '',
            templateGlobal: 0,
            moduleMove: null,
            columnMoveFrom: null,
            rowMoveFrom: null,
            objectMoveTo: null,
            newObjectToValue: null,
            newObjectToValue2: null,
            columnMoveTo: null,
            rowMoveTo: null,
            infoAlert: null,
            moveToDirection: null,
            inlineEditing: false,
            connectorScreen: null,
            editor: null, //tinyMCE
            inlineEditingObject: null,
            widthChanging: false,
            widthChangeLeft: null,
            widthChangeRight: null,
            widthChangeLeftObject: null,
            widthChangeRightObject: null,
            widthChangeRow: null,
            widthChangeCursor: null,
            widthChangeIndicator: null,
            editingGlobal: false,
            _resize: _this._resize.bind(_this),
            _stopResize: _this._stopResize.bind(_this)
        };
        return _this;
    }

    /**
     * Loads the tree from meta
     * If there is no tree, it uses a default tree and loads the existing content into the default tree's text module
     */


    _createClass(Tree, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _this2 = this;

            if (this.props.trees[this.props.area].defaultUsed) {
                var params = _url_helpers2.default.getSearchParameters(true);

                var contentFromAPIPromise = void 0;
                var revision = false;

                //Get a revision if we're requesting a revision that may exist
                if (params.ocbRevision != undefined) {
                    //&& parseInt( params.ocbRevision ) < 5 ){
                    revision = parseInt(params.ocbRevision);
                    contentFromAPIPromise = _api_helpers2.default.doRequest('getMeta', false, { metaKey: 'ocb_tree_content_' + revision });
                } else {
                    contentFromAPIPromise = _api_helpers2.default.doRequest('getMeta', false, { metaKey: 'ocb_tree_content' });
                }

                contentFromAPIPromise.then(function (response) {
                    if (!response && revision !== false) {
                        console.log('That revision was not found', response);
                    }

                    if (response == false || response == 1) {
                        window.ocbMountTimeoutOrderTester('tree update');
                        //Use getCustom so that shortcodes and URLs aren't rendered - we want to maintain those and let WP do its thing
                        var theContent = _api_helpers2.default.doRequest('getCustom', { id: parent.OCBGlobalSettings.postId, leave_shortcodes: 1, leave_urls: 1 });
                        theContent.then(function (contentResponse, contentError) {
                            var newTree = response;
                            if (contentResponse.post_content_rendered) {
                                newTree = _default_tree_content2.default;
                                newTree.items[0].items[0].items[0].settings.linked.text.text = contentResponse.post_content_rendered;
                            }
                            _this2.props.updateTreeStateFromAPI(newTree, 'treeContent');
                        });
                    } else {
                        _this2.props.updateTreeStateFromAPI(response, 'treeContent');
                    }

                    //make sure the number counters/navigation/sliders are active
                    window.ocbDoNeededInitializePlugins();
                    window.ocbDoNeededInitializePlugins(true);
                    //parent.ocbDoNeededInitializePlugins();
                    //parent.ocbDoNeededInitializePlugins(true);

                    setTimeout(function () {
                        var preloader = window.parent.document.getElementById('offsprout-preloader-background');
                        jQuery(preloader).fadeOut(300, function () {
                            window.ocbInitSliders();
                            window.ocbInitSliders(true);
                            //parent.ocbInitSliders();
                            //parent.ocbInitSliders(true);
                        });
                    }, 200);
                }).catch(function (error) {
                    _api_helpers2.default.doRequest('getMeta', false, { metaKey: 'ocb_tree_content_backups' }).then(function (result) {

                        var overlayOptions = [];

                        result.forEach(function (item, index) {
                            //index 0 is the latest version that is causing an error
                            if (index > 0) {
                                overlayOptions.push({
                                    classes: '',
                                    link: _url_helpers2.default.addParam(parent.location.href, 'ocbRevision', item),
                                    text: index == 1 ? 'Previous Revision' : 'Revision ' + index
                                });
                            }
                        });

                        overlayOptions.push({
                            classes: 'ocb-danger',
                            onClick: function onClick() {
                                return _this2.props.updateAppState('overlay', null);
                            },
                            text: 'Cancel'
                        });

                        var overlay = _react2.default.createElement(_app_overlay2.default, {
                            title: 'Error Loading',
                            content: 'Uh oh! It seems there was an error loading this page. Load a previous revision and continue working from there.',
                            stacked: '1',
                            overlayStyle: 'small',
                            options: overlayOptions
                        });

                        _this2.props.updateAppState('overlay', overlay);
                    }).catch(function (error) {
                        console.log('backup error', error);
                    });
                });
            }
        }
    }, {
        key: 'saveTemplate',
        value: function saveTemplate(object) {
            this.setState({
                templateObject: object,
                templateSaving: true
            });
        }
    }, {
        key: 'doneSavingTemplate',
        value: function doneSavingTemplate() {
            this.setState({ templateObject: false, templateSaving: false });
        }
    }, {
        key: 'equalizeWidths',
        value: function equalizeWidths(row) {
            this.props.equalizeColumnWidths(row);
        }
    }, {
        key: 'verticallyAlignRow',
        value: function verticallyAlignRow(row) {
            var position = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'center';

            this.props.updateObjectSettings(row, _extends({}, row.settings, { verticalAlign: position }), false, { updateUndo: 'OBJECT_UPDATED' });
        }
    }, {
        key: 'verticallyAlignColumn',
        value: function verticallyAlignColumn(column, position) {
            //this.props.updateObjectSettings(column, {...column.settings, verticalAlign: position}, false, {updateUndo: 'OBJECT_UPDATED'});
            if (column.settings != undefined && column.settings.verticalAlign) {
                this.props.updateObjectSettings(column, _extends({}, column.settings, { verticalAlign: false }), false);
            }
            this.props.updateObjectStandard(column, _extends({}, column.standard, {
                linked: _extends({}, column.standard.linked, {
                    column_items: { choice: position }
                })
            }), false, { updateUndo: 'OBJECT_UPDATED' });
        }
    }, {
        key: 'canAddControls',
        value: function canAddControls() {
            if (this.state.moving || this.state.inlineEditing) {
                return false;
            }

            return true;
        }

        /**
         * Column resizing
         *
         * @param left javascript column object
         * @param right javascript column object
         * @param row javascript row object
         * @param e mouseEvent
         */

    }, {
        key: 'changeWidth',
        value: function changeWidth(left, right, row, e) {
            if (this.state.widthChangeLeft == null) {
                this.setState({
                    widthChanging: true,
                    widthChangeLeft: document.getElementById('column-' + left.id),
                    widthChangeRight: document.getElementById('column-' + right.id),
                    widthChangeLeftObject: left,
                    widthChangeRightObject: right,
                    widthChangeRow: document.getElementById('row-' + row.id),
                    widthChangeCursor: e.clientX,
                    widthChangeIndicator: e.target.childNodes[0]
                });
                window.addEventListener('mousemove', this.state._resize, false);
                window.addEventListener('mouseup', this._stopResize.bind(this), false);
            }
        }
    }, {
        key: 'resizePreventSelect',
        value: function resizePreventSelect(e) {
            e.preventDefault();
        }
    }, {
        key: 'widthToFraction',
        value: function widthToFraction(width) {
            var colWidth = width;
            switch (parseFloat(width).toFixed(1)) {
                case '10.0':
                    colWidth = '1/10';
                    break;
                case '16.7':
                    colWidth = '1/6';
                    break;
                case '20.0':
                    colWidth = '1/5';
                    break;
                case '25.0':
                    colWidth = '1/4';
                    break;
                case '30.0':
                    colWidth = '3/10';
                    break;
                case '33.3':
                    colWidth = '1/3';
                    break;
                case '40.0':
                    colWidth = '2/5';
                    break;
                case '50.0':
                    colWidth = '1/2';
                    break;
                case '60.0':
                    colWidth = '3/5';
                    break;
                case '66.7':
                    colWidth = '2/3';
                    break;
                case '70.0':
                    colWidth = '7/10';
                    break;
                case '75.0':
                    colWidth = '3/4';
                    break;
                case '80.0':
                    colWidth = '4/5';
                    break;
                case '83.3':
                    colWidth = '5/6';
                    break;
                case '90.0':
                    colWidth = '9/10';
                    break;
                default:
                    colWidth = parseFloat(width).toFixed(1) + '%';
                    break;
            }
            return colWidth;
        }

        /**
         * Resize column widths
         *
         * Inspired by: https://jsfiddle.net/RainStudios/mw786v1w/
         * @param e
         * @private
         */

    }, {
        key: '_resize',
        value: function _resize(e) {
            var rowInner = this.state.widthChangeRow.getElementsByClassName('ocb-row-inner')[0];
            var rowWidth = rowInner.getBoundingClientRect().width;
            var leftWidth = parseFloat(this.state.widthChangeLeftObject.width);
            var rightWidth = parseFloat(this.state.widthChangeRightObject.width);
            //let leftWidth = parseFloat( this.state.widthChangeLeft.offsetWidth ) / rowWidth * 100;
            //let rightWidth = parseFloat( this.state.widthChangeRight.offsetWidth ) / rowWidth * 100;
            var combinedWidth = leftWidth + rightWidth;
            //let rowWidth = rowInner.clientWidth;
            var rowLeft = rowInner.getBoundingClientRect().left;
            var originalCursor = this.state.widthChangeCursor;
            var currentCursor = e.clientX;
            var newLeftWidth = parseFloat(this.state.widthChangeLeftObject.width) + (currentCursor - originalCursor) * 100 / rowWidth;
            var changePercentage = (currentCursor - originalCursor) * 100 / rowWidth;
            var newRightWidth = combinedWidth - newLeftWidth;

            //Disable text selection while resizing
            window.addEventListener('selectstart', this.resizePreventSelect);

            if (document.selection) {
                document.selection.empty();
            } else if (window.getSelection) {
                window.getSelection().removeAllRanges();
            }

            /*console.log('width resize 1', {
                e, leftWidth, rightWidth, combinedWidth, rowInner, rowWidth, rowLeft, originalCursor, currentCursor, newLeftWidth, newRightWidth, changePercentage
            });*/

            //Snap to 6ths, 5ths, 4ths, and 3rds
            var widthSnaps = [33.33333333, 66.66666667, 16.66666667, 83.33333333, 20, 40, 60, 80, 25, 50, 75];
            var place = (currentCursor - rowLeft) / rowWidth * 100;
            var indicator = place;

            widthSnaps.forEach(function (width) {

                //If the cursor is within 1% of one of the snap points
                //This isn't the best way to do it because it requires the columns to be certain percentages.
                // It would be best to just lock in the columns, no matter the percentage at these snap points
                if (place < width + 1 && place > width - 1) {
                    var leftWidthBase = false;
                    var rightWidthBase = false;
                    widthSnaps.forEach(function (snap) {
                        if (newLeftWidth < snap + 1 && newLeftWidth > snap - 1) {
                            newLeftWidth = snap;
                            leftWidthBase = true;
                        }
                        if (newRightWidth < snap + 1 && newRightWidth > snap - 1) {
                            newRightWidth = snap;
                            rightWidthBase = true;
                        }
                    });

                    if (leftWidthBase) {
                        newRightWidth = combinedWidth - newLeftWidth;
                        indicator = width;
                    } else if (rightWidthBase) {
                        newLeftWidth = combinedWidth - newRightWidth;
                        indicator = width;
                    }
                }
            });

            var updateIndicator = true;

            if (newLeftWidth < 10) {
                newLeftWidth = 10;
                newRightWidth = combinedWidth - newLeftWidth;
                updateIndicator = false;
            }

            if (newRightWidth < 10) {
                newRightWidth = 10;
                newLeftWidth = combinedWidth - newRightWidth;
                updateIndicator = false;
            }

            /*console.log('width resize 2', {
                e, leftWidth, rightWidth, combinedWidth, rowInner, rowWidth, rowLeft, originalCursor, currentCursor, newLeftWidth, newRightWidth
            });*/

            var newWidthChangeLeft = this.state.widthChangeLeft;
            newWidthChangeLeft.style.width = newLeftWidth + '%';
            newWidthChangeLeft.dataset.width = newLeftWidth;

            var newWidthChangeRight = this.state.widthChangeRight;
            newWidthChangeRight.style.width = newRightWidth + '%';
            newWidthChangeRight.dataset.width = newRightWidth;

            var newWidthChangeIndicator = this.state.widthChangeIndicator;
            if (updateIndicator) {
                newWidthChangeIndicator.innerHTML = indicator.toFixed(1) + '%';
                jQuery(this.state.widthChangeLeft).find('.ocb-column-width-single-indicator').html(this.widthToFraction(newLeftWidth));
                jQuery(this.state.widthChangeRight).find('.ocb-column-width-single-indicator').html(this.widthToFraction(newRightWidth));
            }

            /*this.setState({
                widthChangeLeft: newWidthChangeLeft,
                widthChangeRight: newWidthChangeRight,
                widthChangeIndicator: newWidthChangeIndicator,
                widthLeftIndicator: newLeftWidth,
                widthRightIndicator: newRightWidth
            });*/

            /*this.state.widthChangeLeft.style.width = newLeftWidth + '%';
            this.state.widthChangeLeft.dataset.width = newLeftWidth;
            this.state.widthChangeRight.style.width = newRightWidth + '%';
            this.state.widthChangeRight.dataset.width = newRightWidth;
             if( updateIndicator ) {
                this.state.widthChangeIndicator.innerHTML = indicator.toFixed(1);
            }*/
        }

        /**
         * Stop resizing column widths and save the results
         * @private
         */

    }, {
        key: '_stopResize',
        value: function _stopResize() {
            var _this3 = this;

            if (this.state.widthChanging) {
                var theState = Object.assign({}, this.state);
                //Use timeouts to make the UI snappier
                setTimeout(function () {
                    _this3.props.updateObjectProperty(theState.widthChangeLeftObject, { width: theState.widthChangeLeft.dataset.width });
                    _this3.props.updateObjectProperty(theState.widthChangeRightObject, { width: theState.widthChangeRight.dataset.width });
                }, 300);
                setTimeout(function () {
                    //Remove the width style property so that the CSS in object.js can control width instead
                    // and add to this timeout so that it doesn't jump back for a second before the object is updated
                    theState.widthChangeLeft.style.removeProperty('width');
                    theState.widthChangeRight.style.removeProperty('width');
                    _this3.props.objectUpdated(theState.widthChangeLeftObject);
                }, 600);
            }

            window.removeEventListener('selectstart', this.resizePreventSelect);

            this.setState({
                widthChanging: false,
                widthChangeLeft: null,
                widthChangeRight: null,
                widthChangeLeftObject: null,
                widthChangeRightObject: null,
                widthChangeRow: null,
                widthChangeCursor: null,
                widthChangeIndicator: null
            });
            window.removeEventListener('mousemove', this.state._resize, false);
            window.removeEventListener('mouseup', this.state._stopResize, false);
        }
    }, {
        key: 'updateObjectSettings',
        value: function updateObjectSettings(object, settings) {
            this.props.updateObjectSettings(object, settings);
        }
    }, {
        key: 'updateObjectProperty',
        value: function updateObjectProperty(object, update) {
            this.props.updateObjectProperty(object, update);
        }
    }, {
        key: 'duplicateObject',
        value: function duplicateObject(object) {
            this.props.duplicateObject(object);
            setTimeout(window.ocbReInitializePlugins(), 1000);
        }
    }, {
        key: 'editGlobalToggle',
        value: function editGlobalToggle(value, object) {
            var _this4 = this;

            if (this.state.editingGlobal && value) {
                var overlayOptions = [{
                    classes: '',
                    onClick: function onClick() {
                        return _this4.setState({ infoAlert: null });
                    },
                    text: 'Okay'
                }];

                var alert = _react2.default.createElement(_app_overlay2.default, {
                    title: 'You cannot edit two Globals at the same time',
                    icon: 'warning',
                    content: '',
                    overlayStyle: 'small',
                    options: overlayOptions
                });
                this.setState({ infoAlert: alert });
                return false;
            } else {
                this.setState({
                    editingGlobal: value != undefined ? value : !this.state.editingGlobal,
                    currentlyEditingGlobal: value != undefined ? object : !this.state.editingGlobal
                });
            }
            return true;
        }
    }, {
        key: 'onMouseMove',
        value: function onMouseMove(e) {
            if (this.props.trees.moveState == undefined || this.props.trees.moveState.moving == undefined || !this.props.trees.moveState.moving) return;

            this.props.moveGetHover(e, this.props.trees[this.props.area]);
        }
    }, {
        key: 'render',
        value: function render() {
            var _this5 = this;

            var treeProps = {
                move: {
                    moveStart: this.props.moveStart,
                    moveStop: function moveStop() {
                        //This function has to be written in a component rather than in a reducer because you can't dispatch an action from a reducer
                        if (_this5.props.trees.moveState.objectMoveTo) {
                            if (_this5.props.trees.moveState.newObjectToValue && _this5.props.trees.moveState.newObjectToValue2) {
                                _this5.props.moveObject(_this5.props.trees.moveState.moduleMove, _this5.props.trees.moveState.objectMoveTo, _this5.props.trees.moveState.moveToDirection, _this5.props.trees.moveState.newObjectToValue, _this5.props.trees.moveState.newObjectToValue2);
                            } else {
                                _this5.props.moveObject(_this5.props.trees.moveState.moduleMove, _this5.props.trees.moveState.objectMoveTo, _this5.props.trees.moveState.moveToDirection, false, false);
                            }

                            setTimeout(window.ocbReInitializePlugins(), 500);
                        }
                        _this5.props.moveStop();
                    },
                    moveFrom: this.props.moveFrom,
                    moveTo: this.props.moveTo,
                    resetMoveTo: this.props.moveToReset,
                    objectMoveTo: this.props.trees.moveState.objectMoveTo,
                    moveToDirection: this.props.trees.moveState.moveToDirection,
                    state: this.props.trees.moveState.moving
                },
                settings: {
                    verticallyAlignRow: this.verticallyAlignRow.bind(this),
                    verticallyAlignColumn: this.verticallyAlignColumn.bind(this),
                    makeSettingsActive: this.props.appFunctions.makeSettingsActive,
                    makeSettingsInactive: this.props.appFunctions.makeSettingsInactive,
                    deleteObject: this.props.deleteObject.bind(this),
                    duplicateObject: this.duplicateObject.bind(this),
                    //getObjectStandardStyleClasses: (object) => SettingsHelpers.getObjectStandardStyleClasses( object, this.props.appFunctions.isSettingsActive ),
                    //getObjectOuterClasses: SettingsHelpers.getObjectOuterClasses,
                    updateObjectSettings: this.updateObjectSettings.bind(this),
                    updateObjectProperty: this.updateObjectProperty.bind(this),
                    joinObject: this.props.joinObject.bind(this),
                    saveTemplate: this.saveTemplate.bind(this),
                    settingsActive: this.props.trees.workspaceState.settingsActive,
                    activeObject: this.props.trees.workspaceState.editSettings
                },
                templates: {
                    editingGlobal: this.state.editingGlobal,
                    currentlyEditingGlobal: this.state.currentlyEditingGlobal, //currently not being used
                    editGlobalToggle: this.editGlobalToggle.bind(this)
                },
                resize: {
                    equalizeWidth: this.equalizeWidths.bind(this),
                    changeWidth: this.changeWidth.bind(this),
                    widthToFraction: this.widthToFraction.bind(this),
                    widthChanging: this.state.widthChanging,
                    widthChangingColumn: this.state.widthChangeRightObject,
                    widthChangingColumnLeft: this.state.widthChangeLeftObject
                },
                inlineEdit: {
                    startEditing: this.props.inlineEditStart,
                    stopEditing: function stopEditing() {
                        var doSwitch = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

                        var object = JSON.parse(JSON.stringify(_this5.props.trees.inlineEditState.inlineEditingObject));
                        if (!doSwitch) {
                            _this5.props.inlineEditStop();
                        }
                        _this5.props.objectUpdated(object);
                    },
                    editing: this.props.trees.inlineEditState.inlineEditing,
                    openConnector: this.props.inlineEditOpenConnector
                },
                canAddControls: this.canAddControls.bind(this)
            };

            var treeVar = '';

            if (this.props.trees[this.props.area].defaultUsed) {
                return _react2.default.createElement(
                    'div',
                    null,
                    'Loading...'
                );
            }

            var rows = this.props.trees[this.props.area].items.map(function (row, index) {
                return _react2.default.createElement(_object2.default, { object: row, key: index, treeProps: treeProps, depth: { overall: 0, row: 0, column: 0 } });
            });

            var className = 'ocb-tree';

            if (this.state.widthChanging) {
                className += ' width-changing';
            }

            if (this.props.trees.inlineEditState.inlineEditing) {
                className += ' inline-editing';
            }

            var saveTemplate = null;
            if (this.state.templateSaving) {
                saveTemplate = _react2.default.createElement(_save_template2.default, { done: this.doneSavingTemplate.bind(this), type: 'object', templateObject: this.state.templateObject });
            }

            //Add onMouseUp action so that the moveState is updated with the current moveTo right before the moveStop action is fired
            return _react2.default.createElement(
                'div',
                null,
                _react2.default.createElement(
                    'section',
                    { className: className,
                        'data-id': this.props.trees[this.props.area].id,
                        onMouseMove: function onMouseMove(e) {
                            return _this5.onMouseMove(e);
                        } //if( state.moving == false ) nothing is done
                        , onMouseLeave: function onMouseLeave(e) {
                            return _this5.props.moveGetHover(false, _this5.props.trees[_this5.props.area]);
                        } //when you leave the tree area, there should be no dropzones
                        , onMouseUp: function onMouseUp(e) {
                            return _this5.props.moveGetHover(e, _this5.props.trees[_this5.props.area], true);
                        } //pass setTheState as true to update the state on mouseUp
                    },
                    rows
                ),
                this.state.infoAlert,
                saveTemplate
            );
        }
    }]);

    return Tree;
}(_react.Component);

function mapStateToProps(state) {
    //will show up as props inside of Tree
    return {
        trees: state
    };
}

//Anything returned from this function will end up as props on the Tree container
function mapDispatchToProps(dispatch) {
    //whenever update module standard or settings is called, the result should be passed to our reducers
    return (0, _redux.bindActionCreators)({
        deleteObject: _index.deleteObject, duplicateObject: _index.duplicateObject, updateObjectProperty: _index.updateObjectProperty, updateObjectSettings: _index.updateObjectSettings, updateObjectStandard: _index.updateObjectStandard, addObject: _index.addObject, equalizeColumnWidths: _index.equalizeColumnWidths, moveObject: _index.moveObject, joinObject: _index.joinObject, updateTreeStateFromAPI: _index.updateTreeStateFromAPI, objectUpdated: _index.objectUpdated, updateAppState: _index.updateAppState,
        moveStart: _index.moveStart, moveStop: _index.moveStop, moveFrom: _index.moveFrom, moveTo: _index.moveTo, moveGetHover: _index.moveGetHover, moveToReset: _index.moveToReset,
        inlineEditStart: _index.inlineEditStart, inlineEditStop: _index.inlineEditStop, inlineEditOpenConnector: _index.inlineEditOpenConnector, inlineEditCloseConnector: _index.inlineEditCloseConnector
    }, dispatch);
}

//Promote Tree from component to container - it needs to know about the new dispatch methods above, updateModuleStandard
//and updateModuleSettings
exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(Tree);

/***/ }),

/***/ 820:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _radio_toggle = __webpack_require__(18);

var _radio_toggle2 = _interopRequireDefault(_radio_toggle);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var RadioToggleField = function (_Component) {
    _inherits(RadioToggleField, _Component);

    function RadioToggleField(props) {
        _classCallCheck(this, RadioToggleField);

        var _this = _possibleConstructorReturn(this, (RadioToggleField.__proto__ || Object.getPrototypeOf(RadioToggleField)).call(this, props));

        _this.state = _this.props.values;
        return _this;
    }

    _createClass(RadioToggleField, [{
        key: 'update',
        value: function update(merge) {
            var update = Object.assign(this.state, merge);
            this.props.appFunctions.fieldUpdate(this.props.field.id, update, this.props);
            this.setState(merge);
        }
    }, {
        key: 'changeValue',
        value: function changeValue(newValue) {
            this.update({ choice: newValue });
        }
    }, {
        key: 'render',
        value: function render() {
            var settings = this.props.values;
            var flex = this.props.field.configuration != undefined && this.props.field.configuration.flex != undefined ? this.props.field.configuration.flex : false;
            return _react2.default.createElement(
                'div',
                { className: 'ocb-sf-radio-toggle-field' },
                _react2.default.createElement(_radio_toggle2.default, { update: this.changeValue.bind(this), items: this.props.field.options, value: settings.choice, flex: flex, configuration: this.props.field.configuration })
            );
        }
    }]);

    return RadioToggleField;
}(_react.Component);

exports.default = RadioToggleField;

/***/ }),

/***/ 821:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _radio_toggle = __webpack_require__(18);

var _radio_toggle2 = _interopRequireDefault(_radio_toggle);

var _api_helpers = __webpack_require__(6);

var _api_helpers2 = _interopRequireDefault(_api_helpers);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var RemoteTemplatesURLField = function (_Component) {
    _inherits(RemoteTemplatesURLField, _Component);

    function RemoteTemplatesURLField(props) {
        _classCallCheck(this, RemoteTemplatesURLField);

        var _this = _possibleConstructorReturn(this, (RemoteTemplatesURLField.__proto__ || Object.getPrototypeOf(RemoteTemplatesURLField)).call(this, props));

        _this.state = _this.props.values;
        _this.timer = null;
        return _this;
    }

    _createClass(RemoteTemplatesURLField, [{
        key: 'update',
        value: function update(merge) {
            var update = Object.assign(this.state, merge);
            this.props.appFunctions.fieldUpdate(this.props.field.id, update, this.props);
            this.setState(merge);
        }
    }, {
        key: 'changeValue',
        value: function changeValue(newValue) {
            var _this2 = this;

            var key = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'text';

            clearTimeout(this.timer);
            this.timer = setTimeout(function () {
                _this2.update(_defineProperty({}, key, newValue));
            }, 200);
        }
    }, {
        key: 'deleteCache',
        value: function deleteCache() {
            _api_helpers2.default.doRequest('runUtility', {
                action: 'deleteRemoteTemplateCache',
                url: this.state.text
            }).then(function (result) {
                jQuery('.ocb-admin-button-load').find('.fa-spinner').remove();
            });
        }
    }, {
        key: 'render',
        value: function render() {
            var _this3 = this;

            var settings = this.props.values;
            var placeholder = this.props.field.placeholder != undefined ? this.props.field.placeholder : 'https://basic.t.offsprout.com';

            var input = _react2.default.createElement('input', { className: 'ocb-text-field-input', type: 'text', placeholder: placeholder, defaultValue: settings.text == null ? '' : settings.text, onChange: function onChange(e) {
                    return _this3.changeValue(e.target.value);
                } });
            var items = [{
                name: 'None',
                value: 0
            }, {
                name: '15 Minutes',
                value: 15 * 60
            }, {
                name: '1 Hour',
                value: 60 * 60
            }, {
                name: '1 Day',
                value: 24 * 60 * 60
            }, {
                name: '3 Days',
                value: 3 * 24 * 60 * 60
            }];

            var cacheToggle = _react2.default.createElement(
                'div',
                { className: 'mt-3' },
                _react2.default.createElement(
                    'strong',
                    null,
                    'Cache Templates'
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'mt-3' },
                    _react2.default.createElement(_radio_toggle2.default, { update: function update(value) {
                            return _this3.changeValue(value, 'cache');
                        }, items: items, value: settings.cache, flex: false })
                )
            );

            var cacheDelete = _react2.default.createElement(
                'div',
                { className: 'mt-3' },
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-sf-button ocb-admin-button-load', onClick: function onClick() {
                            return _this3.deleteCache();
                        } },
                    'Delete Cache'
                )
            );

            var cacheWarning = _react2.default.createElement(
                'div',
                { className: 'mt-3' },
                _react2.default.createElement(
                    'div',
                    { className: 'alert alert-warning' },
                    'Caching templates will increase the speed in which templates are loaded, but means that templates added to the remote template site may take up to the chosen cache time to be accessible to this site. You can clear the cache by clicking the "Delete Cache" button.'
                )
            );

            if (settings.text.includes('templates.offsprout.com') || settings.text.includes('t.offsprout.com')) {
                cacheToggle = _react2.default.createElement(
                    'div',
                    null,
                    'Offsprout templates are cached automatically.'
                );
                cacheDelete = null;
                cacheWarning = null;
            }

            return _react2.default.createElement(
                'div',
                { className: 'ocb-sf-remote-templates-url-field' },
                input,
                cacheWarning,
                cacheToggle,
                cacheDelete
            );
        }
    }]);

    return RemoteTemplatesURLField;
}(_react.Component);

exports.default = RemoteTemplatesURLField;

/***/ }),

/***/ 822:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Selector = function (_Component) {
    _inherits(Selector, _Component);

    function Selector(props) {
        _classCallCheck(this, Selector);

        var _this = _possibleConstructorReturn(this, (Selector.__proto__ || Object.getPrototypeOf(Selector)).call(this, props));

        _this.state = {
            filter: '',
            allItems: [],
            items: _this.props.values.items != undefined && _this.props.values.items ? _this.props.values.items : []
        };

        var labels = _this.props.labels != undefined ? _this.props.labels : {};
        var conversions = _this.props.conversions != undefined ? _this.props.conversions : {};
        var name = labels.name != undefined ? labels.name : 'item';

        //Standardizes the label display
        _this.labels = {
            name: name,
            plural: labels.plural != undefined ? labels.plural : name + 's',
            capName: labels.capName != undefined ? labels.capName : name.charAt(0).toUpperCase() + name.slice(1),
            capPlural: labels.capPlural != undefined ? labels.capPlural : name.charAt(0).toUpperCase() + name.slice(1) + 's'
        };

        //Standardizes how object attributes are selected for display
        _this.conversions = {
            name: conversions.name != undefined ? conversions.name : 'name',
            slug: conversions.slug != undefined ? conversions.slug : 'slug',
            id: conversions.id != undefined ? conversions.id : 'id'
        };

        _this.single = _this.props.configuration.single != undefined ? _this.props.configuration.single : false;
        return _this;
    }

    _createClass(Selector, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _this2 = this;

            this.props.request.then(function (response, error) {
                _this2.setState({ allItems: response });
            });
        }
    }, {
        key: 'componentDidUpdate',
        value: function componentDidUpdate(prevProps, prevState) {
            var _this3 = this;

            if (prevProps.taxonomy != this.props.taxonomy) {
                this.props.request.then(function (response, error) {
                    _this3.setState({ allItems: response });
                });
            }
        }
    }, {
        key: 'update',
        value: function update(merge) {
            var update = Object.assign(this.props.values, merge);
            this.props.update(update);
        }
    }, {
        key: 'addItem',
        value: function addItem(item) {
            var update = {};
            if (this.single) {
                update = { items: [item] };
            } else {
                update = { items: this.state.items.concat(item) };
            }
            this.update(update);
            this.setState(update);
        }
    }, {
        key: 'removeItem',
        value: function removeItem(item) {
            var _this4 = this;

            var update = { items: this.state.items.filter(function (each) {
                    return each[_this4.conversions.id] != item[_this4.conversions.id];
                }) };
            this.update(update);
            this.setState(update);
        }
    }, {
        key: 'enterPress',
        value: function enterPress(e, only) {
            if (e.charCode == 13 || e.which == 13 || e.keyCode == 13) {
                this.addItem(only);
            }
        }
    }, {
        key: 'filterItems',
        value: function filterItems(items) {
            var _this5 = this;

            return items.filter(function (item, index) {
                if (_this5.state.filter) {
                    if (item.post_title != undefined && !item.post_title.toLowerCase().includes(_this5.state.filter.toLowerCase())) return false;
                    if (item.name != undefined && !item.name.toLowerCase().includes(_this5.state.filter.toLowerCase())) return false;
                }
                if (_this5.state.items.find(function (each) {
                    return each[_this5.conversions.id] == item[_this5.conversions.id];
                })) return false;

                return true;
            });
        }
    }, {
        key: 'getAddableItems',
        value: function getAddableItems(items) {
            var _this6 = this;

            var linkIterator = 0;

            return items.map(function (item, index) {
                if (linkIterator > 10) return null;
                linkIterator++;
                return _react2.default.createElement(
                    'div',
                    { key: index, className: 'ocb-sf-link-addable d-flex align-items-stretch mb-1' },
                    _react2.default.createElement(
                        'div',
                        { className: 'ocb-sf-link-addable-text p-1' },
                        _react2.default.createElement(
                            'div',
                            null,
                            item[_this6.conversions.name]
                        )
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'ocb-sf-link-addable-add d-flex align-items-center justify-content-center', onClick: function onClick() {
                                return _this6.addItem(item);
                            } },
                        _react2.default.createElement('i', { className: 'fa fa-plus' })
                    )
                );
            });
        }
    }, {
        key: 'getSelectedItems',
        value: function getSelectedItems(items) {
            var _this7 = this;

            return items.map(function (item, index) {
                var includeSlug = _this7.props.configuration != undefined && _this7.props.configuration.includeSlug != undefined ? _this7.props.configuration.includeSlug : false;
                var slug = null;

                if (includeSlug) slug = _react2.default.createElement(
                    'div',
                    null,
                    item[_this7.conversions.slug]
                );

                var remove = null;

                if (!_this7.single) {
                    remove = _react2.default.createElement(
                        'div',
                        { className: 'ocb-sf-link-addable-remove d-flex align-items-center justify-content-center', onClick: function onClick() {
                                return _this7.removeItem(item);
                            } },
                        _react2.default.createElement('i', { className: 'fa fa-remove' })
                    );
                }

                return _react2.default.createElement(
                    'div',
                    { key: index, className: 'ocb-sf-link-addable d-flex align-items-stretch mb-1' },
                    _react2.default.createElement(
                        'div',
                        { className: 'ocb-sf-link-addable-text p-1' },
                        _react2.default.createElement(
                            'div',
                            null,
                            item[_this7.conversions.name]
                        ),
                        slug
                    ),
                    remove
                );
            });
        }
    }, {
        key: 'getBody',
        value: function getBody(selectedItems, items, enterAdd) {
            var _this8 = this;

            var addableItems = _react2.default.createElement(
                'div',
                { className: 'ocb-sf-link-items' },
                this.getAddableItems(items)
            );

            if (this.state.allItems.length && items.length == 0) {
                var extraMessage = this.state.filter ? 'from this search ' : '';
                addableItems = _react2.default.createElement(
                    'div',
                    { className: 'mt-3' },
                    'All ',
                    this.labels.plural,
                    ' ',
                    extraMessage,
                    'have been added.'
                );
            }

            addableItems = _react2.default.createElement(
                'div',
                { className: 'mt-3' },
                _react2.default.createElement('input', { className: 'mb-1', type: 'text', placeholder: 'search ' + this.labels.plural + '...',
                    defaultValue: this.state.filter,
                    onChange: function onChange(e) {
                        return _this8.setState({ filter: e.target.value });
                    },
                    onKeyPress: function onKeyPress(e) {
                        return _this8.enterPress(e, enterAdd);
                    } }),
                addableItems
            );

            return _react2.default.createElement(
                'div',
                null,
                _react2.default.createElement(
                    'div',
                    { className: 'mt-3' },
                    _react2.default.createElement(
                        'div',
                        null,
                        _react2.default.createElement(
                            'strong',
                            null,
                            this.labels.capPlural
                        )
                    ),
                    _react2.default.createElement(
                        'div',
                        null,
                        this.getSelectedItems(selectedItems)
                    )
                ),
                addableItems
            );
        }
    }, {
        key: 'render',
        value: function render() {
            var settings = this.props.values;
            settings.items = settings.items != undefined && settings.items ? settings.items : [];

            var items = this.filterItems(this.state.allItems);
            var enterAdd = items.length ? items[0] : false;

            var body = _react2.default.createElement(
                'div',
                null,
                'No ',
                this.labels.plural,
                ' found.'
            );

            if (this.state.allItems.length) {
                body = this.getBody(settings.items, items, enterAdd);
            }

            return _react2.default.createElement(
                'div',
                { className: 'ocb-sf-selector-tag' },
                body
            );
        }
    }]);

    return Selector;
}(_react.Component);

exports.default = Selector;

/***/ }),

/***/ 823:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactRedux = __webpack_require__(5);

var _redux = __webpack_require__(7);

var _deepmerge = __webpack_require__(9);

var _deepmerge2 = _interopRequireDefault(_deepmerge);

var _index = __webpack_require__(8);

var _module_helpers = __webpack_require__(12);

var _module_helpers2 = _interopRequireDefault(_module_helpers);

var _standard_helpers = __webpack_require__(59);

var _standard_helpers2 = _interopRequireDefault(_standard_helpers);

var _settings_helpers = __webpack_require__(2);

var _settings_helpers2 = _interopRequireDefault(_settings_helpers);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var SkinConverterField = function (_Component) {
    _inherits(SkinConverterField, _Component);

    function SkinConverterField() {
        _classCallCheck(this, SkinConverterField);

        return _possibleConstructorReturn(this, (SkinConverterField.__proto__ || Object.getPrototypeOf(SkinConverterField)).apply(this, arguments));
    }

    _createClass(SkinConverterField, [{
        key: 'getSettings',


        /**
         * get settings like action_button_[field] this.props.field.configuration.prefixes
         *  info_button_[field]
         * @param oldSkin
         * @returns {{}}
         */
        value: function getSettings(oldSkin) {
            var _this2 = this;

            var config = this.props.field.configuration;
            var prefixes = config.prefixes;
            var prefix = prefixes[oldSkin];
            var values = {};

            Object.keys(this.props.siteState).forEach(function (key) {
                if (key.includes(prefix)) {
                    var newKey = key.replace(prefix, '');
                    values[newKey] = _this2.props.siteState[key];
                }
            });

            return values;
        }
    }, {
        key: 'saveSkin',
        value: function saveSkin(name) {
            var skinId = void 0;
            var newObject = JSON.parse(JSON.stringify(this.props.workspaceState.editSettings));

            skinId = _settings_helpers2.default.generateId('skin');

            newObject.skinId = skinId;

            //Add the skinId to the object
            this.props.updateObjectProperty(this.props.workspaceState.editSettings, { skinId: skinId });

            //Get the module skin (columns and rows just get empty defaults)
            var skin = newObject.type == 'module' ? _module_helpers2.default.getSkin(newObject, 'settings') : { settings: {}, classes: {}, css: '', moduleType: newObject.type };

            //Get the standard skin
            var standardSkin = _standard_helpers2.default.getSkin(newObject);

            //Merge them
            skin = Object.assign(skin, standardSkin);
            skin.name = name;

            this.props.updateSkin(skinId, skin);
        }
    }, {
        key: 'render',
        value: function render() {
            var _this3 = this;

            var settings = this.props.values;
            var config = this.props.field.configuration;

            if (settings.choice == 'custom') return null;

            if (this.props.workspaceState.editSettings.skinId != undefined && this.props.workspaceState.editSettings.skinId) {
                this.props.appFunctions.fieldUpdate(this.props.field.id, { choice: 'custom' }, this.props);
                return null;
            }

            //Get the module type
            var moduleType = config.moduleType;

            //See if there's a skin for that module type with a name that matches settings.choice
            var skins = Object.keys(this.props.skinState).filter(function (skin) {
                return _this3.props.skinState[skin].moduleType == moduleType;
            });

            var matchingSkin = false;

            skins.forEach(function (skinId) {
                if (_this3.props.skinState[skinId].name.toLowerCase() == settings.choice.toLowerCase()) {
                    matchingSkin = skinId;
                }
            });

            var message = 'This item uses the old skin system. Please save a new skin using the "Save New Skin" button above and name your new skin "' + (settings.choice ? settings.choice.capitalize() : 'Action') + '"';

            //If so, update the skin for this object and then update the value of this field to 'custom' so that it's hidden
            if (matchingSkin) {

                var newSkinSettings = void 0,
                    newSkinStandard = void 0;

                if (moduleType != 'row') {

                    newSkinSettings = (0, _deepmerge2.default)(this.props.workspaceState.editSettings.settings, this.props.skinState[matchingSkin].settings);

                    newSkinSettings = (0, _deepmerge2.default)(newSkinSettings, {
                        linked: _defineProperty({}, config.id, {
                            choice: 'custom'
                        })
                    });

                    this.props.appUpdateObjectSettings(newSkinSettings);
                    this.props.appUpdateObjectStandard((0, _deepmerge2.default)(this.props.workspaceState.editSettings.standard, this.props.skinState[matchingSkin].standardSettings));
                } else {

                    newSkinStandard = (0, _deepmerge2.default)(this.props.workspaceState.editSettings.standard, this.props.skinState[matchingSkin].standardSettings);

                    newSkinStandard = (0, _deepmerge2.default)(newSkinStandard, {
                        linked: _defineProperty({}, config.id, {
                            choice: 'custom'
                        })
                    });

                    this.props.appUpdateObjectStandard(newSkinStandard);
                }

                this.props.updateObjectProperty(this.props.workspaceState.editSettings, { skinId: matchingSkin });

                setTimeout(function () {
                    _this3.props.appRefreshFields();
                }, 500);
            } else if (settings.temp != 'temp') {
                //If not, apply the settings of the old skin and recommend creating a skin with the name of the current skin
                var newSettings = this.getSettings(settings.choice);

                if (moduleType != 'row') {
                    var fullSettings = (0, _deepmerge2.default)(this.props.workspaceState.editSettings.settings, { linked: newSettings });

                    fullSettings = (0, _deepmerge2.default)(fullSettings, {
                        linked: _defineProperty({}, config.id, {
                            temp: 'temp'
                        })
                    });

                    this.props.appUpdateObjectSettings(fullSettings);
                } else {
                    var _fullSettings = (0, _deepmerge2.default)(this.props.workspaceState.editSettings.standard, { linked: newSettings });

                    _fullSettings = (0, _deepmerge2.default)(_fullSettings, {
                        linked: _defineProperty({}, config.id, {
                            temp: 'temp'
                        })
                    });

                    this.props.appUpdateObjectStandard(_fullSettings);
                }

                setTimeout(function () {
                    _this3.saveSkin(settings.choice.capitalize());
                }, 1000);
            }

            return _react2.default.createElement(
                'div',
                { className: 'ocb-sf-skin-converter-field' },
                _react2.default.createElement(
                    'div',
                    { className: 'p-2' },
                    message
                )
            );
        }
    }]);

    return SkinConverterField;
}(_react.Component);

function mapStateToProps(_ref) {
    var skinState = _ref.skinState,
        siteState = _ref.siteState,
        workspaceState = _ref.workspaceState;

    return {
        skinState: skinState, siteState: siteState, workspaceState: workspaceState
    };
}
function mapDispatchToProps(dispatch) {
    return (0, _redux.bindActionCreators)({ updateObjectProperty: _index.updateObjectProperty, updateSkin: _index.updateSkin, updateAppState: _index.updateAppState, deleteSkin: _index.deleteSkin, appUpdateObjectSettings: _index.appUpdateObjectSettings, appUpdateObjectStandard: _index.appUpdateObjectStandard, appRefreshFields: _index.appRefreshFields, appUpdateWorkspaceProperty: _index.appUpdateWorkspaceProperty }, dispatch);
}
exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(SkinConverterField);

/***/ }),

/***/ 824:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactRedux = __webpack_require__(5);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var SkinField = function (_Component) {
    _inherits(SkinField, _Component);

    function SkinField(props) {
        _classCallCheck(this, SkinField);

        var _this = _possibleConstructorReturn(this, (SkinField.__proto__ || Object.getPrototypeOf(SkinField)).call(this, props));

        _this.state = _this.props.values;
        return _this;
    }

    _createClass(SkinField, [{
        key: 'update',
        value: function update(merge) {
            //For some reason needs to use this.state instead of this.props.values when merging and creating a new object
            // in order to send a signal that the field has been updated, when you change the value multiple times in a row
            var update = Object.assign(this.state, merge);
            this.props.appFunctions.fieldUpdate(this.props.field.id, update, this.props);
            this.setState(merge);
        }
    }, {
        key: 'changeValue',
        value: function changeValue(newValue) {
            this.update({ choice: newValue });
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var settings = this.props.values;
            var select = void 0,
                options = void 0;

            var config = this.props.field.configuration;
            var moduleType = config.moduleType;

            var skins = Object.keys(this.props.skinState).filter(function (skin) {
                return _this2.props.skinState[skin].moduleType == moduleType;
            });

            options = skins.map(function (option, index) {
                return _react2.default.createElement(
                    'option',
                    { key: option, value: option },
                    _this2.props.skinState[option].name
                );
            });

            select = _react2.default.createElement(
                'select',
                { value: settings.choice, onChange: function onChange(e) {
                        return _this2.changeValue(e.target.value);
                    } },
                _react2.default.createElement(
                    'option',
                    { value: '' },
                    'Choose a Skin...'
                ),
                _react2.default.createElement(
                    'option',
                    { value: 'custom' },
                    'Custom'
                ),
                options
            );

            return _react2.default.createElement(
                'div',
                { className: 'ocb-sf-dropdown-field' },
                select
            );
        }
    }]);

    return SkinField;
}(_react.Component);

function mapStateToProps(_ref) {
    var skinState = _ref.skinState,
        siteState = _ref.siteState,
        workspaceState = _ref.workspaceState;

    return {
        skinState: skinState
    };
}
exports.default = (0, _reactRedux.connect)(mapStateToProps)(SkinField);

/***/ }),

/***/ 825:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _rcSlider = __webpack_require__(98);

var _rcSlider2 = _interopRequireDefault(_rcSlider);

var _use_default = __webpack_require__(237);

var _use_default2 = _interopRequireDefault(_use_default);

var _settings_helpers = __webpack_require__(2);

var _settings_helpers2 = _interopRequireDefault(_settings_helpers);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

//https://github.com/react-component/slider
var SliderControlField = function (_Component) {
    _inherits(SliderControlField, _Component);

    function SliderControlField(props) {
        _classCallCheck(this, SliderControlField);

        var _this = _possibleConstructorReturn(this, (SliderControlField.__proto__ || Object.getPrototypeOf(SliderControlField)).call(this, props));

        _this.state = _extends({}, _this.props.values, { input: 'blur' });
        _this.timer = null;
        return _this;
    }

    /*shouldComponentUpdate(nextProps, nextState){
     }*/

    _createClass(SliderControlField, [{
        key: 'update',
        value: function update(merge) {
            var update = Object.assign(this.state, merge);
            this.props.appFunctions.fieldUpdate(this.props.field.id, update, this.props);
            this.setState(merge);
        }
    }, {
        key: 'changeValue',
        value: function changeValue(value) {
            this.update({ value: value });
        }
    }, {
        key: 'changeUnits',
        value: function changeUnits(units) {
            this.update({ units: units });
        }
    }, {
        key: 'changeDefault',
        value: function changeDefault(useDefault) {
            this.update(useDefault);
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var settings = this.state;

            var step = 1;
            var min = 0;
            var max = 100;
            var value = 1;

            if (settings != undefined && settings.value != undefined) value = settings.value;

            var baseButtonClass = "ocb-sf-text-button d-inline-block ml-2";

            this.props.field.configuration.forEach(function (config) {
                if (config.units == settings.units) {
                    step = config.step;
                    min = config.min;
                    max = config.max;
                }
            });

            var textButtons = this.props.field.configuration.map(function (config, index) {
                var theClass = config.units == settings.units ? baseButtonClass + ' active' : baseButtonClass;
                return _react2.default.createElement(
                    'span',
                    { key: index, className: theClass, onClick: function onClick() {
                            return _this2.changeUnits(config.units);
                        } },
                    config.units
                );
            });

            var fullControls = null;

            //We're changing from controlled to uncontrolled which throws an error, but it seems like the best UX so that
            // you aren't affected by min/max when you're typing in the input
            var input = _react2.default.createElement('input', { className: 'ocb-sf-spacing-input', type: 'number', step: 'any',
                onChange: function onChange(e) {
                    return _this2.changeValue(parseFloat(e.target.value));
                },
                onFocus: function onFocus(e) {
                    return _this2.setState({ input: 'focus' });
                },
                onClick: function onClick(e) {
                    return e.target.select();
                },
                value: value });

            if (this.state.input == 'focus') {
                input = _react2.default.createElement('input', { className: 'ocb-sf-spacing-input', type: 'number', step: 'any',
                    onChange: function onChange(e) {
                        return _this2.changeValue(parseFloat(e.target.value));
                    },
                    onBlur: function onBlur(e) {
                        return _this2.setState({ input: 'blur' });
                    },
                    defaultValue: value });
            }

            if (settings.useDefault == 'custom') {
                fullControls = _react2.default.createElement(
                    'div',
                    { className: 'mt-3' },
                    _react2.default.createElement(_rcSlider2.default, {
                        className: 'ocb-sf-spacing-slider',
                        value: parseFloat(value),
                        step: step,
                        min: min,
                        max: max,
                        onChange: function onChange(newValue) {
                            return _this2.changeValue(newValue);
                        } }),
                    input,
                    _react2.default.createElement(
                        'div',
                        { className: 'ocb-sf-units d-inline-block' },
                        textButtons
                    )
                );
            }

            return _react2.default.createElement(
                'div',
                { className: 'ocb-sf-slider-control-field' },
                _react2.default.createElement(_use_default2.default, { useDefault: settings.useDefault, update: this.changeDefault.bind(this) }),
                fullControls
            );
        }
    }]);

    return SliderControlField;
}(_react.Component);

exports.default = SliderControlField;

/***/ }),

/***/ 826:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactInfiniteScroller = __webpack_require__(614);

var _reactInfiniteScroller2 = _interopRequireDefault(_reactInfiniteScroller);

var _api_helpers = __webpack_require__(6);

var _api_helpers2 = _interopRequireDefault(_api_helpers);

var _settings_helpers = __webpack_require__(2);

var _settings_helpers2 = _interopRequireDefault(_settings_helpers);

var _radio_toggle = __webpack_require__(18);

var _radio_toggle2 = _interopRequireDefault(_radio_toggle);

var _svg_json = __webpack_require__(785);

var _svg_json2 = _interopRequireDefault(_svg_json);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var SVGImagePicker = function (_Component) {
    _inherits(SVGImagePicker, _Component);

    function SVGImagePicker(props) {
        _classCallCheck(this, SVGImagePicker);

        var _this = _possibleConstructorReturn(this, (SVGImagePicker.__proto__ || Object.getPrototypeOf(SVGImagePicker)).call(this, props));

        var imageArray = _this.getFullArray();

        _this.state = {
            filter: window.ocbSVGImages != undefined && window.ocbSVGImages.filter != undefined && window.ocbSVGImages.filter ? window.ocbSVGImages.filter : '',
            open: false,
            images: window.ocbSVGImages != undefined && window.ocbSVGImages.images != undefined && window.ocbSVGImages.images.length ? window.ocbSVGImages.images : [],
            page: window.ocbSVGImages != undefined && window.ocbSVGImages.page != undefined && window.ocbSVGImages.page ? window.ocbSVGImages.page : 1,
            hasMore: true,
            wait: true,
            full: imageArray
        };

        _this.timer = null;
        _this.resultNumber = 30;
        return _this;
    }

    _createClass(SVGImagePicker, [{
        key: 'getFullArray',
        value: function getFullArray() {
            var _this2 = this;

            var imageArray = [];

            Object.keys(_svg_json2.default).forEach(function (svg) {
                var filename = svg.replaceAll(' ', '-');
                filename = filename.toLowerCase();

                imageArray.push({
                    title: svg,
                    filename: filename,
                    src: 'https://offsprout-svg.herokuapp.com/' + _this2.props.color + '/' + filename + '.svg'
                });
            });

            return imageArray;
        }

        /**
         * Helps create the masonry effect
         * @param array
         * @returns {*}
         */

    }, {
        key: 'remix',
        value: function remix(array) {
            var length = array.length;

            var newArray = [];
            var newArray1 = [];
            var newArray2 = [];
            var newArray3 = [];

            //Create batches of 30
            var batches = length / this.resultNumber;

            for (var i = 0; i < batches; i++) {
                var batch = array.slice(i * this.resultNumber, (i + 1) * this.resultNumber);
                newArray = newArray.concat([batch]);
            }

            //Put the images in columns, one batch at a time so that batches are always in order
            newArray.forEach(function (array, index) {
                array.forEach(function (image, index) {
                    var newIndex = index + 1;
                    if (newIndex % 3 == 1) {
                        newArray1.push(image);
                    } else if (newIndex % 3 == 2) {
                        newArray2.push(image);
                    } else if (newIndex % 3 == 0) {
                        newArray3.push(image);
                    }
                });
            });

            return [newArray1, newArray2, newArray3];
        }

        /**
         * Field element components like this should be passed the update function of the parent and use that to update the
         * actual data. However, they may need to set their own state like this function
         * @param merge
         */

    }, {
        key: 'update',
        value: function update(merge) {
            this.props.update(merge, this.props.index);
        }
    }, {
        key: 'componentDidMount',
        value: function componentDidMount() {
            if (!this.state.images.length) {
                var images = this.state.full.slice(0, this.state.page * this.resultNumber);

                this.setState({ images: images, page: 1, wait: true });
            }
        }
    }, {
        key: 'componentDidUpdate',
        value: function componentDidUpdate(prevProps, prevState) {
            var _this3 = this;

            if (prevState.filter != this.state.filter) {
                clearTimeout(this.timer);
                this.timer = setTimeout(function () {

                    var subset = _this3.state.full.filter(function (image) {
                        return image.title.toLowerCase().includes(_this3.state.filter.toLowerCase());
                    });

                    _this3.setState({ images: subset, page: 1, wait: true });
                }, 1000);
            }
            if (this.state.wait) {
                setTimeout(function () {
                    _this3.setState({ wait: false });
                }, 1000);
            }
            if (prevProps.color != this.props.color) {
                var newImages = this.state.images.map(function (image) {
                    image.src = image.src.replace(prevProps.color, _this3.props.color);
                    return image;
                });
                this.setState({ full: this.getFullArray(), images: newImages });
            }
        }
    }, {
        key: 'selectImage',
        value: function selectImage(image) {
            this.props.update(image);
            this.setState({ open: false });
        }
    }, {
        key: 'onImageClick',
        value: function onImageClick() {
            var _this4 = this;

            this.setState({ open: !this.state.open });
            setTimeout(function () {
                if (_this4.refs != undefined && _this4.refs.svg_search != undefined) {
                    _this4.refs.svg_search.focus();
                }
            }, 200);
        }
    }, {
        key: 'loadMore',
        value: function loadMore(page) {
            var _this5 = this;

            if (!this.state.open || !this.state.images.length || this.state.wait || this.state.filter) return;

            clearTimeout(this.timer);

            this.timer = setTimeout(function () {

                var images = _this5.state.full.slice(0, (_this5.state.page + 1) * _this5.resultNumber);

                images = images.filter(function (image, index, self) {
                    return index === self.findIndex(function (t) {
                        return t.filename === image.filename;
                    });
                });

                _this5.setState({ images: images, page: _this5.state.page + 1 });
                window.ocbSVGImages = _extends({}, window.ocbSVGImages, {
                    images: images
                });
            }, 1000);
        }
    }, {
        key: 'render',
        value: function render() {
            var _this6 = this;

            var selector = null;
            var loader = _react2.default.createElement(
                'div',
                { className: 'loader', key: 0 },
                'Loading ...'
            );
            var hasMore = true;

            if (!this.state.images.length || this.state.filter) {
                loader = null;
                hasMore = false;
            }

            var imageColumns = this.remix(this.state.images);

            if (this.state.open) {
                selector = _react2.default.createElement(
                    'div',
                    { className: 'ocb-sf-unsplash-selector' },
                    _react2.default.createElement(
                        'div',
                        { className: 'ocb-sf-unsplash-heading d-flex justify-content-between' },
                        _react2.default.createElement(
                            'span',
                            { className: 'd-flex align-self-center pl-3' },
                            'SVG Images by Undraw'
                        ),
                        _react2.default.createElement('i', { className: 'fa fa-remove', onClick: function onClick() {
                                return _this6.setState({ open: false });
                            } })
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'ocb-sf-unsplash-search' },
                        _react2.default.createElement('input', { ref: 'svg_search', placeholder: 'search for image...', onChange: function onChange(e) {
                                return _this6.setState({ filter: e.target.value });
                            } })
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'ocb-sf-unsplash-choices' },
                        _react2.default.createElement(
                            _reactInfiniteScroller2.default,
                            {
                                pageStart: 0,
                                loadMore: this.loadMore.bind(this),
                                hasMore: hasMore,
                                loader: loader,
                                useWindow: false
                            },
                            _react2.default.createElement(
                                'div',
                                { className: 'ocb-sf-unsplash-choices-inner' },
                                imageColumns.map(function (imageColumn, index) {

                                    return _react2.default.createElement(
                                        'div',
                                        { key: index, className: 'ocb-sf-unsplash-image-column' },
                                        imageColumn.map(function (image, index) {
                                            var imgSrc = image.src;
                                            return _react2.default.createElement(
                                                'div',
                                                { key: image.filename + index, className: 'ocb-sf-unsplash-image' },
                                                _react2.default.createElement('img', { src: imgSrc }),
                                                _react2.default.createElement('div', { className: 'ocb-sf-unsplash-image-screen', onClick: function onClick() {
                                                        return _this6.selectImage(image);
                                                    } }),
                                                _react2.default.createElement(
                                                    'div',
                                                    { className: 'ocb-sf-unsplash-controls d-flex justify-content-between align-items-center' },
                                                    _react2.default.createElement(
                                                        'span',
                                                        { className: 'ocb-sf-unsplash-user-wrap d-flex align-items-center' },
                                                        _react2.default.createElement(
                                                            'span',
                                                            null,
                                                            image.title
                                                        )
                                                    )
                                                )
                                            );
                                        })
                                    );
                                })
                            )
                        )
                    )
                );
            }

            return _react2.default.createElement(
                'div',
                { className: 'ocb-sf-unsplash-image-selector-group' },
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-sf-button mb-2', onClick: function onClick() {
                            return _this6.setState({ open: !_this6.state.open });
                        } },
                    'Choose Image'
                ),
                selector
            );
        }
    }]);

    return SVGImagePicker;
}(_react.Component);

exports.default = SVGImagePicker;

/***/ }),

/***/ 827:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _radio_toggle = __webpack_require__(18);

var _radio_toggle2 = _interopRequireDefault(_radio_toggle);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var SwitchField = function (_Component) {
    _inherits(SwitchField, _Component);

    function SwitchField(props) {
        _classCallCheck(this, SwitchField);

        var _this = _possibleConstructorReturn(this, (SwitchField.__proto__ || Object.getPrototypeOf(SwitchField)).call(this, props));

        _this.state = _this.props.values;
        return _this;
    }

    _createClass(SwitchField, [{
        key: 'update',
        value: function update(merge) {
            var update = Object.assign({}, this.state, merge);
            this.props.appFunctions.fieldUpdate(this.props.field.id, update, this.props);
            this.setState(merge);
        }
    }, {
        key: 'changeValue',
        value: function changeValue(newValue) {
            this.update({ yes: newValue });
        }
    }, {
        key: 'render',
        value: function render() {
            var settings = this.props.values;
            return _react2.default.createElement(
                'div',
                { className: 'ocb-sf-radio-toggle-field' },
                _react2.default.createElement(_radio_toggle2.default, { update: this.changeValue.bind(this), items: [{ name: 'fa-remove', value: 0 }, { name: 'fa-check', value: 1 }], value: settings.yes, flex: true })
            );
        }
    }]);

    return SwitchField;
}(_react.Component);

exports.default = SwitchField;

/***/ }),

/***/ 828:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _radio_toggle = __webpack_require__(18);

var _radio_toggle2 = _interopRequireDefault(_radio_toggle);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var SwitchGroupField = function (_Component) {
    _inherits(SwitchGroupField, _Component);

    function SwitchGroupField(props) {
        _classCallCheck(this, SwitchGroupField);

        var _this = _possibleConstructorReturn(this, (SwitchGroupField.__proto__ || Object.getPrototypeOf(SwitchGroupField)).call(this, props));

        _this.state = _this.props.values;
        return _this;
    }

    _createClass(SwitchGroupField, [{
        key: 'update',
        value: function update(merge) {
            var update = Object.assign({}, this.state, merge);
            this.props.appFunctions.fieldUpdate(this.props.field.id, update, this.props);
            this.setState(merge);
        }
    }, {
        key: 'changeValue',
        value: function changeValue(which, newValue) {
            this.update(_defineProperty({}, which, newValue));
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var settings = this.props.values;
            return _react2.default.createElement(
                'div',
                { className: 'ocb-sf-switch-group-field' },
                this.props.field.options.map(function (option, index) {
                    return _react2.default.createElement(
                        'div',
                        { key: index, className: 'ocb-sf-row' },
                        _react2.default.createElement(
                            'div',
                            { className: 'ocb-sf-row-label' },
                            option.name
                        ),
                        _react2.default.createElement(
                            'div',
                            { className: 'ocb-sf-row-input' },
                            _react2.default.createElement(_radio_toggle2.default, { update: function update(newValue) {
                                    return _this2.changeValue(option.value, newValue);
                                }, items: [{ name: 'No', value: 0 }, { name: 'Yes', value: 1 }], value: settings[option.value], flex: true })
                        )
                    );
                })
            );
        }
    }]);

    return SwitchGroupField;
}(_react.Component);

exports.default = SwitchGroupField;

/***/ }),

/***/ 829:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _targets = __webpack_require__(361);

var _targets2 = _interopRequireDefault(_targets);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var TargetsField = function (_Component) {
    _inherits(TargetsField, _Component);

    function TargetsField(props) {
        _classCallCheck(this, TargetsField);

        var _this = _possibleConstructorReturn(this, (TargetsField.__proto__ || Object.getPrototypeOf(TargetsField)).call(this, props));

        _this.state = _extends({}, _this.props.values, { targets: [] });
        return _this;
    }

    _createClass(TargetsField, [{
        key: 'update',
        value: function update(merge) {
            var update = Object.assign(this.state, merge);
            delete update.targets;
            this.props.appFunctions.fieldUpdate(this.props.field.id, update, this.props);
            this.setState(merge);
        }
    }, {
        key: 'render',
        value: function render() {
            return _react2.default.createElement(
                'div',
                { className: 'ocb-sf-targets-field' },
                _react2.default.createElement(_targets2.default, { values: this.props.values, update: this.update.bind(this) })
            );
        }
    }]);

    return TargetsField;
}(_react.Component);

exports.default = TargetsField;

/***/ }),

/***/ 83:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _tree_reducer_functions = __webpack_require__(28);

var _tree_reducer_functions2 = _interopRequireDefault(_tree_reducer_functions);

var _settings_helpers = __webpack_require__(2);

var _settings_helpers2 = _interopRequireDefault(_settings_helpers);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var DefaultTreeContent = {
    type: 'tree',
    id: _settings_helpers2.default.generateId('tree'), //'treeadsfli23r89hdasd',
    lastUpdated: new Date(),
    items: [{
        type: 'row',
        id: _settings_helpers2.default.generateId('row'), //'rowasfglfkj0239jd',
        standard: {
            linked: {}
        },
        settings: {},
        items: [{
            type: 'column',
            id: _settings_helpers2.default.generateId('column'), //'colf09fgh23rlksdfu',
            width: '100',
            standard: {
                linked: {}
            },
            items: [{
                type: 'module',
                id: _settings_helpers2.default.generateId('module'), //'mod02wefgrvnbc60f92',
                moduleType: 'text',
                standard: {
                    linked: {}
                },
                settings: {
                    linked: {
                        text: {
                            text: '<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vestibulum bibendum quis est ut facilisis. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vestibulum bibendum quis est ut facilisis.</p>'
                        }
                    }
                }
            }]
        }]
    }]
};

exports.default = DefaultTreeContent;

/***/ }),

/***/ 830:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactSelect = __webpack_require__(165);

var _reactSelect2 = _interopRequireDefault(_reactSelect);

var _dropdown_option = __webpack_require__(357);

var _dropdown_option2 = _interopRequireDefault(_dropdown_option);

var _settings_helpers = __webpack_require__(2);

var _settings_helpers2 = _interopRequireDefault(_settings_helpers);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var TemplateTaxonomyField = function (_Component) {
    _inherits(TemplateTaxonomyField, _Component);

    function TemplateTaxonomyField(props) {
        _classCallCheck(this, TemplateTaxonomyField);

        var _this = _possibleConstructorReturn(this, (TemplateTaxonomyField.__proto__ || Object.getPrototypeOf(TemplateTaxonomyField)).call(this, props));

        _this.state = _extends({}, _this.props.values, { templates: [], taxonomies: [] });
        return _this;
    }

    _createClass(TemplateTaxonomyField, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _this2 = this;

            var templates = _settings_helpers2.default.getAllTemplates();

            templates.then(function (result) {
                var taxonomy = _this2.props.field.configuration.taxonomy;

                var taxonomies = result.reduce(function (accumulator, template) {
                    if (template.taxonomies != undefined && template.taxonomies[taxonomy] != undefined && template.taxonomies[taxonomy]) {
                        return accumulator.concat(template.taxonomies[taxonomy]);
                    }

                    return accumulator;
                }, []);

                if (!taxonomies.length) taxonomies = false;

                _this2.setState({ templates: result, taxonomies: taxonomies });
            }).catch(function (error) {
                console.log('No templates found for template taxonomy field', error);
            });
        }
    }, {
        key: 'update',
        value: function update(merge) {
            //For some reason needs to use this.state instead of this.props.values when merging and creating a new object
            // in order to send a signal that the field has been updated, when you change the value multiple times in a row
            this.props.appFunctions.fieldUpdate(this.props.field.id, merge, this.props);
            this.setState(merge);
        }
    }, {
        key: 'changeValue',
        value: function changeValue(newValue) {
            this.update({ choice: newValue });
        }
    }, {
        key: 'render',
        value: function render() {
            var _this3 = this;

            var settings = this.props.values;

            var options = this.state.taxonomies.map(function (option) {
                return { value: option, name: option };
            });

            if (this.props.field.options != undefined) {
                options = this.props.field.options.concat(options);
            }

            var select = _react2.default.createElement(
                'span',
                null,
                'Loading...'
            );

            if (this.state.taxonomies.length) {
                var dropdownOptions = options.map(function (option, index) {
                    return _react2.default.createElement(
                        'option',
                        { key: index, value: option.value },
                        option.name
                    );
                });

                select = _react2.default.createElement(
                    'select',
                    { value: settings.choice, onChange: function onChange(e) {
                            return _this3.changeValue(e.target.value);
                        } },
                    dropdownOptions
                );
            }

            if (this.state.taxonomies === false) {
                select = _react2.default.createElement(
                    'span',
                    null,
                    'Nothing found'
                );
            }

            return _react2.default.createElement(
                'div',
                { className: 'ocb-sf-dropdown-field' },
                select
            );
        }
    }]);

    return TemplateTaxonomyField;
}(_react.Component);

exports.default = TemplateTaxonomyField;

/***/ }),

/***/ 831:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _settings_helpers = __webpack_require__(2);

var _settings_helpers2 = _interopRequireDefault(_settings_helpers);

var _texteditor = __webpack_require__(73);

var _texteditor2 = _interopRequireDefault(_texteditor);

var _api_helpers = __webpack_require__(6);

var _api_helpers2 = _interopRequireDefault(_api_helpers);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var TestimonialsField = function (_Component) {
    _inherits(TestimonialsField, _Component);

    function TestimonialsField(props) {
        _classCallCheck(this, TestimonialsField);

        var _this = _possibleConstructorReturn(this, (TestimonialsField.__proto__ || Object.getPrototypeOf(TestimonialsField)).call(this, props));

        _this.state = _extends({}, _this.props.values, {
            testimonial: {},
            tags: '',
            availableTestimonials: [],
            testimonials: _this.props.values.testimonials != undefined && _this.props.values.testimonials.length ? _this.props.values.testimonials : [],
            activeTestimonial: false,
            activePanels: [],
            source: _this.props.values.source != undefined && _this.props.values.source ? _this.props.values.source : 'custom',
            attribution: '',
            attributionDescription: ''
        });

        _this.optionTimer = false;
        return _this;
    }

    _createClass(TestimonialsField, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            this.getAllTestimonials();
        }
    }, {
        key: 'componentDidUpdate',
        value: function componentDidUpdate() {
            if (this.state.refreshFields) this.setState({ refreshFields: false });
        }
    }, {
        key: 'getAllTestimonials',
        value: function getAllTestimonials() {
            var _this2 = this;

            //Get all testimonials through the API and update state
            var testimonials = _api_helpers2.default.doRequest('getCustom', {
                post_type: 'ocb_testimonial',
                withTaxonomies: ['post_tag'],
                withMeta: ['ocb_testimonial_config'],
                status: 'any'
            });

            testimonials.then(function (result) {
                _this2.update({ availableTestimonials: result });
            }).catch(function (error) {
                _this2.setState({ availableTestimonials: [] });
            });
        }
    }, {
        key: 'update',
        value: function update(merge) {
            var theState = Object.assign({}, this.state);
            var update = Object.assign({
                testimonials: theState.testimonials,
                source: theState.source,
                lastUpdated: Math.floor(new Date().getTime() / 1000) //Last updated added  so that we know when to refresh the testimonials in the module component
            }, merge);
            this.props.appFunctions.fieldUpdate(this.props.field.id, update, this.props);
            this.setState(merge);
        }
    }, {
        key: 'addTestimonial',
        value: function addTestimonial() {
            var _this3 = this;

            var newTestimonial = _api_helpers2.default.doRequest('createCustom', {
                post_type: 'ocb_testimonial',
                title: 'New Testimonial',
                status: 'publish'
            });

            newTestimonial.then(function (result, error) {
                var testimonial = _api_helpers2.default.doRequest('getCustom', {
                    id: result.id,
                    post_type: 'ocb_testimonial',
                    withTaxonomies: ['post_tag'],
                    withMeta: ['ocb_testimonial_config']
                });
                testimonial.then(function (theTestimonial, error) {
                    _this3.getAllTestimonials();
                }).catch(function (error) {
                    alert('Could not retrieve new testimonial');
                });
            }).catch(function (error) {
                alert('Could not add testimonial');
            });
        }
    }, {
        key: 'saveTestimonial',
        value: function saveTestimonial() {
            var _this4 = this;

            var updateTestimonial = _api_helpers2.default.doRequest('updateCustom', {
                id: this.state.testimonial_id,
                post: {
                    post_content: this.state.testimonial_content,
                    post_title: this.state.testimonial_title
                },
                taxonomies: {
                    post_tag: this.state.testimonial_tags
                },
                meta: {
                    ocb_testimonial_config: {
                        attribution: this.state.attribution,
                        attribution_description: this.state.attributionDescription
                    }
                }
            });

            updateTestimonial.then(function (result, error) {
                _this4.setState({
                    activePanels: _this4.state.activePanels.filter(function (each) {
                        return 'editTestimonialPanel' != each;
                    })
                });
                _this4.getAllTestimonials();
            });
        }
    }, {
        key: 'deleteTestimonial',
        value: function deleteTestimonial(testimonialId) {
            var _this5 = this;

            var action = _api_helpers2.default.doRequest('deleteCustom', { post_id: testimonialId });
            action.then(function (response, error) {
                //update the chosen testimonial if it is the testimonial that was just deleted
                if (_this5.state.testimonials.includes(testimonialId)) {
                    _this5.update({
                        testimonials: _this5.state.testimonials.filter(function (testimonial) {
                            return testimonial != testimonialId;
                        })
                    });
                }
                _this5.getAllTestimonials();
            });
        }
    }, {
        key: 'maybeDeleteTestimonial',
        value: function maybeDeleteTestimonial(testimonialId) {
            var r = confirm('Are you sure you want to delete this testimonial? This will affect ALL pages using this testimonial!');
            if (r == true) {
                this.deleteTestimonial(testimonialId);
            }
        }
    }, {
        key: 'removeActivePanel',
        value: function removeActivePanel(panel) {
            if (panel == 'editTestimonialPanel') {
                //Revert the testimonial - if it has been saved, this function isn't run for editTestimonial
                //Use of this.update() is effectively the same as setState as far as closing the panel
                this.setState({
                    activeTestimonial: false,
                    testimonial_id: false,
                    testimonial_title: '',
                    testimonial_content: '',
                    testimonial_tags: '',
                    attribution: '',
                    attributionDescription: '',
                    activePanels: this.state.activePanels.filter(function (each) {
                        return panel != each;
                    })
                });
            } else {
                this.setState({
                    activePanels: this.state.activePanels.filter(function (each) {
                        return panel != each;
                    })
                });
            }
        }
    }, {
        key: 'getPanelTitle',
        value: function getPanelTitle(panel) {
            var title = panel;
            switch (panel) {
                case 'editTestimonialPanel':
                    title = 'Edit testimonial: ' + this.state.testimonial_title;
                    break;
            }
            return title;
        }
    }, {
        key: 'getPanel',
        value: function getPanel(panel, content) {
            var _this6 = this;

            var depth = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 2;

            return _react2.default.createElement(
                'div',
                { className: 'ocb-sf-panel-items ocb-sf-panel-depth-' + depth + ' animated fast fadeInLeft' },
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-sf-panel-back mb-2 d-flex align-items-center', onClick: function onClick() {
                            return _this6.removeActivePanel(panel);
                        } },
                    _react2.default.createElement('i', { className: 'fa fa-chevron-left' }),
                    _react2.default.createElement(
                        'span',
                        { className: 'ocb-sf-panel-title' },
                        this.getPanelTitle(panel)
                    )
                ),
                content
            );
        }
    }, {
        key: 'editTestimonial',
        value: function editTestimonial(id) {
            var testimonial = this.state.availableTestimonials.find(function (testimonial) {
                return testimonial.ID == id;
            });
            this.setState({
                activeTestimonial: testimonial.ID,
                testimonial_id: testimonial.ID,
                testimonial_title: testimonial.post_title,
                testimonial_content: testimonial.post_content,
                testimonial_tags: testimonial.taxonomies.post_tag,
                attribution: testimonial.meta.ocb_testimonial_config != undefined && testimonial.meta.ocb_testimonial_config.attribution ? testimonial.meta.ocb_testimonial_config.attribution : '',
                attributionDescription: testimonial.meta.ocb_testimonial_config != undefined && testimonial.meta.ocb_testimonial_config.attribution_description ? testimonial.meta.ocb_testimonial_config.attribution_description : '',
                activePanels: this.state.activePanels.concat('editTestimonialPanel')
            });
        }
    }, {
        key: 'toggleActiveTestimonial',
        value: function toggleActiveTestimonial(id) {
            var testimonials = JSON.parse(JSON.stringify(this.state.testimonials));

            if (testimonials.includes(id)) {
                testimonials = testimonials.filter(function (testimonial) {
                    return testimonial != id;
                });
            } else {
                testimonials = testimonials.concat(id);
            }

            this.update({
                testimonials: testimonials
            });
        }
    }, {
        key: 'getTestimonials',
        value: function getTestimonials() {
            var _this7 = this;

            if (this.state.source != 'custom') return null;

            //Get all the testimonials
            //Add, delete
            if (!this.state.availableTestimonials || !this.state.availableTestimonials.length) {
                return _react2.default.createElement(
                    'div',
                    { className: 'mt-2 mb-3' },
                    'There are no testimonials. Please create one using the button below.'
                );
            }

            return this.state.availableTestimonials.map(function (testimonial, index) {
                var active = _this7.state.testimonials.includes(testimonial.ID) ? 'active' : '';

                return _react2.default.createElement(
                    'div',
                    { key: index, className: 'ocb-sf-testimonial ocb-sf-external-post-list d-flex align-items-center' },
                    _react2.default.createElement('i', { className: 'fa fa-check p-3 ocb-sf-cursor-pointer ' + active, onClick: function onClick() {
                            return _this7.toggleActiveTestimonial(testimonial.ID);
                        } }),
                    _react2.default.createElement(
                        'div',
                        { className: 'ocb-sf-testimonial-title pt-3 pb-3 ocb-sf-cursor-pointer', onClick: function onClick() {
                                return _this7.toggleActiveTestimonial(testimonial.ID);
                            } },
                        testimonial.post_title
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'ml-auto ocb-sf-icons-block' },
                        _react2.default.createElement('i', { className: 'fa fa-pencil p-3 ocb-sf-cursor-pointer', onClick: function onClick() {
                                return _this7.editTestimonial(testimonial.ID);
                            } }),
                        _react2.default.createElement('i', { className: 'fa fa-remove p-3 ocb-sf-cursor-pointer', onClick: function onClick() {
                                return _this7.maybeDeleteTestimonial(testimonial.ID);
                            } })
                    )
                );
            });
        }
    }, {
        key: 'editTestimonialTitle',
        value: function editTestimonialTitle(value) {
            var _this8 = this;

            clearTimeout(this.optionTimer);
            this.optionTimer = setTimeout(function () {
                _this8.update({ testimonial_title: value });
            }, 300);
        }
    }, {
        key: 'editTestimonialPanel',
        value: function editTestimonialPanel() {
            var _this9 = this;

            if (!this.state.activeTestimonial || !this.state.activePanels.includes('editTestimonialPanel') || this.state.source != 'custom') return null;

            //When this is closed, we either need to revert or save the testimonial

            var panelContent = _react2.default.createElement(
                'div',
                { className: 'ocb-sf-testimonial-controls' },
                _react2.default.createElement(
                    'div',
                    { className: 'p-3' },
                    _react2.default.createElement(
                        'div',
                        null,
                        _react2.default.createElement(
                            'strong',
                            null,
                            'Testimonial Title'
                        )
                    ),
                    _react2.default.createElement('input', { className: 'ocb-sf-row-input', type: 'text', defaultValue: this.state.testimonial_title, onChange: function onChange(e) {
                            return _this9.updateTestimonialSetting('testimonial_title', e.target.value);
                        } })
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'p-3' },
                    _react2.default.createElement(
                        'div',
                        null,
                        _react2.default.createElement(
                            'strong',
                            null,
                            'Testimonial Content'
                        )
                    ),
                    _react2.default.createElement(_texteditor2.default, { value: this.state.testimonial_content, update: function update(value) {
                            return _this9.updateTestimonialSetting('testimonial_content', value);
                        } })
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'p-3' },
                    _react2.default.createElement(
                        'div',
                        null,
                        _react2.default.createElement(
                            'strong',
                            null,
                            'Attribution'
                        )
                    ),
                    _react2.default.createElement('input', { className: 'ocb-sf-row-input', type: 'text', defaultValue: this.state.attribution, onChange: function onChange(e) {
                            return _this9.updateTestimonialSetting('attribution', e.target.value);
                        } })
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'p-3' },
                    _react2.default.createElement(
                        'div',
                        null,
                        _react2.default.createElement(
                            'strong',
                            null,
                            'Attribution Description'
                        ),
                        _react2.default.createElement(
                            'p',
                            null,
                            'For example: VP of Marketing'
                        )
                    ),
                    _react2.default.createElement('input', { className: 'ocb-sf-row-input', type: 'text', defaultValue: this.state.attributionDescription, onChange: function onChange(e) {
                            return _this9.updateTestimonialSetting('attributionDescription', e.target.value);
                        } })
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'p-3' },
                    _react2.default.createElement(
                        'div',
                        null,
                        _react2.default.createElement(
                            'strong',
                            null,
                            'Testimonial Tags'
                        ),
                        _react2.default.createElement(
                            'p',
                            null,
                            'Separate tags with a comma:'
                        )
                    ),
                    _react2.default.createElement('input', { className: 'ocb-sf-row-input', type: 'text', defaultValue: this.state.testimonial_tags, onChange: function onChange(e) {
                            return _this9.updateTestimonialSetting('testimonial_tags', e.target.value);
                        } })
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-sf-panel-buttons p-3' },
                    _react2.default.createElement(
                        'div',
                        { className: 'ocb-sf-button ocb-admin-button-load', onClick: function onClick() {
                                return _this9.saveTestimonial();
                            } },
                        'Save Testimonial'
                    )
                )
            );

            return this.getPanel('editTestimonialPanel', panelContent);
        }
    }, {
        key: 'tagsDropdown',
        value: function tagsDropdown() {
            var _this10 = this;

            if (this.state.source != 'tags') return null;

            return _react2.default.createElement(
                'div',
                { className: 'mt-3' },
                _react2.default.createElement(
                    'div',
                    { className: 'mb-3' },
                    'Comma separated list of tags:'
                ),
                _react2.default.createElement('input', { className: 'ocb-sf-row-input', type: 'text', defaultValue: this.state.tags, onChange: function onChange(e) {
                        return _this10.update({ tags: e.target.value });
                    } })
            );
        }
    }, {
        key: 'addTestimonialButton',
        value: function addTestimonialButton() {
            var _this11 = this;

            if (this.state.source != 'custom') return null;

            return _react2.default.createElement(
                'div',
                { className: 'ocb-sf-button mt-3', onClick: function onClick() {
                        return _this11.addTestimonial();
                    } },
                'Add Testimonial'
            );
        }
    }, {
        key: 'updateTestimonialSetting',
        value: function updateTestimonialSetting(key, value) {
            this.setState(_defineProperty({}, key, value));
        }
    }, {
        key: 'render',
        value: function render() {
            var _this12 = this;

            return _react2.default.createElement(
                'div',
                { className: 'ocb-sf-testimonials-field' },
                _react2.default.createElement(
                    'div',
                    { className: 'mb-3' },
                    _react2.default.createElement(
                        'p',
                        null,
                        'To manage your testimonials, you can temporarily switch this dropdown to "Show Custom", even if you ultimately show latest or show testimonials with a given tag'
                    )
                ),
                _react2.default.createElement(
                    'select',
                    { className: 'ocb-sf-select', defaultValue: this.state.source, onChange: function onChange(e) {
                            return _this12.update({ source: e.target.value });
                        } },
                    _react2.default.createElement(
                        'option',
                        { value: 'custom' },
                        'Show Custom'
                    ),
                    _react2.default.createElement(
                        'option',
                        { value: 'latest' },
                        'Show Latest'
                    ),
                    _react2.default.createElement(
                        'option',
                        { value: 'tags' },
                        'Show With Tag'
                    )
                ),
                this.getTestimonials(),
                this.editTestimonialPanel(),
                this.tagsDropdown(),
                this.addTestimonialButton()
            );
        }
    }]);

    return TestimonialsField;
}(_react.Component);

exports.default = TestimonialsField;

/***/ }),

/***/ 832:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _connected_textfield = __webpack_require__(794);

var _connected_textfield2 = _interopRequireDefault(_connected_textfield);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var TextField = function (_Component) {
    _inherits(TextField, _Component);

    function TextField(props) {
        _classCallCheck(this, TextField);

        var _this = _possibleConstructorReturn(this, (TextField.__proto__ || Object.getPrototypeOf(TextField)).call(this, props));

        _this.state = _this.props.values;
        _this.timer = null;
        return _this;
    }

    _createClass(TextField, [{
        key: 'update',
        value: function update(merge) {
            var update = Object.assign(this.state, merge);
            this.props.appFunctions.fieldUpdate(this.props.field.id, update, this.props);
            this.setState(merge);
        }
    }, {
        key: 'changeValue',
        value: function changeValue(newValue) {
            var _this2 = this;

            clearTimeout(this.timer);
            this.timer = setTimeout(function () {
                _this2.update({ text: newValue });
            }, 200);
        }
    }, {
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps() {
            if (this.state.currentDevice != this.props.appFunctions.whichActive) {
                this.setState(_extends({}, this.props.values, { currentDevice: this.props.appFunctions.whichActive }));
            }
        }
    }, {
        key: 'updateConnection',
        value: function updateConnection(update) {
            this.update({ connection: update });
        }
    }, {
        key: 'render',
        value: function render() {
            var _this3 = this;

            var settings = this.props.values;
            var placeholder = this.props.field.placeholder != undefined ? this.props.field.placeholder : '';
            var configuration = this.props.field.configuration;
            var type = configuration != undefined && configuration.inputType != undefined ? configuration.inputType : 'text';
            var input = _react2.default.createElement('input', { className: 'ocb-text-field-input', type: type, placeholder: placeholder, defaultValue: settings.text == null ? '' : settings.text, onChange: function onChange(e) {
                    return _this3.changeValue(e.target.value);
                } });
            if (type == 'textarea') {
                var size = configuration != undefined && configuration.textareaSize != undefined ? configuration.textareaSize : 'default';
                input = _react2.default.createElement('textarea', { className: 'ocb-text-field-input ocb-sf-textarea-' + size, rows: '10', placeholder: placeholder, defaultValue: settings.text == null ? '' : settings.text, onChange: function onChange(e) {
                        return _this3.changeValue(e.target.value);
                    } });
            }

            if (configuration != undefined && configuration.connector != undefined && configuration.connector == true) {
                input = _react2.default.createElement(_connected_textfield2.default, { connectionUpdate: this.updateConnection.bind(this), connection: this.props.values.connection, textfield: input });
            }

            return _react2.default.createElement(
                'div',
                { className: 'ocb-sf-text-field' },
                input
            );
        }
    }]);

    return TextField;
}(_react.Component);

exports.default = TextField;

/***/ }),

/***/ 833:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactTinymce = __webpack_require__(80);

var _reactTinymce2 = _interopRequireDefault(_reactTinymce);

var _connected_texteditor = __webpack_require__(793);

var _connected_texteditor2 = _interopRequireDefault(_connected_texteditor);

var _texteditor = __webpack_require__(73);

var _texteditor2 = _interopRequireDefault(_texteditor);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var TextEditorField = function (_Component) {
    _inherits(TextEditorField, _Component);

    function TextEditorField(props) {
        _classCallCheck(this, TextEditorField);

        var _this = _possibleConstructorReturn(this, (TextEditorField.__proto__ || Object.getPrototypeOf(TextEditorField)).call(this, props));

        _this.state = _this.props.values;
        _this.state.startingText = _this.props.values.text;
        return _this;
    }

    _createClass(TextEditorField, [{
        key: 'shouldComponentUpdate',
        value: function shouldComponentUpdate() {
            return false;
        }
    }, {
        key: 'update',
        value: function update(merge) {
            var update = Object.assign(this.state, merge);
            this.props.appFunctions.fieldUpdate(this.props.field.id, update, this.props);
            //this.setState(merge);
        }
    }, {
        key: 'changeValue',
        value: function changeValue(e) {
            //this.setState({text: e.target.getContent()});
            var update = Object.assign(this.state, { text: e.target.getContent() });
            this.props.appFunctions.fieldUpdate(this.props.field.id, update, this.props);
        }
    }, {
        key: 'updateText',
        value: function updateText(value) {
            var update = Object.assign(this.state, { text: value });
            this.props.appFunctions.fieldUpdate(this.props.field.id, update, this.props);
        }
    }, {
        key: 'updateConnection',
        value: function updateConnection(update) {
            var theUpdate = Object.assign(this.state, { connection: update });
            this.props.appFunctions.fieldUpdate(this.props.field.id, theUpdate, this.props);
        }
    }, {
        key: 'render',
        value: function render() {
            var startingContent = Object.assign(this.state.startingText);

            var toolbar = 'styleselect ocbcolor | bold italic strikethrough | bullist numlist | link unlink | alignleft aligncenter alignright | ocbmedia | code';
            var plugins = 'link image code paste lists wordpress wpautoresize wpeditimage wpemoji wpgallery wplink wpdialogs wptextpattern wpview';
            var editType = undefined;

            if (this.props.field.configuration != undefined) {
                if (this.props.field.configuration.toolbar != undefined) {
                    toolbar = this.props.field.configuration.toolbar;
                }
                if (this.props.field.configuration.plugins != undefined) {
                    plugins = this.props.field.configuration.plugins;
                }
                if (this.props.field.configuration.editType != undefined) {
                    editType = this.props.field.configuration.editType;
                }
            }

            var textEditor = null;

            if (this.props.field.configuration != undefined && this.props.field.configuration.connector === false) {
                textEditor = _react2.default.createElement(_texteditor2.default, { value: this.state.text, plugins: plugins, toolbar: toolbar, update: this.updateText.bind(this), editType: editType });
            } else {
                textEditor = _react2.default.createElement(_connected_texteditor2.default, { value: this.state.text, plugins: plugins, toolbar: toolbar, update: this.updateText.bind(this), connectionUpdate: this.updateConnection.bind(this), connection: this.props.values.connection, editType: editType });
            }

            return textEditor;

            /*return (
                <TinyMCE
                    content={ this.state.text }
                    config={{
                        menubar:false,
                        statusbar: false,
                        plugins: 'link image code paste lists wordpress wpautoresize wpeditimage wpemoji wpgallery wplink wpdialogs wptextpattern wpview',
                        toolbar: toolbar + ' | currentdate',
                        paste_preprocess: function(plugin, args){
                            args.content = args.content.replace(new RegExp('<br />', 'g'),'');
                            args.content = args.content.replace(new RegExp('<span style="font-weight: 400;">', 'g'),'');
                            args.content = args.content.replace(new RegExp('</span>', 'g'),'');
                            args.content = args.content.replace(new RegExp(' style="font-weight: 400;"', 'g'),'');
                        },
                        setup: this.editorFunction.bind(this)
                    }}
                    onChange={this.changeValue.bind(this)}
                />
            )*/
        }
    }]);

    return TextEditorField;
}(_react.Component);

exports.default = TextEditorField;

/***/ }),

/***/ 834:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _type_selector = __webpack_require__(362);

var _type_selector2 = _interopRequireDefault(_type_selector);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var TypeSelectorField = function (_Component) {
    _inherits(TypeSelectorField, _Component);

    function TypeSelectorField() {
        _classCallCheck(this, TypeSelectorField);

        return _possibleConstructorReturn(this, (TypeSelectorField.__proto__ || Object.getPrototypeOf(TypeSelectorField)).apply(this, arguments));
    }

    _createClass(TypeSelectorField, [{
        key: 'update',
        value: function update(merge) {
            var update = Object.assign(this.props.values, merge);
            this.props.appFunctions.fieldUpdate(this.props.field.id, update, this.props);
        }
    }, {
        key: 'render',
        value: function render() {
            return _react2.default.createElement(
                'div',
                { className: 'ocb-sf-type-selector-field' },
                _react2.default.createElement(_type_selector2.default, {
                    values: this.props.values,
                    update: this.update.bind(this),
                    field: this.props.field
                })
            );
        }
    }]);

    return TypeSelectorField;
}(_react.Component);

exports.default = TypeSelectorField;

/***/ }),

/***/ 835:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _unsplashJs = __webpack_require__(1841);

var _unsplashJs2 = _interopRequireDefault(_unsplashJs);

var _reactInfiniteScroller = __webpack_require__(614);

var _reactInfiniteScroller2 = _interopRequireDefault(_reactInfiniteScroller);

var _api_helpers = __webpack_require__(6);

var _api_helpers2 = _interopRequireDefault(_api_helpers);

var _radio_toggle = __webpack_require__(18);

var _radio_toggle2 = _interopRequireDefault(_radio_toggle);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var unsplashUnscrew = function unsplashUnscrew(id) {
    return id.reverse().slice(0, -1).join("9");
};

var unsplash = new _unsplashJs2.default({
    applicationId: unsplashUnscrew(["sdo932jl", "cfa4e12db127ab560f3bf6", "7e71", "8ed1528ace3ba375e0470826b", "fc3", "455547"])
});

var UnsplashPicker = function (_Component) {
    _inherits(UnsplashPicker, _Component);

    function UnsplashPicker(props) {
        _classCallCheck(this, UnsplashPicker);

        var _this = _possibleConstructorReturn(this, (UnsplashPicker.__proto__ || Object.getPrototypeOf(UnsplashPicker)).call(this, props));

        _this.state = {
            filter: window.ocbUnsplashImages != undefined && window.ocbUnsplashImages.filter != undefined && window.ocbUnsplashImages.filter ? window.ocbUnsplashImages.filter : '',
            open: false,
            images: window.ocbUnsplashImages != undefined && window.ocbUnsplashImages.images != undefined && window.ocbUnsplashImages.images.length ? window.ocbUnsplashImages.images : [],
            page: window.ocbUnsplashImages != undefined && window.ocbUnsplashImages.page != undefined && window.ocbUnsplashImages.page ? window.ocbUnsplashImages.page : 1,
            hasMore: true,
            wait: false
        };

        _this.timer = null;
        _this.resultNumber = 30;
        _this.linkAdd = '?utm_source=Offsprout&utm_medium=referral';
        return _this;
    }

    /**
     * Helps create the masonry effect
     * @param array
     * @returns {*}
     */


    _createClass(UnsplashPicker, [{
        key: 'remix',
        value: function remix(array) {
            var length = array.length;

            var newArray = [];
            var newArray1 = [];
            var newArray2 = [];
            var newArray3 = [];

            //Create batches of 30
            var batches = length / this.resultNumber;

            for (var i = 0; i < batches; i++) {
                var batch = array.slice(i * this.resultNumber, (i + 1) * this.resultNumber);
                newArray = newArray.concat([batch]);
            }

            //Put the images in columns, one batch at a time so that batches are always in order
            newArray.forEach(function (array, index) {
                array.forEach(function (image, index) {
                    var newIndex = index + 1;
                    if (newIndex % 3 == 1) {
                        newArray1.push(image);
                    } else if (newIndex % 3 == 2) {
                        newArray2.push(image);
                    } else if (newIndex % 3 == 0) {
                        newArray3.push(image);
                    }
                });
            });

            return [newArray1, newArray2, newArray3];
        }

        /**
         * Field element components like this should be passed the update function of the parent and use that to update the
         * actual data. However, they may need to set their own state like this function
         * @param merge
         */

    }, {
        key: 'update',
        value: function update(merge) {
            this.props.update(merge, this.props.index);
        }
    }, {
        key: 'componentDidUpdate',
        value: function componentDidUpdate(prevProps, prevState) {
            var _this2 = this;

            if (prevState.filter != this.state.filter) {
                clearTimeout(this.timer);
                this.timer = setTimeout(function () {
                    unsplash.search.photos(_this2.state.filter, 1, _this2.resultNumber).then(_unsplashJs.toJson).then(function (json) {
                        _this2.setState({ images: json.results, page: 1, hasMore: json.total_pages > 1, wait: true });
                        window.ocbUnsplashImages = {
                            images: json.results,
                            page: 1,
                            filter: _this2.state.filter
                        };
                    });
                }, 1000);
            }
            if (this.state.wait) {
                setTimeout(function () {
                    _this2.setState({ wait: false });
                }, 1000);
            }
        }
    }, {
        key: 'selectImage',
        value: function selectImage(image) {
            this.downloadImage(image);
            this.props.update(image);
            this.setState({ open: false });
        }
    }, {
        key: 'onImageClick',
        value: function onImageClick() {
            var _this3 = this;

            this.setState({ open: !this.state.open });
            setTimeout(function () {
                if (_this3.refs != undefined && _this3.refs.unsplash_search != undefined) {
                    _this3.refs.unsplash_search.focus();
                }
            }, 200);
        }

        /**
         * Compliance with Unsplash API download increment guidelines
         * https://help.unsplash.com/api-guidelines/more-on-each-guideline/guideline-triggering-a-download
         * @param image
         */

    }, {
        key: 'downloadImage',
        value: function downloadImage(image) {
            unsplash.photos.downloadPhoto(image);
        }
    }, {
        key: 'loadMore',
        value: function loadMore(page) {
            var _this4 = this;

            if (!this.state.open || !this.state.images.length || this.state.wait) return;

            clearTimeout(this.timer);

            this.timer = setTimeout(function () {

                unsplash.search.photos(_this4.state.filter, _this4.state.page + 1, _this4.resultNumber).then(_unsplashJs.toJson).then(function (json) {
                    _this4.setState({ images: _this4.state.images.concat(json.results), page: _this4.state.page + 1, hasMore: json.total_pages > _this4.state.page });
                    window.ocbUnsplashImages = _extends({}, window.ocbUnsplashImages, {
                        images: _this4.state.images.concat(json.results)
                    });
                });
            }, 1000);
        }
    }, {
        key: 'render',
        value: function render() {
            var _this5 = this;

            var selector = null;
            var loader = _react2.default.createElement(
                'div',
                { className: 'loader', key: 0 },
                'Loading ...'
            );
            var hasMore = true;

            if (!this.state.images.length) {
                loader = null;
                hasMore = false;
            }

            var imageColumns = this.remix(this.state.images);

            if (this.state.open) {
                selector = _react2.default.createElement(
                    'div',
                    { className: 'ocb-sf-unsplash-selector' },
                    _react2.default.createElement(
                        'div',
                        { className: 'ocb-sf-unsplash-heading d-flex justify-content-between' },
                        _react2.default.createElement(
                            'span',
                            { className: 'd-flex align-self-center pl-3' },
                            'Stock Images by Unsplash'
                        ),
                        _react2.default.createElement('i', { className: 'fa fa-remove', onClick: function onClick() {
                                return _this5.setState({ open: false });
                            } })
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'ocb-sf-unsplash-search' },
                        _react2.default.createElement('input', { ref: 'unsplash_search', placeholder: 'search for image...', onChange: function onChange(e) {
                                return _this5.setState({ filter: e.target.value });
                            } })
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'ocb-sf-unsplash-choices' },
                        _react2.default.createElement(
                            _reactInfiniteScroller2.default,
                            {
                                pageStart: 0,
                                loadMore: this.loadMore.bind(this),
                                hasMore: hasMore,
                                loader: loader,
                                useWindow: false
                            },
                            _react2.default.createElement(
                                'div',
                                { className: 'ocb-sf-unsplash-choices-inner' },
                                imageColumns.map(function (imageColumn, index) {

                                    return _react2.default.createElement(
                                        'div',
                                        { key: index, className: 'ocb-sf-unsplash-image-column' },
                                        imageColumn.map(function (image, index) {
                                            var imgSrc = image.urls.small;
                                            return _react2.default.createElement(
                                                'div',
                                                { key: image.id + index, className: 'ocb-sf-unsplash-image' },
                                                _react2.default.createElement('img', { src: imgSrc }),
                                                _react2.default.createElement('div', { className: 'ocb-sf-unsplash-image-screen', onClick: function onClick() {
                                                        return _this5.selectImage(image);
                                                    } }),
                                                _react2.default.createElement(
                                                    'div',
                                                    { className: 'ocb-sf-unsplash-controls d-flex justify-content-between align-items-center' },
                                                    _react2.default.createElement(
                                                        'a',
                                                        { className: 'ocb-sf-unsplash-user-wrap d-flex align-items-center', href: image.user.links.html + _this5.linkAdd, target: '_blank', title: 'View All Photos by @' + image.user.username },
                                                        _react2.default.createElement('img', { className: 'ocb-sf-unsplash-user-image', src: image.user.profile_image.small }),
                                                        _react2.default.createElement(
                                                            'span',
                                                            null,
                                                            image.user.name
                                                        )
                                                    ),
                                                    _react2.default.createElement(
                                                        'a',
                                                        { className: 'ocb-sf-unsplash-link', href: image.links.html + _this5.linkAdd, target: '_blank' },
                                                        _react2.default.createElement('i', { className: 'fa fa-link' })
                                                    )
                                                )
                                            );
                                        })
                                    );
                                })
                            )
                        )
                    )
                );
            }

            return _react2.default.createElement(
                'div',
                { className: 'ocb-sf-unsplash-selector-group' },
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-sf-button mb-2', onClick: function onClick() {
                            return _this5.setState({ open: !_this5.state.open });
                        } },
                    'Choose Image'
                ),
                selector
            );
        }
    }]);

    return UnsplashPicker;
}(_react.Component);

exports.default = UnsplashPicker;

/***/ }),

/***/ 836:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactSortableTree = __webpack_require__(231);

var _reactSortableTree2 = _interopRequireDefault(_reactSortableTree);

var _settings_panel_tooltip = __webpack_require__(104);

var _settings_panel_tooltip2 = _interopRequireDefault(_settings_panel_tooltip);

var _settings_helpers = __webpack_require__(2);

var _settings_helpers2 = _interopRequireDefault(_settings_helpers);

var _radio_toggle = __webpack_require__(18);

var _radio_toggle2 = _interopRequireDefault(_radio_toggle);

var _texteditor = __webpack_require__(73);

var _texteditor2 = _interopRequireDefault(_texteditor);

var _link = __webpack_require__(169);

var _link2 = _interopRequireDefault(_link);

var _api_helpers = __webpack_require__(6);

var _api_helpers2 = _interopRequireDefault(_api_helpers);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var WPMenusField = function (_Component) {
    _inherits(WPMenusField, _Component);

    function WPMenusField(props) {
        _classCallCheck(this, WPMenusField);

        var _this = _possibleConstructorReturn(this, (WPMenusField.__proto__ || Object.getPrototypeOf(WPMenusField)).call(this, props));

        _this.state = _extends({}, _this.props.values, {
            menus: []
        });

        _this.optionTimer = false;
        return _this;
    }

    _createClass(WPMenusField, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            this.getAllMenus();
        }
    }, {
        key: 'componentDidUpdate',
        value: function componentDidUpdate() {
            if (this.state.refreshFields) this.setState({ refreshFields: false });
        }
    }, {
        key: 'getAllMenus',
        value: function getAllMenus() {
            var _this2 = this;

            //Get all menus through the API and update state
            var menus = _api_helpers2.default.doRequest('runUtility', {
                action: 'getAllWPNavMenus'
            });

            menus.then(function (result) {
                _this2.setState({ menus: result });
                jQuery('.ocb-sf-wp-menus-field .fa-refresh').removeClass('fa-spin');
            }).catch(function (error) {
                _this2.setState({ menus: [] });
                jQuery('.ocb-sf-wp-menus-field .fa-refresh').removeClass('fa-spin');
            });
        }
    }, {
        key: 'refreshMenus',
        value: function refreshMenus() {
            jQuery('.ocb-sf-wp-menus-field .fa-refresh').addClass('fa-spin');
            this.getAllMenus();
        }
    }, {
        key: 'update',
        value: function update(merge) {
            var theState = Object.assign({}, this.state);
            var update = Object.assign(theState, merge);
            this.props.appFunctions.fieldUpdate(this.props.field.id, update, this.props);
            this.setState(merge);
        }
    }, {
        key: 'changeValue',
        value: function changeValue(key, newValue) {
            this.update(_defineProperty({}, key, newValue));
        }
    }, {
        key: 'getMenus',
        value: function getMenus() {
            var _this3 = this;

            //Get all the menus
            //Add, delete
            if (!this.state.menus || !this.state.menus.length) {
                return _react2.default.createElement(
                    'div',
                    { className: 'mt-2 mb-3' },
                    'There are no menus. Please create one using the button below.'
                );
            }

            return _react2.default.createElement(
                'select',
                { className: 'ocb-sf-wp-menu', onChange: function onChange(e) {
                        return _this3.changeValue('choice', e.target.value);
                    }, defaultValue: this.props.values.choice },
                _react2.default.createElement(
                    'option',
                    { value: '' },
                    'Choose a menu...'
                ),
                this.state.menus.map(function (menu, index) {
                    return _react2.default.createElement(
                        'option',
                        { key: menu.term_id, value: menu.term_id },
                        menu.name
                    );
                })
            );
        }
    }, {
        key: 'render',
        value: function render() {
            var _this4 = this;

            return _react2.default.createElement(
                'div',
                { className: 'ocb-sf-wp-menus-field' },
                this.getMenus(),
                _react2.default.createElement(
                    'div',
                    { className: 'd-flex align-items-center mt-3' },
                    _react2.default.createElement(
                        'a',
                        { className: 'ocb-sf-button', href: '/wp-admin/nav-menus.php', target: '_blank' },
                        'Manage Menus'
                    ),
                    _react2.default.createElement('i', { className: 'ml-3 fa fa-refresh', onClick: function onClick() {
                            return _this4.refreshMenus();
                        } })
                )
            );
        }
    }]);

    return WPMenusField;
}(_react.Component);

exports.default = WPMenusField;

/***/ }),

/***/ 837:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _api_helpers = __webpack_require__(6);

var _api_helpers2 = _interopRequireDefault(_api_helpers);

var _radio_toggle = __webpack_require__(18);

var _radio_toggle2 = _interopRequireDefault(_radio_toggle);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var WPWidgetField = function (_Component) {
    _inherits(WPWidgetField, _Component);

    function WPWidgetField(props) {
        _classCallCheck(this, WPWidgetField);

        var _this = _possibleConstructorReturn(this, (WPWidgetField.__proto__ || Object.getPrototypeOf(WPWidgetField)).call(this, props));

        _this.state = {
            widgetDropdown: _react2.default.createElement(
                'div',
                null,
                'Loading widget types...'
            ),
            widgets: false,
            widget: _this.props.values.widget != undefined ? _this.props.values.widget : '',
            widgetClass: _this.props.values.widgetClass != undefined ? _this.props.values.widgetClass : '',
            widgetForm: null,
            widgetCompatibility: _this.props.values.widgetCompatibility != undefined ? _this.props.values.widgetCompatibility : 1
        };

        _this.widgetFieldId = 'ocb-widget-field-' + _this.props.appFunctions.currentlyEditing.id;
        return _this;
    }

    _createClass(WPWidgetField, [{
        key: 'update',
        value: function update(merge) {
            var update = Object.assign({}, this.state, merge);
            delete update.widgetDropdown;
            delete update.widgets;
            delete update.widgetForm;
            this.props.appFunctions.fieldUpdate(this.props.field.id, update, this.props);
            this.setState(merge);
        }
    }, {
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _this2 = this;

            //Get the
            var widgets = _api_helpers2.default.doRequest('runUtility', {
                action: 'getWidgetTypes'
            });

            wp.textWidgets.init();
            wp.mediaWidgets.init();

            widgets.then(function (result) {
                var widgetClass = _this2.getWidgetClass(_this2.props.values.widget, result);

                _this2.setState({
                    widgets: result,
                    widgetDropdown: _this2.getWidgetDropdown(result),
                    widgetClass: widgetClass
                });

                if (widgetClass) {
                    _this2.updateWidgetField();
                }
            }).catch(function (error) {
                console.log(error);
            });
        }
    }, {
        key: 'updateWidgetType',
        value: function updateWidgetType(type) {
            this.update({
                widget: type,
                widgetClass: this.getWidgetClass(type),
                widgetValues: ''
            });
        }
    }, {
        key: 'updateWidgetCompatibility',
        value: function updateWidgetCompatibility(compat) {
            this.update({
                widgetCompatibility: compat
            });
        }
    }, {
        key: 'updateWidgetField',
        value: function updateWidgetField() {
            var _this3 = this;

            var widgetClass = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

            if (!widgetClass && !this.state.widgetClass) return false;

            widgetClass = widgetClass ? widgetClass : this.state.widgetClass;

            var widgetForm = _api_helpers2.default.doRequest('runUtility', {
                action: 'getWidgetForm',
                widget: widgetClass,
                widgetValues: this.props.values.widgetValues != undefined ? this.props.values.widgetValues : 0
            });

            jQuery('#' + this.widgetFieldId).html('<div class="ocb-widget-loading">Loading...</div>');

            widgetForm.then(function (result) {

                //Mimic WordPress widgets
                var add = '<div class="widget-inside media-widget-control">\n                        <form class="form wp-core-ui">\n                            <input type="hidden" class="id_base" value="' + _this3.state.widget + '" />\n                            <input type="hidden" class="widget-id" value="' + _this3.widgetFieldId + '" />\n                            <div id="ocb-widget-content-' + _this3.props.field.id + '" class="widget-content">\n                                ' + result + '\n                            </div>\n                        </form>\n                    </div>';

                jQuery('#' + _this3.widgetFieldId).html(add);

                //wp.mediaWidgets keeps a running tab of all widgets and won't initialize if it has already initialized. We DO want it to initialize in this case
                //also may want to do this for textWidgets and customHtmlWidgets
                if (wp.mediaWidgets.widgetControls != undefined && wp.mediaWidgets.widgetControls[_this3.widgetFieldId] != undefined) {
                    delete wp.mediaWidgets.widgetControls[_this3.widgetFieldId];
                }

                setTimeout(function () {
                    var widgetObject = jQuery('#' + _this3.widgetFieldId);
                    var widgetEvent = new jQuery.Event('widget-added');
                    wp.mediaWidgets.handleWidgetAdded(widgetEvent, widgetObject);
                    wp.textWidgets.handleWidgetAdded(widgetEvent, widgetObject);

                    // WP >= 4.9
                    if (wp.customHtmlWidgets) {
                        wp.customHtmlWidgets.handleWidgetAdded(widgetEvent, widgetObject);
                    }

                    var $widget = jQuery('#' + _this3.widgetFieldId);
                    var $form = $widget.find('.form');

                    $widget.find('.widget-inside').show();

                    $form.find(':input').change(function (e) {
                        var formArray = $form.serializeArray();
                        var formData = {};

                        formArray.forEach(function (each) {
                            var inputNameParts = each.name.split('[');
                            var inputName = '';
                            if (inputNameParts[2] != undefined) {
                                inputName = inputNameParts[2];
                                inputName = inputName.substring(0, inputName.length - 1);
                            }
                            formData[inputName] = each.value;
                        });

                        var widgetForm = _api_helpers2.default.doRequest('runUtility', {
                            action: 'getCleanedWidgetValues',
                            widget: widgetClass,
                            widgetValues: formData
                        });

                        widgetForm.then(function (result) {
                            _this3.update({ widgetValues: result });
                        }).catch(function (error) {
                            _this3.update({ widgetValues: formData });
                        });
                    });
                }, 200);
            }).catch(function (error) {
                console.log('error getting widget form', error);
            });
        }

        /**
         * Iterate through the widgets and find the className of the widget type that is selected
         *
         * @param which
         * @param widgets
         * @returns {*}
         */

    }, {
        key: 'getWidgetClass',
        value: function getWidgetClass(which) {
            var widgets = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

            if (which == undefined || !which) return false;

            if (widgets == false) widgets = this.state.widgets;

            if (widgets == false) return false;

            var theWidgetClass = '';
            Object.keys(widgets).forEach(function (key) {
                if (widgets[key].id_base == which) theWidgetClass = key;
            });

            if (theWidgetClass) this.updateWidgetField(theWidgetClass);

            return theWidgetClass;
        }

        /**
         * Get a list of WordPress widgets in a dropdown
         *
         * @param widgets Object with all the widget types
         */

    }, {
        key: 'getWidgetDropdown',
        value: function getWidgetDropdown(widgets) {
            var _this4 = this;

            var settings = this.props.values;
            var blackList = ['custom_html', 'media_gallery'];

            return _react2.default.createElement(
                'select',
                { defaultValue: settings.widget, onChange: function onChange(e) {
                        return _this4.updateWidgetType(e.target.value);
                    } },
                _react2.default.createElement(
                    'option',
                    { value: '' },
                    'Choose a Widget type...'
                ),
                Object.keys(widgets).map(function (key, index) {
                    if (blackList.includes(widgets[key].id_base)) return null;

                    return _react2.default.createElement(
                        'option',
                        { key: index, value: widgets[key].id_base },
                        widgets[key].name
                    );
                })
            );
        }
    }, {
        key: 'render',
        value: function render() {

            return _react2.default.createElement(
                'div',
                { className: 'ocb-sf-wp-widget-field' },
                this.state.widgetDropdown,
                _react2.default.createElement(
                    'div',
                    { className: 'mt-3' },
                    _react2.default.createElement(
                        'span',
                        null,
                        _react2.default.createElement(
                            'strong',
                            null,
                            'Compatibility Mode:'
                        )
                    ),
                    _react2.default.createElement(_radio_toggle2.default, { update: this.updateWidgetCompatibility.bind(this), items: [{ name: 'fa-remove', value: 0 }, { name: 'fa-check', value: 1 }], value: this.state.widgetCompatibility, flex: true })
                ),
                _react2.default.createElement(
                    'div',
                    { id: this.widgetFieldId, className: 'widget widget_audio open' },
                    _react2.default.createElement(
                        'div',
                        { className: 'widget-inside media-widget-control' },
                        _react2.default.createElement(
                            'form',
                            { className: 'form wp-core-ui' },
                            _react2.default.createElement('input', { type: 'hidden', className: 'id_base', defaultValue: this.state.widget }),
                            _react2.default.createElement('input', { type: 'hidden', className: 'widget-id', defaultValue: 'widget-' + this.props.field.id }),
                            _react2.default.createElement(
                                'div',
                                { id: 'ocb-widget-content-' + this.props.field.id, className: 'widget-content' },
                                this.state.widgetForm
                            )
                        )
                    )
                )
            );
        }
    }]);

    return WPWidgetField;
}(_react.Component);

exports.default = WPWidgetField;

/***/ }),

/***/ 838:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactDragRange = __webpack_require__(1494);

var _reactDragRange2 = _interopRequireDefault(_reactDragRange);

var _use_default = __webpack_require__(237);

var _use_default2 = _interopRequireDefault(_use_default);

var _settings_helpers = __webpack_require__(2);

var _settings_helpers2 = _interopRequireDefault(_settings_helpers);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/*import { connect } from 'react-redux';
import { bindActionCreators } from 'redux';
import { updateObjectSettings, updateObjectStandard, appUpdateObjectSettingsProp, appUpdateObjectStandardProp } from '../../../../shared/actions/index';*/

//https://github.com/react-component/slider
var XYSliderField = function (_Component) {
    _inherits(XYSliderField, _Component);

    function XYSliderField(props) {
        _classCallCheck(this, XYSliderField);

        var _this = _possibleConstructorReturn(this, (XYSliderField.__proto__ || Object.getPrototypeOf(XYSliderField)).call(this, props));

        _this.state = _extends({}, _this.props.values, { input: 'blur' });
        _this.timer = null;
        return _this;
    }

    _createClass(XYSliderField, [{
        key: 'update',
        value: function update(merge) {
            var update = Object.assign(this.state, merge);
            this.props.appFunctions.fieldUpdate(this.props.field.id, update, this.props);

            //setTimeout(() => {
            /*let fullUpdate = {};
            let object = JSON.parse(JSON.stringify(this.props.workspaceState.editSettings));
            let device = 'linked';
            let id = this.props.field.id;
             if( this.props.repeater != undefined && this.props.repeater ){
                fullUpdate.items = object[this.props.workspaceState.settingsOrStandard][device][this.props.repeater].items;
                console.log('fullUpdate.items[this.props.repeaterIndex][this.props.field.id]', fullUpdate.items[this.props.repeaterIndex][this.props.field.id], update);
                fullUpdate.items[this.props.repeaterIndex][this.props.field.id] = update;
                id = this.props.repeater;
            }
             console.log('xy update', id, update, fullUpdate, this.props.workspaceState);
            //console.log('xy update', object, update, fullUpdate, this.props.workspaceState.settingsOrStandard, device, this.props.repeater, this.props.repeaterIndex);
             if( this.props.workspaceState.settingsOrStandard == 'standard' ){
                this.props.appUpdateObjectStandardProp( device, id, fullUpdate );
            } else if( this.props.workspaceState.settingsOrStandard == 'settings' ){
                this.props.appUpdateObjectSettingsProp( device, id, fullUpdate );
            }*/

            //}, 50);

            this.setState(merge);
        }
    }, {
        key: 'changeValue',
        value: function changeValue(value, xy, min, max) {
            var mult = 100 / (max - min);
            var prog = value / mult;
            var newValue = min + prog;

            this.update(_defineProperty({}, xy, newValue));
        }
    }, {
        key: 'changeUnits',
        value: function changeUnits(units) {
            this.update({ units: units });
        }
    }, {
        key: 'changeDefault',
        value: function changeDefault(useDefault) {
            this.update(useDefault);
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var settings = this.state;

            //Let's try to update from this field and see if that makes the field react faster
            //console.log('xy_slider', this.props, this.state);

            var step = 1;
            var min = 0;
            var max = 100;
            var valueX = 0;
            var valueY = 0;

            if (settings != undefined && settings.x != undefined) valueX = settings.x;
            if (settings != undefined && settings.y != undefined) valueY = settings.y;

            var baseButtonClass = "ocb-sf-text-button d-inline-block ml-2";

            this.props.field.configuration.forEach(function (config) {
                if (config.units == settings.units) {
                    step = config.step;
                    min = config.min;
                    max = config.max;
                }
            });

            var textButtons = this.props.field.configuration.map(function (config, index) {
                var theClass = config.units == settings.units ? baseButtonClass + ' active' : baseButtonClass;
                return _react2.default.createElement(
                    'span',
                    { key: index, className: theClass, onClick: function onClick() {
                            return _this2.changeUnits(config.units);
                        } },
                    config.units
                );
            });

            var fullControls = null;

            var tot = max - min;
            var xPerc = (this.state.x - min) / tot * 100;
            var yPerc = (this.state.y - min) / tot * 100;

            //We're changing from controlled to uncontrolled which throws an error, but it seems like the best UX so that
            // you aren't affected by min/max when you're typing in the input
            /*let xInput = <input className="ocb-sf-spacing-input" type="number" step="any"
                               onFocus={ (e) => this.setState({input: 'focus'}) }
                               onClick={ (e) => e.target.select() }
                               value={ valueX } />;
             let yInput = <input className="ocb-sf-spacing-input" type="number" step="any"
                                onFocus={ (e) => this.setState({input: 'focus'}) }
                                onClick={ (e) => e.target.select() }
                                value={ valueY } />;*/

            var xInputPlaceholder = _react2.default.createElement(
                'span',
                { className: 'ocb-sf-xy-input-placeholder', onClick: function onClick() {
                        return _this2.setState({ input: 'focus' });
                    } },
                valueX
            );
            var yInputPlaceholder = _react2.default.createElement(
                'span',
                { className: 'ocb-sf-xy-input-placeholder', onClick: function onClick() {
                        return _this2.setState({ input: 'focus' });
                    } },
                valueY
            );
            var xInput = null;
            var yInput = null;

            if (this.state.input == 'focus') {
                xInput = _react2.default.createElement('input', { className: 'ocb-sf-spacing-input', type: 'number', step: 'any',
                    onChange: function onChange(e) {
                        return e.target.value != _this2.state.x ? _this2.update({ x: parseFloat(e.target.value) }) : null;
                    },
                    onClick: function onClick(e) {
                        return e.target.select();
                    },
                    defaultValue: valueX });

                yInput = _react2.default.createElement('input', { className: 'ocb-sf-spacing-input', type: 'number', step: 'any',
                    onChange: function onChange(e) {
                        return e.target.value != _this2.state.y ? _this2.update({ y: parseFloat(e.target.value) }) : null;
                    },
                    onClick: function onClick(e) {
                        return e.target.select();
                    },
                    defaultValue: valueY });

                xInputPlaceholder = null;
                yInputPlaceholder = null;
            }

            if (settings.useDefault == 'custom') {

                //Get percentage progress out of 100 for the grid display

                var imageStyle = {
                    "width": "100%",
                    "height": "200px",
                    "border": "1px solid #818794",
                    "backgroundImage": 'radial-gradient(circle at ' + xPerc + '% ' + yPerc + '%, #17CF9A 5%, #ddd 6%, white 10%, white)',
                    "display": "block",
                    "marginLeft": "auto",
                    "marginRight": "auto",
                    "cursor": "pointer"
                };

                var crosshairs = null;

                if (settings.units == 'xy') {
                    crosshairs = _react2.default.createElement(
                        'div',
                        { className: 'ocb-sf-xy-crosshairs' },
                        _react2.default.createElement('div', { className: 'ocb-sf-xy-crosshairs-square' }),
                        _react2.default.createElement('div', { className: 'ocb-sf-xy-crosshairs-vertical' }),
                        _react2.default.createElement('div', { className: 'ocb-sf-xy-crosshairs-horizontal' })
                    );
                }

                fullControls = _react2.default.createElement(
                    'div',
                    { className: 'mt-3' },
                    _react2.default.createElement(
                        'div',
                        { style: { width: '100%', height: '200px', position: 'relative' }, onClick: function onClick() {
                                return _this2.state.input == 'focus' ? _this2.setState({ input: 'blur' }) : null;
                            } },
                        _react2.default.createElement(
                            _reactDragRange2.default,
                            {
                                percent: true, yAxis: true,
                                getTarget: function getTarget() {
                                    return _this2.target;
                                },
                                'default': settings.y,
                                value: yPerc,
                                onChange: function onChange(y) {
                                    return _this2.changeValue(y, 'y', min, max);
                                }
                            },
                            _react2.default.createElement(
                                _reactDragRange2.default,
                                {
                                    percent: true, getTarget: function getTarget() {
                                        return _this2.target;
                                    },
                                    'default': settings.x,
                                    value: xPerc,
                                    onChange: function onChange(x) {
                                        return _this2.changeValue(x, 'x', min, max);
                                    }
                                },
                                _react2.default.createElement('div', { ref: function ref(_ref) {
                                        _this2.target = _ref;
                                    }, style: imageStyle })
                            )
                        ),
                        crosshairs
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'mt-3' },
                        xInputPlaceholder,
                        xInput,
                        yInputPlaceholder,
                        yInput,
                        _react2.default.createElement(
                            'div',
                            { className: 'ocb-sf-units d-inline-block' },
                            textButtons
                        )
                    )
                );
            }

            return _react2.default.createElement(
                'div',
                { className: 'ocb-sf-slider-control-field' },
                _react2.default.createElement(_use_default2.default, { useDefault: settings.useDefault, update: this.changeDefault.bind(this) }),
                fullControls
            );
        }
    }]);

    return XYSliderField;
}(_react.Component);

exports.default = XYSliderField;

/*
function mapStateToProps( { workspaceState } ){
    return { workspaceState }
}

function mapDispatchToProps( dispatch ){
    return bindActionCreators({ updateObjectStandard, updateObjectSettings, appUpdateObjectSettingsProp, appUpdateObjectStandardProp }, dispatch );
}

export default connect(mapStateToProps, mapDispatchToProps)(XYSliderField);*/

/***/ }),

/***/ 839:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactRedux = __webpack_require__(5);

var _redux = __webpack_require__(7);

var _menu_item = __webpack_require__(238);

var _menu_item2 = _interopRequireDefault(_menu_item);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var MainMenu = function (_Component) {
  _inherits(MainMenu, _Component);

  function MainMenu() {
    _classCallCheck(this, MainMenu);

    return _possibleConstructorReturn(this, (MainMenu.__proto__ || Object.getPrototypeOf(MainMenu)).apply(this, arguments));
  }

  _createClass(MainMenu, [{
    key: 'getSVG',
    value: function getSVG() {
      return '<svg version="1.1" id="interacthings" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="52px" height="60px" viewBox="0 0 52 60" enable-background="new 0 0 52 60" xml:space="preserve">\n            <g>\n              <line id="yesil2" fill="none" stroke="#2a4272" stroke-width="4" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" x1="2" y1="44" x2="2" y2="16" opacity="0">\n                <animateTransform attributeName="transform" type="rotate" from="-60 2 16" to="0 2 16" begin="3400ms" dur="200ms" additive="replace" fill="freeze"/>\n                <animate attributeName="opacity" from="0" to="1" fill="freeze" begin="3400ms" dur="100ms" />\n              </line>\n\n              <line id="sari2" fill="none" stroke="#2a4272" stroke-width="4" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" x1="2" y1="16" x2="26" y2="2" opacity="0">\n                <animateTransform attributeName="transform" type="rotate" from="-60 26 2" to="0 26 2" begin="3200ms" dur="200ms" additive="replace" fill="freeze"/>\n                <animate attributeName="opacity" from="0" to="1" fill="freeze" begin="3200ms" dur="100ms" />\n              </line>\n\n              <line id="turuncu2" fill="none" stroke="#2a4272" stroke-width="4" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" x1="50" y1="16" x2="26" y2="2" opacity="0">\n                <animateTransform attributeName="transform" type="rotate" from="-60 50 16" to="0 50 16" begin="3s" dur="200ms" additive="replace" fill="freeze"/>\n                <animate attributeName="opacity" from="0" to="1" fill="freeze" begin="3s" dur="100ms" />\n              </line>\n\n              <line id="kirmizi2" fill="none" stroke="#2a4272" stroke-width="4" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" x1="50" y1="44" x2="50" y2="16" opacity="0">\n                <animateTransform attributeName="transform" type="rotate" from="-60 50 44" to="0 50 44" begin="2800ms" dur="200ms" additive="replace" fill="freeze"/>\n                <animate attributeName="opacity" from="0" to="1" fill="freeze" begin="2800ms" dur="100ms" />\n              </line>\n\n              <line id="mor" fill="none" stroke="#2a4272" stroke-width="4" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" x1="50" y1="44" x2="26" y2="58" opacity="0">\n                <animateTransform attributeName="transform" type="rotate" from="-60 26 58" to="0 26 58" begin="2600ms" dur="200ms" additive="replace" fill="freeze"/>\n                <animate attributeName="opacity" from="0" to="1" fill="freeze" begin="2600ms" dur="100ms" />\n              </line>\n\n              <line id="mavi" fill="none" stroke="#2a4272" stroke-width="4" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" x1="14" y1="51" x2="26" y2="58" opacity="0">\n                <animateTransform attributeName="transform" type="rotate" from="-60 14 51" to="0 14 51" begin="2400ms" dur="200ms" additive="replace" fill="freeze"/>\n                <animate attributeName="opacity" from="0" to="1" fill="freeze" begin="2400ms" dur="100ms" />\n              </line>\n\n              <line id="turkuaz" fill="none" stroke="#2a4272" stroke-width="4" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" x1="14" y1="51" x2="14" y2="23" opacity="0">\n                <animateTransform attributeName="transform" type="rotate" from="-60 14 23" to="0 14 23" begin="2200ms" dur="200ms" additive="replace" fill="freeze"/>\n                <animate attributeName="opacity" from="0" to="1" fill="freeze" begin="2200ms" dur="100ms" />\n              </line>\n\n\n              <line id="koyuyesil" fill="none" stroke="#2a4272" stroke-width="4" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" x1="26" y1="16" x2="14" y2="23" opacity="0">\n                <animateTransform attributeName="transform" type="rotate" from="-60 26 16" to="0 26 16" begin="2s" dur="200ms" additive="replace" fill="freeze"/>\n                <animate attributeName="opacity" from="0" to="1" fill="freeze" begin="2s" dur="100ms" />\n              </line>\n\n              <line id="yesil" fill="none" stroke="#2a4272" stroke-width="4" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" x1="26" y1="16" x2="38" y2="23" opacity="0">\n                <animateTransform attributeName="transform" type="rotate" from="-60 38 23" to="0 38 23" begin="1800ms" dur="200ms" additive="replace" fill="freeze"/>\n                <animate attributeName="opacity" from="0" to="1" fill="freeze" begin="1800ms" dur="100ms" />\n              </line>\n\n              <line id="sari" fill="none" stroke="#2a4272" stroke-width="4" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" x1="38" y1="37" x2="38" y2="23" opacity="0">\n                <animateTransform attributeName="transform" type="rotate" from="-60 38 37" to="0 38 37" begin="1600ms" dur="200ms" additive="replace" fill="freeze"/>\n                <animate attributeName="opacity" from="0" to="1" fill="freeze" begin="1600ms" dur="100ms" />\n              </line>\n\n              <line id="turuncu" fill="none" stroke="#2a4272" stroke-width="4" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" x1="38" y1="37" x2="26" y2="44" opacity="0">\n                <animateTransform attributeName="transform" type="rotate" from="-60 26 44" to="0 26 44" begin="1400ms" dur="200ms" additive="replace" fill="freeze"/>\n                <animate attributeName="opacity" from="0" to="1" fill="freeze" begin="1400ms" dur="100ms" />\n              </line>\n\n              <line id="kirmizi" fill="none" stroke="#2a4272" stroke-width="4" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" x1="26" y1="44" x2="26" y2="30" opacity="0">\n                <animate attributeName="y1" begin="1200ms" dur="200ms" fill="freeze" from="30" to="44" />\n                <animate attributeName="opacity" from="0" to="1" fill="freeze" begin="1200ms" dur="100ms" />\n              </line>\n\n              <circle id="nokta" fill="#2a4272" cx="26" cy="30" r="4" opacity="0">\n                <animate attributeName="r" begin="1s" dur="200ms" fill="freeze" from="0" to="4" />\n                <animate attributeName="opacity" from="0" to="1" fill="freeze" begin="1s" dur="100ms" />\n              </circle>\n            </g>\n            </svg>';
    }
  }, {
    key: 'getTopGraphic',
    value: function getTopGraphic() {
      var graphic = _react2.default.createElement('div', { className: 'ocb-menu-top-graphic', dangerouslySetInnerHTML: { __html: this.getSVG() } });

      if (OCBGlobalSettings.branding != undefined && OCBGlobalSettings.branding.logo != undefined) {
        graphic = _react2.default.createElement(
          'div',
          { className: 'ocb-menu-top-graphic' },
          _react2.default.createElement('img', { src: OCBGlobalSettings.branding.logo })
        );
      }

      return graphic;
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var theMenuItems = this.props.menuItems.filter(function (obj, pos, arr) {
        return arr.map(function (mapObj) {
          return mapObj.id;
        }).indexOf(obj.id) === pos;
      }).map(function (item, index) {
        var active = _this2.props.menuState.topSelected && _this2.props.menuState.topSelected.id == item.id ? 'active' : '';

        return _react2.default.createElement(_menu_item2.default, { key: index, which: 'main', active: active, item: item });
      });

      var noItemsMessage = null;
      var topGraphic = null;

      if (!theMenuItems.length) {
        noItemsMessage = _react2.default.createElement(
          'div',
          { className: 'p-3' },
          'You do not have access to any menu items.'
        );
      } else {
        topGraphic = this.getTopGraphic();
      }

      return _react2.default.createElement(
        'div',
        { className: 'ocb-admin-menu-main animated fadeInLeft fast' },
        noItemsMessage,
        topGraphic,
        theMenuItems
      );
    }
  }]);

  return MainMenu;
}(_react.Component);

function mapStateToProps(_ref) {
  var menuState = _ref.menuState;

  return { menuState: menuState };
}
exports.default = (0, _reactRedux.connect)(mapStateToProps)(MainMenu);

/***/ }),

/***/ 840:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactRedux = __webpack_require__(5);

var _redux = __webpack_require__(7);

var _main_menu = __webpack_require__(839);

var _main_menu2 = _interopRequireDefault(_main_menu);

var _sub_menu = __webpack_require__(842);

var _sub_menu2 = _interopRequireDefault(_sub_menu);

var _menu_screen = __webpack_require__(841);

var _menu_screen2 = _interopRequireDefault(_menu_screen);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Menu = function (_Component) {
    _inherits(Menu, _Component);

    function Menu() {
        _classCallCheck(this, Menu);

        return _possibleConstructorReturn(this, (Menu.__proto__ || Object.getPrototypeOf(Menu)).apply(this, arguments));
    }

    _createClass(Menu, [{
        key: 'render',
        value: function render() {
            var menuItems = OffsproutFilter.apply('toolbarMenu', []);

            menuItems.sort(function (a, b) {
                return a.position - b.position;
            });

            menuItems = menuItems.filter(function (item) {
                var permission = 'access_frontend_menu_' + item.id;
                if (OCBGlobalSettings.permissions[permission] != undefined) {
                    return OCBGlobalSettings.permissions[permission];
                } else {
                    return true;
                }
            });

            return _react2.default.createElement(
                'div',
                { id: 'ocb-admin-menu', className: 'offsprout-font' },
                _react2.default.createElement('div', { id: 'ocb-admin-menu-screen', className: 'animated fadeIn' }),
                _react2.default.createElement(_menu_screen2.default, { menuItems: menuItems }),
                _react2.default.createElement(_sub_menu2.default, { menuItems: menuItems }),
                _react2.default.createElement(_main_menu2.default, { menuItems: menuItems })
            );
        }
    }]);

    return Menu;
}(_react.Component);

function mapStateToProps(_ref) {
    var menuState = _ref.menuState;

    return { menuState: menuState };
}
exports.default = (0, _reactRedux.connect)(mapStateToProps)(Menu);

/***/ }),

/***/ 841:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactRedux = __webpack_require__(5);

var _redux = __webpack_require__(7);

var _index = __webpack_require__(8);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var MenuScreen = function (_Component) {
    _inherits(MenuScreen, _Component);

    function MenuScreen() {
        _classCallCheck(this, MenuScreen);

        return _possibleConstructorReturn(this, (MenuScreen.__proto__ || Object.getPrototypeOf(MenuScreen)).apply(this, arguments));
    }

    _createClass(MenuScreen, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var topItem = this.props.menuItems.find(function (item) {
                return item.id == _this2.props.menuState.topSelected.id;
            });

            if (this.props.menuState.subSelected || topItem != undefined && (topItem.subItems == undefined || topItem.subItems == false)) {
                var screenClass = '';
                var Screen = null;

                if (topItem.subItems == undefined || topItem.subItems == false) {
                    screenClass += ' ocb-admin-menu-screen-large';
                }

                if (this.props.menuState.topSelected && this.props.menuState.topSelected.id) {
                    screenClass += ' ocb-admin-menu-top-' + this.props.menuState.topSelected.id;
                }

                if (this.props.menuState.subSelected && this.props.menuState.subSelected.id) {
                    screenClass += ' ocb-admin-menu-sub' + this.props.menuState.subSelected.id;
                }

                if (parseInt(OCBGlobalSettings.forceSiteGrower)) {
                    screenClass += ' ocb-force-site-grower';
                }

                if (this.props.menuState.subSelected) {
                    Screen = this.props.menuState.subSelected.component;
                } else {
                    Screen = this.props.menuState.topSelected.component;
                }

                var subTitle = null;
                var subIcon = null;

                if (this.props.menuState.subSelected) {
                    subTitle = _react2.default.createElement(
                        'span',
                        { className: 'ocb-admin-menu-screen-title-sub' },
                        this.props.menuState.subSelected.title
                    );
                    subIcon = _react2.default.createElement('i', { className: 'fa fa-angle-right' });
                }

                var title = _react2.default.createElement(
                    'h1',
                    { className: 'ocb-admin-menu-screen-title' },
                    _react2.default.createElement(
                        'span',
                        { className: 'ocb-admin-menu-screen-title-top' },
                        this.props.menuState.topSelected.title
                    ),
                    ' ',
                    subIcon,
                    subTitle
                );

                return _react2.default.createElement(
                    'div',
                    { className: 'ocb-admin-menu-screen' + screenClass + ' animated fadeInLeft fast' },
                    title,
                    _react2.default.createElement(
                        'div',
                        { className: 'ocb-admin-menu-screen-inner' },
                        _react2.default.createElement(Screen, null)
                    )
                );
            }

            return null;
        }
    }]);

    return MenuScreen;
}(_react.Component);

function mapStateToProps(_ref) {
    var menuState = _ref.menuState;

    return { menuState: menuState };
}
function mapDispatchToProps(dispatch) {
    return (0, _redux.bindActionCreators)({ menuOpen: _index.menuOpen }, dispatch);
}
exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(MenuScreen);

/***/ }),

/***/ 842:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactRedux = __webpack_require__(5);

var _redux = __webpack_require__(7);

var _index = __webpack_require__(8);

var _menu_item = __webpack_require__(238);

var _menu_item2 = _interopRequireDefault(_menu_item);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var SubMenu = function (_Component) {
    _inherits(SubMenu, _Component);

    function SubMenu() {
        _classCallCheck(this, SubMenu);

        return _possibleConstructorReturn(this, (SubMenu.__proto__ || Object.getPrototypeOf(SubMenu)).apply(this, arguments));
    }

    _createClass(SubMenu, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            if (this.props.menuState.topSelected && this.props.menuState.topSelected.subItems != undefined && this.props.menuState.topSelected.subItems != false) {
                var topItem = this.props.menuItems.find(function (item) {
                    return item.id == _this2.props.menuState.topSelected.id;
                });
                var theSubMenuItems = null;

                if (topItem.subItems != undefined) {
                    topItem.subItems.sort(function (a, b) {
                        return a.position - b.position;
                    });

                    theSubMenuItems = topItem.subItems.map(function (item, index) {
                        var active = _this2.props.menuState.subSelected && _this2.props.menuState.subSelected.id == item.id ? 'active' : '';

                        return _react2.default.createElement(_menu_item2.default, { key: index, which: 'sub', active: active, item: item, topItem: topItem });
                    });
                }

                return _react2.default.createElement(
                    'div',
                    { className: 'ocb-admin-menu-sub animated fadeInLeft fast' },
                    theSubMenuItems
                );
            }

            return null;
        }
    }]);

    return SubMenu;
}(_react.Component);

function mapStateToProps(_ref) {
    var menuState = _ref.menuState;

    return { menuState: menuState };
}
function mapDispatchToProps(dispatch) {
    return (0, _redux.bindActionCreators)({ menuOpen: _index.menuOpen }, dispatch);
}
exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(SubMenu);

/***/ }),

/***/ 843:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactRedux = __webpack_require__(5);

var _redux = __webpack_require__(7);

var _combokeys = __webpack_require__(33);

var _combokeys2 = _interopRequireDefault(_combokeys);

var _index = __webpack_require__(8);

var _tutorials = __webpack_require__(105);

var _tutorials2 = _interopRequireDefault(_tutorials);

var _api_helpers = __webpack_require__(6);

var _api_helpers2 = _interopRequireDefault(_api_helpers);

var _settings_helpers = __webpack_require__(2);

var _settings_helpers2 = _interopRequireDefault(_settings_helpers);

var _field_builder = __webpack_require__(168);

var _field_builder2 = _interopRequireDefault(_field_builder);

var _skins_panel = __webpack_require__(847);

var _skins_panel2 = _interopRequireDefault(_skins_panel);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ObjectSettings = function (_Component) {
    _inherits(ObjectSettings, _Component);

    function ObjectSettings(props) {
        _classCallCheck(this, ObjectSettings);

        var _this = _possibleConstructorReturn(this, (ObjectSettings.__proto__ || Object.getPrototypeOf(ObjectSettings)).call(this, props));

        var whichActive = 'linked';

        if (_this.props.object != undefined && _this.props.object.device != undefined) {
            whichActive = _this.props.object.device;
        }

        if (whichActive == 'linked' && !_this.props.deviceLock) {
            whichActive = 'laptop';
        }

        //previousWhichActive:
        // when switching objects this makes sure that going from an unlocked to a locked that gets unlocked keeps the same device view
        _this.state = {
            deviceLock: _this.props.deviceLock,
            settingType: _this.props.object.type == 'module' ? 'content' : 'standard',
            whichActive: whichActive,
            previousWhichActive: 'laptop',
            activeGroup: false,
            activePanel: false,
            object: _this.props.object
        };
        return _this;
    }

    _createClass(ObjectSettings, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            this.props.laptopViewHack(this.state.whichActive);

            this.combokeys = new _combokeys2.default(document.documentElement);
            this.combokeysIframe = new _combokeys2.default(document.getElementById('ocb-workspace-iframe').contentWindow);
            //Allows bindGlobal, which makes this work inside of textareas
            __webpack_require__(19)(this.combokeys);
            __webpack_require__(19)(this.combokeysIframe);

            this.combokeys.bindGlobal('esc', this.closeShortcut.bind(this));
            this.combokeys.bindGlobal(['command+s', 'ctrl+s'], this.saveShortcut.bind(this));
            this.combokeysIframe.bindGlobal('esc', this.closeShortcut.bind(this));
            this.combokeysIframe.bindGlobal(['command+s', 'ctrl+s'], this.saveShortcut.bind(this));
        }

        /**
         * Want to make sure that we remove the event listener when it unmounts,
         * otherwise, the listener gets added to window multiple times and causes multiple setState updates
         */

    }, {
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {
            this.combokeys.detach();
            this.combokeysIframe.detach();
        }
    }, {
        key: 'closeShortcut',
        value: function closeShortcut() {
            if (this.props.workspaceState.editingSkin != undefined && this.props.workspaceState.editingSkin != false) return;

            this.closeSettings(false);

            return false;
        }
    }, {
        key: 'saveShortcut',
        value: function saveShortcut() {
            if (this.props.workspaceState.editingSkin != undefined && this.props.workspaceState.editingSkin != false) return;

            this.closeSettings(true);

            return false;
        }
    }, {
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps(nextProps) {
            if (nextProps.values == null) {
                return;
            }
            if (nextProps.values.deviceLock !== this.state.deviceLock) {
                var whichActive = nextProps.values.deviceLock || nextProps.values.deviceLock == undefined ? 'linked' : 'laptop';
                var newState = this.state;

                newState.whichActive = whichActive;
                newState.deviceLock = whichActive == 'linked';
                this.setState(newState);
            }
        }
    }, {
        key: 'update',
        value: function update(property, _update) {
            var forceDevice = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
            var deviceShared = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;

            if (!forceDevice) {
                forceDevice = this.state.whichActive;
            }

            /*console.log('updating the object settings', {
                property,
                update,
                forceDevice,
                deviceShared
            });*/

            //This property is used in the fields in order to make sure we're showing the right settings for the current device
            delete _update.currentDevice;

            this.props.appFunctions.update(forceDevice, property, _update, deviceShared);

            this.setState(this.state);
        }
    }, {
        key: 'switchWhichActive',
        value: function switchWhichActive(settings, state) {
            this.setState(state);
            var update = {};
            //Update standard settings for all devices
            if (state.whichActive != 'linked' && this.props.object.standard[state.whichActive] == undefined) {
                //Not sure how all of the devices are updated on the standard side.
                // Really, this should look the same as the settings below.
                // But somehow, standard settings are getting updated for all devices when you switch
                update.standard = this.props.object.standard;
                update.standard[state.whichActive] = this.props.object.standard.linked;
            }
            //Update settings settings for all devices
            if (state.whichActive != 'linked' && this.props.object.settings != undefined && this.props.object.settings[state.whichActive] == undefined && this.props.object.type == 'module') {
                update.settings = this.props.object.settings;

                //Confusing, but yes, we want .default.default
                var theDefaults = _settings_helpers2.default.getModuleRegistryProp(this.props.object.moduleType, 'default').default;

                if (update.settings.laptop == undefined) {
                    update.settings.laptop = Object.assign({}, theDefaults, settings);
                }
                if (update.settings.tablet == undefined) {
                    update.settings.tablet = Object.assign({}, theDefaults, settings);
                }
                if (update.settings.phone == undefined) {
                    update.settings.phone = Object.assign({}, theDefaults, settings);
                }

                //Also need to copy settings for repeater fields here...
                //CODE
            }

            update.deviceLock = state.whichActive == 'linked';
            this.props.appFunctions.updateObjectProperty(this.props.object, update, state.whichActive);
        }
    }, {
        key: 'copyToDevices',
        value: function copyToDevices(settings, which) {
            for (var key in settings['linked']) {
                if (settings['linked'].hasOwnProperty(key)) {
                    if (settings['linked'][key] != undefined && (settings[which] == undefined || settings[which][key] == undefined)) {
                        this.update(key, settings['linked'][key], which);
                    }
                }
            }
        }
    }, {
        key: 'closeSettings',
        value: function closeSettings() {
            var save = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;

            if (save) {
                if (this.props.object.type == 'module') {
                    var onSave = _settings_helpers2.default.getModuleRegistryOnSave(this.props.object.moduleType);

                    if (onSave) {
                        onSave(this.props.object);
                    }
                }
                this.props.appFunctions.saveSettings(this.props.object);
            } else {
                this.props.appFunctions.revertSettings();
            }
            /*let updateState = {activeGroup: false};
            if( ! this.state.deviceLock ){
                updateState.whichActive = 'laptop';
            }*/
            jQuery('#ocb-workspace-iframe').contents().find('html').removeClass('ocb-html-settings-panel-active');
            //this.setState(updateState);
        }
    }, {
        key: 'updateActiveGroup',
        value: function updateActiveGroup(group) {
            var currentGroup = this.state.activeGroup;
            if (currentGroup == false) {
                currentGroup = [];
            }
            currentGroup.push(group);
            this.setState({ activeGroup: currentGroup });
        }
    }, {
        key: 'resetGroup',
        value: function resetGroup() {
            this.setState({ activeGroup: false });
        }
    }, {
        key: 'updateActivePanel',
        value: function updateActivePanel(panel) {
            this.setState({ activePanel: panel });
        }
    }, {
        key: 'deleteFromActiveGroups',
        value: function deleteFromActiveGroups(group) {
            var currentGroup = this.state.activeGroup;
            if (currentGroup == false) {
                return null;
            }
            if (currentGroup.length == 1 && currentGroup.includes(group)) {
                currentGroup = false;
            } else if (currentGroup.includes(group)) {
                var index = currentGroup.indexOf(group);
                currentGroup.splice(index, 1);
            }
            this.setState({ activeGroup: currentGroup });
        }
    }, {
        key: 'printOutValues',
        value: function printOutValues() {
            var output = '';
            var newLine = '\n';
            var newLineLength = 1;
            var altOutput = '';
            var altNewLine = '';
            var altNewLineLength = 0;
            for (var key in this.props.object.settings.linked) {
                if (!this.props.object.settings.linked.hasOwnProperty(key)) continue;

                output += key + ': {' + newLine;
                altOutput += key + ': {' + altNewLine;
                var trimTwo = false;
                for (var childProp in this.props.object.settings.linked[key]) {
                    if (!this.props.object.settings.linked[key].hasOwnProperty(childProp)) continue;

                    var value = this.props.object.settings.linked[key][childProp];
                    if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) == 'object') continue;

                    trimTwo = true;

                    output += childProp + ': ';
                    altOutput += childProp + ': ';
                    if (typeof value == 'string') {
                        output += '\'' + value + '\',';
                        altOutput += '\'' + value + '\',';
                    } else {
                        output += value + ',';
                        altOutput += value + ',';
                    }
                    output += '' + newLine;
                    altOutput += '' + altNewLine;
                }
                if (trimTwo) {
                    output = output.slice(0, -1 - newLineLength);
                    altOutput = altOutput.slice(0, -1 - altNewLineLength);
                } else {
                    output = output.slice(0, 0 - newLineLength);
                    //altOutput = altOutput.slice(0, (0 - altNewLineLength));
                }
                output += newLine + '},' + newLine;
                altOutput += altNewLine + '},' + altNewLine;
            }
            output = output.slice(0, -1 - newLineLength);
            //altOutput = altOutput.slice(0, (-1 - altNewLineLength));
            console.log('printAlt this.props.object', altOutput);
            console.log('print this.props.object', output);

            //OAPI.doRequest('saveTemplate', this.props.object);
        }
    }, {
        key: 'componentDidUpdate',
        value: function componentDidUpdate(prevProps, prevState) {
            var newState = {};

            //Make sure that panel fields are disabled so that scroll works
            if (prevProps.object.id != this.props.object.id && prevState.activePanel) {
                newState.activePanel = false;
            }

            //If we're going to switch the object that we're editing in the settings panel,
            // we need to reset the state of this component and make sure that its children unmount
            // so that they don't have stale state and props
            if (this.props.workspaceState.temporarilyRemoveSettingsPanel == true && this.state.activeGroup != false) {
                newState.activeGroup = false;
            } else if (this.props.workspaceState.temporarilyRemoveSettingsPanel == true) {
                //Make sure that deviceLock and whichActive are updated to represent the values for the new object
                // If it's the same object that we're editing and we're just switching from settings to standard, don't change deviceLock and whichActive
                if (this.props.workspaceState.deviceLock != this.state.deviceLock && this.props.object.id != this.state.object.id) {
                    newState.deviceLock = this.props.workspaceState.deviceLock;
                    newState.whichActive = this.props.workspaceState.deviceLock ? 'linked' : this.state.whichActive;
                } else {
                    this.props.appAddBackSettingsPanel();
                }
            } else if (this.props.object.id != this.state.object.id) {
                newState.object = this.props.object;
            }

            if (Object.keys(newState).length) {
                this.setState(newState);
            }
        }
    }, {
        key: 'switchSettingsTo',
        value: function switchSettingsTo(type) {
            switch (type) {
                case 'design':
                    this.props.appFunctions.switchActiveSettings('settings');
                    this.setState({ settingType: 'design' });
                    break;
                case 'content':
                    this.props.appFunctions.switchActiveSettings('settings');
                    this.setState({ settingType: 'content' });
                    break;
                case 'standard':
                    this.props.appFunctions.switchActiveSettings('standard');
                    this.setState({ settingType: '' });
                    break;
            }
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            if (!this.props.object) {
                return null;
            }

            var appFunctions = this.props.appFunctions;
            appFunctions.objectUpdate = this.update.bind(this);
            appFunctions.whichActive = this.state.whichActive;
            appFunctions.activeGroup = this.state.activeGroup;
            appFunctions.activePanel = this.state.activePanel;
            appFunctions.updateActiveGroup = this.updateActiveGroup.bind(this);
            appFunctions.resetGroup = this.resetGroup.bind(this);
            appFunctions.updateActivePanel = this.updateActivePanel.bind(this);
            appFunctions.deleteFromActiveGroups = this.deleteFromActiveGroups.bind(this);
            appFunctions.settingsOrStandard = this.props.settingsOrStandard;
            appFunctions.editingSkin = this.props.workspaceState.editingSkin;

            var linkIconClass = 'fa fa-link';
            var deviceClass = 'ocb-settings-device';
            var laptopClass = 'ocb-settings-device disabled';
            var tabletClass = 'ocb-settings-device disabled';
            var phoneClass = 'ocb-settings-device disabled';
            var settings = this.props.object[this.props.settingsOrStandard][this.state.whichActive];
            var linkFunction = function linkFunction() {
                return _this2.switchWhichActive(settings, { whichActive: 'laptop', deviceLock: false });
            };
            var standardDeviceMessage = 'Must switch to per-device settings';
            var laptopMessage = standardDeviceMessage;
            var tabletMessage = standardDeviceMessage;
            var phoneMessage = standardDeviceMessage;
            var laptopActive = '';
            var tabletActive = '';
            var phoneActive = '';
            var linkedActive = 'active';
            var unlinkedActive = '';
            var skinEnabled = false;
            var skinsEnabledClass = '';
            var settingTypeClass = this.state.settingType ? 'ocb-settingtype-' + this.state.settingType : 'ocb-settingtype-standard';

            if (this.props.object.moduleType != undefined && this.props.object.moduleType) {
                skinEnabled = _settings_helpers2.default.getModuleRegistryProp(this.props.object.moduleType, 'skin');
                if (skinEnabled) skinsEnabledClass = 'ocb-has-skins';
                if (skinEnabled && (this.props.object.type != 'module' || this.props.settingsOrStandard == 'settings')) skinsEnabledClass += ' ocb-has-skins-panel';
            } else {
                //make sure that it has the classes to make room for the skins panel
                if (this.props.object.type != 'module') skinsEnabledClass += ' ocb-has-skins-panel';
                if (this.state.settingType != 'standard') skinsEnabledClass += ' ocb-settingtype-standard';
            }

            if (this.props.object.skinId != undefined && this.props.object.skinId) {
                skinsEnabledClass += ' ocb-skin-active';
            }

            if (this.props.workspaceState.editingSkin != undefined && this.props.workspaceState.editingSkin != false) {
                skinsEnabledClass += ' ocb-editing-skin';
            }

            if (this.state.deviceLock == false) {
                linkedActive = '';
                unlinkedActive = 'active';

                laptopMessage = 'Settings for Laptops and Desktops';
                tabletMessage = 'Settings for tablets';
                phoneMessage = 'Settings for phones';

                laptopClass = deviceClass;
                tabletClass = deviceClass;
                phoneClass = deviceClass;

                //laptopActive = () => this.setState({ whichActive: 'laptop' });
                laptopActive = function laptopActive() {
                    return _this2.switchWhichActive(settings, { whichActive: 'laptop', previousWhichActive: 'laptop' });
                };
                //tabletActive = () => this.setState({ whichActive: 'tablet' });
                tabletActive = function tabletActive() {
                    return _this2.switchWhichActive(settings, { whichActive: 'tablet', previousWhichActive: 'tablet' });
                };
                //phoneActive = () => this.setState({ whichActive: 'phone' });
                phoneActive = function phoneActive() {
                    return _this2.switchWhichActive(settings, { whichActive: 'phone', previousWhichActive: 'phone' });
                };

                switch (this.state.whichActive) {
                    case 'laptop':
                        laptopClass = deviceClass + ' active';
                        break;
                    case 'tablet':
                        tabletClass = deviceClass + ' active';
                        break;
                    case 'phone':
                        phoneClass = deviceClass + ' active';
                        break;
                    default:
                        laptopClass = deviceClass + ' active';
                }
            }

            var laptopIcon = _react2.default.createElement(
                'div',
                { className: 'ocb-tooltip-wrap ' + laptopClass, onClick: laptopActive },
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-tooltip ocb-tooltip-bottomRight ' + window.OffsproutEffect },
                    laptopMessage
                ),
                _react2.default.createElement('i', { className: 'fa fa-laptop' })
            );

            var tabletIcon = _react2.default.createElement(
                'div',
                { className: 'ocb-tooltip-wrap ' + tabletClass, onClick: tabletActive },
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-tooltip ocb-tooltip-bottomRight ' + window.OffsproutEffect },
                    tabletMessage
                ),
                _react2.default.createElement('i', { className: 'fa fa-tablet' })
            );

            var phoneIcon = _react2.default.createElement(
                'div',
                { className: 'ocb-tooltip-wrap ' + phoneClass, onClick: phoneActive },
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-tooltip ocb-tooltip-bottomRight ' + window.OffsproutEffect },
                    phoneMessage
                ),
                _react2.default.createElement('i', { className: 'fa fa-mobile-phone' })
            );

            var typeDisplay = this.props.object.type;
            var globalClass = '';

            if (this.props.object.moduleType != undefined) {
                var theModuleType = this.props.object.moduleType.replaceAll('_', ' ');

                //Unfortunately, the heading module was misnamed "header" originally - fix it here
                if (theModuleType == 'header') theModuleType = 'heading';

                typeDisplay += ': ' + theModuleType;

                if (typeDisplay.length > 25) {
                    typeDisplay = typeDisplay.slice(0, 22) + '...';
                }
            }

            var switchActive = this.state.whichActive == 'linked' ? 'laptop' : this.state.whichActive;

            var sharedDevice = _react2.default.createElement(
                'div',
                { className: 'ocb-settings-shared ' + linkedActive },
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-settings-shared-item ' + linkedActive, onClick: function onClick() {
                            return _this2.switchWhichActive(settings, { whichActive: 'linked', deviceLock: true });
                        } },
                    'Use Linked Settings'
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-settings-shared-item ' + unlinkedActive, onClick: function onClick() {
                            return _this2.switchWhichActive(settings, { whichActive: _this2.state.previousWhichActive, deviceLock: false });
                        } },
                    'Use Per-Device Settings'
                )
            );

            var devices = _react2.default.createElement(
                'div',
                { className: 'ocb-settings-devices ' + unlinkedActive },
                laptopIcon,
                tabletIcon,
                phoneIcon
            );

            var contentActive = '';
            var designActive = '';
            var standardActive = '';
            if (this.state.settingType == 'content') contentActive = 'active';
            if (this.state.settingType == 'design') designActive = 'active';
            if (this.props.settingsOrStandard == 'standard') {
                contentActive = '';
                designActive = '';
                standardActive = 'active';
            }

            var moduleSettings = _react2.default.createElement(
                'div',
                { className: 'ocb-settings-which-option ocb-tooltip-wrap ' + contentActive, onClick: function onClick() {
                        return _this2.switchSettingsTo('content');
                    } },
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-tooltip ocb-tooltip-bottomRight ' + window.OffsproutEffect },
                    'Shortcut: Right Click Module'
                ),
                'Content'
            );

            var designSettings = _react2.default.createElement(
                'div',
                { className: 'ocb-settings-which-option ocb-tooltip-wrap ' + designActive, onClick: function onClick() {
                        return _this2.switchSettingsTo('design');
                    } },
                'Design'
            );

            var standardSettings = _react2.default.createElement(
                'div',
                { className: 'ocb-settings-which-option ocb-tooltip-wrap ' + standardActive, onClick: function onClick() {
                        return _this2.switchSettingsTo('standard');
                    } },
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-tooltip ocb-tooltip-bottomRight ' + window.OffsproutEffect },
                    'Shortcut: Shift + Right Click Module'
                ),
                'Standard'
            );

            if (this.props.object.type != 'module') {
                moduleSettings = null;
                designSettings = null;
            }

            //Hide design tab if no permission
            if (this.props.object.type == 'row' && !OCBGlobalSettings.permissions.edit_rows_design || this.props.object.type == 'column' && !OCBGlobalSettings.permissions.edit_columns_design || this.props.object.type == 'module' && !OCBGlobalSettings.permissions.edit_modules_design && !OCBGlobalSettings.permissions.change_modules_skin) {
                designSettings = null;
            }

            var fieldBuilder = null;

            if (this.props.workspaceState.temporarilyRemoveSettingsPanel != true) {
                fieldBuilder = _react2.default.createElement(_field_builder2.default, { object: this.props.object, appFunctions: appFunctions, whichActive: this.state.whichActive, settingType: this.state.settingType ? this.state.settingType : 'standard', unique: this.props.workspaceState.unique });
            }

            //Add buttons to edit the parent objects of the current object
            var columnParent = null;
            if (this.props.object.type == 'module') {
                columnParent = _react2.default.createElement(
                    'span',
                    { className: 'ocb-title-button', onClick: function onClick() {
                            return _this2.props.appFunctions.switchActiveObject(_this2.props.appFunctions.parentColumn, 'standard');
                        } },
                    _react2.default.createElement('i', { className: 'fa fa-paint-brush mr-2' }),
                    ' Column'
                );
            }
            var rowParent = null;
            if (this.props.object.type == 'module' || this.props.object.type == 'column') {
                rowParent = _react2.default.createElement(
                    'span',
                    { className: 'ocb-title-button', onClick: function onClick() {
                            return _this2.props.appFunctions.switchActiveObject(_this2.props.appFunctions.parentRow, 'standard');
                        } },
                    _react2.default.createElement('i', { className: 'fa fa-paint-brush mr-2' }),
                    ' Row'
                );
            }

            if (this.props.object.type == 'module' && !OCBGlobalSettings.permissions.edit_modules_standard || this.props.object.type == 'column' && !OCBGlobalSettings.permissions.edit_columns_standard || this.props.object.type == 'row' && !OCBGlobalSettings.permissions.edit_rows_standard) {
                standardSettings = null;
            }

            if (!OCBGlobalSettings.permissions.edit_columns_standard) {
                columnParent = null;
            }
            if (!OCBGlobalSettings.permissions.edit_rows_standard) {
                rowParent = null;
            }

            //Don't let people switch to another object if we're editing a skin - they need to handle the skin first
            if (this.props.workspaceState.editingSkin != undefined && this.props.workspaceState.editingSkin != false) {
                columnParent = null;
                rowParent = null;
            }

            var whichSettings = _react2.default.createElement(
                'div',
                { className: 'ocb-settings-which' },
                moduleSettings,
                designSettings,
                standardSettings
            );

            if (this.props.appFunctions.settingsOrStandard == 'site') {
                sharedDevice = null;
                devices = null;
                whichSettings = null;
                globalClass = 'ocb-global-settings ';
            }

            if (this.state.activePanel) {
                globalClass = 'ocb-panel-active ';
            }

            var settingsButtons = _react2.default.createElement(
                'div',
                { className: 'ocb-settings-buttons' },
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-settings-button ocb-cancel ocb-tooltip-wrap', onClick: function onClick() {
                            return _this2.closeSettings(false);
                        } },
                    _react2.default.createElement(
                        'div',
                        { className: 'ocb-tooltip ' + window.OffsproutEffect },
                        'Revert Changes (esc)'
                    ),
                    _react2.default.createElement('i', { className: 'fa fa-remove' })
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-settings-button ocb-save ocb-tooltip-wrap', onClick: function onClick() {
                            return _this2.closeSettings(true);
                        } },
                    _react2.default.createElement(
                        'div',
                        { className: 'ocb-tooltip ' + window.OffsproutEffect },
                        'Save Changes (ctrl+s)'
                    ),
                    _react2.default.createElement('i', { className: 'fa fa-check' })
                )
            );

            if (this.props.workspaceState.editingSkin != undefined && this.props.workspaceState.editingSkin != false) {
                if (this.props.settingsOrStandard == 'standard') {
                    settingsButtons = _react2.default.createElement(
                        'div',
                        { className: 'ocb-settings-buttons ocb-skins-message' },
                        _react2.default.createElement(
                            'span',
                            null,
                            'Save or cancel your skin edits'
                        )
                    );
                } else {
                    settingsButtons = _react2.default.createElement(
                        'div',
                        { className: 'ocb-settings-buttons ocb-skins-message' },
                        _react2.default.createElement(
                            'span',
                            null,
                            'Save or cancel your skin edits in the Design Tab'
                        )
                    );
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'offsprout-font ' + globalClass + ' ' + settingTypeClass + ' ' + skinsEnabledClass },
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-title' },
                    typeDisplay,
                    columnParent,
                    rowParent
                ),
                sharedDevice,
                devices,
                whichSettings,
                _react2.default.createElement(_skins_panel2.default, { object: this.props.object, settingType: this.state.settingType, settingsOrStandard: this.props.settingsOrStandard, appFunctions: appFunctions }),
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-settings-wrap' },
                    _react2.default.createElement('div', { className: 'ocb-settings-group-nav' }),
                    _react2.default.createElement(
                        'div',
                        { className: 'ocb-settings-group' },
                        fieldBuilder
                    )
                ),
                settingsButtons,
                _react2.default.createElement(_tutorials2.default, { tutorials: ['right_click_modules'], size: 'small' })
            );
        }
    }]);

    return ObjectSettings;
}(_react.Component);

//export default ObjectSettings;

function mapStateToProps(state) {
    return {
        workspaceState: state.workspaceState,
        skinState: state.skinState
    };
}
function mapDispatchToProps(dispatch) {
    return (0, _redux.bindActionCreators)({ appAddBackSettingsPanel: _index.appAddBackSettingsPanel }, dispatch);
}
exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(ObjectSettings);

/***/ }),

/***/ 844:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var AdminTooltip = function (_Component) {
    _inherits(AdminTooltip, _Component);

    function AdminTooltip() {
        _classCallCheck(this, AdminTooltip);

        return _possibleConstructorReturn(this, (AdminTooltip.__proto__ || Object.getPrototypeOf(AdminTooltip)).apply(this, arguments));
    }

    _createClass(AdminTooltip, [{
        key: 'render',
        value: function render() {
            var defaults = {
                tooltipContent: 'tooltip',
                animation: 'fadeInDown',
                direction: 'top'
            };

            var props = Object.assign(defaults, this.props.tooltip);

            var animationClass = 'animated fast ' + props.animation;

            if (props.animation == false) animationClass = '';

            return _react2.default.createElement(
                'div',
                { className: 'ocb-tooltip ocb-tooltip-' + props.direction + ' ' + animationClass },
                props.tooltipContent
            );
        }
    }]);

    return AdminTooltip;
}(_react.Component);

exports.default = AdminTooltip;

/***/ }),

/***/ 845:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _admin_tooltip = __webpack_require__(844);

var _admin_tooltip2 = _interopRequireDefault(_admin_tooltip);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var AdminTooltipWrap = function (_Component) {
    _inherits(AdminTooltipWrap, _Component);

    function AdminTooltipWrap() {
        _classCallCheck(this, AdminTooltipWrap);

        return _possibleConstructorReturn(this, (AdminTooltipWrap.__proto__ || Object.getPrototypeOf(AdminTooltipWrap)).apply(this, arguments));
    }

    _createClass(AdminTooltipWrap, [{
        key: 'render',
        value: function render() {
            var defaults = {
                wrapClass: '',
                content: _react2.default.createElement('i', { className: 'fa fa-question-circle' })
            };

            var props = Object.assign(defaults, this.props.tooltip);

            return _react2.default.createElement(
                'div',
                { className: props.wrapClass + ' ocb-tooltip-wrap' },
                _react2.default.createElement(_admin_tooltip2.default, { tooltip: this.props.tooltip }),
                props.content
            );
        }
    }]);

    return AdminTooltipWrap;
}(_react.Component);

exports.default = AdminTooltipWrap;

/***/ }),

/***/ 846:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _settings_helpers = __webpack_require__(2);

var _settings_helpers2 = _interopRequireDefault(_settings_helpers);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var SaveSummary = function (_Component) {
    _inherits(SaveSummary, _Component);

    function SaveSummary(props) {
        _classCallCheck(this, SaveSummary);

        var _this = _possibleConstructorReturn(this, (SaveSummary.__proto__ || Object.getPrototypeOf(SaveSummary)).call(this, props));

        if (!_this.props.result.length) return _possibleConstructorReturn(_this);

        var theState = {
            messages: {},
            codes: {},
            saving: {}
        };

        _this.props.result.forEach(function (each) {
            theState[each.id] = each.value;
            theState.messages[each.id] = each.result.message != undefined && typeof each.result.message == 'string' ? each.result.message : '';
            theState.codes[each.id] = each.result.code != undefined && typeof each.result.code == 'string' ? each.result.code : '';
        });

        _this.state = theState;
        return _this;
    }

    _createClass(SaveSummary, [{
        key: 'getText',
        value: function getText(id) {
            var text = '';

            switch (id) {
                case 'htmlSave':
                    text = 'HTML Content';
                    break;
                case 'siteSave':
                    text = 'Site Settings';
                    break;
                case 'siteCSSSave':
                    text = 'Site CSS';
                    break;
                case 'siteSkinSave':
                    text = 'Site Skins';
                    break;
                case 'pageCSSSave':
                    text = 'Post CSS';
                    break;
                case 'pageSkinSave':
                    text = 'Post Skins';
                    break;
                case 'pageSave':
                    text = 'Page Builder';
                    break;
            }

            return text;
        }
    }, {
        key: 'getRetryItem',
        value: function getRetryItem(id) {
            var _this2 = this;

            if (this.state[id]) return null;

            var retryFunction = null;

            switch (id) {
                case 'htmlSave':
                    retryFunction = _settings_helpers2.default.saveCurrentHTML;
                    break;
                case 'siteSave':
                    retryFunction = _settings_helpers2.default.saveCurrentSite;
                    break;
                case 'siteCSSSave':
                    retryFunction = _settings_helpers2.default.saveCurrentSiteCSS;
                    break;
                case 'siteSkinSave':
                    retryFunction = _settings_helpers2.default.saveCurrentSiteSkin;
                    break;
                case 'pageCSSSave':
                    retryFunction = _settings_helpers2.default.saveCurrentPageCSS;
                    break;
                case 'pageSkinSave':
                    retryFunction = _settings_helpers2.default.saveCurrentPageSkin;
                    break;
                case 'pageSave':
                    retryFunction = _settings_helpers2.default.saveCurrentPage;
                    break;
            }

            var spinner = '';

            if (this.state.saving[id] != undefined && this.state.saving[id]) {
                spinner = ' fa-spin';
            }

            var retry = _react2.default.createElement(
                'span',
                { className: 'ocb-admin-button ocb-admin-button-x-small ml-2', onClick: function onClick() {
                        return _this2.getFullRetryFunction(id, retryFunction);
                    } },
                _react2.default.createElement(
                    'span',
                    { className: 'd-inline-block' },
                    'Retry'
                ),
                _react2.default.createElement(
                    'span',
                    { className: 'd-inline-block ml-2' },
                    _react2.default.createElement('i', { className: 'fa fa-refresh' + spinner })
                )
            );

            return retry;
        }
    }, {
        key: 'getErrorMessage',
        value: function getErrorMessage(id) {
            if (this.state[id]) return null;

            var message = this.state.messages[id];

            if (this.state.codes[id] == 'internal_server_error') {
                message = 'Ran out of memory. Please ask your host to increase site memory.';
            }

            return _react2.default.createElement(
                'span',
                { className: 'ocb-tooltip animated bounceIn' },
                'Error: ',
                message
            );
        }

        /**
         * Fire off the individual save function and then use the result to update the SaveSummary state
         * If we update the SaveSummary state for the function to true, then the retry will go away
         *
         * @param id
         * @param retry
         */

    }, {
        key: 'getFullRetryFunction',
        value: function getFullRetryFunction(id, retry) {
            var _this3 = this;

            //Update this.state.saving
            this.setState(_extends({}, this.state, {
                saving: _extends({}, this.state.saving, _defineProperty({}, id, true))
            }));

            var save = retry(this.props.saveProps, this.props.publish);

            save.then(function (result) {
                var _extends4;

                _this3.setState(_extends({}, _this3.state, (_extends4 = {}, _defineProperty(_extends4, id, true), _defineProperty(_extends4, 'saving', _extends({}, _this3.state.saving, _defineProperty({}, id, false))), _extends4)));
            }).catch(function (error) {
                var _extends7;

                _this3.setState(_extends({}, _this3.state, (_extends7 = {}, _defineProperty(_extends7, id, false), _defineProperty(_extends7, 'saving', _extends({}, _this3.state.saving, _defineProperty({}, id, false))), _defineProperty(_extends7, 'messages', _extends({}, _this3.state.messages, _defineProperty({}, id, error))), _extends7)));
            });
        }
    }, {
        key: 'render',
        value: function render() {
            var _this4 = this;

            if (!this.props.result.length) return null;

            var results = this.props.result.map(function (each) {
                var text = _this4.getText(each.id);
                var iconClass = _this4.state[each.id] ? 'fa-check' : 'fa-remove';
                var iconResult = _this4.state[each.id] ? 'ocb-success' : 'ocb-error';
                var saveResult = _this4.state[each.id] ? 'Saved!' : 'Not Saved';
                var retry = _this4.getRetryItem(each.id);
                var message = _this4.getErrorMessage(each.id);

                return _react2.default.createElement(
                    'div',
                    { key: each.id, className: 'ocb-save-result mb-1' },
                    _react2.default.createElement('i', { className: 'fa ocb-admin-step-icon ' + iconClass + ' ' + iconResult }),
                    retry,
                    _react2.default.createElement(
                        'span',
                        { className: 'ocb-save-result-message' },
                        text + ' ' + saveResult
                    ),
                    message
                );
            });

            return _react2.default.createElement(
                'div',
                null,
                results
            );
        }
    }]);

    return SaveSummary;
}(_react.Component);

exports.default = SaveSummary;

/***/ }),

/***/ 847:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactRedux = __webpack_require__(5);

var _redux = __webpack_require__(7);

var _combokeys = __webpack_require__(33);

var _combokeys2 = _interopRequireDefault(_combokeys);

var _deepmerge = __webpack_require__(9);

var _deepmerge2 = _interopRequireDefault(_deepmerge);

var _index = __webpack_require__(8);

var _api_helpers = __webpack_require__(6);

var _api_helpers2 = _interopRequireDefault(_api_helpers);

var _settings_helpers = __webpack_require__(2);

var _settings_helpers2 = _interopRequireDefault(_settings_helpers);

var _module_helpers = __webpack_require__(12);

var _module_helpers2 = _interopRequireDefault(_module_helpers);

var _standard_helpers = __webpack_require__(59);

var _standard_helpers2 = _interopRequireDefault(_standard_helpers);

var _app_overlay = __webpack_require__(13);

var _app_overlay2 = _interopRequireDefault(_app_overlay);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var SkinsPanel = function (_Component) {
    _inherits(SkinsPanel, _Component);

    function SkinsPanel(props) {
        _classCallCheck(this, SkinsPanel);

        var _this = _possibleConstructorReturn(this, (SkinsPanel.__proto__ || Object.getPrototypeOf(SkinsPanel)).call(this, props));

        _this.state = {
            active: false,
            saveOpen: false,
            name: '',
            editing: false,
            chosen: _this.props.object.skinId,
            backupSettings: false,
            backupStandard: false
        };
        return _this;
    }

    _createClass(SkinsPanel, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            this.combokeys = new _combokeys2.default(document.documentElement);
            this.combokeysIframe = new _combokeys2.default(document.getElementById('ocb-workspace-iframe').contentWindow);
            //Allows bindGlobal, which makes this work inside of textareas
            __webpack_require__(19)(this.combokeys);
            __webpack_require__(19)(this.combokeysIframe);

            this.combokeys.bindGlobal('return', this.maybeDoSaveSkin.bind(this));
            this.combokeysIframe.bindGlobal(['return'], this.maybeDoSaveSkin.bind(this));
        }

        /**
         * Want to make sure that we remove the event listener when it unmounts,
         * otherwise, the listener gets added to window multiple times and causes multiple setState updates
         */

    }, {
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {
            /*this.combokeys.detach();
            this.combokeysIframe.detach();*/
        }
    }, {
        key: 'cancelSaveSkin',
        value: function cancelSaveSkin() {
            var stateChange = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;

            if (stateChange) {
                this.setState({ name: '' });
            }
            this.props.updateAppState('overlay', null);
        }
    }, {
        key: 'saveSkin',
        value: function saveSkin() {
            var _this2 = this;

            var overlayOptions = [{
                classes: 'ocb-success ocb-admin-button-load',
                onClick: function onClick() {
                    return _this2.doSaveSkin();
                },
                text: 'Create'
            }, {
                classes: 'ocb-danger mr-2',
                onClick: function onClick() {
                    return _this2.cancelSaveSkin();
                },
                text: 'Cancel'
            }];

            var overlayContent = _react2.default.createElement('input', { id: 'ocb-overlay-focus-input', className: 'mt-2 form-control', type: 'text', onChange: function onChange(e) {
                    return _this2.setState({ name: e.target.value });
                } });

            var overlay = _react2.default.createElement(_app_overlay2.default, {
                title: 'Name the Skin',
                stacked: '1',
                content: overlayContent,
                overlayStyle: 'small',
                options: overlayOptions
            });

            this.setState({ saveOpen: true });
            this.props.updateAppState('overlay', overlay);
        }
    }, {
        key: 'maybeDoSaveSkin',
        value: function maybeDoSaveSkin() {
            if (this.state.saveOpen) {
                this.doSaveSkin();
            }
        }

        /**
         * Generate a skin ID and save it to the object on property skinId
         * Then add the skin to the skin reducer
         */

    }, {
        key: 'doSaveSkin',
        value: function doSaveSkin() {
            var _this3 = this;

            var skinId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

            var updating = false;

            if (skinId) updating = true;

            var newObject = JSON.parse(JSON.stringify(this.props.object));

            if (!updating) {
                if (!this.state.name) {
                    var overlayOptions = [{
                        classes: 'ocb-success',
                        onClick: function onClick() {
                            return _this3.saveSkin();
                        },
                        text: 'Okay'
                    }];

                    var overlay = _react2.default.createElement(_app_overlay2.default, {
                        title: 'You Must Name the Skin',
                        stacked: '1',
                        icon: 'warning',
                        overlayStyle: 'small',
                        options: overlayOptions
                    });

                    this.props.updateAppState('overlay', overlay);

                    return;
                }
                skinId = _settings_helpers2.default.generateId('skin');
            }

            newObject.skinId = skinId;

            //Add the skinId to the object
            this.props.updateObjectProperty(this.props.object, { skinId: skinId });

            //Get the module skin (columns and rows just get empty defaults)
            var skin = newObject.type == 'module' ? _module_helpers2.default.getSkin(newObject, 'settings') : { settings: {}, classes: {}, css: '', moduleType: this.props.object.type };

            //Get the standard skin
            var standardSkin = _standard_helpers2.default.getSkin(newObject);

            //Merge them
            skin = Object.assign(skin, standardSkin);

            //If we're updating the skin, add the other properties of the already existing skin (like name) back to the skin
            if (!updating) {
                skin.name = this.state.name;
            } else {
                skin = this.props.skinState[skinId] != undefined ? Object.assign(this.props.skinState[skinId], skin) : skin;
            }

            //if skin.settings is empty, when it gets saved to PHP and then recalled, the property ends up being an empty array - it has to be an object for DeepMerge to work
            if (Array.isArray(skin.settings) && !skin.settings.length || !Object.keys(skin.settings).length) {
                skin.settings = { _emptySettings: 1 };
            }
            if (Array.isArray(skin.standardSettings) && !skin.standardSettings.length || !Object.keys(skin.standardSettings).length) {
                skin.standardSettings = { _emptySettings: 1 };
            }

            this.props.updateSkin(skinId, skin);
            this.cancelSaveSkin(false);

            this.props.appFunctions.resetGroup();
            this.props.appUpdateWorkspaceProperty('editingSkin', false);
            this.props.updateAppState('overlay', null);
            this.setState({ name: '', active: true, editing: false, backupSettings: false, backupStandard: false, saveOpen: false });
        }
    }, {
        key: 'updateSkin',
        value: function updateSkin() {
            this.doSaveSkin(this.state.editing);
            //this.props.appUpdateObjectSettings( this.state.backupSettings );
            //this.props.appUpdateObjectStandard( this.state.backupStandard );
        }
    }, {
        key: 'deleteSkin',
        value: function deleteSkin(skinId) {
            var _this4 = this;

            var overlayOptions = [{
                classes: 'ocb-danger ocb-admin-button-load',
                onClick: function onClick() {
                    return _this4.doDeleteSkin(skinId);
                },
                text: 'Delete'
            }, {
                classes: '',
                onClick: function onClick() {
                    return _this4.cancelSaveSkin();
                },
                text: 'Cancel'
            }];

            var overlayContent = _react2.default.createElement(
                'span',
                null,
                'Once deleted, any modules using this skin will revert back to a default style. This cannot be undone once saved!'
            );

            var overlay = _react2.default.createElement(_app_overlay2.default, {
                title: 'Are you sure you want to delete this skin?',
                stacked: '1',
                content: overlayContent,
                overlayStyle: 'small',
                options: overlayOptions
            });

            this.props.updateAppState('overlay', overlay);
        }
    }, {
        key: 'doDeleteSkin',
        value: function doDeleteSkin(skinId) {
            if (!OCBGlobalSettings.permissions.delete_skins) {
                return;
            }
            this.props.deleteSkin(skinId);
            this.props.updateAppState('overlay', null);

            if (this.props.object.skinId == skinId) {
                this.props.updateObjectProperty(this.props.object, { skinId: false });
            }
        }

        /**
         * If we're editing a skin, we remove the skinId from the object so that the object shows the settings as they're being set, not the skin settings
         * Then we have to update the settings of the object so that they match the settings of the skin
         * We also save the skinId of the skin that we're working on to the state of this component
         * Then when we update, we can use that id to update and put it back on the object
         *
         * To test:
         * Save a skin
         * Select no skin
         * Make design changes
         * Select the skin that was just saved
         * Edit the skin
         *
         * @param skinId
         */

    }, {
        key: 'editSkin',
        value: function editSkin(skinId) {
            if (!OCBGlobalSettings.permissions.edit_skins) {
                return;
            }
            var backupSettings = this.props.object.type == 'module' && this.props.object.settings != undefined ? JSON.parse(JSON.stringify(this.props.object.settings)) : {};
            var backupStandard = this.props.object.standard != undefined ? JSON.parse(JSON.stringify(this.props.object.standard)) : {};

            var newSettings = (0, _deepmerge2.default)(this.props.object.settings, this.props.skinState[skinId].settings);
            var newStandard = (0, _deepmerge2.default)(this.props.object.standard, this.props.skinState[skinId].standardSettings);

            //Remove the skinId
            this.props.updateObjectProperty(this.props.object, {
                skinId: false,
                settings: newSettings,
                standard: newStandard
            });

            //Apply the skin settings
            this.props.appUpdateObjectSettings(newSettings);
            this.props.appUpdateObjectStandard(newStandard);

            this.props.appUpdateWorkspaceProperty('editingSkin', true);
            this.props.appRefreshFields();

            //Set editing state and remove the active state
            this.setState({ editing: skinId, active: false, backupSettings: backupSettings, backupStandard: backupStandard });
        }

        /**
         * We put the skinId back on the object, then reset the state.
         * No changes have been made to the skinState at this point so we're just undoing editSkin
         */

    }, {
        key: 'cancelEditSkin',
        value: function cancelEditSkin() {
            this.props.updateObjectProperty(this.props.object, { skinId: this.state.editing });
            this.props.appUpdateObjectSettings(this.state.backupSettings);
            this.props.appUpdateObjectStandard(this.state.backupStandard);
            this.props.appUpdateWorkspaceProperty('editingSkin', false);
            this.props.appRefreshFields();
            this.setState({ editing: false, active: true, backupSettings: false, backupStandard: false, saveOpen: false });
        }

        /**
         * Function in charge of applying a new skin to an object
         * @param skinId
         */

    }, {
        key: 'changeSkin',
        value: function changeSkin(skinId) {
            this.props.updateObjectProperty(this.props.object, {
                skinId: skinId,
                settings: this.props.appUpdateObjectSettings((0, _deepmerge2.default)(this.props.object.settings, this.props.skinState[skinId].settings)),
                standard: this.props.appUpdateObjectStandard((0, _deepmerge2.default)(this.props.object.standard, this.props.skinState[skinId].standardSettings))
            });
            this.setState({ chosen: skinId });
            this.props.appRefreshFields();
            window.ocbReInitializePlugins();
        }
    }, {
        key: 'clearSkin',
        value: function clearSkin() {
            this.props.updateObjectProperty(this.props.object, { skinId: false });
            this.setState({ active: false });
            this.props.appRefreshFields();
        }
    }, {
        key: 'render',
        value: function render() {
            var _this5 = this;

            if (!this.props.object || this.props.object.type == 'module' && this.props.settingsOrStandard == 'standard' || this.props.settingsOrStandard == 'site') {
                return null;
            }

            //Hide design fields if no permission
            if (this.props.object.type == 'row' && !OCBGlobalSettings.permissions.change_rows_skin || this.props.object.type == 'column' && !OCBGlobalSettings.permissions.change_columns_skin || this.props.object.type == 'module' && !OCBGlobalSettings.permissions.change_modules_skin) {
                return null;
            }

            var skinEnabled = false;

            if (this.props.object.moduleType != undefined && this.props.object.moduleType && this.props.settingType != 'content') {
                skinEnabled = _settings_helpers2.default.getModuleRegistryProp(this.props.object.moduleType, 'skin');
            }

            if (this.props.object.type != 'module') skinEnabled = true;

            if (!skinEnabled) return null;

            var expanded = null;
            var saveButton = null;
            var skinOpenIcon = this.state.active ? 'fa-remove' : 'fa-plus';
            var skinOpen = _react2.default.createElement('i', { className: 'ocb-settings-skins-icon fa ' + skinOpenIcon, onClick: function onClick() {
                    return _this5.setState({ active: !_this5.state.active });
                } });

            if (this.state.active || this.props.object.skinId != undefined && this.props.object.skinId && this.props.object.type == 'module' || this.props.object.type == 'module' && !OCBGlobalSettings.permissions.edit_modules_design) {

                var skins = this.props.skinState;
                if (this.props.object.type == 'module') skinOpen = null;

                var skinOptions = Object.keys(skins).sort(function (a, b) {
                    //Sort alphabetically
                    var nameA = skins[a].name.toUpperCase(); // ignore upper and lowercase
                    var nameB = skins[b].name.toUpperCase(); // ignore upper and lowercase
                    if (nameA < nameB) {
                        return -1;
                    }
                    if (nameA > nameB) {
                        return 1;
                    }

                    // names must be equal
                    return 0;
                }).map(function (skin) {
                    if (skins[skin].moduleType != _this5.props.object.moduleType && skins[skin].moduleType != _this5.props.object.type) return null;

                    var active = _this5.props.object.skinId == skin ? ' ocb-active' : '';

                    var editSkin = _react2.default.createElement(
                        'div',
                        { className: 'ocb-setting-skin-button ocb-setting-skin-edit', onClick: function onClick() {
                                return _this5.editSkin(skin);
                            } },
                        _react2.default.createElement('i', { className: 'fa fa-paint-brush' })
                    );

                    var deleteSkin = _react2.default.createElement(
                        'div',
                        { className: 'ocb-setting-skin-button ocb-setting-skin-delete', onClick: function onClick() {
                                return _this5.deleteSkin(skin);
                            } },
                        _react2.default.createElement('i', { className: 'fa fa-remove' })
                    );

                    if (!OCBGlobalSettings.permissions.edit_skins || _this5.props.object.skinId != skin) {
                        editSkin = null;
                    }

                    if (!OCBGlobalSettings.permissions.delete_skins) {
                        deleteSkin = null;
                    }

                    return _react2.default.createElement(
                        'div',
                        { key: skin, className: 'ocb-settings-skin-wrap' },
                        _react2.default.createElement(
                            'div',
                            { className: 'ocb-settings-skin' + active, onClick: function onClick() {
                                    return _this5.changeSkin(skin);
                                } },
                            _react2.default.createElement('i', { className: 'fa fa-check' }),
                            _react2.default.createElement(
                                'span',
                                null,
                                skins[skin].name
                            )
                        ),
                        editSkin,
                        deleteSkin
                    );
                });

                var backToOptions = null;

                if (this.props.object.type != 'module' && this.props.object.skinId != undefined && this.props.object.skinId) {
                    backToOptions = _react2.default.createElement(
                        'div',
                        { className: 'ocb-settings-skin ocb-settings-skin-noskin', onClick: function onClick() {
                                return _this5.setState({ active: !_this5.state.active });
                            } },
                        _react2.default.createElement('i', { className: 'fa fa-remove' }),
                        _react2.default.createElement(
                            'span',
                            null,
                            'Back To Standard Settings'
                        )
                    );
                }

                var disconnectSkin = _react2.default.createElement(
                    'span',
                    null,
                    'Disconnect from Skin'
                );

                if (!this.props.object.skinId) {
                    disconnectSkin = _react2.default.createElement(
                        'span',
                        null,
                        'Exit Skins'
                    );
                }

                var goBackDisconnect = _react2.default.createElement(
                    'div',
                    { className: 'ocb-settings-skin ocb-settings-skin-noskin', onClick: function onClick() {
                            return _this5.clearSkin();
                        } },
                    _react2.default.createElement('i', { className: 'fa fa-ban' }),
                    disconnectSkin
                );

                //This means the user can only change skins and can't edit other design items
                if (this.props.object.type == 'module' && !OCBGlobalSettings.permissions.edit_modules_design) {
                    backToOptions = null;
                    goBackDisconnect = null;
                }

                expanded = _react2.default.createElement(
                    'div',
                    { className: 'ocb-settings-skins-expanded' },
                    backToOptions,
                    goBackDisconnect,
                    skinOptions
                );
            } else {
                var saveFunction = function saveFunction() {
                    return _this5.saveSkin();
                };
                var saveText = 'Save New Skin';

                if (this.state.editing) {
                    saveFunction = function saveFunction() {
                        return _this5.updateSkin();
                    };
                    var skinName = this.props.skinState[this.state.editing].name;

                    skinName = skinName.length > 15 ? skinName.substring(0, 14) + '...' : skinName;
                    saveText = 'Update ' + skinName;
                    skinOpen = _react2.default.createElement(
                        'span',
                        { className: 'ocb-settings-skins-button ocb-sf-button ocb-sf-button-danger ml-2', onClick: function onClick() {
                                return _this5.cancelEditSkin();
                            } },
                        'Cancel'
                    );
                }

                if (this.props.object.skinId == undefined || !this.props.object.skinId) {
                    saveButton = _react2.default.createElement(
                        'span',
                        { className: 'ocb-settings-skins-button ocb-sf-button', onClick: saveFunction },
                        '' + saveText
                    );
                }
            }

            if (!OCBGlobalSettings.permissions.create_skins) {
                saveButton = null;
            }

            var skinsBar = _react2.default.createElement(
                'div',
                { className: 'ocb-settings-skins-top d-flex pl-2 pr-2' },
                _react2.default.createElement(
                    'span',
                    { className: 'ocb-settings-skins-title' },
                    'Skins'
                ),
                saveButton,
                skinOpen
            );

            return _react2.default.createElement(
                'div',
                { className: 'ocb-settings-skins' },
                skinsBar,
                expanded
            );
        }
    }]);

    return SkinsPanel;
}(_react.Component);

function mapStateToProps(_ref) {
    var skinState = _ref.skinState;

    return {
        skinState: skinState
    };
}
function mapDispatchToProps(dispatch) {
    return (0, _redux.bindActionCreators)({ updateObjectProperty: _index.updateObjectProperty, updateSkin: _index.updateSkin, updateAppState: _index.updateAppState, deleteSkin: _index.deleteSkin, appUpdateObjectSettings: _index.appUpdateObjectSettings, appUpdateObjectStandard: _index.appUpdateObjectStandard, appRefreshFields: _index.appRefreshFields, appUpdateWorkspaceProperty: _index.appUpdateWorkspaceProperty }, dispatch);
}
exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(SkinsPanel);

/***/ }),

/***/ 848:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _toolbar_save = __webpack_require__(371);

var _toolbar_save2 = _interopRequireDefault(_toolbar_save);

var _toolbar_cancel = __webpack_require__(363);

var _toolbar_cancel2 = _interopRequireDefault(_toolbar_cancel);

var _toolbar_history = __webpack_require__(364);

var _toolbar_history2 = _interopRequireDefault(_toolbar_history);

var _toolbar_redo = __webpack_require__(369);

var _toolbar_redo2 = _interopRequireDefault(_toolbar_redo);

var _toolbar_undo = __webpack_require__(373);

var _toolbar_undo2 = _interopRequireDefault(_toolbar_undo);

var _toolbar_site = __webpack_require__(372);

var _toolbar_site2 = _interopRequireDefault(_toolbar_site);

var _toolbar_log = __webpack_require__(365);

var _toolbar_log2 = _interopRequireDefault(_toolbar_log);

var _toolbar_reset = __webpack_require__(370);

var _toolbar_reset2 = _interopRequireDefault(_toolbar_reset);

var _toolbar_new = __webpack_require__(367);

var _toolbar_new2 = _interopRequireDefault(_toolbar_new);

var _toolbar_plus_upgrade = __webpack_require__(368);

var _toolbar_plus_upgrade2 = _interopRequireDefault(_toolbar_plus_upgrade);

var _toolbar_menu = __webpack_require__(366);

var _toolbar_menu2 = _interopRequireDefault(_toolbar_menu);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var OffsproutToolbarRegistryArray = [{
    name: 'cancel',
    position: 0,
    component: _toolbar_cancel2.default
}, {
    name: 'save',
    position: 20,
    component: _toolbar_save2.default
}, {
    name: 'history',
    position: 30,
    component: _toolbar_history2.default
}, {
    name: 'redo',
    position: 31,
    component: _toolbar_redo2.default
}, {
    name: 'undo',
    position: 32,
    component: _toolbar_undo2.default
},
/*{
    name: 'log',
    position: 30,
    component: ToolbarLog
},*/
/*{
    name: 'reset',
    position: 30,
    component: ToolbarReset
},*/
{
    name: 'new',
    position: 80,
    component: _toolbar_new2.default
}, {
    name: 'site',
    position: 70,
    component: _toolbar_site2.default
}, {
    name: 'plus_upgrade',
    position: 60,
    component: _toolbar_plus_upgrade2.default,
    no_permission: 'has_subscription'
}, {
    name: 'menu',
    position: 50,
    component: _toolbar_menu2.default,
    children: OffsproutFilter.apply('toolbarMenu', [])
}];

if (window.OffsproutToolbarRegistry == undefined) {
    window.OffsproutToolbarRegistry = window.OffsproutToolbarRegistry = OffsproutToolbarRegistryArray;
} else {
    window.OffsproutToolbarRegistry = window.OffsproutToolbarRegistry.concat(OffsproutToolbarRegistryArray);
}

/***/ }),

/***/ 849:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactRedux = __webpack_require__(5);

var _toolbar_save = __webpack_require__(371);

var _toolbar_save2 = _interopRequireDefault(_toolbar_save);

var _toolbar_cancel = __webpack_require__(363);

var _toolbar_cancel2 = _interopRequireDefault(_toolbar_cancel);

var _toolbar_history = __webpack_require__(364);

var _toolbar_history2 = _interopRequireDefault(_toolbar_history);

var _toolbar_redo = __webpack_require__(369);

var _toolbar_redo2 = _interopRequireDefault(_toolbar_redo);

var _toolbar_undo = __webpack_require__(373);

var _toolbar_undo2 = _interopRequireDefault(_toolbar_undo);

var _toolbar_site = __webpack_require__(372);

var _toolbar_site2 = _interopRequireDefault(_toolbar_site);

var _toolbar_log = __webpack_require__(365);

var _toolbar_log2 = _interopRequireDefault(_toolbar_log);

var _toolbar_reset = __webpack_require__(370);

var _toolbar_reset2 = _interopRequireDefault(_toolbar_reset);

var _toolbar_new = __webpack_require__(367);

var _toolbar_new2 = _interopRequireDefault(_toolbar_new);

var _toolbar_plus_upgrade = __webpack_require__(368);

var _toolbar_plus_upgrade2 = _interopRequireDefault(_toolbar_plus_upgrade);

var _toolbar_menu = __webpack_require__(366);

var _toolbar_menu2 = _interopRequireDefault(_toolbar_menu);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var TopToolbar = function (_Component) {
    _inherits(TopToolbar, _Component);

    function TopToolbar(props) {
        _classCallCheck(this, TopToolbar);

        var _this = _possibleConstructorReturn(this, (TopToolbar.__proto__ || Object.getPrototypeOf(TopToolbar)).call(this, props));

        _this.state = {
            alert: null
        };
        return _this;
    }

    _createClass(TopToolbar, [{
        key: 'updateAlert',
        value: function updateAlert(alert) {
            this.setState({ alert: alert });
        }

        //Refresh this after 500ms to make sure that all of the toolbar extensions have been added

    }, {
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _this2 = this;

            setTimeout(function () {
                _this2.forceUpdate();
            }, 500);
        }
    }, {
        key: 'getToolbarItems',
        value: function getToolbarItems() {
            return [{
                name: 'cancel',
                position: 0,
                component: _toolbar_cancel2.default
            }, {
                name: 'save',
                position: 20,
                component: _toolbar_save2.default
            }, {
                name: 'history',
                position: 30,
                component: _toolbar_history2.default
            }, {
                name: 'redo',
                position: 31,
                component: _toolbar_redo2.default
            }, {
                name: 'undo',
                position: 32,
                component: _toolbar_undo2.default
            },
            /*{
                 name: 'log',
                 position: 30,
                 component: ToolbarLog
            },*/
            /*{
                 name: 'reset',
                 position: 30,
                 component: ToolbarReset
             },*/
            {
                name: 'new',
                position: 80,
                component: _toolbar_new2.default
            }, {
                name: 'site',
                position: 70,
                component: _toolbar_site2.default
            }, {
                name: 'plus_upgrade',
                position: 60,
                component: _toolbar_plus_upgrade2.default,
                no_permission: 'has_subscription'
            }, {
                name: 'menu',
                position: 50,
                component: _toolbar_menu2.default,
                children: OffsproutFilter.apply('toolbarMenu', [])
            }];
        }
    }, {
        key: 'render',
        value: function render() {
            var _this3 = this;

            var toolbarObjects = OffsproutFilter.apply('toolbar', this.getToolbarItems());

            toolbarObjects.sort(function (a, b) {
                return a.position - b.position;
            });

            var toolbarItems = null;

            if (!this.props.siteDefault) {
                toolbarItems = toolbarObjects.map(function (item, index) {
                    if (_this3.props.workspaceState.settingsActive && item.name != 'history' && item.name != 'log') return null;
                    if (_this3.props.menuOpen && item.name != 'menu') return null;
                    if (item.permission != undefined && !OCBGlobalSettings.permissions[item.permission]) return null;
                    if (item.no_permission != undefined && OCBGlobalSettings.permissions[item.no_permission]) return null;
                    if (item.children != undefined && !item.children.length) return null;
                    var TheComponent = item.component;
                    return _react2.default.createElement(TheComponent, { key: index, updateAlert: _this3.updateAlert.bind(_this3), item: item });
                });
            }

            return _react2.default.createElement(
                'div',
                { id: 'ocb-top-toolbar', className: 'offsprout-font' },
                toolbarItems,
                this.state.alert
            );
        }
    }]);

    return TopToolbar;
}(_react.Component);

function mapStateToProps(state) {
    return {
        workspaceState: state.workspaceState,
        siteDefault: state.siteState.defaultUsed,
        menuOpen: state.menuState.open,
        menu: state.menuState
    };
}
exports.default = (0, _reactRedux.connect)(mapStateToProps, null)(TopToolbar);

/***/ }),

/***/ 850:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _module_text = __webpack_require__(892);

var _module_text2 = _interopRequireDefault(_module_text);

var _module_image = __webpack_require__(881);

var _module_image2 = _interopRequireDefault(_module_image);

var _module_quote = __webpack_require__(886);

var _module_quote2 = _interopRequireDefault(_module_quote);

var _module_tabs = __webpack_require__(890);

var _module_tabs2 = _interopRequireDefault(_module_tabs);

var _module_accordion = __webpack_require__(851);

var _module_accordion2 = _interopRequireDefault(_module_accordion);

var _module_button = __webpack_require__(852);

var _module_button2 = _interopRequireDefault(_module_button);

var _module_features = __webpack_require__(869);

var _module_features2 = _interopRequireDefault(_module_features);

var _module_gallery = __webpack_require__(870);

var _module_gallery2 = _interopRequireDefault(_module_gallery);

var _module_header = __webpack_require__(871);

var _module_header2 = _interopRequireDefault(_module_header);

var _module_icon = __webpack_require__(880);

var _module_icon2 = _interopRequireDefault(_module_icon);

var _module_list = __webpack_require__(882);

var _module_list2 = _interopRequireDefault(_module_list);

var _module_logo = __webpack_require__(883);

var _module_logo2 = _interopRequireDefault(_module_logo);

var _module_logo_group = __webpack_require__(884);

var _module_logo_group2 = _interopRequireDefault(_module_logo_group);

var _module_map = __webpack_require__(885);

var _module_map2 = _interopRequireDefault(_module_map);

var _module_separator = __webpack_require__(887);

var _module_separator2 = _interopRequireDefault(_module_separator);

var _module_side_by_side = __webpack_require__(889);

var _module_side_by_side2 = _interopRequireDefault(_module_side_by_side);

var _module_testimonials = __webpack_require__(891);

var _module_testimonials2 = _interopRequireDefault(_module_testimonials);

var _module_video = __webpack_require__(893);

var _module_video2 = _interopRequireDefault(_module_video);

var _module_embed = __webpack_require__(868);

var _module_embed2 = _interopRequireDefault(_module_embed);

var _module_shortcode = __webpack_require__(888);

var _module_shortcode2 = _interopRequireDefault(_module_shortcode);

var _module_wp_widget = __webpack_require__(894);

var _module_wp_widget2 = _interopRequireDefault(_module_wp_widget);

var _default_text = __webpack_require__(380);

var _default_text2 = _interopRequireDefault(_default_text);

var _default_image = __webpack_require__(857);

var _default_image2 = _interopRequireDefault(_default_image);

var _default_quote = __webpack_require__(861);

var _default_quote2 = _interopRequireDefault(_default_quote);

var _default_tabs = __webpack_require__(379);

var _default_tabs2 = _interopRequireDefault(_default_tabs);

var _default_accordion = __webpack_require__(375);

var _default_accordion2 = _interopRequireDefault(_default_accordion);

var _default_button = __webpack_require__(853);

var _default_button2 = _interopRequireDefault(_default_button);

var _default_features = __webpack_require__(376);

var _default_features2 = _interopRequireDefault(_default_features);

var _default_gallery = __webpack_require__(377);

var _default_gallery2 = _interopRequireDefault(_default_gallery);

var _default_header = __webpack_require__(855);

var _default_header2 = _interopRequireDefault(_default_header);

var _default_icon = __webpack_require__(856);

var _default_icon2 = _interopRequireDefault(_default_icon);

var _default_list = __webpack_require__(378);

var _default_list2 = _interopRequireDefault(_default_list);

var _default_logo = __webpack_require__(858);

var _default_logo2 = _interopRequireDefault(_default_logo);

var _default_logo_group = __webpack_require__(859);

var _default_logo_group2 = _interopRequireDefault(_default_logo_group);

var _default_map = __webpack_require__(860);

var _default_map2 = _interopRequireDefault(_default_map);

var _default_separator = __webpack_require__(862);

var _default_separator2 = _interopRequireDefault(_default_separator);

var _default_side_by_side = __webpack_require__(864);

var _default_side_by_side2 = _interopRequireDefault(_default_side_by_side);

var _default_testimonials = __webpack_require__(865);

var _default_testimonials2 = _interopRequireDefault(_default_testimonials);

var _default_video = __webpack_require__(866);

var _default_video2 = _interopRequireDefault(_default_video);

var _default_embed = __webpack_require__(854);

var _default_embed2 = _interopRequireDefault(_default_embed);

var _default_shortcode = __webpack_require__(863);

var _default_shortcode2 = _interopRequireDefault(_default_shortcode);

var _default_wp_widget = __webpack_require__(867);

var _default_wp_widget2 = _interopRequireDefault(_default_wp_widget);

var _image_helpers = __webpack_require__(381);

var _image_helpers2 = _interopRequireDefault(_image_helpers);

var _icon_helpers = __webpack_require__(876);

var _icon_helpers2 = _interopRequireDefault(_icon_helpers);

var _header_helpers = __webpack_require__(875);

var _header_helpers2 = _interopRequireDefault(_header_helpers);

var _button_helpers = __webpack_require__(873);

var _button_helpers2 = _interopRequireDefault(_button_helpers);

var _list_helpers = __webpack_require__(877);

var _list_helpers2 = _interopRequireDefault(_list_helpers);

var _features_helpers = __webpack_require__(874);

var _features_helpers2 = _interopRequireDefault(_features_helpers);

var _separator_helpers = __webpack_require__(879);

var _separator_helpers2 = _interopRequireDefault(_separator_helpers);

var _quote_helpers = __webpack_require__(878);

var _quote_helpers2 = _interopRequireDefault(_quote_helpers);

var _accordion_helpers = __webpack_require__(872);

var _accordion_helpers2 = _interopRequireDefault(_accordion_helpers);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//Import all module defaults
window.OffsproutModuleRegistry = [{
    name: 'text',
    type: 'text',
    skin: true,
    component: _module_text2.default,
    default: (0, _default_text2.default)(),
    icon: '<svg version="1.1" baseProfile="basic"\n               xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="32px" height="32px"\n               viewBox="0 0 64 64" xml:space="preserve">\n              <path transform="matrix(0.064,0,0,0.064,4,0)" stroke="none" style="fill:#ffffff" d="M 788 0 L 61 0 L 0 162 L 35 175 L 87 37 L 762 37 L 814 175 L 850 162 z M 443 75 L 406 75 L 406 880 L 271 968 L 292 1000 L 425 912 L 557 1000 L 578 968 L 443 880 z"/>\n            </svg>',
    controlsPosition: 'top'
}, {
    name: 'heading',
    type: 'header',
    skin: true,
    component: _module_header2.default,
    default: (0, _default_header2.default)(),
    helpers: _header_helpers2.default,
    icon: '<svg version="1.1" baseProfile="basic"\n           xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="32px" height="32px"\n           viewBox="0 0 32 32" xml:space="preserve">\n          <path transform="matrix(0.032,0,0,0.032,4,0)" stroke="none" style="fill:#ffffff" d="M 750 0 L 750 227 L 727 227 C 714 174 700 137 684 114 C 668 91 646 73 618 59 C 602 52 575 48 536 48 L 474 48 L 474 856 C 474 899 476 926 481 936 C 485 947 495 956 508 964 C 522 973 541 977 565 977 L 592 977 L 592 1000 L 155 1000 L 155 977 L 183 977 C 207 977 227 972 241 964 C 252 958 261 948 267 934 C 271 924 274 898 274 856 L 274 48 L 213 48 C 157 48 116 60 91 84 C 55 117 32 165 23 227 L 0 227 L 0 0 L 750 0 z"/>\n        </svg>',
    controlsPosition: 'top'
}, {
    name: 'image',
    type: 'image',
    skin: true,
    component: _module_image2.default,
    default: (0, _default_image2.default)(),
    helpers: _image_helpers2.default,
    icon: '<svg version="1.1" baseProfile="basic"\n               xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="32px" height="32px"\n               viewBox="0 0 64 64" xml:space="preserve">\n              <path transform="matrix(0.064,0,0,0.064,0,5)" stroke="none" style="fill:#FFFFFF" d="M 0 0 L 0 816 L 1000 816 L 1000 0 L 0 0 z M 959 775 L 40 775 L 40 40 L 959 40 L 959 775 z M 598 340 C 653 340 698 295 698 239 C 698 183 653 138 598 138 C 543 138 498 183 498 239 C 498 295 543 340 598 340 z M 598 179 C 631 179 658 206 658 239 C 658 272 631 299 598 299 C 565 299 539 272 539 239 C 539 206 565 179 598 179 z M 175 637 L 824 637 C 824 637 825 637 825 637 C 836 637 845 627 845 616 C 845 610 843 605 839 602 L 679 365 C 675 360 668 357 662 356 C 655 357 648 360 645 366 L 576 477 L 418 214 C 414 208 407 205 401 205 C 394 205 387 209 383 215 L 157 606 C 154 612 154 620 157 626 C 161 633 167 637 175 637 z M 401 265 L 559 527 C 562 533 569 536 576 536 C 576 536 576 536 576 536 C 583 536 589 533 593 527 L 663 414 L 786 596 L 210 596 L 401 265 z"/>\n            </svg>'
}, {
    name: 'button',
    type: 'button',
    skin: true,
    component: _module_button2.default,
    default: (0, _default_button2.default)(),
    helpers: _button_helpers2.default,
    icon: '<svg version="1.1" baseProfile="basic"\n           xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="32px" height="32px"\n           viewBox="0 0 32 32" xml:space="preserve">\n          <path transform="matrix(0.032,0,0,0.032,5,0)" stroke="none" style="fill:#FFFFFF" d="M 634 411 C 594 399 498 507 468 583 L 468 417 L 468 403 L 468 55 C 468 24 444 0 413 0 C 382 0 357 24 357 55 L 357 403 L 349 403 L 349 357 C 349 326 324 301 293 301 C 262 301 238 326 238 357 L 238 403 L 230 403 L 230 375 C 230 345 205 320 175 320 C 144 320 119 344 119 375 L 119 414 L 112 414 L 112 408 C 112 381 89 359 62 359 C 35 359 12 381 12 408 L 12 514 C 12 517 0 627 0 687 C 0 886 114 950 114 1000 L 442 1000 C 442 1000 569 911 569 805 C 569 699 601 607 634 533 C 668 459 675 424 634 411 z"/>\n        </svg>',
    controlsPosition: 'top'
}, {
    name: 'quote',
    type: 'quote',
    skin: true,
    component: _module_quote2.default,
    default: (0, _default_quote2.default)(),
    helpers: _quote_helpers2.default,
    icon: '<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" x="0px" y="0px" viewBox="17 -18 100 125" xml:space="preserve" width="32px" height="32px">\n            <path stroke="none" style="fill:#FFFFFF" d="M93.2-3.9C106-3.9,117,4.9,117,23.9c0,26.7-21.8,42.4-34.2,44l-2.6-7.4c7.2-4.7,13.1-12.8,12.5-17.5  c-8.1-0.6-21.2-4.9-21.2-22.5C71.4,7.2,78.9-3.9,93.2-3.9z M38.9-3.9c12.8,0,23.8,8.8,23.8,27.8c0,26.7-21.8,42.4-34.2,44l-2.6-7.4  C33,55.8,38.9,47.8,38.2,43C30.2,42.4,17,38.1,17,20.5C17,7.2,24.6-3.9,38.9-3.9z"/>\n        </svg>',
    controlsPosition: 'top'
}, {
    name: 'list',
    type: 'list',
    skin: true,
    component: _module_list2.default,
    default: (0, _default_list2.default)(),
    helpers: _list_helpers2.default,
    icon: '<svg version="1.1" baseProfile="basic"\n           xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="32px" height="32px"\n           viewBox="0 0 32 32" xml:space="preserve">\n          <path transform="matrix(0.032,0,0,0.032,0,4)" stroke="none" style="fill:#FFFFFF" d="M 237 41 L 1000 41 L 1000 80 L 237 80 L 237 41 M 237 338 L 1000 338 L 1000 378 L 237 378 L 237 338 M 237 636 L 1000 636 L 1000 675 L 237 675 L 237 636 M 82 39 L 82 82 L 39 82 L 39 39 L 82 39 M 122 0 L 0 0 L 0 121 L 122 121 L 122 0 L 122 0 z M 82 336 L 82 379 L 39 379 L 39 336 L 82 336 M 122 297 L 0 297 L 0 419 L 122 419 L 122 297 L 122 297 z M 82 634 L 82 677 L 39 677 L 39 634 L 82 634 M 122 595 L 0 595 L 0 716 L 122 716 L 122 595 L 122 595 z"/>\n        </svg>',
    controlsPosition: 'top'
}, {
    name: 'tabs',
    type: 'tabs',
    component: _module_tabs2.default,
    default: (0, _default_tabs2.default)(),
    icon: '<svg version="1.1" baseProfile="basic"\n               xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="32px" height="32px"\n               viewBox="0 0 64 64" xml:space="preserve">\n              <path transform="matrix(0.064,0,0,0.064,0,2)" stroke="none" style="fill:#FFFFFF" d="M 980 119 L 19 119 C 8 119 0 128 0 139 L 0 900 C 0 911 8 920 19 920 L 980 920 C 991 920 1000 911 1000 900 L 1000 139 C 1000 128 991 119 980 119 z M 960 880 L 39 880 L 39 159 L 960 159 L 960 880 z M 60 80 L 74 39 L 567 39 L 594 80 L 642 80 L 595 8 C 591 3 585 0 578 0 L 59 0 C 51 0 43 5 40 13 L 18 80 C 19 80 19 80 19 80 L 60 80 z"/>\n            </svg>',
    controlsPosition: 'top',
    containsItems: 1 //indicates that this module type can have other items, which affects how it "reports" in the module moving UI
}, {
    name: 'accordion',
    type: 'accordion',
    skin: true,
    component: _module_accordion2.default,
    default: (0, _default_accordion2.default)(),
    helpers: _accordion_helpers2.default,
    icon: '<svg version="1.1" baseProfile="basic"\n           xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="32px" height="32px"\n           viewBox="0 0 32 32" xml:space="preserve">\n          <path transform="matrix(0.032,0,0,0.032,0,0)" stroke="none" style="fill:#FFFFFF" d="M 1000 1000 L 0 1000 L 0 0 L 1000 0 L 1000 1000 z M 36 963 L 963 963 L 963 36 L 36 36 L 36 963 z M 892 107 L 107 107 L 107 243 L 892 243 L 892 107 z M 892 323 L 107 323 L 107 459 L 892 459 L 892 323 z M 892 323 L 107 323 L 107 459 L 892 459 L 892 323 z M 868 564 L 868 652 L 131 652 L 131 564 L 868 564 M 892 540 L 107 540 L 107 676 L 892 676 L 892 540 L 892 540 z M 892 756 L 107 756 L 107 892 L 892 892 L 892 756 z"/>\n        </svg>',
    controlsPosition: 'top',
    containsItems: 1 //indicates that this module type can have other items, which affects how it "reports" in the module moving UI
}, {
    name: 'features',
    type: 'features',
    skin: true,
    component: _module_features2.default,
    default: (0, _default_features2.default)(),
    helpers: _features_helpers2.default,
    icon: '<svg version="1.1" baseProfile="basic"\n           xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="32px" height="32px"\n           viewBox="0 0 32 32" xml:space="preserve">\n          <path transform="matrix(0.032,0,0,0.032,0,5)" stroke="none" style="fill:#FFFFFF" d="M 0 0 L 0 650 L 418 650 L 581 650 L 1000 650 L 1000 0 L 0 0 z M 316 509 C 214 509 131 426 131 325 C 131 223 214 140 316 140 C 419 140 502 223 502 325 C 502 426 419 509 316 509 z M 868 509 L 589 509 L 589 471 L 868 471 L 868 509 z M 868 398 L 589 398 L 589 361 L 868 361 L 868 398 z M 868 288 L 589 288 L 589 251 L 868 251 L 868 288 z M 868 178 L 589 178 L 589 140 L 868 140 L 868 178 z"/>\n        </svg>'
}, {
    name: 'gallery',
    type: 'gallery',
    component: _module_gallery2.default,
    default: (0, _default_gallery2.default)(),
    icon: '<svg version="1.1" baseProfile="basic"\n           xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="32px" height="32px"\n           viewBox="0 0 32 32" xml:space="preserve">\n           <path transform="matrix(0.032,0,0,0.032,0,0)" stroke="none" style="fill:#FFFFFF" d="M 0 962 L 1000 962 L 1000 1000 L 0 1000 L 0 962 M 0 441 L 415 441 L 415 723 L 0 723 L 0 441 M 402 0 L 1000 0 L 1000 300 L 402 300 L 402 0 M 500 368 L 1000 368 L 1000 650 L 500 650 L 500 368 M 0 0 L 321 0 L 321 372 L 0 372 L 0 0"/>\n        </svg>',
    controlsPosition: 'top'
}, {
    name: 'icon',
    type: 'icon',
    skin: true,
    component: _module_icon2.default,
    default: (0, _default_icon2.default)(),
    helpers: _icon_helpers2.default,
    icon: '<svg version="1.1" baseProfile="basic"\n           xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="32px" height="32px"\n           viewBox="0 0 32 32" xml:space="preserve">\n          <path transform="matrix(0.032,0,0,0.032,0,0)" stroke="none" style="fill:#ffffff" d="M 500 0 L 654 312 L 1000 362 L 750 606 L 809 950 L 500 787 L 190 950 L 250 606 L 0 362 L 345 312"/>\n        </svg>'
}, {
    name: 'logo',
    type: 'logo',
    component: _module_logo2.default,
    default: (0, _default_logo2.default)(),
    icon: '<svg version="1.1" baseProfile="basic"\n           xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="32px" height="32px"\n           viewBox="0 0 32 32" xml:space="preserve">\n          <path transform="matrix(0.032,0,0,0.032,0,0)" stroke="none" style="fill:#FFFFFF" d="M 817 0 L 566 0 L 525 0 L 474 0 L 433 0 L 182 0 L 0 267 L 263 626 L 470 909 L 470 909 L 500 950 L 1000 267 L 817 0 z M 443 811 L 301 286 L 58 286 L 44 267 L 56 249 L 303 249 L 414 36 L 455 36 L 344 249 L 655 249 L 544 36 L 585 36 L 696 249 L 943 249 L 955 267 L 941 286 L 698 286 L 556 811 L 500 888 L 443 811 z M 661 286 L 338 286 L 500 880 z"/>\n        </svg>',
    tier: 2
}, {
    name: 'logo group',
    type: 'logo_group',
    component: _module_logo_group2.default,
    default: (0, _default_logo_group2.default)(),
    icon: '<svg version="1.1" baseProfile="basic"\n           xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="32px" height="32px"\n           viewBox="0 0 32 32" xml:space="preserve">\n          <path transform="matrix(0.032,0,0,0.032,0,0)" stroke="none" style="fill:#FFFFFF" d="M 993 1000 L 356 1000 L 356 356 L 993 356 z M 337 356 L 337 337 L 356 337 L 818 337 L 818 181 L 181 181 L 181 824 L 337 824 z M 162 181 L 162 162 L 181 162 L 637 162 L 637 0 L 0 0 L 0 643 L 162 643 z"/>\n        </svg>'
}, {
    name: 'map',
    type: 'map',
    component: _module_map2.default,
    default: (0, _default_map2.default)(),
    icon: '<svg version="1.1" baseProfile="basic"\n           xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="32px" height="32px"\n           viewBox="0 0 32 32" xml:space="preserve">\n          <path transform="matrix(0.032,0,0,0.032,5,0)" stroke="none" style="fill:#FFFFFF" d="M 683 341 C 683 153 530 0 342 0 C 153 0 0 153 0 341 C 0 361 2 381 5 399 L 4 399 C 4 399 20 586 342 1000 C 663 586 679 399 679 399 L 678 399 C 681 380 683 361 683 341 z M 342 509 C 251 509 177 435 177 344 C 177 254 251 180 342 180 C 432 180 506 254 506 344 C 506 435 432 509 342 509 z"/>\n        </svg>'
}, {
    name: 'separator',
    type: 'separator',
    skin: true,
    component: _module_separator2.default,
    default: (0, _default_separator2.default)(),
    helpers: _separator_helpers2.default,
    icon: '<svg version="1.1" baseProfile="basic"\n           xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="32px" height="32px"\n           viewBox="0 0 32 32" xml:space="preserve">\n          <path transform="matrix(0.032,0,0,0.032,4,0)" stroke="none" style="fill:#FFFFFF" d="M 368 0 C 373 0 377 2 379 5 L 537 235 C 538 237 539 240 539 242 C 539 244 538 246 537 248 C 535 253 531 255 526 255 L 439 255 L 439 412 C 439 419 433 425 426 425 L 310 425 C 303 425 297 419 297 412 L 297 255 L 211 255 C 206 255 201 253 199 248 C 198 246 198 244 198 242 C 198 240 198 237 200 235 L 357 5 C 360 2 364 0 368 0 z M 357 994 L 200 764 C 198 762 198 759 198 757 C 198 755 198 753 199 751 C 201 746 206 744 211 744 L 297 744 L 297 587 C 297 580 303 574 310 574 L 426 574 C 433 574 439 580 439 587 L 439 744 L 526 744 C 531 744 535 746 537 751 C 538 753 539 755 539 757 C 539 759 538 762 537 764 L 379 994 C 377 997 373 1000 368 1000 C 364 1000 360 997 357 994 z M 737 482 L 737 517 L 688 517 L 688 482 L 737 482 z M 639 482 L 639 517 L 590 517 L 590 482 L 639 482 z M 540 482 L 540 517 L 491 517 L 491 482 L 540 482 z M 442 482 L 442 517 L 393 517 L 393 482 L 442 482 z M 344 482 L 344 517 L 295 517 L 295 482 L 344 482 z M 245 482 L 245 517 L 196 517 L 196 482 L 245 482 z M 147 482 L 147 517 L 98 517 L 98 482 L 147 482 z M 49 482 L 49 517 L 0 517 L 0 482 L 49 482 z"/>\n        </svg>'
}, {
    name: 'side by side',
    type: 'side_by_side',
    component: _module_side_by_side2.default,
    default: (0, _default_side_by_side2.default)(),
    icon: '<svg version="1.1" baseProfile="basic"\n           xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="32px" height="32px"\n           viewBox="0 0 32 32" xml:space="preserve">\n          <path transform="matrix(0.032,0,0,0.032,0,0)" stroke="none" style="fill:#ffffff" d="M 109 995 L 890 995 C 950 995 1000 945 1000 885 L 1000 109 C 1000 49 950 0 890 0 L 109 0 C 49 0 0 49 0 109 L 0 885 C 0 945 49 995 109 995 z M 926 109 L 926 885 C 926 905 910 922 890 922 L 528 922 L 528 73 L 890 73 C 910 73 926 89 926 109 z M 73 109 C 73 89 89 73 109 73 L 454 73 L 454 922 L 109 922 C 89 922 73 905 73 885 L 73 109 z"/>\n        </svg>'
}, {
    name: 'testimonials',
    type: 'testimonials',
    component: _module_testimonials2.default,
    default: (0, _default_testimonials2.default)(),
    icon: '<svg version="1.1" baseProfile="basic"\n           xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="32px" height="32px"\n           viewBox="0 0 32 32" xml:space="preserve">\n          <path transform="matrix(0.032,0,0,0.032,1,0)" stroke="none" style="fill:#ffffff" d="M 420 751 C 419 751 402 746 392 725 C 435 692 461 631 461 566 C 461 464 398 381 321 381 C 243 381 180 464 180 566 C 180 631 207 692 249 725 C 239 746 222 751 220 751 C 0 815 12 981 12 983 L 13 1000 L 628 1000 L 629 983 C 630 981 642 815 420 751 z M 48 964 C 52 925 77 830 229 786 C 231 786 275 776 288 722 L 291 710 L 280 703 C 241 679 216 625 216 566 C 216 484 263 417 321 417 C 379 417 426 484 426 566 C 426 625 400 679 362 703 L 350 710 L 354 722 C 367 776 411 786 411 786 C 565 830 590 925 593 963 L 48 963 z M 409 0 L 409 397 L 559 397 L 559 486 L 668 397 L 921 397 L 921 0 L 409 0 z M 885 361 L 668 361 L 655 361 L 645 370 L 595 410 L 595 397 L 595 361 L 559 361 L 445 361 L 445 36 L 885 36 L 885 361 z M 558 233 C 577 233 593 217 593 198 C 593 178 578 163 558 163 C 539 163 523 178 523 198 C 523 217 539 233 558 233 z M 700 198 C 700 217 685 233 665 233 C 646 233 630 217 630 198 C 630 178 646 163 665 163 C 685 163 700 178 700 198 M 807 198 C 807 217 792 233 772 233 C 753 233 737 217 737 198 C 737 178 753 163 772 163 C 792 163 807 178 807 198"/>\n        </svg>'
}, {
    name: 'video',
    type: 'video',
    component: _module_video2.default,
    default: (0, _default_video2.default)(),
    icon: '<svg version="1.1" baseProfile="basic"\n           xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="32px" height="32px"\n           viewBox="0 0 32 32" xml:space="preserve">\n          <path transform="matrix(0.032,0,0,0.032,0,5)" stroke="none" style="fill:#FFFFFF" d="M 650 261 L 650 165 C 650 155 642 147 632 147 L 555 147 L 447 0 L 101 0 L 101 147 L 18 147 C 8 147 0 155 0 165 L 0 640 C 0 650 8 659 18 659 L 632 659 C 642 659 650 650 650 640 L 650 544 L 1000 666 L 1000 139 L 650 261 z M 137 36 L 429 36 L 509 147 L 137 147 L 137 36 z M 614 622 L 36 622 L 36 184 L 614 184 L 614 622 z M 963 614 L 650 505 L 650 300 L 963 191 L 963 614 z"/>\n        </svg>'
}, {
    name: 'embed',
    type: 'embed',
    component: _module_embed2.default,
    default: (0, _default_embed2.default)(),
    icon: '<svg version="1.1" baseProfile="basic"\n           xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="32px" height="32px"\n           viewBox="0 0 32 32" xml:space="preserve">\n          <path transform="matrix(0.032,0,0,0.032,4,0)" stroke="none" style="fill:#ffffff" d="M 716 282 C 716 276 713 270 709 267 L 449 5 C 445 1 441 0 436 0 L 436 0 L 0 0 L 0 1000 L 716 1000 L 716 284 L 716 284 C 716 283 716 283 716 282 z M 454 61 L 654 264 L 454 264 L 454 61 z M 35 963 L 35 36 L 418 36 L 418 282 C 418 292 426 300 436 300 L 680 300 L 680 963 L 35 963 z M 455 602 L 548 654 L 455 707 L 473 739 L 622 654 L 473 570 z M 243 570 L 93 654 L 243 739 L 260 707 L 167 654 L 260 602 z M 302 803 L 337 812 L 414 506 L 379 497 z"/>\n        </svg>'
}, {
    name: 'shortcode',
    type: 'shortcode',
    component: _module_shortcode2.default,
    default: (0, _default_shortcode2.default)(),
    icon: '<svg version="1.1" baseProfile="basic"\n           xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="32px" height="32px"\n           viewBox="0 0 32 32" xml:space="preserve">\n          <path transform="matrix(0.032,0,0,0.032,4,0)" stroke="none" style="fill:#ffffff" d="M 716 282 C 716 276 713 270 709 267 L 449 5 C 445 1 441 0 436 0 L 436 0 L 0 0 L 0 1000 L 716 1000 L 716 284 L 716 284 C 716 283 716 283 716 282 z M 454 61 L 654 264 L 454 264 L 454 61 z M 35 963 L 35 36 L 418 36 L 418 282 C 418 292 426 300 436 300 L 680 300 L 680 963 L 35 963 z M 455 602 L 548 654 L 455 707 L 473 739 L 622 654 L 473 570 z M 243 570 L 93 654 L 243 739 L 260 707 L 167 654 L 260 602 z M 302 803 L 337 812 L 414 506 L 379 497 z"/>\n        </svg>'
}, {
    name: 'wp widget',
    type: 'wp_widget',
    component: _module_wp_widget2.default,
    default: (0, _default_wp_widget2.default)(),
    icon: '<svg xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns="http://www.w3.org/2000/svg" fill-rule="evenodd" xml:space="preserve" height="32" width="32" version="1.0" viewBox="0 0 5.5555557 5.5555555">\n            <g transform="matrix(1.0755 0 0 1.0755 -3.5103 -1.6684)">\n                <path fill="#fff" d="m5.8465 1.9131c0.57932 0 1.1068 0.222 1.5022 0.58547-0.1938-0.0052-0.3872 0.11-0.3952 0.3738-0.0163 0.5333 0.6377 0.6469 0.2853 1.7196l-0.2915 0.8873-0.7939-2.3386c-0.0123-0.0362 0.002-0.0568 0.0465-0.0568h0.22445c0.011665 0 0.021201-0.00996 0.021201-0.022158v-0.13294c0-0.012193-0.00956-0.022657-0.021201-0.022153-0.42505 0.018587-0.8476 0.018713-1.2676 0-0.0117-0.0005-0.0212 0.01-0.0212 0.0222v0.13294c0 0.012185 0.00954 0.022158 0.021201 0.022158h0.22568c0.050201 0 0.064256 0.016728 0.076091 0.049087l0.3262 0.8921-0.4907 1.4817-0.8066-2.3758c-0.01-0.0298 0.0021-0.0471 0.0308-0.0471h0.25715c0.011661 0 0.021197-0.00996 0.021197-0.022158v-0.13294c0-0.012193-0.00957-0.022764-0.021197-0.022153-0.2698 0.014331-0.54063 0.017213-0.79291 0.019803 0.39589-0.60984 1.0828-1.0134 1.8639-1.0134l-0.0000029-0.0000062zm1.9532 1.1633c0.17065 0.31441 0.26755 0.67464 0.26755 1.0574 0 0.84005-0.46675 1.5712-1.1549 1.9486l0.6926-1.9617c0.1073-0.3036 0.2069-0.7139 0.1947-1.0443h-0.000004zm-1.2097 3.1504c-0.2325 0.0827-0.4827 0.1278-0.7435 0.1278-0.2247 0-0.4415-0.0335-0.6459-0.0955l0.68415-1.9606 0.70524 1.9284v-1e-7zm-1.6938-0.0854c-0.75101-0.35617-1.2705-1.1213-1.2705-2.0075 0-0.32852 0.071465-0.64038 0.19955-0.92096l1.071 2.9285 0.000003-0.000003zm0.95023-4.4367c1.3413 0 2.4291 1.0878 2.4291 2.4291s-1.0878 2.4291-2.4291 2.4291-2.4291-1.0878-2.4291-2.4291 1.0878-2.4291 2.4291-2.4291zm0-0.15354c1.4261 0 2.5827 1.1566 2.5827 2.5827s-1.1566 2.5827-2.5827 2.5827-2.5827-1.1566-2.5827-2.5827 1.1566-2.5827 2.5827-2.5827z"/>\n            </g>\n        </svg>'
}];

//Seems like this can still be reached via window.OffsproutModuleRegistry even via modules that are loaded in the iFrame
//You'd think that you'd have to use parent.OffsproutModuleRegistry, but that seems to screw up the tinyMCE
/*
if( window.OffsproutModuleRegistry == undefined ){
    window.OffsproutModuleRegistry = window.OffsproutModuleRegistry = OffsproutModuleRegistryArray;
} else {
    window.OffsproutModuleRegistry = window.OffsproutModuleRegistry.concat(OffsproutModuleRegistryArray);
}*/


//Import all module helpers
//Import all modules

/***/ }),

/***/ 851:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _default_accordion = __webpack_require__(375);

var _default_accordion2 = _interopRequireDefault(_default_accordion);

var _settings_helpers = __webpack_require__(2);

var _settings_helpers2 = _interopRequireDefault(_settings_helpers);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ModuleAccordion = function (_Component) {
    _inherits(ModuleAccordion, _Component);

    function ModuleAccordion() {
        _classCallCheck(this, ModuleAccordion);

        return _possibleConstructorReturn(this, (ModuleAccordion.__proto__ || Object.getPrototypeOf(ModuleAccordion)).apply(this, arguments));
    }

    _createClass(ModuleAccordion, [{
        key: 'render',


        /******************* RENDER ****************/

        value: function render() {
            var _this2 = this;

            var fullProps = this.props.settings;

            if (fullProps.linked.items == undefined || fullProps.linked.items.items == undefined) {
                return _react2.default.createElement(
                    'p',
                    null,
                    'Add accordion items'
                );
            }

            var items = fullProps.linked.items.items.map(function (item, index) {
                var itemId = 'accordion-' + _this2.props.object.id + '-' + index;
                var title = item.title == undefined || item.title.text == undefined ? 'Accordion Item Title' : item.title.text;
                var body = item.body == undefined || item.body.text == undefined ? '<p>This is the text of the accordion item</p>' : item.body.text;

                title = _react2.default.createElement(fullProps.linked.title_element.choice, null, _react2.default.createElement(
                    'span',
                    { className: 'ocb-accordion-nav-title' },
                    _react2.default.createElement(
                        'span',
                        null,
                        title
                    ),
                    _react2.default.createElement('i', { className: 'ocb-accordion-open fa ' + _this2.props.classesCSS.classes.accordionIconOpen }),
                    _react2.default.createElement('i', { className: 'ocb-accordion-close fa ' + _this2.props.classesCSS.classes.accordionIconClose })
                ));

                return _react2.default.createElement(
                    'div',
                    { key: index, className: 'ocb-accordion-item' },
                    _react2.default.createElement(
                        'div',
                        { className: 'ocb-accordion-nav-item ' + _this2.props.classesCSS.classes.accordionTitle, 'data-target': '#' + itemId },
                        title
                    ),
                    _react2.default.createElement('div', { id: itemId, className: 'ocb-accordion-content-item ' + _this2.props.classesCSS.classes.accordionBody, dangerouslySetInnerHTML: { __html: body } })
                );
            });

            return _react2.default.createElement(
                'div',
                { 'data-ocb-type': 'accordion', className: 'ocb-module-accordion' },
                this.props.classesCSS.css,
                items
            );
        }
    }]);

    return ModuleAccordion;
}(_react.Component);

exports.default = ModuleAccordion;

/***/ }),

/***/ 852:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _item_button = __webpack_require__(48);

var _item_button2 = _interopRequireDefault(_item_button);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ModuleButton = function (_Component) {
    _inherits(ModuleButton, _Component);

    function ModuleButton() {
        _classCallCheck(this, ModuleButton);

        return _possibleConstructorReturn(this, (ModuleButton.__proto__ || Object.getPrototypeOf(ModuleButton)).apply(this, arguments));
    }

    _createClass(ModuleButton, [{
        key: 'updateText',
        value: function updateText(text) {
            var update = Object.assign(this.props.object.settings);
            update.linked.text.text = text;

            //If settings aren't linked, then update all of the devices because this is a shared setting
            if (this.props.object.deviceLock != undefined && this.props.object.deviceLock == false) {
                update.laptop.text.text = text;
                update.tablet.text.text = text;
                update.phone.text.text = text;
            }
            this.props.treeProps.settings.updateObjectSettings(this.props.object, update);
        }

        /******************* RENDER ****************/

    }, {
        key: 'render',
        value: function render() {
            return _react2.default.createElement(
                'div',
                { className: 'ocb-module-button' },
                this.props.classesCSS.css,
                _react2.default.createElement(_item_button2.default, {
                    settings: this.props.settings.linked,
                    object: this.props.object,
                    objectId: this.props.object.id,
                    update: this.updateText.bind(this),
                    classesCSS: this.props.classesCSS,
                    isContentEditable: !this.props.treeProps.settings.settingsActive,
                    treeProps: this.props.treeProps })
            );
        }
    }]);

    return ModuleButton;
}(_react.Component);

exports.default = ModuleButton;

/***/ }),

/***/ 853:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

exports.default = function () {
    return {
        fields: [
        /*{
            id: 'configuration_group',
            title: 'Button Configuration',
            description: 'Control the text and the link of the button',
            wrap: 'field_group',
            settingType: 'content',
            items: ['text', 'link']
        },*/
        {
            id: 'text',
            title: 'Text',
            wrap: 'field_wrap',
            settingType: 'content',
            type: 'text'
        }, {
            id: 'link',
            title: 'Destination',
            wrap: 'field_wrap',
            type: 'link',
            settingType: 'content',
            configuration: {
                exclude: ['attachment'],
                newWindow: true
            }
        },
        /*{
         id: 'alignment_group',
         title: 'Button Alignment',
         description: 'Control the alignment of the button',
         wrap: 'field_group',
         settingType: 'content',
         items: ['alignment', 'mobile_alignment']
         },*/
        {
            id: 'alignment_heading',
            title: 'Alignment',
            wrap: 'field_wrap',
            type: 'heading',
            inline: true,
            settingType: 'content'
        }, {
            id: 'alignment',
            title: 'fa-laptop',
            description: 'How to position the button on large devices',
            wrap: 'field_wrap',
            settingType: 'content',
            inline: true,
            type: 'radio_toggle',
            options: [{
                name: 'fa-align-left',
                value: 'left'
            }, {
                name: 'fa-align-center',
                value: 'center'
            }, {
                name: 'fa-align-justify',
                value: 'stretch'
            }, {
                name: 'fa-align-right',
                value: 'right'
            }],
            configuration: {
                flex: true
            }
        }, {
            id: 'mobile_alignment',
            title: 'fa-mobile',
            description: 'How to position the button on mobile devices',
            wrap: 'field_wrap',
            settingType: 'content',
            inline: true,
            type: 'radio_toggle',
            options: [{
                name: 'fa-align-left',
                value: 'left'
            }, {
                name: 'fa-align-center',
                value: 'center'
            }, {
                name: 'fa-align-justify',
                value: 'stretch'
            }, {
                name: 'fa-align-right',
                value: 'right'
            }],
            configuration: {
                flex: true
            }
        },
        /*{
            id: 'icon_group',
            title: 'Button Icon',
            description: 'Add and configure a button icon',
            wrap: 'field_group',
            settingType: 'content',
            items: ['add_icon', 'icon', 'icon_alignment']
        },*/
        {
            id: 'icon_heading',
            title: 'Icon',
            wrap: 'field_wrap',
            type: 'heading',
            inline: true,
            settingType: 'content'
        }, {
            id: 'add_icon',
            title: 'Add',
            wrap: 'field_wrap',
            type: 'switch',
            inline: true,
            settingType: 'content'
        }, {
            id: 'icon',
            title: 'Icon',
            wrap: 'field_wrap',
            settingType: 'content',
            type: 'icon',
            inline: true,
            conditional: {
                conditions: [{
                    id: 'add_icon',
                    property: 'yes',
                    value: 1
                }]
            }
        }, {
            id: 'icon_alignment',
            title: 'Alignment',
            wrap: 'field_wrap',
            settingType: 'content',
            inline: true,
            type: 'radio_toggle',
            options: [{
                name: 'fa-align-left',
                value: 'left'
            }, {
                name: 'fa-align-right',
                value: 'right'
            }],
            configuration: {
                flex: true
            },
            conditional: {
                conditions: [{
                    id: 'add_icon',
                    property: 'yes',
                    value: 1
                }]
            }
        }, {
            id: 'button_mixin',
            wrap: 'field_mixin',
            mixin: 'button',
            settingType: 'design',
            prefix: '',
            conditional: {
                conditions: [{
                    id: 'skin',
                    property: 'choice',
                    value: 'custom'
                }]
            }
        }, {
            id: 'icon_design_group',
            title: 'Icon',
            description: 'Add and configure a button icon',
            wrap: 'field_group',
            settingType: 'design',
            items: ['icon_mixin'],
            conditional: {
                conditions: [{
                    id: 'add_icon',
                    property: 'yes',
                    value: 1
                }]
            }
        }, {
            id: 'icon_mixin',
            wrap: 'field_mixin',
            mixin: 'icon',
            prefix: 'icon_',
            group: 'icon_group'
        }, {
            id: 'skin',
            title: 'Button Skin',
            description: 'Use a site-wide button skin set in site settings or create a custom design for this button',
            wrap: 'field_wrap',
            type: 'skin_converter',
            settingType: 'content',
            options: [{
                name: 'Action',
                value: 'action'
            }, {
                name: 'Info',
                value: 'info'
            }, {
                name: 'Custom',
                value: 'custom'
            }],
            conditional: { //Remove this field if it's custom
                ifTrue: 'hide',
                conditions: [{
                    id: 'skin',
                    property: 'choice',
                    value: 'custom'
                }]
            },
            configuration: {
                moduleType: 'button',
                prefixes: {
                    action: 'action_button_',
                    info: 'info_button_'
                },
                id: 'skin',
                property: 'choice',
                value: 'custom'
            }
        }],
        default: {
            skin: {
                choice: 'custom'
            },
            text: {
                text: 'Click here'
            },
            link: {
                url: ''
            },
            alignment: {
                choice: 'center'
            },
            mobile_alignment: {
                choice: 'center'
            },
            add_icon: {
                yes: 0
            },
            icon: {
                icon: 'fa-chevron-right'
            },
            icon_alignment: {
                choice: 'right'
            },
            button_skin: {
                choice: 'action'
            },
            font_size: {
                value: 1,
                units: 'em',
                useDefault: 'default'
            },
            padding: {
                top: 15,
                right: 30,
                left: 30,
                bottom: 15,
                units: 'px',
                useDefault: 'default'
            },
            width: {
                value: 300,
                units: 'px',
                useDefault: 'default'
            }
        }
    };
};

;

/***/ }),

/***/ 854:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

exports.default = function () {
    var fields = {
        fields: [{
            id: 'warning',
            title: 'Warning',
            description: '',
            note: 'If your embed code contains javascript, you may have to save and refresh your page to see the result. Only use javascript embeds if you know what you are doing.',
            wrap: 'field_wrap',
            settingType: 'content',
            type: 'note'
        }, {
            id: 'embed',
            title: 'Embed Code',
            description: 'Enter the embed code here',
            wrap: 'field_wrap',
            type: 'text',
            settingType: 'content',
            configuration: {
                inputType: 'textarea'
            }
        }],
        default: {
            embed: {
                text: ''
            }
        }
    };

    //DevUtilities.logFieldDefaults( fields );

    return fields;
};

; //import DevUtilities from '../../../../shared/helpers/dev_utilities';

/***/ }),

/***/ 855:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

exports.default = function () {
    var fields = {
        fields: [{
            id: 'text',
            title: 'Heading',
            wrap: 'field_wrap',
            type: 'texteditor',
            settingType: 'content',
            configuration: {
                toolbar: 'ocbconnected ocbcolor bold italic strikethrough | removeformat code',
                editType: 'headingarea'
            }
        }, {
            id: 'alignment_heading',
            title: 'Alignment',
            wrap: 'field_wrap',
            type: 'heading',
            inline: true,
            settingType: 'content'
        }, {
            id: 'alignment',
            title: 'fa-laptop',
            description: 'How to align the content. If you align through the text editor, that will overwrite this option.',
            wrap: 'field_wrap',
            type: 'radio_toggle',
            inline: true,
            settingType: 'content',
            options: [{
                name: 'fa-align-left',
                value: 'left'
            }, {
                name: 'fa-align-center',
                value: 'center'
            }, {
                name: 'fa-align-right',
                value: 'right'
            }],
            configuration: {
                flex: true
            }
        }, {
            id: 'mobile_alignment',
            title: 'fa-mobile',
            description: 'How to align the content in mobile. If you align through the text editor, that will overwrite this option.',
            wrap: 'field_wrap',
            type: 'radio_toggle',
            inline: true,
            settingType: 'content',
            options: [{
                name: 'fa-align-left',
                value: 'left'
            }, {
                name: 'fa-align-center',
                value: 'center'
            }, {
                name: 'fa-align-right',
                value: 'right'
            }],
            configuration: {
                flex: true
            }
        }, {
            id: 'basic',
            title: 'Basic',
            wrap: 'field_wrap',
            type: 'heading',
            inline: true,
            settingType: 'content'
        }, {
            id: 'type',
            title: 'Type',
            description: 'The HTML tag type of the header',
            wrap: 'field_wrap',
            type: 'radio_toggle',
            inline: true,
            settingType: 'content',
            options: [{
                name: 'H1',
                value: 'h1'
            }, {
                name: 'H2',
                value: 'h2'
            }, {
                name: 'H3',
                value: 'h3'
            }, {
                name: 'H4',
                value: 'h4'
            }, {
                name: 'H5',
                value: 'h5'
            }, {
                name: 'H6',
                value: 'h6'
            }, {
                name: 'Span',
                value: 'span'
            }],
            configuration: {
                flex: true,
                flexWrap: true,
                flexBasis: 25
            }
        }, {
            id: 'target_name',
            title: 'Target Name',
            description: 'If you want buttons to be able to scroll to this header, add a target name',
            wrap: 'field_wrap',
            settingType: 'content',
            inline: true,
            type: 'text'
        }, {
            id: 'link',
            title: 'Link',
            description: 'The destination users are brought to when they click this heading',
            wrap: 'field_wrap',
            settingType: 'content',
            type: 'link'
        },
        /*{
            id: 'line_group',
            title: 'Header Line',
            description: 'Optionally add a line underneath the header',
            wrap: 'field_group',
            settingType: 'design',
            items: ['add_line', 'line_margin_top', 'line_style', 'line_width', 'line_thickness', 'line_color']
        },*/
        {
            id: 'add_line',
            title: 'Add Line',
            description: 'Adds a line underneath the header for stylistic effect',
            wrap: 'field_wrap',
            settingType: 'design',
            type: 'switch'
        }, {
            id: 'line_margin_top',
            title: 'Margin Between',
            description: 'Enter how much space you want between the header and the line',
            wrap: 'field_wrap',
            type: 'slider_control',
            settingType: 'design',
            configuration: [{ units: 'px', min: 0, max: 200, step: 1 }, { units: 'em', min: 0, max: 20, step: 0.2 }, { units: 'rem', min: 0, max: 20, step: 0.2 }],
            conditional: {
                conditions: [{
                    id: 'add_line',
                    property: 'yes',
                    value: 1
                }]
            }
        }, {
            id: 'line_style',
            title: 'Style',
            description: 'The style of the header line',
            wrap: 'field_wrap',
            type: 'radio_toggle',
            settingType: 'design',
            options: [{
                name: 'Line',
                value: 'solid'
            }, {
                name: 'Dashed',
                value: 'dashed'
            }, {
                name: 'Dotted',
                value: 'dotted'
            }, {
                name: 'Double',
                value: 'double'
            }],
            conditional: {
                conditions: [{
                    id: 'add_line',
                    property: 'yes',
                    value: 1
                }]
            }
        }, {
            id: 'line_width',
            title: 'Width',
            description: 'The width of the header line',
            wrap: 'field_wrap',
            type: 'slider_control',
            settingType: 'design',
            configuration: [{ units: '%', min: 1, max: 100, step: 1 }, { units: 'px', min: 10, max: 1000, step: 10 }],
            conditional: {
                conditions: [{
                    id: 'add_line',
                    property: 'yes',
                    value: 1
                }]
            }
        }, {
            id: 'line_thickness',
            title: 'Thickness',
            description: 'The thickness of the header line',
            wrap: 'field_wrap',
            type: 'slider_control',
            settingType: 'design',
            configuration: [{ units: 'px', min: 1, max: 20, step: 1 }],
            conditional: {
                conditions: [{
                    id: 'add_line',
                    property: 'yes',
                    value: 1
                }]
            }
        }, {
            id: 'line_color',
            title: 'Color',
            description: 'The color of the header line',
            wrap: 'field_wrap',
            type: 'color',
            settingType: 'design',
            conditional: {
                conditions: [{
                    id: 'add_line',
                    property: 'yes',
                    value: 1
                }]
            }
        }],
        default: {
            text: {
                text: 'The Heading'
            },
            alignment: {
                choice: 'left'
            },
            mobile_alignment: {
                choice: 'left'
            },
            type: {
                choice: 'h2'
            },
            link: {
                url: ''
            },
            target_name: {
                text: ''
            },
            add_line: {
                yes: 0
            },
            line_margin_top: {
                value: 1,
                units: 'em',
                useDefault: 'default'
            },
            line_style: {
                choice: 'solid'
            },
            line_width: {
                value: 100,
                units: '%',
                useDefault: 'default'
            },
            line_thickness: {
                value: 2,
                units: 'px',
                useDefault: 'default'
            },
            line_color: {
                color: 'default',
                customColor: 'rgba(0,0,0,1)'
            },
            line_align: {
                choice: 'left'
            },
            mobile_line_align: {
                choice: 'left'
            }
        }
    };

    //DevUtilities.logFieldDefaults( fields );

    return fields;
};

; //import DevUtilities from '../../../../shared/helpers/dev_utilities';

/***/ }),

/***/ 856:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

exports.default = function () {
    return {
        fields: [{
            id: 'icon',
            title: 'Icon',
            description: 'The icon for the button',
            wrap: 'field_wrap',
            settingType: 'content',
            type: 'icon'
        }, {
            id: 'alignment_heading',
            title: 'Alignment',
            wrap: 'field_wrap',
            type: 'heading',
            inline: true,
            settingType: 'content'
        }, {
            id: 'icon_alignment',
            title: 'fa-laptop',
            description: 'Where to position the icon',
            wrap: 'field_wrap',
            type: 'radio_toggle',
            settingType: 'content',
            inline: true,
            options: [{
                name: 'fa-align-left',
                value: 'left'
            }, {
                name: 'fa-align-center',
                value: 'center'
            }, {
                name: 'fa-align-right',
                value: 'right'
            }],
            configuration: {
                flex: true
            }
        }, {
            id: 'icon_mobile_alignment',
            title: 'fa-mobile',
            description: 'Where to position the icon on mobile devices',
            wrap: 'field_wrap',
            type: 'radio_toggle',
            settingType: 'content',
            inline: true,
            options: [{
                name: 'fa-align-left',
                value: 'left'
            }, {
                name: 'fa-align-center',
                value: 'center'
            }, {
                name: 'fa-align-right',
                value: 'right'
            }],
            configuration: {
                flex: true
            }
        },
        /*{
            id: 'icon_configuration_group',
            title: 'Icon Configuration',
            description: 'Configure special options like link target for this icon',
            wrap: 'field_group',
            settingType: 'content',
            items: ['icon_multiplier', 'icon_link']
        },*/
        {
            id: 'icon_link',
            title: 'Icon Link',
            description: 'The destination users are brought to when they click this icon',
            wrap: 'field_wrap',
            settingType: 'content',
            type: 'link',
            configuration: {
                newWindow: true
            }
        }, {
            id: 'icon_multiplier',
            title: 'Icon Multiplier',
            description: 'The spacing between letters in text in this object',
            wrap: 'field_wrap',
            type: 'slider_control',
            settingType: 'content',
            configuration: [{ units: 'icons', min: 0, max: 10, step: 1 }]
        }, {
            id: 'icon_mixin',
            wrap: 'field_mixin',
            mixin: 'icon',
            settingType: 'design',
            prefix: 'icon_'
        }],
        default: {
            icon: {
                icon: 'fa-plus'
            },
            icon_alignment: {
                choice: 'center'
            },
            icon_mobile_alignment: {
                choice: 'center'
            },
            icon_link: {
                url: ''
            },
            icon_multiplier: {
                value: 1,
                units: 'icons',
                useDefault: 'default'
            },
            icon_font_size: {
                value: 3,
                units: 'em',
                useDefault: 'default'
            },
            icon_background_color: {
                color: 'primary'
            },
            icon_color: {
                color: 'white'
            },
            icon_border: {
                top: 1,
                left: 1,
                bottom: 1,
                right: 1,
                units: 'px',
                useDefault: 'default',
                type: 'solid',
                color: 'default',
                customColor: '#000000'
            },
            icon_padding: {
                value: 50,
                units: 'px',
                useDefault: 'default'
            },
            icon_border_radius: {
                value: 50,
                units: '%',
                useDefault: 'default'
            }
        }
    };
};

;

/***/ }),

/***/ 857:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

exports.default = function () {
    return {
        fields: [{
            id: 'image',
            title: 'Image',
            description: 'Enter the image URL here',
            wrap: 'field_wrap',
            type: 'media',
            textType: 'url',
            requiredCheck: true,
            deviceShared: true,
            settingType: 'content',
            onChange: 'ocbLazyLoadImages',
            configuration: {
                featured: true,
                type: 'image'
            }
        },
        /*{
            id: 'image_group',
            title: 'Image',
            description: 'Configure alignment and the image link',
            wrap: 'field_group',
            settingType: 'content',
            items: ['align', 'mobile_align', 'link']
        },*/
        {
            id: 'alignment_heading',
            title: 'Alignment',
            wrap: 'field_wrap',
            type: 'heading',
            inline: true,
            settingType: 'content'
        }, {
            id: 'align',
            title: 'fa-laptop',
            description: 'If the image is not 100% width, this setting can be used to align it.',
            wrap: 'field_wrap',
            type: 'radio_toggle',
            inline: true,
            settingType: 'content',
            options: [{
                name: 'fa-align-left',
                value: 'left'
            }, {
                name: 'fa-align-center',
                value: 'center'
            }, {
                name: 'fa-align-right',
                value: 'right'
            }],
            configuration: {
                flex: true
            }
        }, {
            id: 'mobile_align',
            title: 'fa-mobile',
            description: 'If the image is not 100% width, this setting can be used to align it.',
            wrap: 'field_wrap',
            type: 'radio_toggle',
            inline: true,
            settingType: 'content',
            options: [{
                name: 'fa-align-left',
                value: 'left'
            }, {
                name: 'fa-align-center',
                value: 'center'
            }, {
                name: 'fa-align-right',
                value: 'right'
            }],
            configuration: {
                flex: true
            }
        },
        /*{
            id: 'caption_group',
            title: 'Caption',
            description: 'Configure the content options for the caption',
            wrap: 'field_group',
            settingType: 'content',
            items: ['show_caption', 'caption']
        },*/
        {
            id: 'caption_heading',
            title: 'Caption',
            wrap: 'field_wrap',
            type: 'heading',
            inline: true,
            settingType: 'content'
        }, {
            id: 'show_caption',
            title: 'Show Caption',
            description: 'Show or hide the image caption, which is set in the media library',
            wrap: 'field_wrap',
            settingType: 'content',
            inline: true,
            type: 'switch'
        }, {
            id: 'caption',
            title: 'Caption',
            description: 'Enter the caption here',
            wrap: 'field_wrap',
            type: 'text',
            settingType: 'content',
            inline: true,
            conditional: {
                conditions: [{
                    id: 'show_caption',
                    property: 'yes',
                    value: 1
                }]
            }
        },
        /*{
            id: 'advanced_group',
            title: 'Advanced',
            description: 'Set advanced settings for this image',
            wrap: 'field_group',
            settingType: 'content',
            items: ['lazyload']
        },*/
        {
            id: 'lazyload',
            title: 'Lazy Load Image',
            description: 'This will make it so that the image loads after the page is loaded',
            wrap: 'field_wrap',
            settingType: 'content',
            type: 'switch'
        }, {
            id: 'link',
            title: 'Link',
            description: 'The destination users are brought to when they click this image',
            wrap: 'field_wrap',
            type: 'link',
            settingType: 'content',
            configuration: {
                newWindow: true
            }
        }, {
            id: 'design_group',
            title: 'Image',
            description: 'Configure the display design of the image',
            wrap: 'field_group',
            settingType: 'design',
            items: ['width_bleed', 'border', 'box_shadow', 'border_radius', 'display', 'max_width', 'size', 'height', 'width']
        }, {
            id: 'width_bleed',
            title: 'Width Bleed',
            description: 'Make an image extend the full width of the page, even if its container is not the full width.',
            wrap: 'field_wrap',
            type: 'radio_toggle',
            note: 'Create a "Medium-like" image that extends the full width. Only useful if you do not have sidebars.',
            options: [{
                name: 'None',
                value: 'none'
            }, {
                name: 'Full',
                value: 'full'
            }],
            configuration: {
                flex: true
            }
        }, {
            id: 'border',
            title: 'Border',
            description: 'Design a border for this object',
            wrap: 'field_wrap',
            type: 'border',
            configuration: [{ units: 'px', min: 0, max: 40, step: 1 }]
        }, {
            id: 'box_shadow',
            title: 'Box Shadow',
            description: 'Add a shadow effect to the object',
            wrap: 'field_wrap',
            type: 'box_shadow'
        }, {
            id: 'border_radius',
            title: 'Border Radius',
            description: 'The curve in the corners of the image',
            wrap: 'field_wrap',
            type: 'slider_control',
            configuration: [{ units: '%', min: 0, max: 100, step: 1 }, { units: 'px', min: 0, max: 500, step: 1 }],
            conditional: {
                type: 'or',
                ifTrue: 'hide',
                conditions: [{
                    id: 'width_bleed',
                    property: 'choice',
                    value: 'full'
                }, {
                    id: 'display',
                    property: 'choice',
                    value: 'circle'
                }]
            }
        }, {
            id: 'display',
            title: 'Display',
            description: 'Choose the display type, like "square" for this image.',
            wrap: 'field_wrap',
            type: 'radio_toggle',
            options: [{
                name: 'Normal',
                value: 'normal'
            }, {
                name: 'Square',
                value: 'square'
            }, {
                name: 'Circle',
                value: 'circle'
            }, {
                name: 'Custom',
                value: 'height'
            }],
            conditional: {
                conditions: [{
                    id: 'width_bleed',
                    property: 'choice',
                    value: 'none'
                }]
            }
        }, {
            id: 'max_width',
            title: 'Max Width',
            description: 'Set a maximum width for this image.',
            wrap: 'field_wrap',
            type: 'slider_control',
            configuration: [{ units: '%', min: 10, max: 100, step: 1 }, { units: 'px', min: 30, max: 1200, step: 10 }],
            conditional: {
                conditions: [{
                    id: 'display',
                    property: 'choice',
                    value: 'normal'
                }, {
                    id: 'width_bleed',
                    property: 'choice',
                    value: 'none'
                }]
            }
        }, {
            id: 'size',
            title: 'Size',
            description: 'Set the width/height of the image.',
            wrap: 'field_wrap',
            type: 'slider_control',
            configuration: [{ units: 'px', min: 30, max: 1200, step: 10 }],
            conditional: {
                conditions: [{
                    conditional: {
                        type: 'or',
                        conditions: [{
                            id: 'display',
                            property: 'choice',
                            value: 'square'
                        }, {
                            id: 'display',
                            property: 'choice',
                            value: 'circle'
                        }]
                    }
                }, {
                    id: 'width_bleed',
                    property: 'choice',
                    value: 'none'
                }]
            }
        }, {
            id: 'width',
            title: 'Width',
            description: 'Set the height for this image.',
            wrap: 'field_wrap',
            type: 'slider_control',
            configuration: [{ units: 'px', min: 30, max: 1200, step: 10 }],
            conditional: {
                conditions: [{
                    id: 'display',
                    property: 'choice',
                    value: 'height'
                }, {
                    id: 'width_bleed',
                    property: 'choice',
                    value: 'none'
                }]
            }
        }, {
            id: 'height',
            title: 'Height',
            description: 'Set the height for this image.',
            wrap: 'field_wrap',
            type: 'slider_control',
            configuration: [{ units: 'px', min: 30, max: 1200, step: 10 }],
            conditional: {
                conditions: [{
                    id: 'display',
                    property: 'choice',
                    value: 'height'
                }, {
                    id: 'width_bleed',
                    property: 'choice',
                    value: 'none'
                }]
            }
        },
        /*{
            id: 'image_focus_group',
            title: 'Image Focus',
            description: 'Configure the focus of the image',
            wrap: 'field_group',
            settingType: 'content',
            items: ['vertical_align', 'horizontal_align'],
            conditional: {
                ifTrue: 'hide',
                type: 'or',
                conditions: [
                    {
                        id: 'display',
                        property: 'choice',
                        value: 'normal'
                    },
                    {
                        id: 'width_bleed',
                        property: 'choice',
                        value: 'full'
                    }
                ]
            }
        },*/
        {
            id: 'image_focus_heading',
            title: 'Image Focus',
            wrap: 'field_wrap',
            type: 'heading',
            inline: true,
            settingType: 'content',
            conditional: {
                ifTrue: 'hide',
                type: 'or',
                conditions: [{
                    id: 'display',
                    property: 'choice',
                    value: 'normal'
                }, {
                    id: 'width_bleed',
                    property: 'choice',
                    value: 'full'
                }]
            }
        }, {
            id: 'horizontal_align',
            title: 'Horizontal',
            description: 'When you set display to custom, the image width may overflow. 50% will center the image horizontally.',
            wrap: 'field_wrap',
            type: 'slider_control',
            settingType: 'content',
            inline: true,
            configuration: [{ units: '%', min: 0, max: 100, step: 1 }],
            conditional: {
                ifTrue: 'hide',
                type: 'or',
                conditions: [{
                    id: 'display',
                    property: 'choice',
                    value: 'normal'
                }, {
                    id: 'width_bleed',
                    property: 'choice',
                    value: 'full'
                }]
            }
        }, {
            id: 'vertical_align',
            title: 'Vertical',
            description: 'When you set a custom height, the image height may overflow. 50% will center the image vertically.',
            wrap: 'field_wrap',
            type: 'slider_control',
            settingType: 'content',
            inline: true,
            configuration: [{ units: '%', min: 0, max: 100, step: 1 }],
            conditional: {
                ifTrue: 'hide',
                type: 'or',
                conditions: [{
                    id: 'display',
                    property: 'choice',
                    value: 'normal'
                }, {
                    id: 'width_bleed',
                    property: 'choice',
                    value: 'full'
                }]
            }
        }, {
            id: 'caption_design_group',
            title: 'Caption',
            description: 'Configure the display design of the image caption',
            wrap: 'field_group',
            settingType: 'design',
            items: ['caption_align', 'caption_position', 'caption_design', 'caption_custom_position'],
            conditional: {
                conditions: [{
                    id: 'show_caption',
                    property: 'yes',
                    value: 1
                }]
            }
        }, {
            id: 'caption_align',
            title: 'Caption Alignment',
            description: 'How to align the caption.',
            wrap: 'field_wrap',
            type: 'radio_toggle',
            settingType: 'design',
            options: [{
                name: 'fa-align-left',
                value: 'left'
            }, {
                name: 'fa-align-center',
                value: 'center'
            }, {
                name: 'fa-align-justify',
                value: 'justify'
            }, {
                name: 'fa-align-right',
                value: 'right'
            }],
            configuration: {
                flex: true
            },
            conditional: {
                conditions: [{
                    id: 'show_caption',
                    property: 'yes',
                    value: 1
                }]
            }
        }, {
            id: 'caption_position',
            title: 'Caption Position',
            description: 'Where to display the caption.',
            wrap: 'field_wrap',
            type: 'radio_toggle',
            settingType: 'design',
            options: [{
                name: 'Below',
                value: 'below'
            }, {
                name: 'Top Hover',
                value: 'top_hover'
            }, {
                name: 'Middle Hover',
                value: 'middle_hover'
            }, {
                name: 'Bottom Hover',
                value: 'bottom_hover'
            }, {
                name: 'Custom',
                value: 'custom'
            }],
            conditional: {
                conditions: [{
                    id: 'show_caption',
                    property: 'yes',
                    value: 1
                }]
            }
        }, {
            id: 'caption_design',
            title: 'More',
            description: 'More design options for captions',
            wrap: 'field_group',
            settingType: 'design',
            items: ['caption_font_size', 'caption_italicize', 'caption_padding', 'caption_text_color', 'caption_background_color'],
            conditional: {
                conditions: [{
                    id: 'show_caption',
                    property: 'yes',
                    value: 1
                }]
            }
        }, {
            id: 'caption_font_size',
            title: 'Caption Font Size',
            description: 'The size of the caption text',
            wrap: 'field_wrap',
            type: 'slider_control',
            inline: true,
            configuration: [{ units: 'px', min: 8, max: 50, step: 1 }, { units: 'em', min: 0.5, max: 5, step: 0.1 }]
        }, {
            id: 'caption_italicize',
            title: 'Italicize Caption',
            description: 'Italicize the caption text',
            wrap: 'field_wrap',
            type: 'switch',
            inline: true,
            conditional: {
                conditions: [{
                    id: 'show_caption',
                    property: 'yes',
                    value: 1
                }]
            }
        }, {
            id: 'caption_padding',
            title: 'Caption Padding',
            description: 'Adjust the padding around the caption',
            wrap: 'field_wrap',
            type: 'linked_sliders',
            configuration: [{ units: 'px', min: 0, max: 200, step: 1 }, { units: '%', min: 0, max: 100, step: 1 }, { units: 'em', min: 0, max: 30, step: 0.1 }],
            conditional: {
                conditions: [{
                    id: 'show_caption',
                    property: 'yes',
                    value: 1
                }]
            }
        }, {
            id: 'caption_text_color',
            title: 'Caption Text Color',
            description: 'Select a text color the caption',
            wrap: 'field_wrap',
            type: 'color',
            conditional: {
                conditions: [{
                    id: 'show_caption',
                    property: 'yes',
                    value: 1
                }]
            }
        }, {
            id: 'caption_background_color',
            title: 'Caption Background Color',
            description: 'Select a background color for the caption area',
            wrap: 'field_wrap',
            type: 'color',
            conditional: {
                conditions: [{
                    id: 'show_caption',
                    property: 'yes',
                    value: 1
                }]
            }
        }, {
            id: 'caption_custom_position',
            title: 'Custom Position',
            description: 'Set the custom position of the image caption',
            wrap: 'field_group',
            settingType: 'design',
            items: ['caption_rotation', 'caption_position_top', 'caption_position_left', 'caption_position_right', 'caption_position_bottom', 'caption_height', 'caption_width', 'caption_reset_mobile'],
            conditional: {
                conditions: [{
                    id: 'show_caption',
                    property: 'yes',
                    value: 1
                }, {
                    id: 'caption_position',
                    property: 'choice',
                    value: 'custom'
                }]
            }
        }, {
            id: 'caption_rotation',
            title: 'Caption Rotation',
            description: 'The rotation of the caption',
            wrap: 'field_wrap',
            type: 'slider_control',
            inline: true,
            configuration: [{ units: 'deg', min: 0, max: 360, step: 5 }]
        }, {
            id: 'caption_position_top',
            title: 'Caption Top Distance',
            description: 'Adjust the top position of the caption',
            wrap: 'field_wrap',
            type: 'slider_control',
            inline: true,
            configuration: [{ units: 'px', min: -500, max: 500, step: 5 }, { units: '%', min: -100, max: 100, step: 5 }, { units: 'em', min: -30, max: 30, step: 0.5 }]
        }, {
            id: 'caption_position_left',
            title: 'Caption Left Distance',
            description: 'Adjust the left position of the caption',
            wrap: 'field_wrap',
            type: 'slider_control',
            inline: true,
            configuration: [{ units: 'px', min: -500, max: 500, step: 5 }, { units: '%', min: -100, max: 100, step: 5 }, { units: 'em', min: -30, max: 30, step: 0.5 }]
        }, {
            id: 'caption_position_right',
            title: 'Caption Right Distance',
            description: 'Adjust the right position of the caption',
            wrap: 'field_wrap',
            type: 'slider_control',
            inline: true,
            configuration: [{ units: 'px', min: -500, max: 500, step: 5 }, { units: '%', min: -100, max: 100, step: 5 }, { units: 'em', min: -30, max: 30, step: 0.5 }]
        }, {
            id: 'caption_position_bottom',
            title: 'Caption Bottom Distance',
            description: 'Adjust the bottom position of the caption',
            wrap: 'field_wrap',
            type: 'slider_control',
            inline: true,
            configuration: [{ units: 'px', min: -500, max: 500, step: 5 }, { units: '%', min: -100, max: 100, step: 5 }, { units: 'em', min: -30, max: 30, step: 0.5 }]
        }, {
            id: 'caption_height',
            title: 'Caption Height',
            description: 'Adjust the height of the caption',
            wrap: 'field_wrap',
            type: 'slider_control',
            inline: true,
            configuration: [{ units: 'px', min: 10, max: 2000, step: 5 }, { units: '%', min: 10, max: 200, step: 5 }, { units: 'em', min: 1, max: 30, step: 0.5 }]
        }, {
            id: 'caption_width',
            title: 'Caption Width',
            description: 'Adjust the width of the caption',
            wrap: 'field_wrap',
            type: 'slider_control',
            inline: true,
            configuration: [{ units: 'px', min: 10, max: 2000, step: 5 }, { units: '%', min: 10, max: 200, step: 5 }, { units: 'em', min: 1, max: 30, step: 0.5 }]
        }, {
            id: 'caption_reset_mobile',
            title: 'Reset Mobile Position',
            description: 'Place the caption at the bottom of the image in mobile devices instead of the custom position',
            wrap: 'field_wrap',
            inline: true,
            type: 'switch'
        }, {
            id: 'hover_effects_group',
            title: 'Hover',
            description: 'Set the effects when the image is hovered',
            wrap: 'field_group',
            settingType: 'design',
            items: ['hover_effect']
        }, {
            id: 'hover_effect',
            title: 'Hover Effect',
            description: 'The effect to display when the image is hovered.',
            wrap: 'field_wrap',
            type: 'radio_toggle',
            options: [{
                name: 'None',
                value: 'none'
            }, {
                name: 'Zoom',
                value: 'zoom'
            }, {
                name: 'Zoom Out',
                value: 'zoom_out'
            }, {
                name: 'Saturate',
                value: 'saturate'
            }, {
                name: 'Greyscale',
                value: 'greyscale'
            }, {
                name: 'Blur',
                value: 'blur'
            }]
        }],
        default: {
            image: {
                url: 'https://s3-us-west-2.amazonaws.com/s.cdpn.io/142996/slider-2.jpg', //https://cfl.dropboxstatic.com/static/images/business/homepage/screenshots/tiburon/scale-business-growth-vflR2-zZ7.png',
                object: {},
                size: 'full'
            },
            link: {
                url: ''
            },
            align: {
                choice: 'left'
            },
            mobile_align: {
                choice: 'center'
            },
            width_bleed: {
                choice: 'none'
            },
            border: {
                useDefault: 'default',
                units: 'px',
                top: 1,
                left: 1,
                right: 1,
                bottom: 1,
                type: 'solid',
                color: 'default'
            },
            box_shadow: {
                useDefault: 'default',
                horizontal: 0,
                vertical: 0,
                blur: 20,
                spread: 5,
                color: 'rgba(151,151,151,1)'
            },
            border_radius: {
                value: 0,
                units: '%',
                useDefault: 'default'
            },
            display: {
                choice: 'normal'
            },
            max_width: {
                value: 700,
                units: 'px',
                useDefault: 'default'
            },
            size: {
                value: 250,
                units: 'px',
                useDefault: 'default'
            },
            height: {
                value: 250,
                units: 'px',
                useDefault: 'default'
            },
            width: {
                value: 250,
                units: 'px',
                useDefault: 'default'
            },
            vertical_align: {
                value: 50,
                units: '%',
                useDefault: 'default'
            },
            horizontal_align: {
                value: 50,
                units: '%',
                useDefault: 'default'
            },
            show_caption: {
                yes: 0
            },
            caption: {
                text: ''
            },
            caption_align: {
                choice: 'center'
            },
            caption_position: {
                choice: 'below'
            },
            caption_font_size: {
                value: 1,
                units: 'em',
                useDefault: 'default'
            },
            caption_italicize: {
                yes: 1
            },
            caption_padding: {
                top: 1,
                left: 1,
                right: 1,
                bottom: 1,
                units: 'em',
                useDefault: 'default'
            },
            caption_text_color: {
                color: 'default'
            },
            caption_background_color: {
                color: 'default'
            },
            caption_rotation: {
                value: 0,
                units: 'deg',
                useDefault: 'default'
            },
            caption_position_top: {
                value: 0,
                units: 'px',
                useDefault: 'default'
            },
            caption_position_right: {
                value: 0,
                units: 'px',
                useDefault: 'default'
            },
            caption_position_bottom: {
                value: 0,
                units: 'px',
                useDefault: 'default'
            },
            caption_position_left: {
                value: 0,
                units: 'px',
                useDefault: 'default'
            },
            caption_width: {
                value: 100,
                units: '%',
                useDefault: 'default'
            },
            caption_height: {
                value: 100,
                units: '%',
                useDefault: 'default'
            },
            caption_reset_mobile: {
                yes: 1
            },
            lazyload: {
                yes: 0
            },
            hover_effect: {
                choice: 'none'
            }
        }
    };
};

;

/***/ }),

/***/ 858:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

exports.default = function () {
    return {
        fields: [{
            id: 'alignment',
            title: 'Alignment',
            description: 'How to align the content. If you align through the text editor, that will overwrite this option.',
            wrap: 'field_wrap',
            type: 'radio_toggle',
            settingType: 'design',
            options: [{
                name: 'Left',
                value: 'left'
            }, {
                name: 'Center',
                value: 'center'
            }, {
                name: 'Right',
                value: 'right'
            }],
            configuration: {
                flex: true
            }
        }, {
            id: 'mobile_alignment',
            title: 'Mobile Alignment',
            description: 'How to align the content in mobile. If you align through the text editor, that will overwrite this option.',
            wrap: 'field_wrap',
            type: 'radio_toggle',
            settingType: 'design',
            options: [{
                name: 'Left',
                value: 'left'
            }, {
                name: 'Center',
                value: 'center'
            }, {
                name: 'Right',
                value: 'right'
            }],
            configuration: {
                flex: true
            }
        },
        /*{
            id: 'min_width',
            title: 'Minimum Width',
            description: 'Minimum width of the logo',
            wrap: 'field_wrap',
            type: 'slider_control',
            settingType: 'design',
            configuration: [
                { units: '%', min: 5, max: 100, step: 1 },
                { units: 'px', min: 40, max: 1200, step: 10 }
            ]
        },*/
        {
            id: 'max_width',
            title: 'Maximum Width',
            description: 'Maximum width of the logo',
            wrap: 'field_wrap',
            type: 'slider_control',
            settingType: 'design',
            configuration: [{ units: '%', min: 5, max: 100, step: 1 }, { units: 'px', min: 40, max: 1200, step: 10 }]
        }],
        default: {
            alignment: {
                choice: 'left'
            },
            mobile_alignment: {
                choice: 'center'
            },
            min_width: {
                value: 100,
                units: 'px',
                useDefault: 'default'
            },
            max_width: {
                value: 300,
                units: 'px',
                useDefault: 'default'
            },
            height: {
                value: 60,
                units: 'px',
                useDefault: 'default'
            },
            min_height: {
                value: 60,
                units: 'px',
                useDefault: 'default'
            },
            max_height: {
                value: 100,
                units: 'px',
                useDefault: 'default'
            }
        }
    };
};

;

/***/ }),

/***/ 859:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

exports.default = function () {
    return {
        fields: [{
            id: 'images',
            title: 'Logos',
            description: 'Logo images to show in the group',
            wrap: 'field_wrap',
            type: 'media',
            settingType: 'content',
            configuration: {
                multiple: true,
                type: 'image' //audio, video, application/pdf
            }
        }, {
            id: 'max_height',
            title: 'Max Height',
            description: 'The maximum height of any logo image',
            wrap: 'field_wrap',
            type: 'slider_control',
            settingType: 'design',
            configuration: [{ units: 'px', min: 30, max: 250, step: 10 }, { units: 'em', min: 1, max: 20, step: 0.5 }, { units: 'rem', min: 1, max: 20, step: 0.5 }]
        }, {
            id: 'grayscale',
            title: 'Grayscale',
            settingType: 'design',
            description: 'Go from 0 (full color) to 100 (black and white)',
            wrap: 'field_wrap',
            type: 'slider_control',
            configuration: [{ units: '%', min: 0, max: 100, step: 5 }]
        }],
        default: {
            images: {
                url: '',
                size: 'full',
                object: {},
                images: []
            },
            max_height: {
                value: 100,
                units: 'px',
                useDefault: 'default'
            },
            grayscale: {
                value: 0,
                units: '%',
                useDefault: 'default'
            }
        }
    };
};

;

/***/ }),

/***/ 860:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

exports.default = function () {
    return {
        fields: [{
            id: 'google_maps_info',
            title: 'Maps Info',
            description: '',
            wrap: 'field_wrap',
            type: 'note',
            settingType: 'content',
            note: 'The map module requires a Google API key to be set in Site Settings. Read more <a target="_blank" href="https://pagebuilder.helpscoutdocs.com/article/121-setting-up-google-maps">here</a>.'
        }, {
            id: 'address',
            title: 'Center Address',
            description: 'Enter the address that you would like to center the map around',
            wrap: 'field_wrap',
            type: 'text',
            settingType: 'content',
            onChange: 'ocbReInitSingleMap'
        }, {
            id: 'height',
            title: 'Height',
            description: 'Set how tall you would like the map to be',
            wrap: 'field_wrap',
            type: 'slider_control',
            settingType: 'design',
            onChange: 'ocbReInitSingleMap',
            configuration: [{ units: 'px', min: 50, max: 1000, step: 10 }]
        }, {
            id: 'skin',
            title: 'Skin',
            settingType: 'content',
            description: 'The map skin or style of the map',
            wrap: 'field_wrap',
            type: 'dropdown',
            onChange: 'ocbReInitSingleMap',
            options: [{
                name: 'Default',
                value: ''
            }, {
                name: 'Subdued',
                value: 'subdued'
            }, {
                name: 'Ultra Light',
                value: 'ultraLight'
            }, {
                name: 'Midnight',
                value: 'midnight'
            }, {
                name: 'Code',
                value: 'code'
            }, {
                name: 'Flat',
                value: 'flat'
            }, {
                name: 'Muted Blue',
                value: 'mutedBlue'
            }, {
                name: 'Light Dark',
                value: 'lightDark'
            }]
        }, {
            id: 'zoom',
            title: 'Zoom',
            description: 'On a scale of 1 to 20 with 1 being the least zoomed in and 20 being the least, how far zoomed would you like the map',
            wrap: 'field_wrap',
            type: 'slider_control',
            settingType: 'content',
            onChange: 'ocbReInitSingleMap',
            configuration: [{ units: 'units', min: 1, max: 20, step: 1 }]
        }, {
            id: 'marker',
            title: 'Marker',
            description: 'Choose how to add markers on your map',
            wrap: 'field_wrap',
            type: 'radio_toggle',
            settingType: 'content',
            onChange: 'ocbReInitSingleMap',
            options: [{
                name: 'No Marker',
                value: 'none'
            }, {
                name: 'At Center Address',
                value: 'center'
            }]
        }, {
            id: 'marker_group',
            title: 'Marker',
            description: 'Configure options for the marker in this map',
            wrap: 'field_group',
            settingType: 'design',
            items: ['marker_title', 'marker_description', 'marker_directions_show', 'marker_color', 'marker_info_show'],
            conditional: {
                conditions: [{
                    id: 'marker',
                    property: 'choice',
                    value: 'center'
                }]
            }
        }, {
            id: 'marker_title',
            title: 'Marker Title',
            description: 'Enter the title of the info window attached to the marker',
            wrap: 'field_wrap',
            type: 'text'
        }, {
            id: 'marker_description',
            title: 'Marker Description',
            description: 'Enter the description of the info window attached to the marker',
            wrap: 'field_wrap',
            type: 'texteditor'
        }, {
            id: 'marker_directions_show',
            title: 'Show Directions Link',
            description: 'Show a link to get directions to the address of the marker',
            wrap: 'field_wrap',
            type: 'switch'
        }, {
            id: 'marker_color',
            title: 'Marker Color',
            description: 'Choose a color for the map marker',
            wrap: 'field_wrap',
            type: 'color',
            properties: {
                color: false
            },
            configuration: {
                colorType: 'hex'
            }
        }, {
            id: 'marker_info_show',
            title: 'Show Marker Info',
            description: 'Show the info automatically - "No" will make it appear on click',
            wrap: 'field_wrap',
            type: 'switch',
            onChange: 'ocbReInitSingleMap'
        }],
        default: {
            address: {
                text: 'Boston, MA'
            },
            skin: {
                choice: ''
            },
            height: {
                value: 300,
                units: 'px',
                useDefault: 'default'
            },
            zoom: {
                value: 14,
                units: 'units',
                useDefault: 'default'
            },
            marker: {
                choice: 'center'
            },
            marker_title: {
                text: 'Business Name'
            },
            marker_description: {
                text: '<p>Business description</p>'
            },
            marker_directions_show: {
                yes: 1
            },
            marker_color: {
                customColor: '#ff0000'
            },
            marker_info_show: {
                yes: 0
            }
        }
    };
};

;

/***/ }),

/***/ 861:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

exports.default = function () {
    return {
        fields: [{
            id: 'text',
            title: 'Body',
            description: 'Enter the quote here',
            wrap: 'field_wrap',
            type: 'texteditor',
            settingType: 'content'
        }],
        default: {
            text: {
                text: '<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vestibulum bibendum quis est ut facilisis.</p>'
            }
        }
    };
};

;

/***/ }),

/***/ 862:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

exports.default = function () {
    return {
        fields: [{
            id: 'spacing',
            title: 'Spacing',
            description: 'Enter how much space you would like the separator to take up',
            wrap: 'field_wrap',
            type: 'slider_control',
            settingType: 'design',
            configuration: [{ units: 'px', min: 0, max: 300, step: 10 }, { units: 'em', min: 0, max: 20, step: 1 }, { units: 'rem', min: 0, max: 20, step: 1 }]
        }, {
            id: 'style',
            title: 'Style',
            description: 'The style of the separator',
            wrap: 'field_wrap',
            type: 'radio_toggle',
            settingType: 'design',
            options: [{
                name: 'None',
                value: 'none'
            }, {
                name: 'Line',
                value: 'solid'
            }, {
                name: 'Dashed',
                value: 'dashed'
            }, {
                name: 'Dotted',
                value: 'dotted'
            }, {
                name: 'Double',
                value: 'double'
            }]
        }, {
            id: 'design_group',
            title: 'Design',
            description: 'Control the design of the separator',
            wrap: 'field_group',
            settingType: 'design',
            items: ['width', 'thickness', 'color'],
            conditional: {
                ifTrue: 'hide',
                conditions: [{
                    id: 'style',
                    property: 'choice',
                    value: 'none'
                }]
            }
        }, {
            id: 'width',
            title: 'Width',
            description: 'The width of the separator line',
            wrap: 'field_wrap',
            type: 'slider_control',
            configuration: [{ units: '%', min: 1, max: 100, step: 1 }, { units: 'px', min: 10, max: 1000, step: 10 }]
        }, {
            id: 'thickness',
            title: 'Thickness',
            description: 'The thickness of the separator line',
            wrap: 'field_wrap',
            type: 'slider_control',
            configuration: [{ units: 'px', min: 1, max: 20, step: 1 }]
        }, {
            id: 'color',
            title: 'Color',
            description: 'The color of the separator line',
            wrap: 'field_wrap',
            type: 'color'
        }, {
            id: 'alignment_group',
            title: 'Alignment',
            description: 'Control the alignment of the separator',
            wrap: 'field_group',
            settingType: 'design',
            items: ['align', 'mobile_align'],
            conditional: {
                ifTrue: 'hide',
                type: 'or',
                conditions: [{
                    id: 'style',
                    property: 'choice',
                    value: 'none'
                }, {
                    id: 'width',
                    property: 'value',
                    value: 100
                }]
            }
        }, {
            id: 'align',
            title: 'Align',
            description: 'The alignment of the separator',
            wrap: 'field_wrap',
            type: 'radio_toggle',
            options: [{
                name: 'Left',
                value: 'left'
            }, {
                name: 'Center',
                value: 'center'
            }, {
                name: 'Right',
                value: 'right'
            }],
            configuration: {
                flex: true
            }
        }, {
            id: 'mobile_align',
            title: 'Mobile Align',
            description: 'The alignment of the separator on mobile devices',
            wrap: 'field_wrap',
            type: 'radio_toggle',
            options: [{
                name: 'Left',
                value: 'left'
            }, {
                name: 'Center',
                value: 'center'
            }, {
                name: 'Right',
                value: 'right'
            }],
            configuration: {
                flex: true
            }
        }],
        default: {
            spacing: {
                value: 2,
                units: 'em',
                useDefault: 'default'
            },
            style: {
                choice: 'solid'
            },
            width: {
                value: 100,
                units: '%',
                useDefault: 'default'
            },
            thickness: {
                value: 1,
                units: 'px',
                useDefault: 'default'
            },
            color: {
                color: 'primary',
                customColor: 'rgba(0,0,0,1)'
            },
            align: {
                choice: 'center'
            },
            mobile_align: {
                choice: 'center'
            }
        }
    };
};

;

/***/ }),

/***/ 863:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

exports.default = function () {
    var fields = {
        fields: [{
            id: 'note',
            title: 'Note',
            description: '',
            note: 'You can use shortcodes in any text area, however this module is good for complex shortcodes that may not render properly when placed in a text areas.',
            wrap: 'field_wrap',
            settingType: 'content',
            type: 'note'
        }, {
            id: 'shortcode',
            title: 'Shortcode',
            description: 'Enter the shortcode here',
            wrap: 'field_wrap',
            type: 'text',
            settingType: 'content',
            configuration: {
                inputType: 'textarea'
            }
        }],
        default: {
            shortcode: {
                text: ''
            }
        }
    };

    //DevUtilities.logFieldDefaults( fields );

    return fields;
};

; //import DevUtilities from '../../../../shared/helpers/dev_utilities';

/***/ }),

/***/ 864:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

exports.default = function () {
    return {
        fields: [{
            id: 'modules',
            title: 'Modules',
            description: 'Create the modules',
            wrap: 'field_wrap',
            type: 'items',
            settingType: 'content',
            configuration: {
                itemType: 'module', //this is used to signal to the treeReducer that the item is a container and so needs to be dealt with specially in duplication functions
                exclude: ['tabs', 'side_by_side']
            }
        }, {
            id: 'vertical_align',
            title: 'Vertical Align',
            description: 'In what vertical position to align the modules',
            wrap: 'field_wrap',
            type: 'radio_toggle',
            settingType: 'design',
            options: [{
                name: 'Top',
                value: 'top'
            }, {
                name: 'Middle',
                value: 'middle'
            }, {
                name: 'Bottom',
                value: 'bottom'
            }]
        }, {
            id: 'align',
            title: 'Align',
            description: 'In what position to align the modules',
            wrap: 'field_wrap',
            type: 'radio_toggle',
            settingType: 'design',
            options: [{
                name: 'Left',
                value: 'left'
            }, {
                name: 'Center',
                value: 'center'
            }, {
                name: 'Even',
                value: 'even'
            }, {
                name: 'Between',
                value: 'between'
            }, {
                name: 'Right',
                value: 'right'
            }]
        }, {
            id: 'mobile_align',
            title: 'Mobile Align',
            description: 'In what position to align the modules for mobile',
            wrap: 'field_wrap',
            type: 'radio_toggle',
            settingType: 'design',
            options: [{
                name: 'Left',
                value: 'left'
            }, {
                name: 'Center',
                value: 'center'
            }, {
                name: 'Even',
                value: 'even'
            }, {
                name: 'Between',
                value: 'between'
            }, {
                name: 'Stack',
                value: 'stack'
            }, {
                name: 'Right',
                value: 'right'
            }]
        }, {
            id: 'horizontal_margin',
            title: 'Horizontal Margin',
            description: 'Space in between each module',
            wrap: 'field_wrap',
            type: 'slider_control',
            settingType: 'design',
            configuration: [{ units: 'px', min: 0, max: 100, step: 1 }, { units: 'em', min: 0, max: 10, step: 0.1 }, { units: 'rem', min: 0, max: 10, step: 0.1 }]
        }],
        default: {
            modules: {
                type: 'modules',
                items: [{
                    name: 'icon'
                }, {
                    name: 'header'
                }]
            },
            vertical_align: {
                choice: 'middle'
            },
            align: {
                choice: 'center'
            },
            mobile_align: {
                choice: 'center'
            },
            horizontal_margin: {
                value: 1,
                units: 'em',
                useDefault: 'default'
            }
        }
    };
};

var _settings_helpers = __webpack_require__(2);

var _settings_helpers2 = _interopRequireDefault(_settings_helpers);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

;

/***/ }),

/***/ 865:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

exports.default = function () {
    return {
        fields: [{
            id: 'testimonial_panel',
            title: 'Choose Your Testimonials',
            description: 'Select a form to use from your available forms, create new forms, or delete existing forms',
            wrap: 'field_panel',
            panelButtonFallback: 'Manage Testimonials',
            settingType: 'content',
            items: ['testimonials']
        }, {
            id: 'testimonials',
            title: 'Choose Your Testimonials',
            description: 'Click the check next to each testimonial that you would like to include or choose "Most Recent" or "Category" from the dropdown.',
            wrap: 'field_wrap',
            settingType: 'content',
            type: 'testimonials'
        }, {
            id: 'maximum',
            title: 'Maximum Testimonials',
            description: 'The maximum number of testimonials to show',
            wrap: 'field_wrap',
            type: 'slider_control',
            settingType: 'content',
            configuration: [{ units: 'testimonials', min: 1, max: 30, step: 1 }],
            conditional: {
                ifTrue: 'hide',
                conditions: [{
                    id: 'testimonials',
                    property: 'source',
                    value: 'custom'
                }]
            }
        }, {
            id: 'configuration_heading',
            title: 'Configuration',
            wrap: 'field_wrap',
            type: 'heading',
            inline: true,
            settingType: 'design'
        }, {
            id: 'columns',
            title: 'Columns',
            description: 'The number of columns to put the testimonials into',
            wrap: 'field_wrap',
            type: 'slider_control',
            settingType: 'design',
            inline: true,
            onChange: 'ocbReInitSinglePosts',
            configuration: [{ units: 'col', min: 1, max: 4, step: 1 }]
        }, {
            id: 'style',
            title: 'Style',
            description: 'Choose the display style for your testimonials',
            wrap: 'field_wrap',
            type: 'radio_toggle',
            settingType: 'design',
            inline: true,
            onChange: 'ocbReInitSinglePosts',
            options: [{
                name: 'Quote',
                value: 'quote'
            }, {
                name: 'Box',
                value: 'box'
            }, {
                name: 'Card',
                value: 'card'
            } /*,
              {
                 name: 'Slider',
                 value: 'slider'
              }*/
            ]
        },
        /*{
            id: 'include_group',
            title: 'What to Include',
            description: 'Select what parts of the quote to include',
            wrap: 'field_group',
            settingType: 'design',
            items: ['include_title', 'include_attribution', 'include_attribution_description']
        },*/
        {
            id: 'include_heading',
            title: 'Include',
            wrap: 'field_wrap',
            type: 'heading',
            inline: true,
            settingType: 'design'
        }, {
            id: 'include_title',
            title: 'Title',
            description: '',
            wrap: 'field_wrap',
            type: 'switch',
            onChange: 'ocbReInitSinglePosts',
            inline: true,
            settingType: 'design'
        }, {
            id: 'include_attribution',
            title: 'Attribution',
            description: '',
            wrap: 'field_wrap',
            type: 'switch',
            onChange: 'ocbReInitSinglePosts',
            inline: true,
            settingType: 'design'
        }, {
            id: 'include_attribution_description',
            title: 'Role',
            description: '',
            wrap: 'field_wrap',
            type: 'switch',
            onChange: 'ocbReInitSinglePosts',
            inline: true,
            settingType: 'design'
        }, {
            id: 'quote_design_group',
            title: 'Quote Icon',
            description: 'Configure the design of the quote icon',
            wrap: 'field_group',
            settingType: 'design',
            items: ['quote_color', 'quote_font_size', 'quote_background_color', 'quote_padding', 'quote_margin', 'quote_position'],
            conditional: {
                conditions: [{
                    id: 'style',
                    property: 'choice',
                    value: 'quote'
                }]
            }
        }, {
            id: 'quote_color',
            title: 'Quote Color',
            description: 'Select a text color for the quote',
            wrap: 'field_wrap',
            onChange: 'ocbReInitSinglePosts',
            type: 'color'
        }, {
            id: 'quote_background_color',
            title: 'Quote Background Color',
            description: 'Select a background color for the quote',
            wrap: 'field_wrap',
            onChange: 'ocbReInitSinglePosts',
            type: 'color'
        }, {
            id: 'quote_font_size',
            title: 'Quote Font Size',
            description: 'Set the font size for the quote',
            wrap: 'field_wrap',
            type: 'slider_control',
            onChange: 'ocbReInitSinglePosts',
            configuration: [{ units: 'px', min: 8, max: 50, step: 1 }, { units: 'em', min: 0.5, max: 10, step: 0.1 }, { units: 'rem', min: 0.5, max: 10, step: 0.1 }]
        }, {
            id: 'quote_padding',
            title: 'Quote Padding',
            description: 'Set the padding for the quote',
            wrap: 'field_wrap',
            type: 'slider_control',
            configuration: [{ units: 'px', min: 8, max: 50, step: 1 }, { units: 'em', min: 0.5, max: 10, step: 0.1 }, { units: 'rem', min: 0.5, max: 10, step: 0.1 }]
        }, {
            id: 'quote_margin',
            title: 'Quote Margin',
            description: 'The margin around the quote icon',
            wrap: 'field_wrap',
            type: 'linked_sliders',
            configuration: [{ units: 'px', min: 0, max: 200, step: 1 }, { units: 'em', min: 0, max: 10, step: 0.5 }, { units: 'rem', min: 0, max: 10, step: 0.5 }]
        }, {
            id: 'quote_position',
            title: 'Quote Position',
            description: 'The location of the quote',
            wrap: 'field_wrap',
            type: 'radio_toggle',
            onChange: 'ocbReInitSinglePosts',
            options: [{
                name: 'Left',
                value: 'left'
            }, {
                name: 'Top',
                value: 'top'
            }]
        }, {
            id: 'title_design_group',
            title: 'Title',
            description: 'Configure the design of the testimonial title',
            wrap: 'field_group',
            settingType: 'design',
            items: ['title_color', 'title_font_size', 'title_bottom_margin']
        }, {
            id: 'title_color',
            title: 'Title Color',
            description: 'Select a text color for the title',
            wrap: 'field_wrap',
            onChange: 'ocbReInitSinglePosts',
            type: 'color'
        }, {
            id: 'title_font_size',
            title: 'Title Font Size',
            description: 'Set the title size for the testimonial',
            wrap: 'field_wrap',
            type: 'slider_control',
            configuration: [{ units: 'px', min: 8, max: 50, step: 1 }, { units: 'em', min: 0.5, max: 10, step: 0.1 }, { units: 'rem', min: 0.5, max: 10, step: 0.1 }]
        }, {
            id: 'title_bottom_margin',
            title: 'Title Bottom Margin',
            description: 'Adjust the bottom margin for the title',
            wrap: 'field_wrap',
            type: 'slider_control',
            configuration: [{ units: 'px', min: 0, max: 100, step: 1 }]
        }, {
            id: 'testimonial_design_group',
            title: 'Testimonial',
            description: 'Configure the design of the testimonials',
            wrap: 'field_group',
            settingType: 'design',
            items: ['testimonial_color', 'testimonial_font_size', 'testimonial_background_color', 'testimonial_padding', 'testimonial_horizontal_margin', 'testimonial_vertical_margin', 'testimonial_border', 'testimonial_border_radius', 'testimonial_box_shadow']
        }, {
            id: 'testimonial_color',
            title: 'Text Color',
            description: 'Select a text color for the testimonial',
            wrap: 'field_wrap',
            onChange: 'ocbReInitSinglePosts',
            type: 'color'
        }, {
            id: 'testimonial_background_color',
            title: 'Background Color',
            description: 'Select a background color for this testimonial',
            wrap: 'field_wrap',
            onChange: 'ocbReInitSinglePosts',
            type: 'color'
        }, {
            id: 'testimonial_font_size',
            title: 'Text Font Size',
            description: 'Set the font size for the testimonial',
            wrap: 'field_wrap',
            type: 'slider_control',
            configuration: [{ units: 'px', min: 8, max: 50, step: 1 }, { units: 'em', min: 0.5, max: 10, step: 0.1 }, { units: 'rem', min: 0.5, max: 10, step: 0.1 }]
        }, {
            id: 'testimonial_horizontal_margin',
            title: 'Horizontal Margin',
            description: 'Adjust the horizontal margin for this testimonial',
            wrap: 'field_wrap',
            type: 'slider_control',
            configuration: [{ units: '%', min: 0, max: 30, step: 1 }]
        }, {
            id: 'testimonial_vertical_margin',
            title: 'Vertical Margin',
            description: 'Adjust the vertical margin for this testimonial',
            wrap: 'field_wrap',
            type: 'slider_control',
            configuration: [{ units: 'px', min: 0, max: 100, step: 1 }]
        }, {
            id: 'testimonial_padding',
            title: 'Padding',
            description: 'Adjust the padding for this testimonial',
            wrap: 'field_wrap',
            type: 'linked_sliders',
            configuration: [{ units: 'px', min: 0, max: 200, step: 1 }, { units: '%', min: 0, max: 100, step: 1 }, { units: 'em', min: 0, max: 30, step: 0.1 }]
        }, {
            id: 'testimonial_border',
            title: 'Border',
            description: 'Design a border for this testimonial',
            wrap: 'field_wrap',
            type: 'border',
            onChange: 'ocbReInitSinglePosts',
            configuration: [{ units: 'px', min: 0, max: 40, step: 1 }]
        }, {
            id: 'testimonial_border_radius',
            title: 'Border Radius',
            description: 'Curve the borders of the testimonial items',
            wrap: 'field_wrap',
            type: 'linked_sliders',
            labels: {
                top: 'topLeft',
                right: 'topRight',
                bottom: 'bottomRight',
                left: 'bottomLeft',
                useDefault: 'None',
                useCustom: 'Add'
            },
            configuration: [{ units: '%', min: 0, max: 100, step: 1 }, { units: 'px', min: 0, max: 500, step: 1 }]
        }, {
            id: 'testimonial_box_shadow',
            title: 'Box Shadow',
            description: 'Box shadow of the testimonial items',
            wrap: 'field_wrap',
            type: 'box_shadow'
        }, {
            id: 'attribution_design_group',
            title: 'Attribution',
            description: 'Configure the design of the attribution',
            wrap: 'field_group',
            settingType: 'design',
            items: ['attribution_color', 'attribution_font_size', 'description_color', 'description_font_size']
        }, {
            id: 'attribution_color',
            title: 'Attribution Color',
            description: 'Select a text color for the attribution',
            wrap: 'field_wrap',
            onChange: 'ocbReInitSinglePosts',
            type: 'color'
        }, {
            id: 'description_color',
            title: 'Attribution Description Color',
            description: 'Select a text color for the attribution description',
            wrap: 'field_wrap',
            onChange: 'ocbReInitSinglePosts',
            type: 'color'
        }, {
            id: 'attribution_font_size',
            title: 'Attribution Font Size',
            description: 'Set the font size for the attribution',
            wrap: 'field_wrap',
            type: 'slider_control',
            configuration: [{ units: 'px', min: 8, max: 50, step: 1 }, { units: 'em', min: 0.5, max: 10, step: 0.1 }, { units: 'rem', min: 0.5, max: 10, step: 0.1 }]
        }, {
            id: 'description_font_size',
            title: 'Attribution Description Font Size',
            description: 'Set the font size for the attribution description',
            wrap: 'field_wrap',
            type: 'slider_control',
            configuration: [{ units: 'px', min: 8, max: 50, step: 1 }, { units: 'em', min: 0.5, max: 10, step: 0.1 }, { units: 'rem', min: 0.5, max: 10, step: 0.1 }]
        }],
        default: {
            testimonials: {
                testimonials: [],
                source: 'custom',
                tags: '',
                lastUpdated: 0
            },
            maximum: {
                value: 10,
                units: 'testimonials',
                useDefault: 'default'
            },
            columns: {
                value: 1,
                units: 'columns',
                useDefault: 'default'
            },
            style: {
                choice: 'quote'
            },
            include_title: {
                yes: 1
            },
            include_attribution: {
                yes: 1
            },
            include_attribution_description: {
                yes: 1
            },
            quote_color: {
                color: 'primary',
                customColor: '#000000'
            },
            quote_font_size: {
                value: 1,
                units: 'em',
                useDefault: 'default'
            },
            quote_background_color: {
                color: 'default',
                customColor: '#000000'
            },
            quote_padding: {
                value: 1,
                units: 'em',
                useDefault: 'default'
            },
            quote_margin: {
                top: 0,
                left: 0,
                right: 0,
                bottom: 0,
                units: 'em',
                useDefault: 'default'
            },
            quote_position: {
                choice: 'left'
            },
            title_color: {
                color: 'default',
                customColor: '#000000'
            },
            title_font_size: {
                value: 1,
                units: 'em',
                useDefault: 'default'
            },
            title_bottom_margin: {
                value: 40,
                units: 'px',
                useDefault: 'default'
            },
            testimonial_color: {
                color: 'default',
                customColor: '#000000'
            },
            testimonial_font_size: {
                value: 1,
                units: 'em',
                useDefault: 'default'
            },
            testimonial_vertical_margin: {
                value: 40,
                units: 'px',
                useDefault: 'default'
            },
            testimonial_horizontal_margin: {
                value: 3,
                units: '%',
                useDefault: 'default'
            },
            testimonial_background_color: {
                color: 'default',
                customColor: '#eeeeee'
            },
            testimonial_padding: {
                top: 1,
                left: 1,
                right: 1,
                bottom: 1,
                units: 'em',
                useDefault: 'default'
            },
            testimonial_border: {
                top: 1,
                left: 1,
                bottom: 1,
                right: 1,
                units: 'px',
                useDefault: 'default',
                type: 'solid',
                color: 'default',
                customColor: '#dddddd'
            },
            testimonial_border_radius: {
                top: 0,
                left: 0,
                right: 0,
                bottom: 0,
                units: 'px',
                useDefault: 'default'
            },
            testimonial_box_shadow: {
                useDefault: 'default',
                horizontal: 0,
                vertical: 0,
                blur: 15,
                spread: 3,
                color: 'rgba(0,0,0,0.2)'
            },
            attribution_color: {
                color: 'default',
                customColor: '#eeeeee'
            },
            attribution_font_size: {
                value: 1,
                units: 'em',
                useDefault: 'default'
            },
            description_color: {
                color: 'default',
                customColor: '#eeeeee'
            },
            description_font_size: {
                value: 1,
                units: 'em',
                useDefault: 'default'
            }
        }
    };
};

;

/***/ }),

/***/ 866:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

exports.default = function () {
    return {
        fields: [{
            id: 'source',
            title: 'Video Source',
            description: 'The service hosting the video',
            wrap: 'field_wrap',
            type: 'radio_toggle',
            settingType: 'content',
            options: [{
                name: 'Youtube',
                value: 'youtube'
            }, {
                name: 'Vimeo',
                value: 'vimeo'
            }, {
                name: 'Dailymotion',
                value: 'dailymotion'
            }, {
                name: 'Upload',
                value: 'upload'
            }]
        }, {
            id: 'url',
            title: 'Video URL or ID',
            description: 'Enter the url of the video here or just enter the video\'s ID',
            wrap: 'field_wrap',
            type: 'text',
            settingType: 'content',
            configuration: {
                inputType: 'url'
            },
            conditional: {
                ifTrue: 'hide',
                conditions: [{
                    id: 'source',
                    property: 'choice',
                    value: 'upload'
                }]
            }
        }, {
            id: 'upload',
            title: 'Video Upload',
            description: 'Upload the mp4 of your video',
            note: 'Video uploads must be mp4s to ensure browser compatibility',
            wrap: 'field_wrap',
            type: 'media',
            settingType: 'content',
            textType: 'url',
            requiredCheck: true,
            configuration: {
                type: 'video'
            },
            conditional: {
                conditions: [{
                    id: 'source',
                    property: 'choice',
                    value: 'upload'
                }]
            }
        }, {
            id: 'youtube_player_group',
            title: 'Youtube Player Options',
            description: 'Control the look and feel of the Youtube player',
            wrap: 'field_group',
            settingType: 'content',
            items: ['hide_controls', 'hide_info'],
            conditional: {
                conditions: [{
                    id: 'source',
                    property: 'choice',
                    value: 'youtube'
                }]
            }
        }, {
            id: 'hide_controls',
            title: 'Hide Controls',
            description: 'Hide the play, pause and navigation buttons on the video player',
            wrap: 'field_wrap',
            type: 'switch',
            note: 'If using a modal, you can only see changes to this option after you refresh the page'
        }, {
            id: 'hide_info',
            title: 'Hide Info',
            description: 'Hide the title and other information of the video',
            wrap: 'field_wrap',
            type: 'switch',
            note: 'If using a modal, you can only see changes to this option after you refresh the page'
        }, {
            id: 'upload_player_group',
            title: 'Upload Player Options',
            description: 'Control the look and feel of the upload player',
            wrap: 'field_group',
            settingType: 'content',
            items: ['upload_hide_controls', 'upload_autoplay', 'upload_loop', 'upload_mute'],
            conditional: {
                conditions: [{
                    id: 'source',
                    property: 'choice',
                    value: 'upload'
                }]
            }
        }, {
            id: 'upload_hide_controls',
            title: 'Hide Controls',
            description: 'Hide the play, pause and navigation buttons on the video player',
            wrap: 'field_wrap',
            type: 'switch'
        }, {
            id: 'upload_autoplay',
            title: 'Autoplay',
            description: 'Automatically start playing the video',
            wrap: 'field_wrap',
            type: 'switch'
        }, {
            id: 'upload_loop',
            title: 'Loop',
            description: 'Loop playback of the video',
            wrap: 'field_wrap',
            type: 'switch'
        }, {
            id: 'upload_mute',
            title: 'Mute',
            description: 'Mute playback of the video',
            wrap: 'field_wrap',
            type: 'switch'
        }, {
            id: 'modal_group',
            title: 'Modal',
            description: 'Trigger the video to open in a modal',
            wrap: 'field_group',
            settingType: 'design',
            items: ['use_modal', 'modal_trigger']
        }, {
            id: 'use_modal',
            title: 'Open in Modal Overlay',
            description: 'Open the video in a modal overlay window',
            wrap: 'field_wrap',
            type: 'switch'
        }, {
            id: 'modal_trigger',
            title: 'Modal Trigger',
            description: 'Choose what kind of element to click on to trigger the video modal',
            wrap: 'field_wrap',
            type: 'radio_toggle',
            options: [{
                name: 'Image',
                value: 'image'
            }, {
                name: 'Button',
                value: 'button'
            }],
            conditional: {
                conditions: [{
                    id: 'use_modal',
                    property: 'yes',
                    value: 1
                }]
            }
        }, {
            id: 'image_trigger_group',
            title: 'Image Trigger',
            description: 'Settings for the image that, when clicked, will play the video in a modal',
            wrap: 'field_group',
            settingType: 'design',
            items: ['include_play_button', 'play_button_color'],
            conditional: {
                conditions: [{
                    id: 'use_modal',
                    property: 'yes',
                    value: 1
                }, {
                    id: 'modal_trigger',
                    property: 'choice',
                    value: 'image'
                }]
            }
        }, {
            id: 'image',
            title: 'Placeholder Image',
            description: 'The image that is clicked on to open the video modal overlay',
            wrap: 'field_wrap',
            type: 'media',
            settingType: 'content',
            configuration: {
                type: 'image'
            },
            conditional: {
                conditions: [{
                    id: 'use_modal',
                    property: 'yes',
                    value: 1
                }, {
                    id: 'modal_trigger',
                    property: 'choice',
                    value: 'image'
                }]
            }
        }, {
            id: 'include_play_button',
            title: 'Include Play Button',
            description: 'Shows a play button over the placeholder image',
            wrap: 'field_wrap',
            type: 'switch',
            conditional: {
                conditions: [{
                    id: 'modal_trigger',
                    property: 'choice',
                    value: 'image'
                }]
            }
        }, {
            id: 'play_button_color',
            title: 'Play Button Color',
            description: 'The color of the play button over the placeholder image',
            wrap: 'field_wrap',
            type: 'color',
            conditional: {
                type: 'and',
                conditions: [{
                    id: 'modal_trigger',
                    property: 'choice',
                    value: 'image'
                }, {
                    id: 'include_play_button',
                    property: 'yes',
                    value: 1
                }]
            }
        }, {
            id: 'button_group',
            title: 'Button Trigger',
            description: 'Configure design of the modal trigger button',
            wrap: 'field_group',
            items: ['button_skin', 'button_text', 'button_mixin', 'button_alignment_group', 'button_icon_group'],
            conditional: {
                conditions: [{
                    id: 'use_modal',
                    property: 'yes',
                    value: 1
                }, {
                    id: 'modal_trigger',
                    property: 'choice',
                    value: 'button'
                }]
            }
        },
        /*{
            id: 'button_skin',
            title: 'Submit Button Skin',
            description: 'Use a site-wide button skin set in site settings or create a custom design for the submit button',
            wrap: 'field_wrap',
            type: 'dropdown',
            settingType: 'design',
            note: 'Button skins can be configured in the site settings area. This is useful for having site-wide button designs that can be updated in a single place.',
            options: [
                {
                    name: 'Action',
                    value: 'action'
                },
                {
                    name: 'Info',
                    value: 'info'
                },
                {
                    name: 'Custom',
                    value: 'custom'
                }
            ]
        },*/
        {
            id: 'button_skin',
            title: 'Modal Button Skin',
            description: 'Use a button skin or create a custom design for this button',
            wrap: 'field_wrap',
            type: 'skin',
            settingType: 'design',
            configuration: {
                moduleType: 'button'
            }
        }, {
            id: 'button_text',
            title: 'Button Text',
            description: 'Enter the text here',
            wrap: 'field_wrap',
            settingType: 'content',
            type: 'text'
        }, {
            id: 'button_mixin',
            wrap: 'field_mixin',
            mixin: 'button',
            prefix: 'button_',
            group: 'button_group',
            settingType: 'design',
            conditional: {
                conditions: [{
                    id: 'button_skin',
                    property: 'choice',
                    value: 'custom'
                }]
            }
        }, {
            id: 'button_alignment_group',
            title: 'Button Alignment',
            description: 'Control the alignment of the button',
            wrap: 'field_group',
            settingType: 'design',
            items: ['button_alignment', 'button_mobile_alignment']
        }, {
            id: 'button_alignment',
            title: 'Button Alignment',
            description: 'Where to position the button',
            wrap: 'field_wrap',
            type: 'radio_toggle',
            options: [{
                name: 'Left',
                value: 'left'
            }, {
                name: 'Center',
                value: 'center'
            }, {
                name: 'Stretch',
                value: 'stretch'
            }, {
                name: 'Right',
                value: 'right'
            }],
            configuration: {
                flex: true
            },
            conditional: {
                conditions: [{
                    id: 'button_inline_row',
                    property: 'yes',
                    value: 0
                }]
            }
        }, {
            id: 'button_mobile_alignment',
            title: 'Button Mobile Alignment',
            description: 'Where to position the button',
            wrap: 'field_wrap',
            type: 'radio_toggle',
            options: [{
                name: 'Left',
                value: 'left'
            }, {
                name: 'Center',
                value: 'center'
            }, {
                name: 'Stretch',
                value: 'stretch'
            }, {
                name: 'Right',
                value: 'right'
            }],
            configuration: {
                flex: true
            }
        }, {
            id: 'button_icon_group',
            title: 'Button Icon',
            description: 'Control the button icon settings',
            wrap: 'field_group',
            settingType: 'design',
            items: ['button_add_icon', 'button_icon', 'button_icon_alignment', 'button_icon_mixin']
        }, {
            id: 'button_add_icon',
            title: 'Add Icon',
            description: 'Use an icon in this button',
            wrap: 'field_wrap',
            type: 'switch'
        }, {
            id: 'button_icon',
            title: 'Icon',
            description: 'The icon for the button',
            wrap: 'field_wrap',
            type: 'icon',
            conditional: {
                conditions: [{
                    id: 'button_add_icon',
                    property: 'yes',
                    value: 1
                }]
            }
        }, {
            id: 'button_icon_alignment',
            title: 'Icon Alignment',
            description: 'Where to position the icon',
            wrap: 'field_wrap',
            type: 'radio_toggle',
            options: [{
                name: 'Left',
                value: 'left'
            }, {
                name: 'Right',
                value: 'right'
            }],
            configuration: {
                flex: true
            },
            conditional: {
                conditions: [{
                    id: 'button_add_icon',
                    property: 'yes',
                    value: 1
                }]
            }
        }, {
            id: 'button_icon_mixin',
            wrap: 'field_mixin',
            mixin: 'icon',
            prefix: 'button_icon_',
            group: 'button_icon_group',
            conditional: {
                conditions: [{
                    id: 'button_add_icon',
                    property: 'yes',
                    value: 1
                }]
            }
        }, {
            id: 'advanced_group',
            title: 'Advanced',
            description: 'Set advanced settings for this video',
            wrap: 'field_group',
            settingType: 'content',
            items: ['lazyload', 'lazyload_note', 'lazyload_image']
        }, {
            id: 'lazyload',
            title: 'Lazy Load Video',
            description: 'This will make it so that the video loads after the page is loaded',
            wrap: 'field_wrap',
            type: 'switch',
            conditional: {
                conditions: [{
                    id: 'source',
                    property: 'choice',
                    value: 'upload'
                }]
            }
        }, {
            id: 'lazyload_note',
            title: 'Lazy Load Video',
            description: '',
            wrap: 'field_wrap',
            type: 'note',
            note: 'You can only lazyload custom uploaded videos.',
            conditional: {
                ifTrue: 'hide',
                conditions: [{
                    id: 'source',
                    property: 'choice',
                    value: 'upload'
                }]
            }
        }, {
            id: 'lazyload_image',
            title: 'Lazy Load Image',
            description: 'This will make it so that the image trigger loads after the page is loaded',
            wrap: 'field_wrap',
            type: 'switch',
            conditional: {
                conditions: [{
                    id: 'modal_trigger',
                    property: 'choice',
                    value: 'image'
                }]
            }
        }],
        default: {
            source: {
                choice: 'youtube'
            },
            url: {
                text: 'https://www.youtube.com/watch?v=7zIZVrl-ya0'
            },
            upload: {
                url: '',
                object: {},
                size: 'full'
            },
            upload_hide_controls: {
                yes: 0
            },
            upload_autoplay: {
                yes: 0
            },
            upload_mute: {
                yes: 0
            },
            upload_loop: {
                yes: 0
            },
            use_modal: {
                yes: 0
            },
            modal_trigger: {
                choice: 'image'
            },
            image: {
                url: 'https://s3-us-west-2.amazonaws.com/s.cdpn.io/142996/slider-2.jpg',
                object: {},
                size: 'full'
            },
            include_play_button: {
                yes: 1
            },
            play_button_color: {
                color: 'white'
            },
            hide_controls: {
                yes: 0
            },
            hide_info: {
                yes: 0
            },
            button_skin: {
                choice: 'custom'
            },
            button_inline_row: {
                yes: 0
            },
            button_alignment: {
                choice: 'center'
            },
            button_mobile_alignment: {
                choice: 'center'
            },
            button_text: {
                text: 'Watch Video'
            },
            button_add_icon: {
                yes: 0
            },
            button_icon: {
                icon: 'fa-youtube-play'
            },
            button_icon_alignment: {
                choice: 'left'
            },
            lazyload: {
                yes: 0
            },
            lazyload_image: {
                yes: 1
            }
        }
    };
};

;

/***/ }),

/***/ 867:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

exports.default = function () {
    var fields = {
        fields: [{
            id: 'widget',
            title: 'Widget',
            description: 'Choose and configure a WordPress widget to use',
            wrap: 'field_wrap',
            settingType: 'content',
            type: 'wp_widget'
        }],
        default: {
            widget: {
                widget: '',
                widgetClass: '',
                widgetValues: ''
            }
        }
    };

    //DevUtilities.logFieldDefaults( fields );

    return fields;
};

;

/***/ }),

/***/ 868:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ModuleEmbed = function (_Component) {
    _inherits(ModuleEmbed, _Component);

    function ModuleEmbed() {
        _classCallCheck(this, ModuleEmbed);

        return _possibleConstructorReturn(this, (ModuleEmbed.__proto__ || Object.getPrototypeOf(ModuleEmbed)).apply(this, arguments));
    }

    _createClass(ModuleEmbed, [{
        key: 'render',
        value: function render() {
            var settings = this.props.settings.linked;
            var embed = settings.embed.text;

            embed = embed ? embed : '<p>Enter your embed code.</p>';

            return _react2.default.createElement('div', { 'data-ocb-type': 'embed', className: 'ocb-module-embed', dangerouslySetInnerHTML: { __html: embed } });
        }
    }]);

    return ModuleEmbed;
}(_react.Component);

exports.default = ModuleEmbed;

/***/ }),

/***/ 869:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _default_features = __webpack_require__(376);

var _default_features2 = _interopRequireDefault(_default_features);

var _settings_helpers = __webpack_require__(2);

var _settings_helpers2 = _interopRequireDefault(_settings_helpers);

var _item_icon = __webpack_require__(64);

var _item_icon2 = _interopRequireDefault(_item_icon);

var _item_button = __webpack_require__(48);

var _item_button2 = _interopRequireDefault(_item_button);

var _item_editable_text = __webpack_require__(72);

var _item_editable_text2 = _interopRequireDefault(_item_editable_text);

var _item_background = __webpack_require__(106);

var _item_background2 = _interopRequireDefault(_item_background);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ModuleFeatures = function (_Component) {
    _inherits(ModuleFeatures, _Component);

    function ModuleFeatures() {
        _classCallCheck(this, ModuleFeatures);

        return _possibleConstructorReturn(this, (ModuleFeatures.__proto__ || Object.getPrototypeOf(ModuleFeatures)).apply(this, arguments));
    }

    _createClass(ModuleFeatures, [{
        key: 'getSettings',


        /**
         * Every module type should have this function which sets the fullProps, merging them with the default
         * @returns {{}}
         */
        value: function getSettings() {
            var fullProps = {};
            fullProps.linked = _settings_helpers2.default.mergeWithDefault((0, _default_features2.default)().default, this.props.settings.linked);

            return fullProps;
        }
    }, {
        key: 'preventLinkFollow',
        value: function preventLinkFollow(e) {
            e.preventDefault();
            e.stopPropagation();
            e.nativeEvent.stopImmediatePropagation();
            return false;
        }
    }, {
        key: 'updateButtonText',
        value: function updateButtonText(text) {
            var update = Object.assign(this.props.object.settings);
            if (update.linked.button_text == undefined) {
                update.linked.button_text = { text: '' };
            }
            update.linked.button_text.text = text;

            //If settings aren't linked, then update all of the devices because this is a shared setting
            if (this.props.object.deviceLock != undefined && this.props.object.deviceLock == false) {
                update.laptop.button_text.text = text;
                update.tablet.button_text.text = text;
                update.phone.button_text.text = text;
            }
            this.props.treeProps.settings.updateObjectSettings(this.props.object, update);
        }
    }, {
        key: 'updateText',
        value: function updateText(text, index) {
            var update = Object.assign(this.props.object.settings);
            if (update.linked.features.items[index].text == undefined) {
                update.linked.features.items[index].text = { text: '' };
            }
            update.linked.features.items[index].text.text = text;

            //If settings aren't linked, then update all of the devices because this is a shared setting
            if (this.props.object.deviceLock != undefined && this.props.object.deviceLock == false) {
                update.laptop.features.items[index].text.text = text;
                update.tablet.features.items[index].text.text = text;
                update.phone.features.items[index].text.text = text;
            }
            this.props.treeProps.settings.updateObjectSettings(this.props.object, update);
        }

        /******************* RENDER ****************/

    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var style = '';
            var additionalCSS = '';
            var imageCSS = '';
            var settings = this.props.settings.linked;

            var buttonClass = '';
            if (settings.button_alignment.choice == 'stretch_bottom') {
                settings.button_alignment.choice = 'stretch';
                buttonClass = 'ocb-feature-item-button-bottom';
            }

            var items = _react2.default.createElement(
                'p',
                null,
                'Configure your features'
            );

            if (settings.features != undefined && settings.features.items) {
                items = settings.features.items.map(function (feature, index) {
                    var text = void 0,
                        icon = void 0,
                        link = void 0;
                    var iconFull = void 0,
                        imageFull = null;

                    if (feature.text != undefined && feature.text.text != undefined) text = feature.text.text;
                    if (feature.icon != undefined && feature.icon.icon != undefined) icon = feature.icon.icon;
                    if (feature.link != undefined && feature.link.url != undefined) link = feature.link.url;

                    iconFull = _react2.default.createElement(
                        'span',
                        { className: 'ocb-feature-item-image-icon ocb-feature-item-icon ' + _this2.props.classesCSS.classes.featuresIconClasses },
                        _react2.default.createElement(_item_icon2.default, { icon: icon, settings: settings, objectId: _this2.props.object.id, classesCSS: _this2.props.classesCSS })
                    );

                    var url = feature.image != undefined && feature.image.url != undefined ? feature.image.url : false;
                    if (url) {
                        var theImage = _react2.default.createElement('img', { className: 'ocb-feature-item-img ocb-image-img', src: _settings_helpers2.default.getImageURL(url) });

                        if (settings.image_display.choice == 'height') {
                            theImage = null;
                            imageCSS += _settings_helpers2.default.wrapCSSProperty(_this2.props.object.id, '.ocb-feature-item-image-' + index, 'background-image', 'url(' + _settings_helpers2.default.getImageURL(url, feature.image, 'background') + ')');
                        }

                        imageFull = _react2.default.createElement(
                            'div',
                            { className: 'ocb-feature-item-image ocb-feature-item-image-' + index + ' ocb-image-inner ocb-image-display-' + settings.image_display.choice + ' ' + _this2.props.classesCSS.classes.featuresImageClasses },
                            theImage
                        );
                    }

                    var itemImageBackground = null;
                    if (settings.image_type.choice == 'image' && settings.image_position.choice == 'background') {
                        var backgroundProps = {
                            background_type: {
                                choice: 'image'
                            },
                            background_type_screen: {
                                choice: 'color'
                            },
                            background: settings.box_background_color,
                            screen_opacity: settings.box_background_color_opacity,
                            background_screen: settings.box_background_color,
                            background_image: feature.image
                        };
                        itemImageBackground = _react2.default.createElement(_item_background2.default, { customId: _this2.props.object.id, settings: backgroundProps, object: _this2.props.object, selector: '.ocb-feature-item-' + index + ' .ocb-item-background', classesCSS: _this2.props.classesCSS });
                    }

                    var button = null;
                    if (settings.link_type.choice == 'button') {
                        var buttonUses = false;
                        if (settings.button_skin.choice && settings.button_skin.choice != 'custom' && _this2.props.object.skinId) {
                            buttonUses = '{{ocbu:' + _this2.props.object.skinId + '|settings|linked|button_skin|choice}}';
                        }
                        var newWindow = false;
                        if (feature.link.newWindow != undefined && feature.link.newWindow) {
                            newWindow = true;
                        }
                        button = _react2.default.createElement(
                            'span',
                            { className: 'ocb-feature-item-button ' + buttonClass },
                            _react2.default.createElement(_item_button2.default, {
                                settings: settings,
                                object: _this2.props.object,
                                objectId: _this2.props.object.id,
                                update: _this2.updateButtonText.bind(_this2),
                                classesCSS: _this2.props.classesCSS,
                                url: link,
                                newWindow: newWindow,
                                uses: buttonUses,
                                treeProps: _this2.props.treeProps,
                                isContentEditable: !_this2.props.treeProps.settings.settingsActive })
                        );
                    }

                    var textDom = _react2.default.createElement(_item_editable_text2.default, { text: text, textObject: feature.text, index: index, update: _this2.updateText.bind(_this2), objectId: _this2.props.object.id, object: _this2.props.object, treeProps: _this2.props.treeProps });

                    if (settings.link_type.choice == 'box' && link) {
                        var boxAtts = {};

                        if (feature.link.newWindow != undefined && feature.link.newWindow) {
                            boxAtts.target = '_blank';
                            boxAtts.rel = 'noopener noreferrer';
                        }

                        return _react2.default.createElement(
                            'div',
                            { key: index, className: 'ocb-feature-item ocb-feature-item-' + index + ' ocb-specific-color ' + _this2.props.classesCSS.classes.featureItem },
                            itemImageBackground,
                            _react2.default.createElement(
                                'a',
                                _extends({ className: 'ocb-feature-item-inner ocb-feature-item-link ' + _this2.props.classesCSS.classes.featuresClasses, href: link, onClick: function onClick(e) {
                                        return _this2.preventLinkFollow(e);
                                    } }, boxAtts),
                                iconFull,
                                imageFull,
                                _react2.default.createElement(
                                    'span',
                                    { className: 'ocb-feature-item-text-wrap ' + _this2.props.classesCSS.classes.featuresTextClasses },
                                    textDom
                                )
                            )
                        );
                    } else {
                        return _react2.default.createElement(
                            'div',
                            { key: index, className: 'ocb-feature-item ocb-feature-item-' + index + ' ocb-specific-color ' + _this2.props.classesCSS.classes.featureItem },
                            itemImageBackground,
                            _react2.default.createElement(
                                'div',
                                { className: 'ocb-feature-item-inner ' + _this2.props.classesCSS.classes.featuresClasses },
                                iconFull,
                                imageFull,
                                _react2.default.createElement(
                                    'span',
                                    { className: 'ocb-feature-item-text-wrap ' + _this2.props.classesCSS.classes.featuresTextClasses },
                                    textDom,
                                    button
                                )
                            )
                        );
                    }
                });
            }

            var imageCSSTag = null;
            if (imageCSS) imageCSSTag = _settings_helpers2.default.wrapCSSInStyleTag(imageCSS, this.props.object.id, '.ocb-feature-item-image');

            return _react2.default.createElement(
                'div',
                { 'data-ocb-type': 'features', className: 'ocb-module-features' },
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-module-features-inner d-md-flex flex-wrap' },
                    this.props.classesCSS.css,
                    imageCSSTag,
                    items
                )
            );
        }
    }]);

    return ModuleFeatures;
}(_react.Component);

exports.default = ModuleFeatures;

/***/ }),

/***/ 870:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _default_gallery = __webpack_require__(377);

var _default_gallery2 = _interopRequireDefault(_default_gallery);

var _settings_helpers = __webpack_require__(2);

var _settings_helpers2 = _interopRequireDefault(_settings_helpers);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ModuleGallery = function (_Component) {
    _inherits(ModuleGallery, _Component);

    function ModuleGallery() {
        _classCallCheck(this, ModuleGallery);

        return _possibleConstructorReturn(this, (ModuleGallery.__proto__ || Object.getPrototypeOf(ModuleGallery)).apply(this, arguments));
    }

    _createClass(ModuleGallery, [{
        key: 'getSettings',


        /**
         * Every module type should have this function which sets the fullProps, merging them with the default
         * @returns {{}}
         */
        value: function getSettings() {
            var fullProps = {};
            fullProps.linked = _settings_helpers2.default.mergeWithDefault((0, _default_gallery2.default)().default, this.props.settings.linked);

            return fullProps;
        }

        /******************* RENDER ****************/

    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var fullProps = this.getSettings();

            var images = [{
                url: 'https://s3-us-west-2.amazonaws.com/s.cdpn.io/82/orange-tree.jpg'
            }, {
                url: 'https://s3-us-west-2.amazonaws.com/s.cdpn.io/82/submerged.jpg'
            }, {
                url: 'https://s3-us-west-2.amazonaws.com/s.cdpn.io/82/look-out.jpg'
            }, {
                url: 'https://s3-us-west-2.amazonaws.com/s.cdpn.io/82/one-world-trade.jpg'
            }, {
                url: 'https://s3-us-west-2.amazonaws.com/s.cdpn.io/82/drizzle.jpg'
            }, {
                url: 'https://s3-us-west-2.amazonaws.com/s.cdpn.io/82/cat-nose.jpg'
            }, {
                url: 'https://s3-us-west-2.amazonaws.com/s.cdpn.io/82/contrail.jpg'
            }, {
                url: 'https://s3-us-west-2.amazonaws.com/s.cdpn.io/82/golden-hour.jpg'
            }, {
                url: 'https://s3-us-west-2.amazonaws.com/s.cdpn.io/82/flight-formation.jpg'
            }];

            var items = _react2.default.createElement(
                'div',
                null,
                'Add your gallery images'
            );

            if (fullProps.linked.images.files == undefined || !fullProps.linked.images.files.length) {
                items = images.map(function (image, index) {
                    return _react2.default.createElement(
                        'div',
                        { key: index, className: 'ocb-masonry-item ocb-gallery-item', 'data-image-index': index, 'data-gallery-id': _this2.props.id, 'data-image-full': image.url },
                        _react2.default.createElement(
                            'div',
                            { className: 'ocb-image-hover ocb-image-hover-wrapper ocb-image-hover-style-zoom' },
                            _react2.default.createElement('img', { src: image.url }),
                            _react2.default.createElement('div', { className: 'ocb-image-hover-overlay' }),
                            _react2.default.createElement(
                                'div',
                                { className: 'ocb-image-hover-caption' },
                                _react2.default.createElement(
                                    'h5',
                                    { className: 'ocb-image-hover-title' },
                                    'Default'
                                )
                            ),
                            _react2.default.createElement('span', { className: 'ocb-gallery-full ocb-image-hover-link' })
                        )
                    );
                });
            }

            if (fullProps.linked.images.files != undefined && fullProps.linked.images.files.length) {
                items = fullProps.linked.images.files.map(function (image, index) {
                    var size = fullProps.linked.images.size != undefined ? fullProps.linked.images.size : 'full';
                    var imageUrl = image.sizes != undefined && image.sizes[size] != undefined ? image.sizes[size].url : image.url;
                    var imageFullUrl = image.sizes != undefined && image.sizes.full != undefined ? image.sizes.full.url : image.url;
                    var title = image.title != undefined ? image.title : '';
                    var alt = image.alt != undefined ? image.alt : '';

                    return _react2.default.createElement(
                        'div',
                        { key: index, className: 'ocb-masonry-item ocb-gallery-item', 'data-image-index': index, 'data-gallery-id': _this2.props.id, 'data-image-full': _settings_helpers2.default.getImageURL(imageFullUrl) },
                        _react2.default.createElement(
                            'div',
                            { className: 'ocb-image-hover ocb-image-hover-wrapper ocb-image-hover-style-zoom' },
                            _react2.default.createElement('img', { src: _settings_helpers2.default.getImageURL(imageUrl), alt: alt, title: title }),
                            _react2.default.createElement('div', { className: 'ocb-image-hover-overlay' }),
                            _react2.default.createElement(
                                'div',
                                { className: 'ocb-image-hover-caption' },
                                _react2.default.createElement(
                                    'h5',
                                    { className: 'ocb-image-hover-title' },
                                    title
                                )
                            ),
                            _react2.default.createElement('span', { className: 'ocb-gallery-full ocb-image-hover-link' })
                        )
                    );
                });
            }

            return _react2.default.createElement(
                'div',
                { 'data-ocb-type': 'gallery', className: 'ocb-module-gallery clearfix' },
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-masonry-grid', 'data-id': this.props.object.id },
                    _react2.default.createElement('div', { className: 'grid-sizer' }),
                    items
                )
            );
        }
    }]);

    return ModuleGallery;
}(_react.Component);

exports.default = ModuleGallery;

/***/ }),

/***/ 871:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _settings_helpers = __webpack_require__(2);

var _settings_helpers2 = _interopRequireDefault(_settings_helpers);

var _item_editable_text = __webpack_require__(72);

var _item_editable_text2 = _interopRequireDefault(_item_editable_text);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ModuleHeader = function (_Component) {
    _inherits(ModuleHeader, _Component);

    function ModuleHeader() {
        _classCallCheck(this, ModuleHeader);

        return _possibleConstructorReturn(this, (ModuleHeader.__proto__ || Object.getPrototypeOf(ModuleHeader)).apply(this, arguments));
    }

    _createClass(ModuleHeader, [{
        key: 'updateText',
        value: function updateText(newText) {
            var update = Object.assign(this.props.object.settings);
            update.linked.text.text = newText;

            //If settings aren't linked, then update all of the devices because this is a shared setting
            if (this.props.object.deviceLock != undefined && this.props.object.deviceLock == false) {
                update.laptop.text.text = newText;
                update.tablet.text.text = newText;
                update.phone.text.text = newText;
            }

            this.props.treeProps.settings.updateObjectSettings(this.props.object, update);
        }
    }, {
        key: 'render',
        value: function render() {
            var settings = this.props.settings.linked;
            var text = settings.text.text;
            var align = settings.alignment.choice;
            var mobileAlign = settings.mobile_alignment.choice;
            var target = settings.target_name.text;
            var theId = null;
            var dataTarget = null;

            var editable = _react2.default.createElement(_item_editable_text2.default, { text: text, textObject: settings.text, editType: 'headingarea', toolbar: 'ocbconnected ocbcolor bold italic strikethrough | removeformat code', update: this.updateText.bind(this), objectId: this.props.object.id, object: this.props.object, treeProps: this.props.treeProps });
            var title = _react2.default.createElement(settings.type.choice, { className: 'ocb-header' }, editable);

            if (target) {
                theId = 'ocbheader-' + this.props.object.id;
                dataTarget = 'Header: ' + target;
            }

            if (settings.link.url) {
                title = _react2.default.createElement(
                    'a',
                    { href: settings.link.url },
                    title
                );
            }

            return _react2.default.createElement(
                'div',
                { id: theId, className: 'ocb-module-header text-' + mobileAlign + ' text-md-' + align, 'data-ocb-type': 'header', 'data-ocb-target': dataTarget },
                this.props.classesCSS.css,
                title,
                _react2.default.createElement(
                    'div',
                    { className: 'text-md-' + align + ' text-' + mobileAlign + ' ' + this.props.classesCSS.classes.line },
                    _react2.default.createElement('hr', { className: 'ocb-separator ' + this.props.classesCSS.classes.lineHR })
                )
            );
        }
    }]);

    return ModuleHeader;
}(_react.Component);

exports.default = ModuleHeader;

/***/ }),

/***/ 872:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _settings_helpers = __webpack_require__(2);

var _settings_helpers2 = _interopRequireDefault(_settings_helpers);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var AccordionHelpers = {
    get_style: function get_style(settings, object) {
        var skinId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

        settings = settings.linked;

        var iconColorCSS = '';
        var iconColorClass = '';

        if (settings.icon_color.color != 'default') {
            if (settings.icon_color.color == 'custom') {
                iconColorCSS = _settings_helpers2.default.wrapCSSProperty(this.props.object.id, '.ocb-accordion-nav-item .fa', 'color', settings.icon_color.customColor);
            } else {
                iconColorClass = settings.icon_color.color + '-color ocb-specific';
            }
        }

        var wrapId = skinId ? skinId : object.id;

        var titleClassesAndCSS = _settings_helpers2.default.getClassesAndCSS(['color', 'padding', 'border', 'font'], settings, wrapId, '.ocb-accordion-nav-item', 'title', '', '', '', '', { returnType: 'css' });
        var bodyClassesAndCSS = _settings_helpers2.default.getClassesAndCSS(['color', 'padding', 'border'], settings, wrapId, '.ocb-accordion-content-item', 'body', '', '', '', '', { returnType: 'css' });

        return {
            classes: Object.assign({ accordionTitle: titleClassesAndCSS.classes, accordionBody: bodyClassesAndCSS.classes }, AccordionHelpers.get_classes(settings, object, skinId)),
            css: { additional: titleClassesAndCSS.styleTag + bodyClassesAndCSS.styleTag + AccordionHelpers.get_css(settings, object, skinId) }
        };
    },
    get_classes: function get_classes(settings, object) {
        var skinId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

        var iconColorClass = '';

        var iconOpenClass = 'fa-plus';
        var iconCloseClass = 'fa-minus';

        switch (settings.icon_choice.choice) {
            case 'heavy_chevron':
                iconOpenClass = 'fa-chevron-right';
                iconCloseClass = 'fa-chevron-up';
                break;
            case 'light_chevron':
                iconOpenClass = 'fa-angle-right';
                iconCloseClass = 'fa-angle-up';
                break;
            case 'double_chevron':
                iconOpenClass = 'fa-angle-double-right';
                iconCloseClass = 'fa-angle-double-up';
                break;
            case 'triangle':
                iconOpenClass = 'fa-caret-right';
                iconCloseClass = 'fa-caret-up';
                break;
            case 'box_triangle':
                iconOpenClass = 'fa-caret-square-o-right';
                iconCloseClass = 'fa-caret-square-o-up';
                break;
            case '':
                iconOpenClass = 'd-none';
                iconCloseClass = 'd-none';
                break;
            default:
                iconOpenClass = 'fa-plus';
                iconCloseClass = 'fa-minus';
        }

        if (settings.icon_color.color != 'default' && settings.icon_color.color != 'custom') {
            iconColorClass = ' ' + settings.icon_color.color + '-color ocb-specific';
        }

        return { accordionIconOpen: ' ' + iconOpenClass + iconColorClass, accordionIconClose: ' ' + iconCloseClass + iconColorClass };
    },
    get_css: function get_css(settings, object) {
        var skinId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

        var wrapId = skinId ? '.' + skinId : object.id;

        var additionalCSS = '';

        if (settings.icon_color.color == 'custom') {
            additionalCSS = _settings_helpers2.default.wrapCSSProperty(wrapId, '.ocb-accordion-nav-item .fa', 'color', settings.icon_color.customColor);
        }

        return additionalCSS;
    }
};

exports.default = AccordionHelpers;

/***/ }),

/***/ 873:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _button_item_helpers = __webpack_require__(63);

var _button_item_helpers2 = _interopRequireDefault(_button_item_helpers);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ButtonHelpers = {
    get_style: function get_style(settings, object) {
        var skinId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

        settings = settings.linked;

        var itemButton = _button_item_helpers2.default.get_button_item_style(settings, object, skinId);

        return {
            classes: itemButton.classes,
            css: { additional: itemButton.css }
        };
    },
    get_classes: function get_classes(settings, object) {
        var skinId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

        settings = settings.linked;

        var itemButton = _button_item_helpers2.default.get_button_item_style(settings, object, skinId);

        return itemButton.classes;
    },
    get_css: function get_css(settings, object) {
        var skinId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

        settings = settings.linked;

        var itemButton = _button_item_helpers2.default.get_button_item_style(settings, object, skinId);

        return {
            additional: itemButton.css
        };
    }
};

exports.default = ButtonHelpers;

/***/ }),

/***/ 874:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _button_item_helpers = __webpack_require__(63);

var _button_item_helpers2 = _interopRequireDefault(_button_item_helpers);

var _icon_item_helpers = __webpack_require__(44);

var _icon_item_helpers2 = _interopRequireDefault(_icon_item_helpers);

var _settings_helpers = __webpack_require__(2);

var _settings_helpers2 = _interopRequireDefault(_settings_helpers);

var _image_helpers = __webpack_require__(381);

var _image_helpers2 = _interopRequireDefault(_image_helpers);

var _background_helpers = __webpack_require__(49);

var _background_helpers2 = _interopRequireDefault(_background_helpers);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var FeaturesHelpers = {
    get_style: function get_style(settings, object) {
        var skinId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

        settings = settings.linked;

        var theSkinId = skinId ? '.' + skinId : object.id;

        var classes = FeaturesHelpers.get_classes(settings, object, theSkinId);
        var featureClassesAndCSS = _settings_helpers2.default.getClassesAndCSS(['color', 'border', 'font', 'box-shadow'], settings, skinId ? skinId : object.id, '.ocb-feature-item', 'box', '', '', '', '', { returnType: 'css' });

        //Background Item
        var backgroundProps = {
            background_type: {
                choice: 'image'
            },
            background_type_screen: {
                choice: 'color'
            },
            background: settings.box_background_color,
            screen_opacity: settings.box_background_color_opacity,
            background_screen: settings.box_background_color
        };

        var backgroundItem = _background_helpers2.default.getBackgroundStyle(backgroundProps, object, '', skinId, '.ocb-feature-item .ocb-item-background', 'color');
        var iconItem = _icon_item_helpers2.default.get_icon_item_style(settings, object, skinId);
        var buttonItem = _button_item_helpers2.default.get_button_item_style(settings, object, skinId);
        var featureItemClasses = featureClassesAndCSS.classes;

        if (settings.incomplete_row.choice == 'natural') {
            featureItemClasses += ' ocb-feature-item-natural';
        }

        return {
            classes: Object.assign(classes, { featureItem: featureItemClasses }, backgroundItem.classes, iconItem.classes, buttonItem.classes),
            css: { additional: FeaturesHelpers.get_css(settings, object, theSkinId) + featureClassesAndCSS.styleTag + backgroundItem.css.css + iconItem.css + buttonItem.css }
        };
    },
    get_classes: function get_classes(settings, object) {
        var skinId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

        var featuresClasses = '',
            featuresImageClasses = '',
            featuresIconClasses = '',
            buttonItemWrap = '',
            featuresTextClasses = '';

        featuresClasses = 'ocb-feature-item-align-' + settings.image_position.choice;

        switch (settings.image_position.choice) {
            case 'left':
                featuresImageClasses += ' d-flex align-items-center';
                featuresClasses += ' d-flex align-items-stretch';
                featuresTextClasses += ' align-self-center';
                break;
            case 'leftTop':
                featuresClasses += ' d-flex align-items-stretch';
                break;
            case 'right':
                featuresClasses += ' d-flex flex-row-reverse align-items-stretch';
                featuresImageClasses += ' d-flex align-items-center';
                featuresTextClasses += ' align-self-center';
                break;
            case 'rightTop':
                featuresClasses += ' d-flex flex-row-reverse align-items-stretch';
                break;
        }

        featuresIconClasses = featuresImageClasses;

        if (settings.image_type.choice != 'image' || settings.image_position.choice == 'background') {
            featuresImageClasses += ' d-none';
        }
        if (settings.image_type.choice != 'icon') {
            featuresIconClasses += ' d-none';
        }

        if (settings.content_align.choice == 'left') {
            featuresClasses += ' text-left';
        } else if (settings.content_align.choice == 'right') {
            featuresClasses += ' text-right';
        }

        if (settings.button_skin.choice && settings.button_skin.choice != 'custom') {
            buttonItemWrap += ' ' + settings.button_skin.choice;
        }

        return { featuresClasses: featuresClasses, featuresImageClasses: featuresImageClasses, featuresTextClasses: featuresTextClasses, featuresIconClasses: featuresIconClasses, buttonItemWrap: buttonItemWrap };
    },
    get_css: function get_css(settings, object) {
        var skinId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

        var css = '';
        css += FeaturesHelpers.getImageCSS(settings, object, skinId);
        css += FeaturesHelpers.getBoxCSS(settings, object, skinId);
        css += FeaturesHelpers.getIconCSS(settings, object, skinId);

        return css;
    },
    getBoxCSS: function getBoxCSS(settings, object) {
        var skinId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

        var additionalCSS = '';
        var columns = settings.columns.value;
        var horizontalMargin = settings.box_horizontal_margin.value;
        var verticalMargin = settings.box_vertical_margin.value;
        var combinedBorderWidth = settings.box_border.useDefault == 'custom' ? settings.box_border.left + settings.box_border.right : 0;
        var itemProps = {};

        itemProps.width = 'calc(' + 100 / columns + '% - ' + horizontalMargin + 'px - ' + combinedBorderWidth + 'px)';

        if (settings.box_horizontal_margin.useDefault == 'custom') {
            itemProps.marginLeft = horizontalMargin + 'px';
            additionalCSS += _settings_helpers2.default.wrapCSSProperty(skinId, '.ocb-module-features-inner', 'margin-left', '-' + horizontalMargin + 'px');
        }
        if (settings.box_vertical_margin.useDefault == 'custom') {
            itemProps.marginBottom = verticalMargin + 'px';

            //On larger screens, remove the bottom margin from the last row's items
            var itemsInLastRow = settings.features.items.length % columns;

            if (columns > settings.features.items.length) itemsInLastRow = settings.features.items.length;

            additionalCSS += '@media(min-width:768px){' + _settings_helpers2.default.wrapCSSProperty(skinId, '.ocb-feature-item:nth-last-child(-n+' + itemsInLastRow + ')', 'margin-bottom', '0px') + '}';
        }

        additionalCSS += _settings_helpers2.default.wrapCSSProperty(skinId, '.ocb-feature-item-button', 'margin-top', '' + settings.button_margin_top.value + settings.button_margin_top.units);

        if (settings.box_padding.useDefault != 'default') {
            var pU = settings.box_padding.units;
            var pV = settings.box_padding;
            var innerClass = '.ocb-feature-item-inner';
            if (settings.image_position.choice == 'topFull') innerClass = '.ocb-feature-item-text-wrap';
            additionalCSS += _settings_helpers2.default.wrapCSSProperty(skinId, innerClass, 'padding', '' + pV.top + pU + ' ' + pV.right + pU + ' ' + pV.bottom + pU + ' ' + pV.left + pU);
        }

        if (settings.box_border_radius.useDefault != 'default') {
            var bRU = settings.box_border_radius.units;
            var bRV = settings.box_border_radius;
            itemProps.borderRadius = '' + bRV.top + bRU + ' ' + bRV.right + bRU + ' ' + bRV.bottom + bRU + ' ' + bRV.left + bRU;
            itemProps.overflow = 'hidden';
        }

        additionalCSS += _settings_helpers2.default.wrapCSSProperties(skinId, '.ocb-feature-item', itemProps);

        return additionalCSS;
    },
    getImageCSS: function getImageCSS(settings, object) {
        var skinId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

        var imageProps = {
            border_radius: settings.image_border_radius,
            display: settings.image_display,
            max_width: settings.image_max_width,
            size: settings.image_size,
            height: settings.image_height,
            vertical_align: settings.image_vertical_align
        };

        var imageCSS = _image_helpers2.default.getImageCSS(imageProps, skinId, '.ocb-feature-item-image', '.ocb-feature-item-img', { includeBackgroundImage: false, returnType: 'css' });

        if (settings.image_position.choice == 'top' || settings.image_position.choice == 'topFull') {
            imageCSS += _settings_helpers2.default.wrapCSSProperties(skinId, '.ocb-feature-item-image', {
                marginRight: 'auto',
                marginLeft: 'auto'
            });
        } else if (settings.image_position.choice == 'rightTop') {
            imageCSS += _settings_helpers2.default.wrapCSSProperty(skinId, '.ocb-feature-item-image', 'margin-left', 'auto');
        }

        if (settings.image_margin.useDefault == 'custom') {
            var imageMarginUnits = settings.image_margin.units;
            var imageMarginProps = {
                marginTop: '' + settings.image_margin.top + imageMarginUnits,
                marginBottom: '' + settings.image_margin.bottom + imageMarginUnits
            };

            //If the side margins are 0, we should not add them so that our alignment works (topRight/topLeft/top)
            if (settings.image_margin.right > 0) {
                imageMarginProps.marginRight = '' + settings.image_margin.right + imageMarginUnits;
            }
            if (settings.image_margin.left > 0) {
                imageMarginProps.marginLeft = '' + settings.image_margin.left + imageMarginUnits;
            }
            imageCSS += _settings_helpers2.default.wrapCSSProperties(skinId, '.ocb-feature-item-image', imageMarginProps);
        }

        return imageCSS;
    },
    getIconCSS: function getIconCSS(settings, object) {
        var skinId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

        var additionalCSS = '';

        if (settings.icon_margin.useDefault == 'custom') {
            var iconMarginUnits = settings.icon_margin.units;
            additionalCSS += _settings_helpers2.default.wrapCSSProperty(skinId, '.ocb-feature-item-icon', 'margin-top', '' + settings.icon_margin.top + iconMarginUnits);
            additionalCSS += _settings_helpers2.default.wrapCSSProperty(skinId, '.ocb-feature-item-icon', 'margin-right', '' + settings.icon_margin.right + iconMarginUnits);
            additionalCSS += _settings_helpers2.default.wrapCSSProperty(skinId, '.ocb-feature-item-icon', 'margin-bottom', '' + settings.icon_margin.bottom + iconMarginUnits);
            additionalCSS += _settings_helpers2.default.wrapCSSProperty(skinId, '.ocb-feature-item-icon', 'margin-left', '' + settings.icon_margin.left + iconMarginUnits);

            //Padding adjustments to make sure that there isn't overflow
            if (settings.image_position.choice == 'top') {
                var iconTopMargin = -1 * settings.icon_margin.top;
                var topFeaturePadding = 0;
                if (settings.box_padding != undefined && settings.box_padding.useDefault == 'custom') {
                    topFeaturePadding = settings.box_padding.top != undefined ? settings.box_padding.top + settings.box_padding.units : 0;
                }
                additionalCSS += _settings_helpers2.default.wrapCSSProperty(skinId, '.ocb-module-features', 'padding-top', 'calc(' + iconTopMargin + iconMarginUnits + ' - ' + topFeaturePadding + ')');
            }
            if (settings.image_position.choice == 'left' || settings.image_position.choice == 'leftTop') {
                var iconLeftMargin = -1 * settings.icon_margin.left;
                var leftFeaturePadding = 0;
                if (settings.box_padding != undefined && settings.box_padding.useDefault == 'custom') {
                    leftFeaturePadding = settings.box_padding.left != undefined ? settings.box_padding.left + settings.box_padding.units : 0;
                }
                additionalCSS += _settings_helpers2.default.wrapCSSProperty(skinId, '.ocb-feature-item', 'padding-left', 'calc(' + iconLeftMargin + iconMarginUnits + ' - ' + leftFeaturePadding + ')');
            }
            if (settings.image_position.choice == 'right' || settings.image_position.choice == 'rightTop') {
                var iconRightMargin = -1 * settings.icon_margin.right;
                var rightFeaturePadding = 0;
                if (settings.box_padding != undefined && settings.box_padding.useDefault == 'custom') {
                    rightFeaturePadding = settings.box_padding.right != undefined ? settings.box_padding.right + settings.box_padding.units : 0;
                }
                additionalCSS += _settings_helpers2.default.wrapCSSProperty(skinId, '.ocb-feature-item', 'padding-right', 'calc(' + iconRightMargin + iconMarginUnits + ' - ' + rightFeaturePadding + ')');
            }
        }

        return additionalCSS;
    }
};

exports.default = FeaturesHelpers;

/***/ }),

/***/ 875:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _settings_helpers = __webpack_require__(2);

var _settings_helpers2 = _interopRequireDefault(_settings_helpers);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var HeaderHelpers = {
    get_style: function get_style(settings, object) {
        var skinId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

        settings = settings.linked;

        return {
            classes: HeaderHelpers.get_classes(settings, object, skinId),
            css: { additional: HeaderHelpers.get_css(settings, object, skinId) }
        };
    },
    get_classes: function get_classes(settings, object) {
        var skinId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

        var includeLine = settings.add_line.yes;
        var lineClasses = { lineHR: '', line: '' };

        if (includeLine) {

            if (settings.line_color.color != 'custom') {
                lineClasses.lineHR += ' ' + settings.line_color.color + '-border-top-color';
            }
        } else {
            lineClasses.line += ' d-none';
        }

        return lineClasses;
    },
    get_css: function get_css(settings, object) {
        var skinId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

        var wrapId = skinId ? '.' + skinId : object.id;

        var includeLine = settings.add_line.yes;
        var lineCSS = '';
        var lineCSSObject = {};

        if (includeLine) {
            if (settings.line_margin_top.useDefault == 'custom') {
                lineCSSObject.marginTop = settings.line_margin_top.value + settings.line_margin_top.units;
            }

            lineCSSObject.borderTopStyle = settings.line_style.choice;

            if (settings.line_width.useDefault == 'custom') {
                lineCSSObject.width = settings.line_width.value + settings.line_width.units;
            }
            if (settings.line_thickness.useDefault == 'custom') {
                lineCSSObject.borderTopWidth = settings.line_thickness.value + settings.line_thickness.units;
            }
            if (settings.line_color.color == 'custom') {
                lineCSSObject.borderTopColor = settings.line_color.customColor;
            }

            lineCSS = _settings_helpers2.default.wrapCSSProperties(wrapId, '.ocb-separator', lineCSSObject);
        }

        return lineCSS;
    }
};

exports.default = HeaderHelpers;

/***/ }),

/***/ 876:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _icon_item_helpers = __webpack_require__(44);

var _icon_item_helpers2 = _interopRequireDefault(_icon_item_helpers);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var IconHelpers = {
    get_style: function get_style(settings, object) {
        var skinId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

        settings = settings.linked;

        var itemIcon = _icon_item_helpers2.default.get_icon_item_style(settings, object, skinId);

        return {
            classes: itemIcon.classes,
            css: { additional: itemIcon.css }
        };
    },
    get_classes: function get_classes(settings, object) {
        var skinId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

        settings = settings.linked;

        var itemIcon = _icon_item_helpers2.default.get_icon_item_style(settings, object, skinId);

        return itemIcon.classes;
    },
    get_css: function get_css(settings, object) {
        var skinId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

        settings = settings.linked;

        var itemIcon = _icon_item_helpers2.default.get_icon_item_style(settings, object, skinId);

        return {
            additional: itemIcon.css
        };
    }
}; //import OAPI from '../../../../shared/helpers/api_helpers';
//import DeepMerge from 'deepmerge';
//import SettingsHelpers from '../../../../shared/helpers/settings_helpers';
//import ModuleHelpers from '../../../../shared/helpers/module_helpers';
exports.default = IconHelpers;

/***/ }),

/***/ 877:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _settings_helpers = __webpack_require__(2);

var _settings_helpers2 = _interopRequireDefault(_settings_helpers);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ListHelpers = {
    get_style: function get_style(settings, object) {
        var skinId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

        settings = settings.linked;

        return {
            classes: ListHelpers.get_classes(settings, object, skinId),
            css: { additional: ListHelpers.get_css(settings, object, skinId) }
        };
    },
    get_classes: function get_classes(settings, object) {
        var skinId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

        var listWrap = '',
            listIconColor = '',
            listIconBackgroundColor = '',
            listIconInner = '',
            listItem = '',
            listItemIcon = '';
        var columns = settings.columns.useDefault == 'custom' ? settings.columns.value : 1;

        listItem = 'align-items-' + settings.icon_position.choice;
        listWrap = 'ocb-list-columns-' + columns;

        if (settings.icon_color.color != 'custom') {
            listIconColor += ' ' + settings.icon_color.color + '-color';
        }

        if (settings.icon_background_color.color != 'custom') {
            listIconBackgroundColor += ' ' + settings.icon_background_color.color + '-background';
        }

        if (settings.border != undefined && settings.border.color != 'default' && settings.border.color != 'custom') {
            listItem += ' ' + settings.border.color + '-border-color';
        }

        if (settings.hide_icon.yes) {
            listItemIcon += ' ' + 'd-none';
        }

        if (settings.align.choice != 'none') {
            listWrap += ' ocb-list-align-' + settings.align.choice;
        }

        return { listIconColor: listIconColor, listIconBackgroundColor: listIconBackgroundColor, listItem: listItem, listWrap: listWrap, listItemIcon: listItemIcon };
    },
    get_css: function get_css(settings, object) {
        var skinId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

        var wrapId = skinId ? '.' + skinId : object.id;

        var additionalCSS = '';
        var iconSize = settings.icon_size.value + settings.icon_size.units;
        var marginBottom = settings.item_spacing.value + settings.item_spacing.units;
        var headingBottom = settings.heading_spacing.value + settings.heading_spacing.units;
        var padding = parseFloat(settings.item_spacing.value) / 2;
        var paddingU = padding + settings.item_spacing.units;
        var columns = settings.columns.useDefault == 'custom' ? settings.columns.value : 1;
        var listItemProps = {};

        if (settings.item_spacing.useDefault == 'custom') {
            listItemProps.paddingTop = paddingU;
            listItemProps.paddingBottom = paddingU;
        }
        //additionalCSS += settings.item_spacing.useDefault == 'custom' ? SettingsHelpers.wrapCSSProperty(wrapId, '.ocb-list-item', 'margin-bottom', marginBottom) : '';

        additionalCSS += settings.icon_size.useDefault == 'custom' ? _settings_helpers2.default.wrapCSSProperty(wrapId, '.ocb-list-item-icon i', 'font-size', iconSize) : '';

        /*if( columns > 1 ) {
            additionalCSS += settings.item_spacing.useDefault == 'custom' ? SettingsHelpers.wrapCSSProperty(wrapId, '.ocb-list', 'margin-bottom', '-' + marginBottom) : '';
        }*/

        if (settings.border.useDefault == 'default' || settings.remove_border.choice == 'first' || settings.remove_border.choice == 'firstlast') {
            additionalCSS += _settings_helpers2.default.wrapCSSProperties(wrapId, '.ocb-list-item:nth-child(-n+' + columns + ')', { paddingTop: 0, borderTop: 0 });
        }
        if (settings.border.useDefault == 'default' || settings.remove_border.choice == 'last' || settings.remove_border.choice == 'firstlast') {
            additionalCSS += _settings_helpers2.default.wrapCSSProperties(wrapId, '.ocb-list-item:nth-last-child(-n+' + columns + ')', { paddingBottom: 0, borderBottom: 0 });
        }

        if (settings.heading_spacing.useDefault == 'custom') {
            additionalCSS += _settings_helpers2.default.wrapCSSProperties(wrapId, '.ocb-list-item-heading', { marginBottom: headingBottom });
        }
        //additionalCSS += settings.item_spacing.useDefault == 'custom' ? SettingsHelpers.wrapCSSProperties(wrapId, '.ocb-list', { marginBottom: '-' + paddingU}) : '';

        if (settings.hide_icon.yes == false) {
            if (settings.icon_padding.useDefault == 'custom') {
                var iconPadding = settings.icon_padding.value * 2 + settings.icon_padding.units;
                additionalCSS += _settings_helpers2.default.wrapCSSProperty(wrapId, '.ocb-list-item-icon-inner', 'height', iconPadding);
                additionalCSS += _settings_helpers2.default.wrapCSSProperty(wrapId, '.ocb-list-item-icon-inner', 'width', iconPadding);
            }

            if (settings.icon_color.color == 'custom') {
                additionalCSS += _settings_helpers2.default.wrapCSSProperty(wrapId, '.ocb-list-item' + ' i', 'color', settings.icon_color.customColor);
            }

            if (settings.icon_background_color.color == 'custom') {
                additionalCSS += _settings_helpers2.default.wrapCSSProperty(wrapId, '.ocb-list-item' + ' .ocb-list-item-icon-inner', 'background', settings.icon_background_color.customColor);
            }
        }

        if (settings.border.useDefault != 'default') {
            var borderUnits = settings.border.units;
            var borderColor = settings.border.color == 'default' ? '#eeeeee' : settings.border.color == 'custom' ? settings.border.customColor : '';
            listItemProps.borderStyle = settings.border.type;
            listItemProps.borderWidth = '' + settings.border.top + borderUnits + ' ' + settings.border.right + borderUnits + ' ' + settings.border.bottom + borderUnits + ' ' + settings.border.left + borderUnits + ';';
            if (borderColor) {
                listItemProps.borderColor = borderColor;
            }
        }

        if (settings.item_spacing.useDefault == 'custom') {
            listItemProps.marginBottom = 0;
        }

        if (Object.keys(listItemProps).length) {
            additionalCSS += _settings_helpers2.default.wrapCSSProperties(wrapId, '.ocb-list-item', listItemProps);
        }

        return additionalCSS;
    }
};

exports.default = ListHelpers;

/***/ }),

/***/ 878:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
//import SettingsHelpers from '../../../../shared/helpers/settings_helpers';

var QuoteHelpers = {
    get_style: function get_style(settings, object) {
        var skinId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

        settings = settings.linked;

        return {
            classes: QuoteHelpers.get_classes(settings, object, skinId),
            css: { additional: QuoteHelpers.get_css(settings, object, skinId) }
        };
    },
    get_classes: function get_classes(settings, object) {
        var skinId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

        return {};
    },
    get_css: function get_css(settings, object) {
        var skinId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

        var wrapId = skinId ? '.' + skinId : object.id;

        var additionalCSS = '';

        return additionalCSS;
    }
};

exports.default = QuoteHelpers;

/***/ }),

/***/ 879:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _settings_helpers = __webpack_require__(2);

var _settings_helpers2 = _interopRequireDefault(_settings_helpers);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var SeparatorHelpers = {
    get_style: function get_style(settings, object) {
        var skinId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

        settings = settings.linked;

        return {
            classes: SeparatorHelpers.get_classes(settings, object, skinId),
            css: { additional: SeparatorHelpers.get_css(settings, object, skinId) }
        };
    },
    get_classes: function get_classes(settings, object) {
        var skinId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

        var align = settings.align.choice;
        var mobileAlign = settings.mobile_align.choice;
        var separatorInner = '';

        var separatorWrap = 'text-' + mobileAlign + ' text-md-' + align;

        if (settings.style.choice != 'none') {
            if (settings.color.color != 'custom') {
                separatorInner += ' ' + settings.color.color + '-border-top-color';
            }
        }

        return { separatorWrap: separatorWrap, separatorInner: separatorInner };
    },
    get_css: function get_css(settings, object) {
        var skinId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

        var wrapId = skinId ? '.' + skinId : object.id;

        var additionalCSS = '';

        if (settings.spacing.useDefault == 'custom') {
            var spacing = settings.spacing.value / 2 + settings.spacing.units;
            additionalCSS += _settings_helpers2.default.wrapCSSProperty(wrapId, '.ocb-separator', 'margin-top', spacing);
            additionalCSS += _settings_helpers2.default.wrapCSSProperty(wrapId, '.ocb-separator', 'margin-bottom', spacing);
        }

        additionalCSS += _settings_helpers2.default.wrapCSSProperty(wrapId, '.ocb-separator', 'border-top-style', settings.style.choice);

        if (settings.style.choice != 'none') {
            additionalCSS += _settings_helpers2.default.wrapCSSProperty(wrapId, '.ocb-separator', 'width', settings.width.value + settings.width.units);
            additionalCSS += _settings_helpers2.default.wrapCSSProperty(wrapId, '.ocb-separator', 'border-top-width', settings.thickness.value + settings.thickness.units);
            if (settings.color.color == 'custom') {
                additionalCSS += _settings_helpers2.default.wrapCSSProperty(wrapId, '.ocb-separator', 'border-top-color', settings.color.customColor);
            }
        }

        return additionalCSS;
    }
};

exports.default = SeparatorHelpers;

/***/ }),

/***/ 880:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _item_icon = __webpack_require__(64);

var _item_icon2 = _interopRequireDefault(_item_icon);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ModuleIcon = function (_Component) {
    _inherits(ModuleIcon, _Component);

    function ModuleIcon() {
        _classCallCheck(this, ModuleIcon);

        return _possibleConstructorReturn(this, (ModuleIcon.__proto__ || Object.getPrototypeOf(ModuleIcon)).apply(this, arguments));
    }

    _createClass(ModuleIcon, [{
        key: 'render',


        /******************* RENDER ****************/

        value: function render() {
            var settings = this.props.settings.linked;
            var alignment = settings.icon_alignment.choice;
            var mobileAlignment = settings.icon_mobile_alignment.choice;
            var icon = _react2.default.createElement(_item_icon2.default, { icon: settings.icon.icon, settings: settings, objectId: this.props.id, object: this.props.object, classesCSS: this.props.classesCSS });
            var icons = [];

            if (settings.icon_multiplier.useDefault != 'default' && settings.icon_multiplier.value > 1) {
                for (var i = 1; i <= settings.icon_multiplier.value; i++) {
                    icons.push(icon);
                }
                icons = icons.map(function (icon, index) {
                    return _react2.default.createElement(
                        'span',
                        { key: index },
                        icon
                    );
                });
                icon = icons;
            }

            if (settings.icon_link.url) {
                var linkAtts = {};

                if (settings.icon_link.newWindow != undefined && settings.icon_link.newWindow) {
                    linkAtts.target = '_blank';
                    linkAtts.rel = 'noopener noreferrer';
                }

                icon = _react2.default.createElement(
                    'a',
                    _extends({ href: settings.icon_link.url }, linkAtts),
                    icon
                );
            }

            var styleTag = this.props.classesCSS.css ? this.props.classesCSS.css : null;

            return _react2.default.createElement(
                'div',
                { 'data-ocb-type': 'icon', className: 'ocb-module-module-icon text-' + mobileAlignment + ' text-md-' + alignment },
                styleTag,
                icon
            );
        }
    }]);

    return ModuleIcon;
}(_react.Component);

exports.default = ModuleIcon;

/***/ }),

/***/ 881:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _settings_helpers = __webpack_require__(2);

var _settings_helpers2 = _interopRequireDefault(_settings_helpers);

var _module_helpers = __webpack_require__(12);

var _module_helpers2 = _interopRequireDefault(_module_helpers);

var _item_editable_text = __webpack_require__(72);

var _item_editable_text2 = _interopRequireDefault(_item_editable_text);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ModuleImage = function (_Component) {
    _inherits(ModuleImage, _Component);

    function ModuleImage() {
        _classCallCheck(this, ModuleImage);

        return _possibleConstructorReturn(this, (ModuleImage.__proto__ || Object.getPrototypeOf(ModuleImage)).apply(this, arguments));
    }

    _createClass(ModuleImage, [{
        key: 'updateText',
        value: function updateText(text, index) {
            var update = Object.assign(this.props.object.settings);
            if (update.linked.caption == undefined || update.linked.caption.text == undefined) {
                update.linked.caption = { text: '' };
            }
            update.linked.caption.text = text;

            //If settings aren't linked, then update all of the devices because this is a shared setting
            if (this.props.object.deviceLock != undefined && this.props.object.deviceLock == false) {
                update.laptop.caption.text = text;
                update.tablet.caption.text = text;
                update.phone.caption.text = text;
            }
            this.props.treeProps.settings.updateObjectSettings(this.props.object, update);
        }
    }, {
        key: 'getCaptionText',
        value: function getCaptionText(settings) {
            return settings.caption.text ? settings.caption.text : settings.image.files != undefined && settings.image.files.caption != undefined ? settings.image.files.caption : '';
        }
    }, {
        key: 'getCustomImageCSS',
        value: function getCustomImageCSS(settings) {
            var backgroundImageProperties = {};

            if (settings.lazyload == undefined || !settings.lazyload.yes) {
                backgroundImageProperties.backgroundImage = 'url(' + _settings_helpers2.default.getImageURL(settings.image.url, settings.image, 'background') + ')';
            }

            if (settings.horizontal_align.useDefault == 'custom') {
                backgroundImageProperties.backgroundPositionX = settings.horizontal_align.value + settings.horizontal_align.units;
            }
            if (settings.vertical_align.useDefault == 'custom') {
                backgroundImageProperties.backgroundPositionY = settings.vertical_align.value + settings.vertical_align.units;
            }

            var additionalBackgroundCSS = _settings_helpers2.default.wrapCSSProperties(this.props.object.id, '.ocb-image-custom-background', backgroundImageProperties);
            return _settings_helpers2.default.wrapCSSInStyleTag(additionalBackgroundCSS, this.props.object.id, '.ocb-image-custom-background');
        }
    }, {
        key: 'render',
        value: function render() {
            var settings = this.props.settings.linked;
            var url = settings.image.url;
            var srcURL = _settings_helpers2.default.getImageURL(url, settings.image);
            var classesCSS = this.props.classesCSS;
            var alt = settings.image.useWhich == 'library' && settings.image.files != undefined && settings.image.files.alt != undefined ? settings.image.files.alt : '';
            var title = settings.image.useWhich == 'library' && settings.image.files != undefined && settings.image.files.title != undefined ? settings.image.files.title : '';
            var captionText = this.getCaptionText(settings);

            var align = settings.align.choice;
            var mobileAlign = settings.mobile_align != undefined && settings.mobile_align.choice != undefined ? settings.mobile_align.choice : align;
            if (align == 'left') align = 'start';
            if (align == 'right') align = 'end';
            if (mobileAlign == 'left') mobileAlign = 'start';
            if (mobileAlign == 'right') mobileAlign = 'end';

            var caption = null;
            var customImageTag = null;
            var image = null;
            var imageBackground = null;
            var linkBlanket = null;
            var featured = false;

            if (settings.image.useWhich == 'featured') {
                featured = true;
            }

            if (settings.lazyload != undefined && settings.lazyload.yes && settings.display.choice != 'normal') {
                if (featured) {
                    image = _react2.default.createElement('img', { className: 'ocb-image-img ocbreplace ocb-lazy ' + classesCSS.classes.imageImg, alt: alt, title: title, 'data-image-size': settings.image.size, 'data-src': srcURL, src: srcURL, 'data-ocbreplace-attr': 'data-src', 'data-ocbreplace-value': '{{ocbr:featuredImage:' + settings.image.size + '}}' });
                } else {
                    image = _react2.default.createElement('img', { className: 'ocb-image-img ocb-lazy ' + classesCSS.classes.imageImg, alt: alt, title: title, 'data-image-size': settings.image.size, 'data-src': srcURL, src: srcURL });
                }
                imageBackground = _react2.default.createElement('div', { className: 'ocb-image-custom-background ocb-lazy ' + classesCSS.classes.imageBackground, style: { backgroundImage: 'url(' + _settings_helpers2.default.getImageURL(settings.image.url, settings.image, 'background') + ')' }, 'data-bg': 'url(' + _settings_helpers2.default.getImageURL(settings.image.url, settings.image, 'background') + ')' });
            } else if (settings.lazyload != undefined && settings.lazyload.yes) {
                if (featured) {
                    image = _react2.default.createElement('img', { className: 'ocb-image-img ocbreplace ocb-lazy ' + classesCSS.classes.imageImg, alt: alt, title: title, 'data-image-size': settings.image.size, 'data-src': srcURL, src: srcURL, 'data-ocbreplace-attr': 'src', 'data-ocbreplace-value': '{{ocbr:featuredImage:' + settings.image.size + '}}' });
                } else {
                    image = _react2.default.createElement('img', { className: 'ocb-image-img ocb-lazy ' + classesCSS.classes.imageImg, alt: alt, title: title, 'data-image-size': settings.image.size, 'data-src': srcURL, src: srcURL });
                }
                imageBackground = _react2.default.createElement('div', { className: 'ocb-image-custom-background ocb-lazy ' + classesCSS.classes.imageBackground });
            } else {
                if (featured) {
                    image = _react2.default.createElement('img', { className: 'ocb-image-img ocbreplace ' + classesCSS.classes.imageImg, alt: alt, title: title, 'data-image-size': settings.image.size, src: srcURL, 'data-ocbreplace-attr': 'src', 'data-ocbreplace-value': '{{ocbr:featuredImage:' + settings.image.size + '}}' });
                } else {
                    image = _react2.default.createElement('img', { className: 'ocb-image-img ' + classesCSS.classes.imageImg, alt: alt, title: title, 'data-image-size': settings.image.size, src: srcURL });
                }
                imageBackground = _react2.default.createElement('div', { className: 'ocb-image-custom-background ' + classesCSS.classes.imageBackground });
            }

            if (settings.width_bleed.choice != 'full' && settings.display.choice != 'normal') {
                customImageTag = this.getCustomImageCSS(settings);
            }

            if (settings.link.url) {
                var linkAtts = {};

                if (settings.link.newWindow != undefined && settings.link.newWindow) {
                    linkAtts.target = '_blank';
                    linkAtts.rel = 'noopener noreferrer';
                }
                linkBlanket = _react2.default.createElement(
                    'div',
                    { className: 'ocb-link-blanket' },
                    _react2.default.createElement(
                        'a',
                        _extends({ className: 'ocb-link-blanket', href: settings.link.url }, linkAtts),
                        alt ? alt : title
                    )
                );
            }

            if (settings.show_caption.yes && captionText) {
                caption = _react2.default.createElement(
                    'figcaption',
                    { className: 'ocb-image-caption ' + classesCSS.classes.imageCaption },
                    _react2.default.createElement(_item_editable_text2.default, { text: captionText, editType: 'text', textObject: settings.caption, update: this.updateText.bind(this), objectId: this.props.object.id, object: this.props.object, treeProps: this.props.treeProps })
                );
            }

            return _react2.default.createElement(
                'div',
                { 'data-ocb-type': 'image', className: 'ocb-module-image ocb-module-image-v3 justify-content-' + mobileAlign + ' justify-content-md-' + align + ' ' + classesCSS.classes.moduleImage },
                classesCSS.css,
                customImageTag,
                _react2.default.createElement(
                    'figure',
                    { className: 'ocb-image-inner ' + classesCSS.classes.imageInner },
                    _react2.default.createElement(
                        'div',
                        { className: 'ocb-image-hover-effect ' + classesCSS.classes.imageHoverEffect },
                        imageBackground,
                        image,
                        linkBlanket
                    ),
                    caption
                )
            );
        }
    }]);

    return ModuleImage;
}(_react.Component);

exports.default = ModuleImage;

/***/ }),

/***/ 882:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _settings_helpers = __webpack_require__(2);

var _settings_helpers2 = _interopRequireDefault(_settings_helpers);

var _default_list = __webpack_require__(378);

var _default_list2 = _interopRequireDefault(_default_list);

var _item_editable_text = __webpack_require__(72);

var _item_editable_text2 = _interopRequireDefault(_item_editable_text);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ModuleList = function (_Component) {
    _inherits(ModuleList, _Component);

    function ModuleList() {
        _classCallCheck(this, ModuleList);

        return _possibleConstructorReturn(this, (ModuleList.__proto__ || Object.getPrototypeOf(ModuleList)).apply(this, arguments));
    }

    _createClass(ModuleList, [{
        key: 'updateText',
        value: function updateText(text, index) {
            var which = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'text';

            console.log('update text', text, index, which);

            var update = Object.assign(this.props.object.settings);
            if (update.linked.items.items[index][which] == undefined) {
                update.linked.items.items[index][which] = { text: '' };
            }
            update.linked.items.items[index][which].text = text;

            //If settings aren't linked, then update all of the devices because this is a shared setting
            if (this.props.object.deviceLock != undefined && this.props.object.deviceLock == false) {
                update.laptop.items.items[index][which].text = text;
                update.tablet.items.items[index][which].text = text;
                update.phone.items.items[index][which].text = text;
            }
            this.props.treeProps.settings.updateObjectSettings(this.props.object, update);
        }
    }, {
        key: 'updateHeadingText',
        value: function updateHeadingText(text, index) {
            this.updateText(text, index, 'heading');
        }

        /******************* RENDER ****************/

    }, {
        key: 'renderItem',
        value: function renderItem(item, index, settings) {
            var icon = settings.icon.icon;

            item = _settings_helpers2.default.mergeRepeaterWithDefault((0, _default_list2.default)(), item, 'items');
            var itemCSS = '';
            var thisClasses = '';
            var thisIconClasses = '';
            var itemCSSTag = null;
            var iconOverwrite = item.icon_overwrite.icon;
            var textColorOverwrite = item.text_color_overwrite.color;
            var iconColorOverwrite = item.icon_color_overwrite.color;
            var iconBackgroundColorOverwrite = item.icon_background_color_overwrite.color;

            var thisIcon = iconOverwrite ? iconOverwrite : icon;
            var thisIconColor = iconColorOverwrite != 'default' ? iconColorOverwrite + '-color' : this.props.classesCSS.classes.listIconColor;
            var thisIconBackgroundColor = iconBackgroundColorOverwrite != 'default' ? iconBackgroundColorOverwrite + '-background' : this.props.classesCSS.classes.listIconBackgroundColor;

            //Overwrites per item
            if (textColorOverwrite != 'custom' && textColorOverwrite != 'default') {
                thisClasses += ' ' + textColorOverwrite + '-color';
            } else if (textColorOverwrite == 'custom') {
                itemCSS += _settings_helpers2.default.wrapCSSProperty(this.props.object.id, '.ocb-list-item-' + index, 'color', item.text_color_overwrite.customColor);
            }

            if (item.icon_color_overwrite.color == 'custom') {
                itemCSS += _settings_helpers2.default.wrapCSSProperty(this.props.object.id, '.ocb-list-item-' + index + ' i', 'color', item.icon_color_overwrite.customColor);
            }

            if (item.icon_background_color_overwrite.color == 'custom') {
                itemCSS += _settings_helpers2.default.wrapCSSProperty(this.props.object.id, '.ocb-list-item-' + index + ' .ocb-list-item-icon-inner', 'background', item.icon_background_color_overwrite.customColor);
            }

            if (itemCSS) {
                itemCSSTag = _settings_helpers2.default.wrapCSSInStyleTag(itemCSS, this.props.object.id, '.ocb-list-item-' + index);
            }

            var title = null;

            if (item.heading.text) {
                var editableTitle = _react2.default.createElement(_item_editable_text2.default, {
                    editType: 'headingarea',
                    text: item.heading.text,
                    textObject: item.heading,
                    index: index,
                    update: this.updateHeadingText.bind(this),
                    toolbar: 'bold italic | link unlink',
                    objectId: this.props.object.id,
                    object: this.props.object,
                    treeProps: this.props.treeProps
                });
                title = _react2.default.createElement(settings.heading_type.choice, { className: 'ocb-header' }, editableTitle);
                title = _react2.default.createElement(
                    'div',
                    { className: 'ocb-list-item-heading' },
                    title
                );
            }

            return _react2.default.createElement(
                'div',
                { key: index, className: 'ocb-list-item ocb-list-item-' + index + ' d-flex ' + this.props.classesCSS.classes.listItem + ' ' + thisClasses },
                itemCSSTag,
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-list-item-icon ' + this.props.classesCSS.classes.listItemIcon },
                    _react2.default.createElement(
                        'div',
                        { className: 'ocb-list-item-icon-inner d-flex align-items-center justify-content-center ' + thisIconBackgroundColor },
                        _react2.default.createElement('i', { className: 'fa ' + thisIcon + ' ' + thisIconColor })
                    )
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-list-item-text' },
                    title,
                    _react2.default.createElement(_item_editable_text2.default, {
                        text: item.text.text,
                        textObject: item.text,
                        index: index,
                        update: this.updateText.bind(this),
                        toolbar: 'bold italic | link unlink',
                        objectId: this.props.object.id,
                        object: this.props.object,
                        treeProps: this.props.treeProps
                    })
                )
            );
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var settings = this.props.settings.linked;
            var items = void 0;

            if (settings.items != undefined && settings.items.items) {
                items = settings.items.items.map(function (item, index) {
                    return _this2.renderItem(item, index, settings);
                });
            }
            return _react2.default.createElement(
                'div',
                { 'data-ocb-type': 'list', className: 'ocb-module-list' },
                this.props.classesCSS.css,
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-list d-md-flex flex-wrap ' + this.props.classesCSS.classes.listWrap },
                    items
                )
            );
        }
    }]);

    return ModuleList;
}(_react.Component);

exports.default = ModuleList;

/***/ }),

/***/ 883:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _settings_helpers = __webpack_require__(2);

var _settings_helpers2 = _interopRequireDefault(_settings_helpers);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ModuleLogo = function (_Component) {
    _inherits(ModuleLogo, _Component);

    function ModuleLogo() {
        _classCallCheck(this, ModuleLogo);

        return _possibleConstructorReturn(this, (ModuleLogo.__proto__ || Object.getPrototypeOf(ModuleLogo)).apply(this, arguments));
    }

    _createClass(ModuleLogo, [{
        key: 'render',


        /******************* RENDER ****************/

        value: function render() {
            var settings = this.props.settings.linked;
            var additionalCSS = '';
            var additionalCSSTag = null;
            var minWidth = '';
            var minHeight = '';
            var height = '';

            if (settings.min_width.useDefault == 'custom') {
                minWidth = settings.min_width.value + settings.min_width.units;
                additionalCSS += _settings_helpers2.default.wrapCSSProperty(this.props.object.id, '.ocb-logo-image-v2', 'min-width', minWidth);
            }
            if (settings.max_width.useDefault == 'custom') {
                var maxWidth = settings.max_width.value + settings.max_width.units;
                additionalCSS += _settings_helpers2.default.wrapCSSProperty(this.props.object.id, '.ocb-logo-image-v2', 'max-width', maxWidth);
            }
            if (settings.min_height.useDefault == 'custom') {
                minHeight = settings.min_height.value + settings.min_height.units;
                additionalCSS += _settings_helpers2.default.wrapCSSProperty(this.props.object.id, '.ocb-logo-image-v2', 'min-height', minHeight);
            }
            /*if( settings.height.useDefault == 'custom' ){
                height = settings.height.value + settings.height.units;
                additionalCSS += SettingsHelpers.wrapCSSProperty(this.props.object.id, '.ocb-logo-image-v2', 'height', height);
            }*/
            if (settings.max_height.useDefault == 'custom') {
                var maxHeight = settings.max_height.value + settings.max_height.units;
                additionalCSS += _settings_helpers2.default.wrapCSSProperty(this.props.object.id, '.ocb-logo-image-v2', 'max-height', maxHeight);
                if (settings.max_height.value < 50 || settings.max_height.value < settings.min_height.value) {
                    additionalCSS += _settings_helpers2.default.wrapCSSProperty(this.props.object.id, '.ocb-logo-image-v2', 'min-height', maxHeight);
                }
            }

            var align = 'text-md-' + settings.alignment.choice;
            var mobileAlign = 'text-' + settings.mobile_alignment.choice;

            if (additionalCSS) additionalCSSTag = _settings_helpers2.default.wrapCSSInStyleTag(additionalCSS, this.props.object.id, '.ocb-logo-image-v2');

            return _react2.default.createElement(
                'div',
                { 'data-ocb-type': 'logo', className: 'ocb-module-logo ' + align + ' ' + mobileAlign },
                additionalCSSTag,
                _react2.default.createElement(
                    'a',
                    { className: 'ocb-logo-image-v2', href: '/' },
                    _react2.default.createElement('img', { className: 'ocbreplace', 'data-ocbreplace-value': '{{ocbr:logoSrc}}', 'data-ocbreplace-attr': 'src', src: window.OffsproutSiteSettings.logo.url })
                )
            );
        }
    }]);

    return ModuleLogo;
}(_react.Component);

exports.default = ModuleLogo;

/***/ }),

/***/ 884:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _settings_helpers = __webpack_require__(2);

var _settings_helpers2 = _interopRequireDefault(_settings_helpers);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ModuleLogoGroup = function (_Component) {
    _inherits(ModuleLogoGroup, _Component);

    function ModuleLogoGroup() {
        _classCallCheck(this, ModuleLogoGroup);

        return _possibleConstructorReturn(this, (ModuleLogoGroup.__proto__ || Object.getPrototypeOf(ModuleLogoGroup)).apply(this, arguments));
    }

    _createClass(ModuleLogoGroup, [{
        key: 'render',


        /******************* RENDER ****************/

        value: function render() {
            var settings = this.props.settings.linked;
            var items = null;

            if (settings.images.files != undefined && settings.images.files.length) {
                items = settings.images.files.map(function (image, index) {
                    var size = settings.images.size != undefined ? settings.images.size : 'full';
                    var imageUrl = image.sizes != undefined && image.sizes[size] != undefined ? image.sizes[size].url : image.url;

                    return _react2.default.createElement(
                        'div',
                        { key: index, className: 'ocb-logo-group-item' },
                        _react2.default.createElement(
                            'div',
                            { className: 'ocb-logo-group-image-wrap' },
                            _react2.default.createElement('img', { className: 'ocb-logo-group-image', src: _settings_helpers2.default.getImageURL(imageUrl) })
                        )
                    );
                });
            } else {
                items = _react2.default.createElement(
                    'p',
                    null,
                    'Add your logo images'
                );
            }

            var additionalCSS = '';
            var styleTag = null;

            if (settings.max_height.useDefault != 'default') {
                additionalCSS += _settings_helpers2.default.wrapCSSProperty(this.props.object.id, '.ocb-logo-group-image', 'max-height', settings.max_height.value + settings.max_height.units);
            }

            if (settings.grayscale.useDefault != 'default') {
                additionalCSS += _settings_helpers2.default.wrapCSSProperty(this.props.object.id, '.ocb-logo-group-image', 'filter', 'grayscale(' + settings.grayscale.value + '%)');
            }

            if (settings.images.files != undefined && settings.images.files.length) {
                additionalCSS += _settings_helpers2.default.wrapCSSProperty(this.props.object.id, '.ocb-logo-group-item', 'max-width', 100 / settings.images.files.length + '%');
            }

            if (additionalCSS) {
                styleTag = _settings_helpers2.default.wrapCSSInStyleTag(additionalCSS, this.props.object.id, '.ocb-logo-group-image');
            }

            return _react2.default.createElement(
                'div',
                { 'data-ocb-type': 'logo-group', className: 'ocb-module-logo-group' },
                styleTag,
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-logo-group d-flex align-items-center flex-wrap' },
                    items
                )
            );
        }
    }]);

    return ModuleLogoGroup;
}(_react.Component);

exports.default = ModuleLogoGroup;

/***/ }),

/***/ 885:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _settings_helpers = __webpack_require__(2);

var _settings_helpers2 = _interopRequireDefault(_settings_helpers);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ModuleMap = function (_Component) {
    _inherits(ModuleMap, _Component);

    function ModuleMap() {
        _classCallCheck(this, ModuleMap);

        return _possibleConstructorReturn(this, (ModuleMap.__proto__ || Object.getPrototypeOf(ModuleMap)).apply(this, arguments));
    }

    _createClass(ModuleMap, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            window.ocbInitAllMaps();
        }

        /******************* RENDER ****************/

    }, {
        key: 'render',
        value: function render() {
            var settings = this.props.settings.linked;
            var id = this.props.object.id + '-map';
            var heightTag = null;

            if (!parent.OCBGlobalSettings.permissions.has_maps_api) {
                return _react2.default.createElement(
                    'div',
                    { 'data-ocb-type': 'map', className: 'ocb-module-map' },
                    'Please set your Google Maps API key in Site Settings > API Keys. Then save, and refresh the page to see your map.'
                );
            }
            if (settings.height.useDefault == 'custom') {
                var heightCSS = _settings_helpers2.default.wrapCSSProperty(this.props.object.id, '.ocb-map', 'height', settings.height.value + settings.height.units);
                heightTag = _settings_helpers2.default.wrapCSSInStyleTag(heightCSS, this.props.object.id, '.ocb-map');
            }
            return _react2.default.createElement(
                'div',
                { 'data-ocb-type': 'map', className: 'ocb-module-map' },
                heightTag,
                _react2.default.createElement('div', { id: id, className: 'ocb-map ocb-save-remove-contents',
                    'data-map-id': this.props.object.id,
                    'data-center': settings.address.text,
                    'data-zoom': settings.zoom.value,
                    'data-marker': settings.marker.choice,
                    'data-marker-title': settings.marker_title.text,
                    'data-marker-color': settings.marker_color.customColor,
                    'data-map-directions': settings.marker_directions_show.yes,
                    'data-marker-info-show': settings.marker_info_show.yes,
                    'data-map-skin': settings.skin.choice,
                    'data-marker-description': encodeURI(settings.marker_description.text)
                })
            );
        }
    }]);

    return ModuleMap;
}(_react.Component);

exports.default = ModuleMap;

/***/ }),

/***/ 886:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _item_editable_text = __webpack_require__(72);

var _item_editable_text2 = _interopRequireDefault(_item_editable_text);

var _module_helpers = __webpack_require__(12);

var _module_helpers2 = _interopRequireDefault(_module_helpers);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ModuleQuote = function (_Component) {
    _inherits(ModuleQuote, _Component);

    function ModuleQuote() {
        _classCallCheck(this, ModuleQuote);

        return _possibleConstructorReturn(this, (ModuleQuote.__proto__ || Object.getPrototypeOf(ModuleQuote)).apply(this, arguments));
    }

    _createClass(ModuleQuote, [{
        key: 'updateText',
        value: function updateText(text, index) {
            var update = Object.assign(this.props.object.settings);
            if (update.linked.text == undefined) {
                update.linked.text = { text: '' };
            }
            update.linked.text.text = text;

            //If settings aren't linked, then update all of the devices because this is a shared setting
            if (this.props.object.deviceLock != undefined && this.props.object.deviceLock == false) {
                update.laptop.text.text = text;
                update.tablet.text.text = text;
                update.phone.text.text = text;
            }
            this.props.treeProps.settings.updateObjectSettings(this.props.object, update);
        }

        /******************* RENDER ****************/

    }, {
        key: 'render',
        value: function render() {

            return _react2.default.createElement(
                'blockquote',
                { className: 'ocb-module-quote', 'data-ocb-type': 'quote' },
                _react2.default.createElement(_item_editable_text2.default, { text: this.props.settings.linked.text.text, textObject: this.props.settings.linked.text, update: this.updateText.bind(this), objectId: this.props.object.id, object: this.props.object, treeProps: this.props.treeProps })
            );
        }
    }]);

    return ModuleQuote;
}(_react.Component);

exports.default = ModuleQuote;

/***/ }),

/***/ 887:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _settings_helpers = __webpack_require__(2);

var _settings_helpers2 = _interopRequireDefault(_settings_helpers);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ModuleSeparator = function (_Component) {
    _inherits(ModuleSeparator, _Component);

    function ModuleSeparator() {
        _classCallCheck(this, ModuleSeparator);

        return _possibleConstructorReturn(this, (ModuleSeparator.__proto__ || Object.getPrototypeOf(ModuleSeparator)).apply(this, arguments));
    }

    _createClass(ModuleSeparator, [{
        key: 'render',


        /******************* RENDER ****************/

        value: function render() {
            return _react2.default.createElement(
                'div',
                { 'data-ocb-type': 'separator', className: 'ocb-module-separator ' + this.props.classesCSS.classes.separatorWrap },
                this.props.classesCSS.css,
                _react2.default.createElement('hr', { className: 'ocb-separator ' + this.props.classesCSS.classes.separatorInner })
            );
        }
    }]);

    return ModuleSeparator;
}(_react.Component);

exports.default = ModuleSeparator;

/***/ }),

/***/ 888:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ModuleShortcode = function (_Component) {
    _inherits(ModuleShortcode, _Component);

    function ModuleShortcode() {
        _classCallCheck(this, ModuleShortcode);

        return _possibleConstructorReturn(this, (ModuleShortcode.__proto__ || Object.getPrototypeOf(ModuleShortcode)).apply(this, arguments));
    }

    _createClass(ModuleShortcode, [{
        key: 'render',
        value: function render() {
            var settings = this.props.settings.linked;
            var shortcode = settings.shortcode.text;
            var shortcodeReplace = '';
            var shortcodeObject = null;

            if (shortcode) {
                shortcodeReplace = shortcode.replace('[', '[OCBREPLACED');
                shortcodeObject = _react2.default.createElement(
                    'div',
                    { className: 'ocb-replaced-shortcode', 'data-shortcode': shortcodeReplace },
                    shortcode
                );
            } else {
                shortcodeObject = _react2.default.createElement(
                    'p',
                    null,
                    'Enter your shortcode.'
                );
            }

            return _react2.default.createElement(
                'div',
                { 'data-ocb-type': 'shortcode', className: 'ocb-module-shortcode' },
                shortcodeObject
            );
        }
    }]);

    return ModuleShortcode;
}(_react.Component);

exports.default = ModuleShortcode;

/***/ }),

/***/ 889:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _settings_helpers = __webpack_require__(2);

var _settings_helpers2 = _interopRequireDefault(_settings_helpers);

var _object = __webpack_require__(35);

var _object2 = _interopRequireDefault(_object);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ModuleSideBySide = function (_Component) {
    _inherits(ModuleSideBySide, _Component);

    function ModuleSideBySide(props) {
        _classCallCheck(this, ModuleSideBySide);

        var _this = _possibleConstructorReturn(this, (ModuleSideBySide.__proto__ || Object.getPrototypeOf(ModuleSideBySide)).call(this, props));

        _this.counter = 1;
        return _this;
    }
    /******************* START BOOTSTRAPPING FUNCTIONS ****************/

    /**
     * Set the initial side by side content
     */


    _createClass(ModuleSideBySide, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            this.updateModuleItems();

            //Does more cleanup by passing true because this is only performed on load,
            // and not when settings are being changed in the settings panel
            //The only case where we do not want to setInitialTabItems is if this has somehow been triggered
            // by duplication on the side-by-side module that was duplicated
            if (this.props.object.items != undefined && this.props.object.settings.linked.modules != undefined) {
                if (this.props.object.settings.linked.modules.items.length != this.props.object.items.length) {
                    this.setInitialModuleItems();
                }
            } else {
                this.setInitialModuleItems();
            }
        }
    }, {
        key: 'updateModuleItems',
        value: function updateModuleItems() {
            if (this.props.settings.linked.modules.items != undefined) {

                var needsUpdate = false;
                var newItems = this.props.settings.linked.modules.items.map(function (item) {
                    if (item.id == undefined || item.id == false) {
                        item.id = _settings_helpers2.default.generateId('mod');
                        needsUpdate = true;
                    }
                    return item;
                });
                if (needsUpdate) {
                    var update = Object.assign({}, this.props.object.settings);
                    update.linked.modules.items = newItems;

                    this.props.treeProps.settings.updateObjectSettings(this.props.object, update);
                }
            }
        }
    }, {
        key: 'componentDidUpdate',
        value: function componentDidUpdate() {
            var _this2 = this;

            if (this.props.object.items != undefined && this.props.object.settings.linked.modules != undefined) {
                if (this.props.object.settings.linked.modules.items.length != this.props.object.items.length) {
                    this.setInitialModuleItems();
                } else {
                    var newItems = JSON.parse(JSON.stringify(this.props.object.items));
                    var needsUpdate = false;
                    this.props.object.settings.linked.modules.items.map(function (module, index) {
                        if (_this2.props.object.items[index] != undefined) {
                            if (module.id != _this2.props.object.items[index].id) {
                                //Switched the order
                                newItems[index] = _this2.props.object.items.find(function (item) {
                                    return item.id == module.id;
                                });
                                needsUpdate = true;
                            } else if (module.name != _this2.props.object.items[index].moduleType) {
                                //Switched the module type
                                newItems[index] = _this2.getNewModuleContent(module);
                                needsUpdate = true;
                            }
                        }
                    });
                    if (needsUpdate && newItems.filter(function (n) {
                        return n != undefined;
                    }).length) {
                        this.props.treeProps.settings.updateObjectProperty(this.props.object, { items: newItems });
                    }
                }
            }
        }
    }, {
        key: 'setInitialModuleItems',
        value: function setInitialModuleItems() {
            var _this3 = this;

            var deleteItems = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;

            var newSettings = this.props.object.settings;

            if (newSettings.linked.modules == undefined) {
                newSettings = this.getSettings();
            }

            //Compare the items in object.items to those in object.settings.linked.modules.items to see if there are containers that we should generate or remove
            if (newSettings.linked.modules.items.length) {
                var needToUpdate = false;
                if (this.props.object.items == undefined) this.props.object.items = [];
                var modules = this.props.object.items != undefined && this.props.object.items ? this.props.object.items : [];

                //Add items that are in the object.settings.linked.modules.items, but not in the object.items
                newSettings.linked.modules.items.forEach(function (module, index) {
                    var found = modules.findIndex(function (item) {
                        return item.id == module.id;
                    });
                    if (found == -1) {
                        modules.push(_this3.getNewModuleContent(newSettings.linked.modules.items[index]));
                        needToUpdate = true;
                    }
                });

                //Remove items that are not in the object.settings.linked.modules.items, but ARE in the object.items
                //We don't want to remove items in componentDidUpdate because we may discard changes and then be left without the item content
                //NOTE that this may lead to a situation where there is a difference between object.items and object.settings.linked.modules.items
                // until the next component mount. That should be fine though.
                if (deleteItems) {
                    modules.forEach(function (module, index) {
                        var found = newSettings.linked.modules.items.findIndex(function (item) {
                            return item.id == module.id;
                        });
                        if (found == -1) {
                            modules.splice(index, 1);
                            needToUpdate = true;
                        }
                    });
                }

                if (needToUpdate == true) {
                    this.props.treeProps.settings.updateObjectProperty(this.props.object, { items: modules });
                }
            }
        }

        /******************* START MODULE SPECIFIC FUNCTIONS ****************/

    }, {
        key: 'getNewModuleContent',
        value: function getNewModuleContent(module) {
            var moduleRegistry = _settings_helpers2.default.getModuleRegistry();
            var moduleIndex = moduleRegistry.findIndex(function (eachModule) {
                return eachModule.type == module.name;
            });

            var settings = moduleRegistry[moduleIndex] != undefined ? Object.assign({}, moduleRegistry[moduleIndex].default.default) : {};

            return {
                type: 'module',
                id: module.id,
                moduleType: module.name,
                items: false,
                standard: { linked: {} },
                settings: { linked: settings }
            };
        }
    }, {
        key: 'render',
        value: function render() {
            var _this4 = this;

            var settings = this.props.settings.linked;
            var objectItems = this.props.object.items;
            var childModules = 'Choose module types';
            var classes = '';
            var styleTag = null;
            var style = '';

            if (settings.modules.items.length && this.props.object.items != undefined && this.props.object.items.length) {
                //we want to use the module settings to find the order of the modules and which modules to use,
                // then use the object's items to get the actual settings of the modules
                childModules = settings.modules.items.map(function (module) {

                    if (module.id == undefined || !module.id) return null;

                    //Need the filter for reverting changes since there is a brief time when objectItems items are undefined
                    var theModule = objectItems.filter(function (n) {
                        return n != undefined;
                    }).find(function (item) {
                        return item.id == module.id;
                    });

                    if (!theModule) return null;

                    return _react2.default.createElement(_object2.default, {
                        object: theModule,
                        key: theModule.id + '-' + theModule.moduleType,
                        treeProps: _this4.props.treeProps,
                        preventControls: _this4.props.preventControls,
                        depth: { overall: _this4.props.depth.overall + 1, row: _this4.props.depth.row, column: _this4.props.depth.column },
                        controlConfig: { delete: false, move: false, joinAdjacent: false, duplicate: false }
                    });
                });
            } else if (this.props.object.items == undefined) {
                //trying to make it so that when you add sidebyside, don't edit, add another module, then undo, sidebyside doesn't blank - not working yet
                setTimeout(function () {
                    return _this4.setInitialModuleItems();
                }, 100);
                return null;
            }

            classes += ' ocb-sbs-' + settings.align.choice;
            classes += ' ocb-sbs-' + settings.vertical_align.choice;
            classes += ' ocb-sbs-mobile-' + settings.mobile_align.choice;

            if (settings.horizontal_margin.useDefault == 'custom') {
                style += _settings_helpers2.default.wrapCSSProperty(this.props.object.id, '.ocb-module', 'margin-right', settings.horizontal_margin.value / 2 + settings.horizontal_margin.units);
                style += _settings_helpers2.default.wrapCSSProperty(this.props.object.id, '.ocb-module', 'margin-left', settings.horizontal_margin.value / 2 + settings.horizontal_margin.units);
                style += _settings_helpers2.default.wrapCSSProperty(this.props.object.id, '.ocb-module:last-child', 'margin-right', 0);
                style += _settings_helpers2.default.wrapCSSProperty(this.props.object.id, '.ocb-module:first-child', 'margin-left', 0);
            }

            if (style) styleTag = _settings_helpers2.default.wrapCSSInStyleTag(style, this.props.object.id, '.ocb-module');

            return _react2.default.createElement(
                'div',
                { 'data-ocb-type': 'side-by-side', className: 'ocb-module-side-by-side' },
                styleTag,
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-module-sbs-inner' + classes },
                    childModules
                )
            );
        }
    }]);

    return ModuleSideBySide;
}(_react.Component);

exports.default = ModuleSideBySide;

/***/ }),

/***/ 890:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _default_tabs = __webpack_require__(379);

var _default_tabs2 = _interopRequireDefault(_default_tabs);

var _container = __webpack_require__(895);

var _container2 = _interopRequireDefault(_container);

var _settings_helpers = __webpack_require__(2);

var _settings_helpers2 = _interopRequireDefault(_settings_helpers);

var _tree_reducer_functions = __webpack_require__(28);

var _tree_reducer_functions2 = _interopRequireDefault(_tree_reducer_functions);

var _redux = __webpack_require__(7);

var _reactRedux = __webpack_require__(5);

var _index = __webpack_require__(8);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
//import Row from '../structure/row';


//http://dropsofserenity.github.io/react-avatar-cropper/
var ModuleTabs = function (_Component) {
    _inherits(ModuleTabs, _Component);

    function ModuleTabs(props) {
        _classCallCheck(this, ModuleTabs);

        var _this = _possibleConstructorReturn(this, (ModuleTabs.__proto__ || Object.getPrototypeOf(ModuleTabs)).call(this, props));

        var fullProps = _this.getSettings();

        _this.state = {
            module: null,
            index: null,
            tabs: []
        };
        return _this;
    }

    /******************* START BOOTSTRAPPING FUNCTIONS ****************/

    /**
     * Set the initial tab content
     */


    _createClass(ModuleTabs, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            //Does more cleanup by passing true because this is only performed on load,
            // and not when settings are being changed in the settings panel
            //The only case where we do not want to setInitialTabItems is if this has somehow been triggered
            // by duplication on the tabs module that was duplicated
            if (this.props.object.items != undefined && this.props.object.settings.linked.tabs != undefined) {
                if (this.props.object.settings.linked.tabs.items.length != this.props.object.items.length) {
                    this.setInitialTabItems(true);
                }
            } else {
                this.setInitialTabItems(true);
            }
        }
    }, {
        key: 'componentDidUpdate',
        value: function componentDidUpdate() {
            if (this.props.object.items != undefined && this.props.object.settings.linked.tabs != undefined) {
                if (this.props.object.settings.linked.tabs.items.length != this.props.object.items.length) {
                    this.setInitialTabItems();
                }
            }
        }
    }, {
        key: 'setInitialTabItems',
        value: function setInitialTabItems() {
            var _this2 = this;

            var deleteItems = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

            var newSettings = this.props.object.settings;

            if (newSettings.linked.tabs == undefined) {
                newSettings = this.getSettings();
            }

            //Compare the items in object.items to those in object.settings.linked.tabs.items to see if there are containers that we should generate or remove
            if (newSettings.linked.tabs.items.length) {
                var needToUpdate = false;
                if (this.props.object.items == undefined) this.props.object.items = [];
                var tabs = this.props.object.items;

                //Add items that are in the object.settings.linked.tabs.items, but not in the object.items
                newSettings.linked.tabs.items.forEach(function (tab, index) {
                    var found = _this2.props.object.items.findIndex(function (item) {
                        return item.id == tab.id;
                    });
                    if (found == -1) {
                        tabs.push(_this2.getNewTabContent(newSettings.linked.tabs.items[index].id));
                        needToUpdate = true;
                    }
                });

                //Remove items that are not in the object.settings.linked.tabs.items, but ARE in the object.items
                //We don't want to remove items in componentDidUpdate because we may discard changes and then be left without the item content
                //NOTE that this may lead to a situation where there is a difference between object.items and object.settings.linked.tabs.items
                // until the next component mount. That should be fine though.
                if (deleteItems) {
                    tabs.forEach(function (tab, index) {
                        var found = newSettings.linked.tabs.items.findIndex(function (item) {
                            return item.id == tab.id;
                        });
                        if (found == -1) {
                            tabs.splice(index, 1);
                            needToUpdate = true;
                        }
                    });
                }

                if (needToUpdate == true) {
                    this.props.treeProps.settings.updateObjectProperty(this.props.object, { items: tabs });
                }
            }
        }

        /**
         * Every module type should have this function which sets the fullProps, merging them with the default
         * @returns {{}}
         */

    }, {
        key: 'getSettings',
        value: function getSettings() {
            var fullProps = {};
            fullProps.linked = _settings_helpers2.default.mergeWithDefault((0, _default_tabs2.default)().default, this.props.settings.linked);

            return fullProps;
        }

        /******************* START MODULE SPECIFIC FUNCTIONS ****************/

    }, {
        key: 'getNewTabContent',
        value: function getNewTabContent(id) {
            return {
                type: 'container',
                id: id,
                items: []
            };
        }
    }, {
        key: 'renderTab',
        value: function renderTab(id) {
            var tabs = this.props.object.items;
            if (tabs == undefined) {
                tabs = [];
            }
            //console.log('render tab', this.props.object);
            var tabIndex = tabs.findIndex(function (tab) {
                return tab.id == id;
            });
            var container = tabs[tabIndex];
            if (container != undefined) {
                return _react2.default.createElement(_container2.default, { container: container, containerType: 'tabs', key: container.id, treeProps: this.props.treeProps, preventControls: this.props.preventControls, depth: { overall: this.props.depth.overall, row: this.props.depth.row, column: this.props.depth.column } });
            }

            return null;
        }
    }, {
        key: 'renderTabs',
        value: function renderTabs(settings, classes) {
            var _this3 = this;

            //console.log('render tabs', settings);
            /*if( settings.content_background_color.color != 'custom' ){
                contentClasses += settings.content_background_color.color += '-color';
            }*/

            return settings.tabs.items.map(function (tab, index) {
                var active = index == 0 ? ' active' : '';
                var animation = ' ' + 'fadeIn';
                return _react2.default.createElement(
                    'div',
                    { id: _this3.props.object.id + '-tab' + index, className: 'ocb-tab-content-item animated ' + classes + animation + active, key: index },
                    _this3.renderTab(tab.id)
                );
            });
        }
    }, {
        key: 'renderTabNav',
        value: function renderTabNav(settings, classes) {
            var _this4 = this;

            return settings.tabs.items.map(function (tab, index) {
                var active = index == 0 ? ' active' : '';
                var icon = null;
                var flex = '';
                var flexRight = '';
                var flexLeft = '';
                var text = tab.name;

                if (settings.tab_include_icon.yes && tab.icon) {
                    flex = settings.tab_icon_position.choice != 'top' ? ' d-flex align-items-center' : '';
                    flexRight = settings.tab_icon_position.choice == 'right' ? ' justify-content-start' : '';
                    flexLeft = settings.tab_icon_position.choice == 'left' ? ' justify-content-center' : '';
                    var flex_last = settings.tab_icon_position.choice == 'right' ? 'flex-last ml-auto' : '';
                    icon = _react2.default.createElement('i', { className: 'fa ' + tab.icon + ' ' + flex_last });
                }

                if (settings.tab_bold.yes) {
                    text = _react2.default.createElement(
                        'strong',
                        null,
                        tab.name
                    );
                }

                text = _react2.default.createElement(
                    'span',
                    { className: 'ocb-tab-nav-item-name' },
                    text
                );

                if (tab.description) {
                    text = _react2.default.createElement(
                        'span',
                        { className: 'ocb-tab-nav-text-group' },
                        text,
                        _react2.default.createElement(
                            'span',
                            { className: 'ocb-tab-nav-item-description' },
                            tab.description
                        )
                    );
                }

                return _react2.default.createElement(
                    'div',
                    { className: 'ocb-tab-nav-item ocb-specific-color ' + classes + active + flex + flexRight + flexLeft, 'data-target': '#' + _this4.props.object.id + '-tab' + index, key: index },
                    icon,
                    text
                );
            });
        }
    }, {
        key: 'render',
        value: function render() {
            var fullProps = this.getSettings();

            var tabCSS = '';
            if (fullProps.linked.tab_include_border_bottom.yes) {
                if (fullProps.linked.tab_border_bottom_width.useDefault != 'default') {
                    tabCSS += 'border-bottom-width:' + fullProps.linked.tab_border_bottom_width.value + fullProps.linked.tab_border_bottom_width.units + ';';
                }
            } else {
                tabCSS += 'border-bottom:none;';
            }
            if (fullProps.linked.tab_include_border_top.yes) {
                if (fullProps.linked.tab_border_top_width.useDefault != 'default') {
                    tabCSS += 'border-top-width:' + fullProps.linked.tab_border_top_width.value + fullProps.linked.tab_border_top_width.units + ';';
                }
            } else {
                tabCSS += 'border-top:none;';
            }
            if (fullProps.linked.tab_width.choice == 'regular' || fullProps.linked.tab_location.choice == 'left') {
                if (fullProps.linked.tab_horizontal_padding.useDefault != 'default') {
                    tabCSS += 'padding-left:' + fullProps.linked.tab_horizontal_padding.value + fullProps.linked.tab_horizontal_padding.units + ';';
                    tabCSS += 'padding-right:' + fullProps.linked.tab_horizontal_padding.value + fullProps.linked.tab_horizontal_padding.units + ';';
                }
            }
            if (fullProps.linked.tab_vertical_padding.useDefault != 'default') {
                tabCSS += 'padding-top:' + fullProps.linked.tab_vertical_padding.value + fullProps.linked.tab_vertical_padding.units + ';';
                tabCSS += 'padding-bottom:' + fullProps.linked.tab_vertical_padding.value + fullProps.linked.tab_vertical_padding.units + ';';
            }
            var compiledCSS = '';
            var iconPosition = '';
            if (fullProps.linked.tab_width.choice == 'regular' && fullProps.linked.tab_location.choice == 'top') {
                if (fullProps.linked.tab_min_width.units != '%') {
                    if (fullProps.linked.tab_nav_align.choice == 'center') {
                        compiledCSS += _settings_helpers2.default.wrapCSSProperty(this.props.object.id, '.ocb-tab-nav-inner', 'justify-content', 'center');
                    }
                    if (fullProps.linked.tab_nav_align.choice == 'right') {
                        compiledCSS += _settings_helpers2.default.wrapCSSProperty(this.props.object.id, '.ocb-tab-nav-inner', 'justify-content', 'flex-end');
                    }
                } else {
                    if (fullProps.linked.tab_nav_align.choice == 'center') {
                        compiledCSS += _settings_helpers2.default.wrapCSSProperty(this.props.object.id, '.ocb-tab-nav', 'margin', '0 auto');
                    }
                    if (fullProps.linked.tab_nav_align.choice == 'right') {
                        compiledCSS += _settings_helpers2.default.wrapCSSProperty(this.props.object.id, '.ocb-tab-nav', 'margin', '0 0 0 auto');
                    }
                }
            }
            if (fullProps.linked.tab_include_icon.yes) {
                iconPosition = fullProps.linked.tab_icon_position.choice;
                if (fullProps.linked.tab_icon_font_size.useDefault == 'custom') {
                    compiledCSS += _settings_helpers2.default.wrapCSSProperty(this.props.object.id, '.ocb-tab-nav-item i', 'font-size', fullProps.linked.tab_icon_font_size.value + fullProps.linked.tab_icon_font_size.units);
                }
            }
            if (fullProps.linked.tab_font_size.useDefault == 'custom') {
                compiledCSS += _settings_helpers2.default.wrapCSSProperty(this.props.object.id, '.ocb-tab-nav-item .ocb-tab-nav-item-name', 'font-size', fullProps.linked.tab_font_size.value + fullProps.linked.tab_font_size.units);
            }
            if (fullProps.linked.tab_description_font_size.useDefault == 'custom') {
                compiledCSS += _settings_helpers2.default.wrapCSSProperty(this.props.object.id, '.ocb-tab-nav-item .ocb-tab-nav-item-description', 'font-size', fullProps.linked.tab_description_font_size.value + fullProps.linked.tab_description_font_size.units);
            }
            if (fullProps.linked.tab_min_width.useDefault == 'custom') {
                if (fullProps.linked.tab_location.choice == 'left') {
                    compiledCSS += _settings_helpers2.default.wrapCSSProperty(this.props.object.id, '.ocb-tab-nav-item', 'min-width', fullProps.linked.tab_min_width.value + fullProps.linked.tab_min_width.units);
                }
                if (fullProps.linked.tab_width.choice == 'regular' && fullProps.linked.tab_min_width.useDefault == 'custom') {
                    compiledCSS += _settings_helpers2.default.wrapCSSProperty(this.props.object.id, '.ocb-tab-nav-inner', 'width', '100%');
                    if (fullProps.linked.tab_min_width.units != '%') {
                        compiledCSS += _settings_helpers2.default.wrapCSSProperty(this.props.object.id, '.ocb-tab-nav-item', 'max-width', fullProps.linked.tab_min_width.value + fullProps.linked.tab_min_width.units);
                    } else {
                        compiledCSS += _settings_helpers2.default.wrapCSSProperty(this.props.object.id, '.ocb-tab-nav', 'width', fullProps.linked.tab_min_width.value * fullProps.linked.tabs.items.length + '%');
                        compiledCSS += _settings_helpers2.default.wrapCSSProperty(this.props.object.id, '.ocb-tab-nav-item', 'width', 100 / fullProps.linked.tabs.items.length + '%');
                    }
                }
            }

            //Get tab background color separately and then excludeCSS it in the getClassesAndCSS so that it doesn't overwrite hover and active
            if (fullProps.linked.tab_background_color.color == 'custom') {
                compiledCSS += _settings_helpers2.default.wrapCSSProperty(this.props.object.id, '.ocb-tab-nav-item:not(.active):not(:hover)', 'background', fullProps.linked.tab_background_color.customColor);
            }

            var tabClassesAndCSS = _settings_helpers2.default.getClassesAndCSS(['color'], fullProps.linked, this.props.object.id, '.ocb-tab-nav-item', 'tab', tabCSS, '', '', compiledCSS, { excludeCSS: ['tab_background_color'] });
            var contentClassesAndCSS = { styleTag: null, classes: '' };
            var newCompiledCSS = '';
            var leftBorderClass = '';
            var leftBorderCSS = '';
            if (fullProps.linked.tab_location.choice == 'left' && fullProps.linked.content_include_border_left.yes) {
                leftBorderClass = 'ocb-tabs-left-border';
                if (fullProps.linked.content_border_left_width.useDefault == 'custom') {
                    leftBorderCSS += 'border-left-width:' + fullProps.linked.content_border_left_width.value + fullProps.linked.content_border_left_width.units + ';';
                    newCompiledCSS += _settings_helpers2.default.wrapCSSProperty(this.props.object.id, '.ocb-tabs-left .ocb-tabs-width-stacked .ocb-tab-nav-item', 'margin-right', fullProps.linked.content_border_left_width.value + fullProps.linked.content_border_left_width.units);
                    newCompiledCSS += _settings_helpers2.default.wrapCSSProperty(this.props.object.id, '.ocb-tabs-left .ocb-tabs-width-stacked', 'margin-right', '-' + fullProps.linked.content_border_left_width.value + fullProps.linked.content_border_left_width.units);
                }
            }
            contentClassesAndCSS = _settings_helpers2.default.getClassesAndCSS(['color'], fullProps.linked, this.props.object.id, '.ocb-tab-content-item', 'content', leftBorderCSS, '', '', newCompiledCSS);

            var displayFlex = fullProps.linked.tab_width.choice == 'stretch' ? 'd-flex' : '';
            var displayInlineFlex = fullProps.linked.tab_width.choice == 'regular' ? 'd-inline-flex' : '';
            var leftTabs = fullProps.linked.tab_location.choice == 'left' ? 'ocb-tabs-left d-flex align-items-stretch' : '';

            //tabClassesAndCSS = {styleTag: null, classes: ''};

            return _react2.default.createElement(
                'div',
                { 'data-ocb-type': 'tabs', className: 'ocb-module-tabs ocb-tab-icon-position-' + iconPosition + ' ' + leftTabs + ' ' + leftBorderClass },
                tabClassesAndCSS.styleTag,
                contentClassesAndCSS.styleTag,
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-tab-nav ocb-tabs-width-' + fullProps.linked.tab_width.choice },
                    _react2.default.createElement(
                        'div',
                        { className: 'ocb-tab-nav-inner ' + displayFlex + displayInlineFlex },
                        this.renderTabNav(fullProps.linked, tabClassesAndCSS.classes)
                    )
                ),
                this.renderTabs(fullProps.linked, contentClassesAndCSS.classes)
            );
        }
    }]);

    return ModuleTabs;
}(_react.Component);

//Anything returned from this function will end up as props on the Module container
//So we're basically saying that we want these actions to be available in props so we can use them like this.props.actionName


function mapDispatchToProps(dispatch) {
    //whenever update module standard or settings is called, the result should be passed to our reducers
    return (0, _redux.bindActionCreators)({ updateObjectSettings: _index.updateObjectSettings, updateObjectProperty: _index.updateObjectProperty }, dispatch);
}

//Promote Tree from component to container - it needs to know about the new dispatch methods above, updateModuleStandard
//and updateModuleSettings
//We pass null for the first value because we don't need a mapStateToProps since props are being passed down from Tree
//http://stackoverflow.com/questions/35443167/dispatch-is-not-a-function-when-argument-to-maptodispatchtoprops-in-redux
exports.default = (0, _reactRedux.connect)(null, mapDispatchToProps)(ModuleTabs);

/***/ }),

/***/ 891:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactRedux = __webpack_require__(5);

var _redux = __webpack_require__(7);

var _index = __webpack_require__(8);

var _settings_helpers = __webpack_require__(2);

var _settings_helpers2 = _interopRequireDefault(_settings_helpers);

var _api_helpers = __webpack_require__(6);

var _api_helpers2 = _interopRequireDefault(_api_helpers);

var _update_helpers = __webpack_require__(787);

var _update_helpers2 = _interopRequireDefault(_update_helpers);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ModuleTestimonials = function (_Component) {
    _inherits(ModuleTestimonials, _Component);

    function ModuleTestimonials(props) {
        _classCallCheck(this, ModuleTestimonials);

        var _this = _possibleConstructorReturn(this, (ModuleTestimonials.__proto__ || Object.getPrototypeOf(ModuleTestimonials)).call(this, props));

        _this.state = {
            shortcode: _this.getShortcode(_this.props.settings.linked)
        };

        _this.postVars = {
            title: '{{post_title}}',
            content: '{{post_content}}',
            index_class: '{{index_class}}',
            attribution: '{{ocb_testimonial_config|attribution}}',
            attribution_description: '{{ocb_testimonial_config|attribution_description}}'
        };

        _this.queryTimer = null;
        return _this;
    }

    _createClass(ModuleTestimonials, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            //Update from the previous testimonials module
            if (window.ocbGlobals != undefined && window.ocbGlobals.Testimonials != undefined && window.ocbGlobals.Testimonials.length) {
                this.updateTestimonialsModule();
            } else {
                //If there are no testimonials in site state, then we've already run the update or the site never had old testimonials
                this.getTestimonials();
            }
        }

        /**
         * TESTIMONIAL MODULE UPDATE FUNCTION
         */

    }, {
        key: 'updateTestimonialsModule',
        value: function updateTestimonialsModule() {
            var _this2 = this;

            //See if there are new testimonials that have been saved
            var posts = _api_helpers2.default.doRequest('getQuery', {
                query: { post_type: 'ocb_testimonial' },
                withMeta: ['ocb_testimonial_config']
            });
            posts.then(function (result) {
                if (result.none_found != undefined && result.none_found) {
                    //create new testimonials
                    window.ocbGlobals.Testimonials.forEach(function (testimonial) {
                        _this2.createTestimonial(testimonial);
                    });

                    //Wait for new testimonials to be created
                    setTimeout(function () {
                        _this2.getTestimonials();

                        //delete them from the siteState
                        _this2.deleteTestimonialFromSiteState();
                    }, 5000);
                } else {
                    //There are already testimonials, so we don't need the old ones in site state
                    //We can get here if we load a page and the testimonial module is updated, but the site state isn't saved with the old testimonials removed
                    _this2.deleteTestimonialFromSiteState();

                    //Now let's get the new testimonials
                    _this2.getTestimonials();
                }
            }).catch(function (error) {
                console.log('testimonials query error', error);
            });
        }

        /**
         * TESTIMONIAL MODULE UPDATE FUNCTION
         */

    }, {
        key: 'deleteTestimonialFromSiteState',
        value: function deleteTestimonialFromSiteState() {
            var newSiteState = JSON.parse(JSON.stringify(this.props.siteState));

            //Tried to just delete these properties but that didn't save so instead set them to an empty array
            newSiteState.testimonials = [];
            newSiteState.Testimonials = [];

            this.props.updateSiteSettings(newSiteState);
        }

        /**
         * TESTIMONIAL MODULE UPDATE FUNCTION
         *
         * Used to update the module from the old Testimonials version to the new one
         */

    }, {
        key: 'createTestimonial',
        value: function createTestimonial(testimonial) {

            var newTestimonial = _api_helpers2.default.doRequest('createCustom', {
                post_type: 'ocb_testimonial',
                title: 'New Testimonial',
                status: 'publish'
            });

            newTestimonial.then(function (result) {
                var updateTestimonial = _api_helpers2.default.doRequest('updateCustom', {
                    id: result.id,
                    post: {
                        post_content: testimonial.testimonial.text,
                        post_title: testimonial.title.text
                    },
                    taxonomies: {
                        post_tag: testimonial.category_name.text
                    },
                    meta: {
                        ocb_testimonial_config: {
                            attribution: testimonial.attribution.text,
                            attribution_description: testimonial.attribution_description.text
                        }
                    }
                });
            }).catch(function (error) {
                alert('Could not add testimonial');
            });
        }
    }, {
        key: 'componentDidUpdate',
        value: function componentDidUpdate(prevProps, prevState) {
            var _this3 = this;

            //if new shortcode is different from old shortcode in state, retrieve posts again
            var newShortcode = this.getShortcode(this.props.settings.linked);
            if (prevState.shortcode != newShortcode || this.props.settings.linked.testimonials.source != prevState.source || this.props.settings.linked.testimonials.lastUpdated != prevState.lastUpdated) {
                this.setState({ shortcode: newShortcode, source: this.props.settings.linked.testimonials.source, lastUpdated: this.props.settings.linked.testimonials.lastUpdated });
                clearTimeout(this.queryTimer);
                this.queryTimer = setTimeout(function () {
                    _this3.getTestimonials();
                }, 300);
            }
        }
    }, {
        key: 'getTestimonials',
        value: function getTestimonials() {
            var _this4 = this;

            var settings = this.props.settings.linked;
            var query = {};

            query.post_type = 'ocb_testimonial';
            query.orderby = 'date';
            query.order = 'DESC';
            query.posts_per_page = settings.maximum.useDefault == 'custom' ? parseInt(settings.maximum.value) : 10;
            //query.ocb_featured_image_size = settings.item_image_size.choice;

            if (settings.testimonials.source == 'tags' && settings.testimonials.tags) {
                query.tag__in = settings.testimonials.tags;
            }

            if (settings.testimonials.source == 'custom') {
                query.post__in = this.props.settings.linked.testimonials.testimonials;
            }

            var posts = _api_helpers2.default.doRequest('getQuery', {
                query: query,
                withMeta: ['ocb_testimonial_config']
            });

            posts.then(function (result) {
                if (window.OCBPosts == undefined) window.OCBPosts = {};
                if (window.OCBPosts[_this4.props.object.id] == undefined) window.OCBPosts[_this4.props.object.id] = [];

                //Set the result to the global
                window.OCBPosts[_this4.props.object.id] = result;

                //Trigger the public method to create the post HTML
                window.ocbReInitSinglePosts(_this4.props.object.id);
            }).catch(function (error) {
                console.log('query error', error);
            });
        }
    }, {
        key: 'getShortcode',
        value: function getShortcode(settings) {
            var shortcode = '[ocb_posts_object module_id="' + this.props.object.id + '"';

            shortcode += ' query="custom"';
            shortcode += ' post_type="ocb_testimonial"';
            shortcode += ' orderby="date"';
            shortcode += ' with_meta="ocb_testimonial_config"';
            shortcode += ' order="DESC"';
            shortcode += ' number="' + (settings.maximum.useDefault == 'custom' ? parseInt(settings.maximum.value) : 10) + '"';

            if (this.props.settings.linked.testimonials.source == 'custom') {
                shortcode += ' post_filter_type="in"';
                if (this.props.settings.linked.testimonials.testimonials != undefined) {
                    shortcode += ' post_filter="' + this.props.settings.linked.testimonials.testimonials.join() + '"';
                }
            }

            //shortcode += ` featured_image_size="${settings.item_image_size.choice}"`;
            shortcode += ' no_posts_message="No testimonials found."';
            shortcode += ' version="2"';

            if (settings.style.choice == 'slider') {
                shortcode += ' index_class="ocb-slider-slide-"';
            }

            shortcode += ']';

            return shortcode;
        }

        /******************* RENDER ****************/

    }, {
        key: 'renderQuoteTestimonial',
        value: function renderQuoteTestimonial(_ref) {
            var testimonialClasses = _ref.testimonialClasses,
                attributionClasses = _ref.attributionClasses,
                descriptionClasses = _ref.descriptionClasses,
                quoteClasses = _ref.quoteClasses,
                titleClasses = _ref.titleClasses;

            var settings = this.props.settings.linked;
            var image = null;
            var classes = '';

            if (false) {
                image = _react2.default.createElement('img', { className: 'ocb-testimonial-image', alt: '', src: _settings_helpers2.default.getImageURL(testimonial.image.url) });
            }

            var title = null;
            if (settings.include_title.yes) {
                title = _react2.default.createElement(
                    'div',
                    { className: 'ocb-testimonial-title ' + titleClasses },
                    _react2.default.createElement(
                        'strong',
                        null,
                        this.postVars.title
                    )
                );
            }

            var attribution = null;
            if (settings.include_attribution.yes) {
                attribution = _react2.default.createElement(
                    'span',
                    { className: 'ocb-testimonial-attribution ' + attributionClasses },
                    this.postVars.attribution
                );
            }

            var description = null;
            if (settings.include_attribution_description.yes) {
                description = _react2.default.createElement(
                    'span',
                    { className: 'ocb-testimonial-attribution-description ' + descriptionClasses },
                    this.postVars.attribution_description
                );
            }

            if (settings.quote_position.choice == 'left') {
                classes += ' d-flex';
            }

            return _react2.default.createElement(
                'div',
                { className: 'ocb-testimonial-inner ocb-testimonial-quote-' + settings.quote_position.choice + classes },
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-testimonial-quote-div' },
                    _react2.default.createElement(
                        'div',
                        { className: 'ocb-testimonial-quote-icon d-inline-flex justify-content-center align-items-center ' + quoteClasses },
                        _react2.default.createElement('i', { className: 'fa fa-quote-left' })
                    )
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-testimonial-content' },
                    _react2.default.createElement(
                        'div',
                        { className: 'ocb-testimonial-quote ' + testimonialClasses },
                        title,
                        _react2.default.createElement(
                            'div',
                            null,
                            this.postVars.content
                        )
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'ocb-testimonial-info d-inline-flex align-items-center' },
                        image,
                        _react2.default.createElement(
                            'div',
                            { className: '' },
                            attribution,
                            description
                        )
                    )
                )
            );
        }
    }, {
        key: 'renderBoxTestimonial',
        value: function renderBoxTestimonial(_ref2) {
            var testimonialClasses = _ref2.testimonialClasses,
                attributionClasses = _ref2.attributionClasses,
                descriptionClasses = _ref2.descriptionClasses,
                quoteClasses = _ref2.quoteClasses,
                titleClasses = _ref2.titleClasses;

            var settings = this.props.settings.linked;
            var image = null;
            if (false) {
                image = _react2.default.createElement('img', { className: 'ocb-testimonial-image', alt: '', src: _settings_helpers2.default.getImageURL(testimonial.image.url) });
            }

            var title = null;
            if (settings.include_title.yes) {
                title = _react2.default.createElement(
                    'div',
                    { className: 'ocb-testimonial-title ' + titleClasses },
                    _react2.default.createElement(
                        'strong',
                        null,
                        this.postVars.title
                    )
                );
            }

            var attribution = null;
            if (settings.include_attribution.yes) {
                attribution = _react2.default.createElement(
                    'span',
                    { className: 'ocb-testimonial-attribution ' + attributionClasses },
                    this.postVars.attribution
                );
            }

            var description = null;
            if (settings.include_attribution_description.yes) {
                description = _react2.default.createElement(
                    'span',
                    { className: 'ocb-testimonial-attribution-description ' + descriptionClasses },
                    this.postVars.attribution_description
                );
            }

            return _react2.default.createElement(
                'div',
                { className: 'ocb-testimonial-inner' },
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-testimonial-quote ' + testimonialClasses },
                    title,
                    _react2.default.createElement(
                        'div',
                        null,
                        this.postVars.content
                    ),
                    _react2.default.createElement('div', { className: 'ocb-testimonial-triangle-border ' + settings.testimonial_border.color + '-border-top-color' }),
                    _react2.default.createElement('div', { className: 'ocb-testimonial-triangle ' + settings.testimonial_background_color.color + '-border-top-color' })
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'ocb-testimonial-info d-flex align-items-center' },
                    image,
                    _react2.default.createElement(
                        'div',
                        { className: '' },
                        attribution,
                        description
                    )
                )
            );
        }
    }, {
        key: 'renderCardTestimonial',
        value: function renderCardTestimonial(_ref3) {
            var testimonialClasses = _ref3.testimonialClasses,
                attributionClasses = _ref3.attributionClasses,
                descriptionClasses = _ref3.descriptionClasses,
                quoteClasses = _ref3.quoteClasses,
                titleClasses = _ref3.titleClasses;

            var settings = this.props.settings.linked;
            var image = null;
            if (false) {
                image = _react2.default.createElement('img', { className: 'card-img-top ocb-testimonial-image', src: _settings_helpers2.default.getImageURL(testimonial.image.url) });
            }

            var title = null;
            if (settings.include_title.yes) {
                title = _react2.default.createElement(
                    'div',
                    { className: 'ocb-testimonial-title ' + titleClasses },
                    _react2.default.createElement(
                        'strong',
                        null,
                        this.postVars.title
                    )
                );
            }

            var attribution = null;
            if (settings.include_attribution.yes) {
                attribution = _react2.default.createElement(
                    'span',
                    { className: 'ocb-testimonial-attribution ' + attributionClasses },
                    this.postVars.attribution
                );
            }

            var description = null;
            if (settings.include_attribution_description.yes) {
                description = _react2.default.createElement(
                    'span',
                    { className: 'ocb-testimonial-attribution-description ' + descriptionClasses },
                    this.postVars.attribution_description
                );
            }

            return _react2.default.createElement(
                'div',
                { className: 'card ocb-testimonial-quote ' + testimonialClasses },
                image,
                _react2.default.createElement(
                    'div',
                    { className: 'card-block' },
                    _react2.default.createElement(
                        'div',
                        null,
                        title,
                        _react2.default.createElement(
                            'div',
                            { className: 'card-text' },
                            this.postVars.content
                        )
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'ocb-testimonial-info' },
                        attribution,
                        description
                    )
                )
            );
        }
    }, {
        key: 'renderSliderTestimonial',
        value: function renderSliderTestimonial(_ref4) {
            var testimonialClasses = _ref4.testimonialClasses,
                attributionClasses = _ref4.attributionClasses,
                descriptionClasses = _ref4.descriptionClasses,
                quoteClasses = _ref4.quoteClasses,
                titleClasses = _ref4.titleClasses;

            var settings = this.props.settings.linked;
            var image = null;
            if (false) {
                image = _react2.default.createElement('img', { className: 'card-img-top ocb-testimonial-image', src: _settings_helpers2.default.getImageURL(testimonial.image.url) });
            }

            var title = null;
            if (settings.include_title.yes) {
                title = _react2.default.createElement(
                    'div',
                    { className: 'ocb-testimonial-title ' + titleClasses },
                    _react2.default.createElement(
                        'strong',
                        null,
                        this.postVars.title
                    )
                );
            }

            var attribution = null;
            if (settings.include_attribution.yes) {
                attribution = _react2.default.createElement(
                    'span',
                    { className: 'ocb-testimonial-attribution ' + attributionClasses },
                    this.postVars.attribution
                );
            }

            var description = null;
            if (settings.include_attribution_description.yes) {
                description = _react2.default.createElement(
                    'span',
                    { className: 'ocb-testimonial-attribution-description ' + descriptionClasses },
                    this.postVars.attribution_description
                );
            }

            return _react2.default.createElement(
                'div',
                { className: 'card ocb-slider-slide ocb-testimonial ' + testimonialClasses + ' ' + this.postVars.index_class },
                _react2.default.createElement(
                    'div',
                    { className: 'card-block' },
                    _react2.default.createElement(
                        'div',
                        null,
                        title,
                        _react2.default.createElement(
                            'div',
                            { className: 'card-text' },
                            this.postVars.content
                        )
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'ocb-testimonial-info' },
                        attribution,
                        description
                    )
                )
            );
        }
    }, {
        key: 'renderTestimonials',
        value: function renderTestimonials(testimonialClasses, attributionClasses, descriptionClasses, quoteClasses, titleClasses) {
            var settings = this.props.settings.linked;

            var testimonialDom = null;

            switch (settings.style.choice) {
                case 'quote':
                    testimonialDom = this.renderQuoteTestimonial({ testimonialClasses: testimonialClasses, attributionClasses: attributionClasses, descriptionClasses: descriptionClasses, quoteClasses: quoteClasses, titleClasses: titleClasses });
                    break;
                case 'box':
                    testimonialDom = this.renderBoxTestimonial({ testimonialClasses: testimonialClasses, attributionClasses: attributionClasses, descriptionClasses: descriptionClasses, quoteClasses: quoteClasses, titleClasses: titleClasses });
                    break;
                case 'card':
                    testimonialDom = this.renderCardTestimonial({ testimonialClasses: testimonialClasses, attributionClasses: attributionClasses, descriptionClasses: descriptionClasses, quoteClasses: quoteClasses, titleClasses: titleClasses });
                    break;
                case 'slider':
                    return this.renderSliderTestimonial({ testimonialClasses: testimonialClasses, attributionClasses: attributionClasses, descriptionClasses: descriptionClasses, quoteClasses: quoteClasses, titleClasses: titleClasses });
                    break;
            }
            return _react2.default.createElement(
                'div',
                { className: 'ocb-post ocb-testimonial ocb-columns-group-item' },
                testimonialDom
            );
        }
    }, {
        key: 'render',
        value: function render() {
            var settings = this.props.settings.linked;
            var shortcode = this.getShortcode(settings);
            var columns = settings.columns.value;
            var totalTestimonials = window.OCBPosts != undefined && window.OCBPosts[this.props.object.id] != undefined ? window.OCBPosts[this.props.object.id].length : 0;
            var remainder = totalTestimonials % columns;

            var boxTriangleBorder = '';
            if (settings.style.choice == 'box') {
                if (settings.testimonial_border.color == 'custom') {
                    boxTriangleBorder += _settings_helpers2.default.wrapCSSProperty(this.props.object.id, '.ocb-testimonial-triangle-border', 'border-top-color', settings.testimonial_border.customColor);
                }
                if (settings.testimonial_background_color.color == 'custom') {
                    boxTriangleBorder += _settings_helpers2.default.wrapCSSProperty(this.props.object.id, '.ocb-testimonial-triangle', 'border-top-color', settings.testimonial_background_color.customColor);
                }
            }
            var testimonialStyle = _settings_helpers2.default.wrapCSSProperty(this.props.object.id, '.ocb-testimonial:nth-last-child(-n+' + remainder + ')', 'margin-bottom', 0);
            if (settings.testimonial_vertical_margin.useDefault == 'custom') {
                var tvm = settings.testimonial_vertical_margin;
                testimonialStyle += _settings_helpers2.default.wrapCSSProperty(this.props.object.id, '.ocb-testimonial', 'margin-bottom', '' + tvm.value + tvm.units);
            }
            if (settings.testimonial_horizontal_margin.useDefault == 'custom' && columns > 1) {
                var marginAmount = (columns - 1) * settings.testimonial_horizontal_margin.value;
                var width = (100 - marginAmount) / columns;
                testimonialStyle += _settings_helpers2.default.wrapCSSProperty(this.props.object.id, '.ocb-testimonial', 'margin-right', settings.testimonial_horizontal_margin.value + '%');
                testimonialStyle += _settings_helpers2.default.wrapCSSProperty(this.props.object.id, '.ocb-testimonial:nth-child(' + columns + 'n)', 'margin-right', 0);
                testimonialStyle += _settings_helpers2.default.wrapCSSProperty(this.props.object.id, '.ocb-testimonial', 'width', width + '%');
            }
            testimonialStyle += boxTriangleBorder;

            var testimonialClassesAndCSS = _settings_helpers2.default.getClassesAndCSS(['color', 'padding', 'margin', 'border', 'border_radius', 'font', 'box-shadow'], settings, this.props.object.id, '.ocb-testimonial-quote', 'testimonial', '', '', '', testimonialStyle);
            var attributionClassesAndCSS = _settings_helpers2.default.getClassesAndCSS(['color', 'font'], settings, this.props.object.id, '.ocb-testimonial-attribution', 'attribution');
            var descriptionClassesAndCSS = _settings_helpers2.default.getClassesAndCSS(['color', 'font'], settings, this.props.object.id, '.ocb-testimonial-attribution-description', 'description');

            var quoteWidth = '';
            var quoteHeight = '';
            if (settings.quote_padding.useDefault == 'custom') {
                var quoteUnits = settings.quote_padding.value * 2 + settings.quote_padding.units;
                quoteWidth = _settings_helpers2.default.wrapCSSProperty(this.props.object.id, '.ocb-testimonial-quote-icon', 'width', quoteUnits);
                quoteHeight = _settings_helpers2.default.wrapCSSProperty(this.props.object.id, '.ocb-testimonial-quote-icon', 'height', quoteUnits);
            }

            var quoteClassesAndCSS = _settings_helpers2.default.getClassesAndCSS(['color', 'font', 'margin'], settings, this.props.object.id, '.ocb-testimonial-quote-icon', 'quote', '', '', '', quoteWidth + quoteHeight);

            var titleBottomMargin = '';
            if (settings.title_bottom_margin.useDefault == 'custom') {
                titleBottomMargin = _settings_helpers2.default.wrapCSSProperty(this.props.object.id, '.ocb-testimonial-title', 'margin-bottom', settings.title_bottom_margin.value + settings.title_bottom_margin.units);
            }
            var titleClassesAndCSS = _settings_helpers2.default.getClassesAndCSS(['color', 'font', 'margin'], settings, this.props.object.id, '.ocb-testimonial-title', 'title', '', '', '', titleBottomMargin);

            var testimonialRender = this.renderTestimonials(testimonialClassesAndCSS.classes, attributionClassesAndCSS.classes, descriptionClassesAndCSS.classes, quoteClassesAndCSS.classes, titleClassesAndCSS.classes);
            var classes = 'ocb-testimonials ocb-testimonials-style-' + settings.style.choice + ' ocb-columns-group-' + settings.columns.value + ' ocb-columns-group-stretch-mobile d-md-flex flex-wrap align-items-top';

            var testimonialInner = _react2.default.createElement(
                'div',
                { className: 'ocb-replaced-shortcode', 'data-shortcode': shortcode, 'data-shortcode-content': '1', 'data-shortcode-end': '[/ocb_posts_object]' },
                testimonialRender
            );

            var postTemplate = _react2.default.createElement(
                'div',
                { className: 'ocb-post-template ocb-save-remove-element ' + classes },
                testimonialRender
            );
            var dataAttr = {};

            if (settings.style.choice == 'slider') {

                testimonialInner = _react2.default.createElement(
                    'div',
                    { id: 'ocb-slider-' + this.props.object.id, className: 'ocb-slider-container',
                        'data-autoplay': 1,
                        'data-autoplaystoponlast': 0,
                        'data-navigation': 1,
                        'data-pagination': 1,
                        'data-pauseonhover': 1,
                        'data-sliderid': this.props.object.id
                    },
                    _react2.default.createElement(
                        'div',
                        { className: 'ocb-slider-wrapper ocb-slider-effect-fadeIn' },
                        testimonialInner
                    )
                );

                dataAttr.id = 'ocb-slider-' + this.props.object.id;
                dataAttr['data-autoplay'] = 1;
                dataAttr['data-autoplaystoponlast'] = 0;
                dataAttr['data-navigation'] = 1;
                dataAttr['data-pagination'] = 1;
                dataAttr['data-pauseonhover'] = 1;
                dataAttr['data-sliderid'] = this.props.object.id;

                classes += ' ocb-slider-container';

                postTemplate = _react2.default.createElement(
                    'div',
                    _extends({ className: 'ocb-save-remove-element ' + classes }, dataAttr),
                    _react2.default.createElement(
                        'div',
                        { className: 'ocb-slider-wrapper ocb-slider-effect-slideFade ocb-posts-wrap' },
                        _react2.default.createElement(
                            'div',
                            { className: 'ocb-post-template' },
                            testimonialRender
                        )
                    )
                );
            }

            return _react2.default.createElement(
                'div',
                { 'data-ocb-type': 'testimonials', className: 'ocb-module-testimonials' },
                testimonialClassesAndCSS.styleTag,
                attributionClassesAndCSS.styleTag,
                descriptionClassesAndCSS.styleTag,
                quoteClassesAndCSS.styleTag,
                titleClassesAndCSS.styleTag,
                _react2.default.createElement(
                    'div',
                    { id: 'ocb-posts-' + this.props.object.id,
                        'data-posts-id': this.props.object.id,
                        'data-no-posts-message': 'No testimonials found.',
                        'data-index-class': this.postVars.index_class,
                        className: 'ocb-posts' },
                    postTemplate,
                    _react2.default.createElement('div', { className: 'ocb-posts-wrap ocb-save-remove-element' }),
                    _react2.default.createElement(
                        'div',
                        { className: 'ocb-posts-wrap ' + classes + ' ocb-posts-wrap-public' },
                        testimonialInner
                    )
                )
            );
        }
    }]);

    return ModuleTestimonials;
}(_react.Component);

function mapStateToProps(_ref5) {
    var siteState = _ref5.siteState;

    return { siteState: siteState };
}

function mapDispatchToProps(dispatch) {
    return (0, _redux.bindActionCreators)({ updateSiteSetting: _index.updateSiteSetting, updateSiteSettings: _index.updateSiteSettings }, dispatch);
}

exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(ModuleTestimonials);

/***/ }),

/***/ 892:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactRedux = __webpack_require__(5);

var _index2 = __webpack_require__(8);

var _redux = __webpack_require__(7);

var _default_text = __webpack_require__(380);

var _default_text2 = _interopRequireDefault(_default_text);

var _settings_helpers = __webpack_require__(2);

var _settings_helpers2 = _interopRequireDefault(_settings_helpers);

var _module_helpers = __webpack_require__(12);

var _module_helpers2 = _interopRequireDefault(_module_helpers);

var _texteditor = __webpack_require__(167);

var _texteditor2 = _interopRequireDefault(_texteditor);

var _item_editable_text = __webpack_require__(72);

var _item_editable_text2 = _interopRequireDefault(_item_editable_text);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ModuleText = function (_Component) {
    _inherits(ModuleText, _Component);

    function ModuleText(props) {
        _classCallCheck(this, ModuleText);

        var _this = _possibleConstructorReturn(this, (ModuleText.__proto__ || Object.getPrototypeOf(ModuleText)).call(this, props));

        _this.state = {
            inlineEdit: false,
            inlineStartOffset: 0,
            inlineStartIndex: 0,
            inlineStartTarget: null
        };

        _this.elementIndex = 100;
        return _this;
    }

    /**
     * Every module type should have this function which sets the fullProps, merging them with the default
     * @returns {{}}
     */


    _createClass(ModuleText, [{
        key: 'getSettings',
        value: function getSettings() {
            var fullProps = {};
            fullProps.linked = _settings_helpers2.default.mergeWithDefault((0, _default_text2.default)().default, this.props.object.settings.linked != undefined && this.props.object.settings.linked != null ? this.props.object.settings.linked : {});

            return fullProps;
        }

        /******************* START MODULE SPECIFIC FUNCTIONS ****************/

    }, {
        key: 'updateText',
        value: function updateText(e) {
            var update = Object.assign(this.props.object.settings);
            var newText = e.target.getContent();
            update.linked.text.text = newText;

            //If settings aren't linked, then update all of the devices because this is a shared setting
            if (this.props.object.deviceLock != undefined && this.props.object.deviceLock == false) {
                update.laptop.text.text = newText;
                update.tablet.text.text = newText;
                update.phone.text.text = newText;
            }

            this.props.treeProps.settings.updateObjectSettings(this.props.object, update);
        }
    }, {
        key: 'startInlineEditing',
        value: function startInlineEditing(e, iteration) {
            if (!Number.isInteger(iteration)) iteration = 0;

            if (OCBGlobalSettings.permissions.edit_module_text != undefined && OCBGlobalSettings.permissions.edit_module_text == false) return null;

            if (OCBGlobalSettings.builderRole && this.props.object.standard != undefined && this.props.object.standard.linked != undefined && this.props.object.standard.linked.permission_lock != undefined && this.props.object.standard.linked.permission_lock.choices != undefined && this.props.object.standard.linked.permission_lock.choices.length > 0 && this.props.object.standard.linked.permission_lock.choices.includes(OCBGlobalSettings.builderRole)) {
                return true;
            }

            e.persist();

            //console.log('module_text', jQuery(e.target).index(), window.getSelection().anchorOffset, window.getSelection(), window.getSelection().focusNode, e.target, e.target.selectionStart);

            var fullProps = this.getSettings();
            var textObject = fullProps.linked.text;

            //If the editor is connected to a field, we don't want to allow editing - instead open the settings panel
            if (textObject.connection != undefined && textObject.connection != false) {
                if (!this.props.treeProps.settings.settingsActive && OCBGlobalSettings.permissions.edit_modules_settings) {
                    this.props.treeProps.settings.makeSettingsActive(this.props.object, 'settings', this.props.treeProps.row, this.props.treeProps.column);
                }
                return;
            }

            if (!OCBGlobalSettings.permissions.edit_modules_inline) return null;
            if (this.props.treeProps.settings.settingsActive) return null;

            if (!this.props.treeProps.inlineEdit.editing) {
                this.props.treeProps.inlineEdit.startEditing(this.props.object);

                var index = jQuery(e.target).index();

                var node = window.getSelection().anchorNode;
                var textNode = this.getTextNodes(node);
                var textNodes = this.getTextNodes(node.parentElement.parentElement);
                index = textNodes.indexOf(textNode[0]);

                this.setState({ inlineEdit: true, inlineStartIndex: index, inlineStartTarget: e.target, inlineStartOffset: window.getSelection().anchorOffset });
            } else if (!this.state.inlineEdit) {
                var _index = jQuery(e.target).index();

                var _node = window.getSelection().anchorNode;
                var _textNode = this.getTextNodes(_node);
                var _textNodes = this.getTextNodes(_node.parentElement.parentElement);
                _index = _textNodes.indexOf(_textNode[0]);

                this.setState({ inlineEdit: true, inlineStartIndex: _index, inlineStartTarget: e.target, inlineStartOffset: window.getSelection().anchorOffset });
            }
        }
    }, {
        key: 'warnDoubleClick',
        value: function warnDoubleClick() {
            this.setState({ inlineEdit: false });
            alert('To edit this text, just click once.');
        }
    }, {
        key: 'getTextNodes',
        value: function getTextNodes(node, nodeType, result) {

            var children = node.childNodes;
            var nodeType = nodeType ? nodeType : 3;

            var result = !result ? [] : result;
            if (node.nodeType == nodeType) {
                result.push(node);
            }

            for (var i = 0; i < children.length; i++) {
                result = this.getTextNodes(children[i], nodeType, result);
            }

            return result;
        }
    }, {
        key: 'listConvert',


        /**
         * NOT CURRENTLY BEING USED
         *
         * can be assigned to onMouseOver to try to convert bulleted lists to their own modules
         * @param e
         */
        value: function listConvert(e) {
            if (jQuery(e.target).parent().is('.ocb-object')) {
                var newElementIndex = jQuery(e.target).index();
                if (newElementIndex != this.elementIndex) {
                    if (jQuery(e.target).is('ul')) {
                        jQuery(e.target).css({ background: 'blue' });
                        var el = _react2.default.createElement(
                            'li',
                            { 'class': 'mt-3' },
                            'something'
                        );
                        jQuery(e.target).append(el);
                        jQuery(e.target).one('mouseleave', function () {
                            jQuery(this).css({ background: 'none' });
                        });
                    }
                    this.elementIndex = newElementIndex;
                }
            }
        }

        /**
         * Wait until the text module mounts and then look to see if there are shortcodes, in which case, replace them
         */

    }, {
        key: 'componentDidMount',
        value: function componentDidMount() {
            if (!this.state.inlineEdit) {
                this.replaceShortcodes();
                this.replaceEmbedURLs();
            }
        }

        /**
         * Disable this component's inlineEdit state if the treeProps state is disabled
         * @param prevProps
         * @param prevState
         */

    }, {
        key: 'componentDidUpdate',
        value: function componentDidUpdate(prevProps, prevState) {
            if (!this.props.inlineEditState.inlineEditing && prevProps.inlineEditState.inlineEditing) {
                this.setState({ inlineEdit: false });
            }
        }
    }, {
        key: 'replaceShortcodes',
        value: function replaceShortcodes() {
            var _this2 = this;

            if (this.state.inlineEdit) {
                return null;
            }

            setTimeout(function () {
                var textModule = jQuery('#module-' + _this2.props.object.id).find('.ocb-module-text');
                var fullProps = _this2.getSettings();
                var textObject = fullProps.linked.text;
                var text = textObject.text;
                if (textObject.connection != undefined && textObject.connection != false) {
                    var connection = textObject.connection;
                    text = _settings_helpers2.default.getConnectionShortcode(connection.type, connection.key, connection.options);
                }
                _module_helpers2.default.replaceShortcodes(text, textModule);
            }, 500);
        }
    }, {
        key: 'replaceEmbedURLs',
        value: function replaceEmbedURLs() {
            var _this3 = this;

            if (this.state.inlineEdit) {
                return null;
            }

            setTimeout(function () {
                var textModule = jQuery('#module-' + _this3.props.object.id).find('.ocb-module-text');
                var fullProps = _this3.getSettings();
                _module_helpers2.default.replaceEmbedURLs(fullProps.linked.text.text, textModule);
            }, 1000);
        }

        /******************* RENDER ****************/

    }, {
        key: 'render',
        value: function render() {
            var _this4 = this;

            var fullProps = this.getSettings();
            var text = fullProps.linked.text.text;
            var align = fullProps.linked.alignment.choice;
            var mobileAlign = fullProps.linked.mobile_alignment.choice;

            //Still use this.state.inlineEdit because if we flip all text areas to tinyMCE at once, performance lags
            if (this.state.inlineEdit && this.props.inlineEditState.inlineEditing) {
                return _react2.default.createElement(
                    'div',
                    { className: 'ocb-object ocb-module-text text-' + mobileAlign + ' text-md-' + align,
                        'data-ocb-type': 'text',
                        'data-ocb-module-id': this.props.id,
                        'data-ocb-depth-overall': this.props.depth.overall,
                        'data-ocb-depth-row': this.props.depth.row,
                        'data-ocb-depth-column': this.props.depth.column },
                    _react2.default.createElement(_texteditor2.default, { value: text, update: this.updateText.bind(this), treeProps: this.props.treeProps, index: this.state.inlineStartIndex, target: this.state.inlineStartTarget, offset: this.state.inlineStartOffset })
                );
            } else {
                if (fullProps.linked.text.connection != undefined && fullProps.linked.text.connection != false) {
                    var connection = fullProps.linked.text.connection;
                    text = _settings_helpers2.default.getConnectionShortcode(connection.type, connection.key, connection.options);

                    //needs to be a paragraph for the moving UI to work
                    text = '<p>' + text + '</p>';
                }

                return _react2.default.createElement('div', { className: 'ocb-object ocb-module-text ocb-item-text text-' + mobileAlign + ' text-md-' + align, onClick: this.startInlineEditing.bind(this), onDoubleClick: function onDoubleClick() {
                        return _this4.warnDoubleClick();
                    },
                    'data-ocb-type': 'text',
                    'data-ocb-module-id': this.props.id,
                    'data-ocb-depth-overall': this.props.depth.overall,
                    'data-ocb-depth-row': this.props.depth.row,
                    'data-ocb-depth-column': this.props.depth.column,
                    dangerouslySetInnerHTML: { __html: text } });
            }
        }
    }]);

    return ModuleText;
}(_react.Component);

function mapStateToProps(_ref) {
    var inlineEditState = _ref.inlineEditState;

    return { inlineEditState: inlineEditState };
}

exports.default = (0, _reactRedux.connect)(mapStateToProps)(ModuleText);

/***/ }),

/***/ 893:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _settings_helpers = __webpack_require__(2);

var _settings_helpers2 = _interopRequireDefault(_settings_helpers);

var _item_button = __webpack_require__(48);

var _item_button2 = _interopRequireDefault(_item_button);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ModuleVideo = function (_Component) {
    _inherits(ModuleVideo, _Component);

    function ModuleVideo() {
        _classCallCheck(this, ModuleVideo);

        return _possibleConstructorReturn(this, (ModuleVideo.__proto__ || Object.getPrototypeOf(ModuleVideo)).apply(this, arguments));
    }

    _createClass(ModuleVideo, [{
        key: 'updateText',
        value: function updateText(text) {
            var update = Object.assign(this.props.object.settings);
            update.linked.button_text.text = text;

            //If settings aren't linked, then update all of the devices because this is a shared setting
            if (this.props.object.deviceLock != undefined && this.props.object.deviceLock == false) {
                update.laptop.button_text.text = text;
                update.tablet.button_text.text = text;
                update.phone.button_text.text = text;
            }
            this.props.treeProps.settings.updateObjectSettings(this.props.object, update);
        }

        /******************* RENDER ****************/

    }, {
        key: 'getEmbed',
        value: function getEmbed() {

            var settings = this.props.settings.linked;
            var url = settings.url.text;
            var id = '';
            var embedURL = false;
            var modal = settings.use_modal.yes;
            var hideControls = settings.hide_controls.yes;
            var hideInfo = settings.hide_info.yes;

            //Get the embed source URL
            try {
                if (url.includes('.com') || url.includes('.be')) {
                    switch (settings.source.choice) {
                        case 'youtube':
                            id = url.match(/(?:https?:\/{2})?(?:w{3}\.)?youtu(?:be)?\.(?:com|be)(?:\/watch\?v=|\/)([^\s&]+)/);
                            id = id[1];
                            embedURL = 'https://www.youtube.com/embed/' + id;
                            break;
                        case 'vimeo':
                            id = url.match(/^.*(vimeo\.com\/)((channels\/[A-z]+\/)|(groups\/[A-z]+\/videos\/))?([0-9]+)/);
                            id = id[5];
                            embedURL = 'https://player.vimeo.com/video/' + id;
                            break;
                        case 'dailymotion':
                            id = url.match(/^.+dailymotion.com\/((video|hub)\/([^_]+))?[^#]*(#video=([^_&]+))?/);
                            id = id ? id[5] || id[3] : null;
                            embedURL = 'https://www.dailymotion.com/embed/video/' + id;
                            break;
                    }
                } else {
                    switch (settings.source.choice) {
                        case 'youtube':
                            embedURL = 'https://www.youtube.com/embed/' + url;
                            break;
                        case 'vimeo':
                            embedURL = 'https://player.vimeo.com/video/' + url;
                            break;
                        case 'dailymotion':
                            embedURL = 'https://www.dailymotion.com/embed/video/' + url;
                            break;
                    }
                }
            } catch (err) {
                console.log('Please enter a valid URL');
            }

            var embedQueryVars = [];

            if (embedURL) {
                if (modal) {
                    embedQueryVars.push('autoplay=1');
                }
                switch (settings.source.choice) {
                    case 'youtube':
                        if (hideControls) {
                            embedQueryVars.push('controls=0');
                        }
                        if (hideInfo) {
                            embedQueryVars.push('showinfo=0');
                        }
                        break;
                    case 'vimeo':
                        embedQueryVars.push('autopause=1');
                        break;
                }
            }

            if (embedQueryVars.length) {
                embedURL += '?' + embedQueryVars.join('&');
            }

            //Basic embed
            var embed = _react2.default.createElement(
                'div',
                { className: 'embed-container' },
                _react2.default.createElement('iframe', { src: embedURL, frameBorder: '0', allowFullScreen: true }),
                _react2.default.createElement('div', { className: 'ocb-video-embed-blanket ocb-save-remove-element' })
            );

            return { embed: embed, embedURL: embedURL };
        }
    }, {
        key: 'getUploadVideo',
        value: function getUploadVideo() {
            var settings = this.props.settings.linked;
            var autoplay = settings.upload_autoplay.yes ? 1 : 0;
            var muted = settings.upload_mute.yes || settings.upload_autoplay.yes ? 'muted' : 0;
            var loop = settings.upload_loop.yes ? 1 : 0;
            var controls = settings.upload_hide_controls.yes ? 0 : 1;
            var src = settings.upload.url;

            var embed = null;
            var uploadClass = 'ocb-video-upload';
            if (autoplay || muted) uploadClass += ' ocb-video-muted';
            if (autoplay) uploadClass += ' ocb-video-autoplay';

            if (settings.lazyload != undefined && settings.lazyload.yes) {
                uploadClass += ' ocb-lazy';
                embed = _react2.default.createElement(
                    'video',
                    { className: uploadClass, autoPlay: autoplay, playsInline: autoplay, muted: muted, controls: controls, loop: loop },
                    _react2.default.createElement('source', { 'data-src': src, src: src, type: 'video/mp4' }),
                    'Your browser does not support videos'
                );
            } else {
                embed = _react2.default.createElement(
                    'video',
                    { className: 'ocb-video-upload', autoPlay: autoplay, playsInline: autoplay, muted: muted, controls: controls, loop: loop },
                    _react2.default.createElement('source', { src: src, type: 'video/mp4' }),
                    'Your browser does not support videos'
                );
            }

            return embed;
        }
    }, {
        key: 'render',
        value: function render() {
            var settings = this.props.settings.linked;
            var modal = settings.use_modal.yes;
            var image = settings.image.url;
            var playButton = settings.include_play_button.yes;
            var playButtonColor = settings.play_button_color.color;
            var id = '';
            var style = '';
            var embed = null;
            var embedURL = '';
            var styleTag = null;

            if (settings.source.choice == 'upload') {
                embed = this.getUploadVideo();
                embedURL = settings.upload.url;
            } else {
                var fullEmbed = this.getEmbed();
                embed = fullEmbed.embed;
                embedURL = fullEmbed.embedURL;
            }

            //Put the embed in a modal and trigger it with an image if that is selected
            if (modal) {
                var playButtonElement = null;
                var modalTrigger = null;
                var modalTarget = 'video-modal-' + this.props.object.id;
                var modalUpload = settings.source.choice == 'upload' ? 1 : 0;

                if (settings.modal_trigger.choice == 'image') {
                    if (playButton) {
                        var colorClass = '';

                        if (playButtonColor == 'custom') {
                            style += _settings_helpers2.default.wrapCSSProperty(this.props.object.id, '.ocb-video-play-button', 'color', settings.play_button_color.customColor, this.props.object.type);
                        } else {
                            colorClass += playButtonColor + '-color';
                        }

                        playButtonElement = _react2.default.createElement(
                            'div',
                            { className: 'ocb-video-play-button ' + colorClass },
                            _react2.default.createElement('i', { className: 'fa fa-youtube-play' })
                        );
                    }

                    var modalTriggerImage = _react2.default.createElement('img', { src: _settings_helpers2.default.getImageURL(image) });

                    if (settings.lazyload_image != undefined && settings.lazyload_image.yes) {
                        modalTriggerImage = _react2.default.createElement('img', { className: 'ocb-lazy', src: _settings_helpers2.default.getImageURL(image), 'data-src': _settings_helpers2.default.getImageURL(image) });
                    }

                    modalTrigger = _react2.default.createElement(
                        'div',
                        { className: 'ocb-video-modal-image ocb-video-modal-trigger', 'data-modal-target': modalTarget, 'data-modal-url': embedURL, 'data-modal-upload': modalUpload },
                        modalTriggerImage,
                        playButtonElement
                    );
                } else {
                    modalTrigger = _react2.default.createElement(
                        'div',
                        { className: 'ocb-video-modal-button' },
                        _react2.default.createElement(_item_button2.default, {
                            settings: this.props.settings.linked,
                            type: 'span',
                            object: this.props.object,
                            objectId: this.props.object.id,
                            update: this.updateText.bind(this),
                            classes: 'ocb-video-modal-trigger',
                            data: { 'data-modal-target': modalTarget, 'data-modal-url': embedURL, 'data-modal-upload': modalUpload },
                            isContentEditable: !this.props.treeProps.settings.settingsActive,
                            treeProps: this.props.treeProps })
                    );
                }

                embed = _react2.default.createElement(
                    'div',
                    { className: 'ocb-video-modal-container' },
                    _react2.default.createElement(
                        'div',
                        { id: modalTarget, className: 'ocb-video-modal ocb-remove-parent-target' },
                        _react2.default.createElement(
                            'div',
                            { className: 'ocb-remove-parent' },
                            _react2.default.createElement('i', { className: 'fa fa-remove' })
                        ),
                        _react2.default.createElement('div', { className: 'embed-container' })
                    ),
                    modalTrigger
                );
            }

            //Get style tag if necessary
            if (style) {
                styleTag = _settings_helpers2.default.wrapCSSInStyleTag(style, this.props.object.id, 'ocb-video-play-button');
            }

            //If no embed URL
            if (!embedURL) {
                embed = _react2.default.createElement(
                    'p',
                    null,
                    'Please set a proper video url or id'
                );
            }

            return _react2.default.createElement(
                'div',
                { 'data-ocb-type': 'video', className: 'ocb-module-video' },
                styleTag,
                embed
            );
        }
    }]);

    return ModuleVideo;
}(_react.Component);

exports.default = ModuleVideo;

/***/ }),

/***/ 894:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _settings_helpers = __webpack_require__(2);

var _settings_helpers2 = _interopRequireDefault(_settings_helpers);

var _module_helpers = __webpack_require__(12);

var _module_helpers2 = _interopRequireDefault(_module_helpers);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ModuleWPWidget = function (_Component) {
    _inherits(ModuleWPWidget, _Component);

    function ModuleWPWidget() {
        _classCallCheck(this, ModuleWPWidget);

        return _possibleConstructorReturn(this, (ModuleWPWidget.__proto__ || Object.getPrototypeOf(ModuleWPWidget)).apply(this, arguments));
    }

    _createClass(ModuleWPWidget, [{
        key: 'getShortcode',
        value: function getShortcode() {
            var settings = this.props.settings.linked;

            if (settings.widget.widgetClass) {
                jQuery('#module-' + this.props.object.id).find('.ocb-module-wp-widget').each(function () {
                    _module_helpers2.default.replaceShortcodes(jQuery(this).html(), jQuery(this));
                });
            }
        }
    }, {
        key: 'componentDidUpdate',
        value: function componentDidUpdate() {
            this.getShortcode();
        }
    }, {
        key: 'componentDidMount',
        value: function componentDidMount() {
            this.getShortcode();
        }
    }, {
        key: 'render',
        value: function render() {
            var settings = this.props.settings.linked;

            var compatibility = settings.widget.widgetCompatibility != undefined ? settings.widget.widgetCompatibility : 0;
            var shortcode = '[ocb_widget type="' + settings.widget.widgetClass + '" compatibility="' + settings.widget.widgetCompatibility + '" widget_id="ocb-widget-field-' + this.props.object.id + '"]' + JSON.stringify(settings.widget.widgetValues) + '[/ocb_widget]';

            if (!settings.widget.widgetClass) shortcode = 'Please select a widget type.';

            return _react2.default.createElement(
                'div',
                { 'data-ocb-type': 'wp-widget', className: 'ocb-module-wp-widget' },
                shortcode
            );
        }
    }]);

    return ModuleWPWidget;
}(_react.Component);

exports.default = ModuleWPWidget;

/***/ }),

/***/ 895:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _object = __webpack_require__(35);

var _object2 = _interopRequireDefault(_object);

var _tree_reducer_functions = __webpack_require__(28);

var _tree_reducer_functions2 = _interopRequireDefault(_tree_reducer_functions);

var _settings_helpers = __webpack_require__(2);

var _settings_helpers2 = _interopRequireDefault(_settings_helpers);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Container = function (_Component) {
    _inherits(Container, _Component);

    function Container(props) {
        _classCallCheck(this, Container);

        var _this = _possibleConstructorReturn(this, (Container.__proto__ || Object.getPrototypeOf(Container)).call(this, props));

        _this.state = {};
        return _this;
    }

    _createClass(Container, [{
        key: 'containerRefill',
        value: function containerRefill() {
            var rowLinked = {};
            var defaultText = _settings_helpers2.default.getModuleRegistryProp('text', 'default').default;

            if (this.props.containerType == 'tabs') {
                rowLinked = {
                    padding: {
                        top: 3,
                        left: 0,
                        right: 0,
                        bottom: 3,
                        units: 'em',
                        useDefault: 'custom'
                    }
                };
                defaultText = {
                    text: {
                        text: '<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce diam turpis, rutrum at augue vel, vulputate ornare magna. Nunc eget luctus justo. Aliquam pellentesque quis erat eu finibus. Aenean quam enim, suscipit ultrices viverra non, mattis posuere nunc. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Nunc lobortis risus velit, in placerat augue laoreet vitae. Maecenas aliquet sem quis quam posuere, placerat porttitor orci blandit.</p>'
                    },
                    alignment: {
                        choice: 'left'
                    },
                    mobile_alignment: {
                        choice: 'left'
                    }
                };
            }

            return [{
                type: 'row',
                id: _tree_reducer_functions2.default.generateId('row'),
                standard: {
                    linked: rowLinked
                },
                settings: {},
                items: [{
                    type: 'column',
                    id: _tree_reducer_functions2.default.generateId('col'),
                    width: '100',
                    standard: {
                        linked: {}
                    },
                    items: [{
                        type: 'module',
                        id: _tree_reducer_functions2.default.generateId('mod'),
                        moduleType: 'text',
                        standard: {
                            linked: {}
                        },
                        settings: {
                            linked: defaultText
                        }
                    }]
                }]
            }];
        }

        /**
         * Makes sure the container has content when it's first created
         */

    }, {
        key: 'componentDidMount',
        value: function componentDidMount() {
            if (this.props.container.items == undefined || this.props.container.items.length == 0) {
                this.props.treeProps.settings.updateObjectProperty(this.props.container, { items: this.containerRefill() });
            }
        }

        /**
         * Makes sure to refill the container content if everything is deleted
         * @param nextProps
         */

    }, {
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps(nextProps) {
            var thisItems = this.props.container.items;
            var nextItems = nextProps.container.items;
            if (thisItems != undefined && nextItems != undefined && thisItems.length != nextItems.length && nextItems.length == 0) {
                this.props.treeProps.settings.updateObjectProperty(this.props.container, { items: this.containerRefill() });
            }
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var containerDivId = 'container-' + this.props.container.id;
            var containerClass = 'ocb-object ocb-container';
            var containerInnerClass = 'ocb-container-inner';
            var rows = null;

            if (this.props.container.items != undefined && this.props.container.items.length > 0) {
                rows = this.props.container.items.map(function (row) {
                    return _react2.default.createElement(_object2.default, {
                        object: row, key: row.id,
                        treeProps: _this2.props.treeProps,
                        preventControls: _this2.props.preventControls,
                        depth: { overall: _this2.props.depth.overall + 1, row: _this2.props.depth.row, column: _this2.props.depth.column },
                        parentObjects: _this2.props.parentObjects
                    });
                });
            }

            return _react2.default.createElement(
                'div',
                { id: containerDivId,
                    className: containerClass,
                    'data-ocb-type': 'container',
                    'data-ocb-id': this.props.container.id,
                    'data-ocb-depth-overall': this.props.depth.overall,
                    'data-ocb-depth-row': this.props.depth.row,
                    'data-ocb-depth-column': this.props.depth.column },
                _react2.default.createElement(
                    'div',
                    { className: containerInnerClass },
                    rows
                )
            );
        }
    }]);

    return Container;
}(_react.Component);

exports.default = Container;

/***/ }),

/***/ 896:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _default_app_state = __webpack_require__(906);

var _default_app_state2 = _interopRequireDefault(_default_app_state);

var _app_state_functions = __webpack_require__(897);

var _app_state_functions2 = _interopRequireDefault(_app_state_functions);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var appState = function appState(state, action) {
    if (state == undefined) state = _default_app_state2.default;

    if (state == undefined) {
        state = {
            overlay: null
        };
    }

    state = _app_state_functions2.default.doAction(state, action);

    return state;
};

exports.default = appState;

/***/ }),

/***/ 897:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _tree_reducer_functions = __webpack_require__(28);

var _tree_reducer_functions2 = _interopRequireDefault(_tree_reducer_functions);

var _immutabilityHelper = __webpack_require__(41);

var _immutabilityHelper2 = _interopRequireDefault(_immutabilityHelper);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var AppStateFunctions = {
    updateAppState: function updateAppState(state, property, update) {
        /*return update(state, {
            [property]: {$set: update}
        });*/
        return _extends({}, state, _defineProperty({}, property, update));
    },
    doAction: function doAction(state, action) {
        switch (action.type) {
            case 'UPDATE_APP_STATE':
                return AppStateFunctions.updateAppState(state, action.property, action.update);
                break;
        }

        return state;
    }
};

exports.default = AppStateFunctions;

/***/ }),

/***/ 898:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _immutabilityHelper = __webpack_require__(41);

var _immutabilityHelper2 = _interopRequireDefault(_immutabilityHelper);

var _module_helpers = __webpack_require__(12);

var _module_helpers2 = _interopRequireDefault(_module_helpers);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var InlineEditStateFunctions = {
    getWorkspaceIframe: function getWorkspaceIframe() {
        var selector = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'body';

        return jQuery('#ocb-workspace-iframe').contents().find(selector);
    },
    replaceShortcodes: function replaceShortcodes(state, object) {
        if (state.inlineEditing || object == null) {
            return null;
        }

        InlineEditStateFunctions.getWorkspaceIframe('#module-' + object.id).find('.ocb-item-text').each(function () {
            _module_helpers2.default.replaceShortcodes(jQuery(this).html(), jQuery(this));
        });
    },
    startInlineEditing: function startInlineEditing(state, object) {
        return (0, _immutabilityHelper2.default)(state, { inlineEditing: { $set: true }, inlineEditingObject: { $set: object } });
    },
    stopInlineEditing: function stopInlineEditing(state) {
        var object = JSON.parse(JSON.stringify(state.inlineEditingObject));

        //This has to be before the next function to make sure that inlineEditing is false
        state = (0, _immutabilityHelper2.default)(state, { inlineEditing: { $set: false }, inlineEditingObject: { $set: null }, editor: { $set: null } });
        setTimeout(function () {
            return InlineEditStateFunctions.replaceShortcodes(state, object);
        }, 500);

        return state;
    },
    openConnector: function openConnector(state, editor) {
        InlineEditStateFunctions.getWorkspaceIframe('.mce-ocb-connection-button').css({ transform: 'rotate(45deg)' });
        if (state.editor !== null) {
            state = InlineEditStateFunctions.closeConnector();
        } else {
            state = (0, _immutabilityHelper2.default)(state, {
                editor: { $set: editor }
            });
        }

        return state;
    },
    closeConnector: function closeConnector(state) {
        InlineEditStateFunctions.getWorkspaceIframe('.mce-ocb-connection-button').css({ transform: 'rotate(0deg)' });
        return (0, _immutabilityHelper2.default)(state, { editor: { $set: null } });
    },
    doAction: function doAction(state, action) {
        switch (action.type) {
            case 'INLINE_EDIT_START':
                return InlineEditStateFunctions.startInlineEditing(state, action.object);
                break;
            case 'INLINE_EDIT_STOP':
                return InlineEditStateFunctions.stopInlineEditing(state);
                break;
            case 'INLINE_EDIT_OPEN_CONNECTOR':
                return InlineEditStateFunctions.openConnector(state, action.editor);
                break;
            case 'INLINE_EDIT_CLOSE_CONNECTOR':
                return InlineEditStateFunctions.closeConnector(state);
                break;
        }

        return state;
    }
};

exports.default = InlineEditStateFunctions;

/***/ }),

/***/ 899:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _immutabilityHelper = __webpack_require__(41);

var _immutabilityHelper2 = _interopRequireDefault(_immutabilityHelper);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var MoveStateFunctions = {
    getWorkspaceIframe: function getWorkspaceIframe() {
        var selector = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'body';

        return jQuery('#ocb-workspace-iframe').contents().find(selector);
    },
    recursiveGet: function recursiveGet(objectID, treeState) {
        var useTemplateUnique = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

        if (treeState.id == objectID) return treeState;
        if (useTemplateUnique && treeState.templateUnique == objectID) return treeState;

        if (treeState.items != undefined && treeState.items != false) {
            var _iteratorNormalCompletion = true;
            var _didIteratorError = false;
            var _iteratorError = undefined;

            try {
                for (var _iterator = treeState.items[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                    var each = _step.value;

                    var found = MoveStateFunctions.recursiveGet(objectID, each, useTemplateUnique);
                    if (found) return found;
                }
            } catch (err) {
                _didIteratorError = true;
                _iteratorError = err;
            } finally {
                try {
                    if (!_iteratorNormalCompletion && _iterator.return) {
                        _iterator.return();
                    }
                } finally {
                    if (_didIteratorError) {
                        throw _iteratorError;
                    }
                }
            }
        }

        return false;
    },
    moveStart: function moveStart(state) {
        return (0, _immutabilityHelper2.default)(state, { moving: { $set: true } });
    },
    moveStop: function moveStop(state) {
        var bodyClass = 'ocb-moving-a-' + state.moduleMove.type;
        MoveStateFunctions.getWorkspaceIframe().removeClass(bodyClass);

        return MoveStateFunctions.resetMove(state);
    },
    moveFrom: function moveFrom(state, _ref) {
        var moduleMove = _ref.moduleMove,
            columnMoveFrom = _ref.columnMoveFrom,
            rowMoveFrom = _ref.rowMoveFrom;

        var bodyClass = 'ocb-moving-a-' + moduleMove.type;
        MoveStateFunctions.getWorkspaceIframe().addClass(bodyClass);

        return (0, _immutabilityHelper2.default)(state, {
            moduleMove: { $set: moduleMove },
            columnMoveFrom: { $set: columnMoveFrom },
            rowMoveFrom: { $set: rowMoveFrom }
        });
    },
    moveTo: function moveTo(state, _ref2) {
        var objectMoveTo = _ref2.objectMoveTo,
            columnMoveTo = _ref2.columnMoveTo,
            rowMoveTo = _ref2.rowMoveTo,
            moveToDirection = _ref2.moveToDirection;

        return (0, _immutabilityHelper2.default)(state, {
            objectMoveTo: { $set: objectMoveTo },
            columnMoveTo: { $set: columnMoveTo },
            rowMoveTo: { $set: rowMoveTo },
            moveToDirection: { $set: moveToDirection }
        });
    },
    resetDropClasses: function resetDropClasses() {
        MoveStateFunctions.getWorkspaceIframe(".ocb-object, p, h1, h2, h3, h4, h5, h6, ul, ol, code, pre, table, blockquote").removeClass('ocb-drop-top').removeClass('ocb-drop-topNew').removeClass('ocb-drop-right').removeClass('ocb-drop-left').removeClass('ocb-drop-bottom').removeClass('ocb-drop-bottomNew').removeClass('ocb-drop-inlineRight').removeClass('ocb-drop-inlineLeft').find('.ocb-move-direction-icon').remove();
    },
    resetMove: function resetMove(state) {
        state = MoveStateFunctions.resetMoveFrom(state);
        state = MoveStateFunctions.resetMoveTo(state);
        setTimeout(function () {
            MoveStateFunctions.resetDropClasses();
        }, 100);
        return state;
    },
    resetMoveFrom: function resetMoveFrom(state) {
        return (0, _immutabilityHelper2.default)(state, {
            moving: { $set: false },
            moduleMove: { $set: null },
            columnMoveFrom: { $set: null },
            rowMoveFrom: { $set: null }
        });
    },
    resetMoveTo: function resetMoveTo(state) {
        return (0, _immutabilityHelper2.default)(state, {
            objectMoveTo: { $set: null },
            newObjectToValue: { $set: null },
            newObjectToValue2: { $set: null },
            columnMoveTo: { $set: null },
            rowMoveTo: { $set: null },
            moveToDirection: { $set: null }
        });
    },


    /**
     * Methods for getting element move coordinates
     */

    _getRelativeCoordinates: function _getRelativeCoordinates(e, container) {

        var pos = {},
            offset = {},
            ref = void 0,
            xWidth = void 0,
            yHeight = void 0;

        if (container) {
            ref = container.offsetParent;
            offset.left = container.offsetLeft;
            offset.top = container.offsetTop;
            xWidth = jQuery(container).innerWidth();
            yHeight = jQuery(container).innerHeight();
        }

        pos.x = !!e.touches ? e.touches[0].pageX : e.pageX;
        pos.y = !!e.touches ? e.touches[0].pageY : e.pageY;

        while (ref) {

            offset.left += ref.offsetLeft;
            offset.top += ref.offsetTop;

            ref = ref.offsetParent;
        }

        return {
            width: xWidth,
            widthMid: xWidth / 2,
            height: yHeight,
            heightMid: yHeight / 2,
            x: pos.x - offset.left,
            y: pos.y - offset.top,
            xPercent: (pos.x - offset.left) / xWidth * 100,
            yPercent: (pos.y - offset.top) / yHeight * 100
        };
    },


    /**
     * The primary way to figure out where we're going to be moving something to
     * Uses a px-based system that is dependent on the depth of the element that we're hovering over
     *  so that we can distinguish between different layers
     *
     * @param state
     * @param type
     * @param depth
     * @param coords
     * @param currentEl
     * @returns {boolean}
     * @private
     */
    _getReporting: function _getReporting(state, _ref3) {
        var type = _ref3.type,
            depth = _ref3.depth,
            coords = _ref3.coords,
            currentEl = _ref3.currentEl;

        var reporting = false;
        var widthBand = 11;
        var rowWidthBand = 20;

        //Old value of onlyRow when we were trying to prevent rows from being added to modules and text
        //state.moduleMove.template != undefined && state.moduleMove.type == 'row' && state.moduleMove.gettingAdded != undefined;
        var onlyRow = false;

        //console.log('move reporting', {type, depth, coords, currentEl});

        switch (type) {
            case 'text':
                if (state.moduleMove == null || state.moduleMove.type == 'column' || onlyRow) {
                    break;
                }

                if (state.moduleMove.moduleType != 'text' && state.moduleMove.type != 'row') {
                    //if it's in the left half of a paragraph report inlineLeft
                    if (coords.xPercent < 50) {
                        reporting = 'inlineLeft';
                    }

                    //if it's in the right half of a paragraph, report inlineRight
                    if (coords.xPercent >= 50) {
                        reporting = 'inlineRight';
                    }
                }

                //if it's in the top 10px of a paragraph and not the first paragraph report top
                if (coords.y < 10 && currentEl.previousElementSibling != undefined) {
                    reporting = 'top';
                }

                //if it's in the bottom 10px of a paragraph and not the last paragraph report bottom
                if (coords.y > coords.height - 10 && currentEl.nextElementSibling != undefined) {
                    reporting = 'bottom';
                }

                break;
            case 'module':
                if (state.moduleMove == null || state.moduleMove.type == 'column' || onlyRow) {
                    break;
                }

                //console.log('reporting module');

                var moduleType = jQuery(currentEl).data('ocb-module-type');
                var moduleContainItems = jQuery(currentEl).data('ocb-module-contains-items');

                if (moduleType == 'text') {

                    //if it's in the top 20% of a module report top
                    if (coords.y < depth * widthBand + widthBand) {
                        reporting = 'top';
                    }

                    //if it's in the bottom 20% of a module report bottom
                    if (coords.y > coords.height - depth * widthBand - widthBand) {
                        reporting = 'bottom';
                    }

                    if (coords.height / 2 < depth * widthBand + widthBand) {

                        //if it's in the top 50% of a module report top
                        if (coords.yPercent < 50) {
                            reporting = 'top';
                        }

                        //if it's in the bottom 50% of a module report bottom
                        if (coords.yPercent > 50) {
                            reporting = 'bottom';
                        }
                    }
                } else if (moduleContainItems) {

                    //This is for modules like the tabs where we should have a narrower band that we use as a top/bottom trigger
                    //because there might be significant overlap with the modules within the containing module

                    //if it's in the top 20% of a module report top
                    if (coords.y < depth * widthBand + widthBand) {
                        reporting = 'top';
                    }

                    //if it's in the bottom 20% of a module report bottom
                    if (coords.y > coords.height - depth * widthBand - widthBand) {
                        reporting = 'bottom';
                    }

                    if (coords.height / 2 < depth * widthBand + widthBand) {

                        //if it's in the top 50% of a module report top
                        if (coords.yPercent < 50) {
                            reporting = 'top';
                        }

                        //if it's in the bottom 50% of a module report bottom
                        if (coords.yPercent > 50) {
                            reporting = 'bottom';
                        }
                    }
                } else {

                    /*//if it's in the top 20% of a module report top
                     if( coords.yPercent < 20 ){ reporting = 'top' }
                      //if it's in the bottom 20% of a module report bottom
                     if( coords.yPercent > 80 ){ reporting = 'bottom' }*/

                    //if it's in the top 20% of a module report top
                    if (coords.y < depth * widthBand * 3 + widthBand * 3) {
                        reporting = 'top';
                    }

                    //if it's in the bottom 20% of a module report bottom
                    if (coords.y > coords.height - depth * widthBand * 3 - widthBand * 3) {
                        reporting = 'bottom';
                    }

                    if (coords.height / 2 < depth * widthBand * 3 + widthBand * 3) {

                        //if it's in the top 50% of a module report top
                        if (coords.yPercent < 50) {
                            reporting = 'top';
                        }

                        //if it's in the bottom 50% of a module report bottom
                        if (coords.yPercent > 50) {
                            reporting = 'bottom';
                        }
                    }
                }

                /*//if it's in the left 20% of a module report left
                 if( coords.xPercent < 20 ){ reporting = 'left' }
                  //if it's in the right 20% of a module report right
                 if( coords.xPercent > 80 ){ reporting = 'right' }*/

                if (state.moduleMove.type != 'row') {

                    var halfWidth = coords.width / 2;

                    //left reporting in the left part of the module (no more than 45% of the left of the module)
                    var backupLeft = depth * widthBand * 3 + widthBand * 3;
                    if (backupLeft > halfWidth) {
                        backupLeft = halfWidth - coords.width * .05;
                    }
                    if (0 < coords.x && coords.x <= backupLeft) {
                        reporting = 'left';
                    }

                    //right reporting in the right part of the module (no more than 45% of the right of the module)
                    var backupRight = coords.width - depth * widthBand * 3 - widthBand * 3;
                    if (backupRight < halfWidth) {
                        backupRight = halfWidth + coords.width * .05;
                    }
                    if (backupRight < coords.x && coords.x <= coords.width) {
                        reporting = 'right';
                    }
                }

                /*if( state.moduleMove.type == 'row' ){
                 //if it's in the top 20% of a module report top
                 if( coords.yPercent < 50 ){ reporting = 'top' }
                  //if it's in the bottom 20% of a module report bottom
                 if( coords.yPercent >= 50 ){ reporting = 'bottom' }
                 }*/

                //console.log( 'Module x: ' + coords.x + ' Module y: ' + coords.y + ' Module xPercent: ' + coords.xPercent + ' Module yPercent: ' + coords.yPercent + ' Module width: ' + coords.width + ' Module height: ' + coords.height );

                break;
            case 'column':
                if (state.moduleMove == null || state.columnMoveFrom == null && (state.moduleMove.gettingAdded == undefined || !state.moduleMove.gettingAdded) || state.moduleMove.type == 'row') {
                    break;
                }
                if (onlyRow) break;

                //console.log('may report column at depth ' + depth);

                //if it's in a 5 px range starting depth.column * 5 from the left
                if (0 < coords.x && coords.x <= depth * widthBand * 2 + widthBand) {
                    reporting = 'left';
                }

                //if it's in a 5 px range starting depth.column * 5 from the right
                if (coords.width - depth * widthBand * 2 - widthBand < coords.x && coords.x <= coords.width) {
                    reporting = 'right';
                }

                if (reporting) {
                    //console.log('reporting column at depth ' + depth, reporting);
                    //console.log('reporting column at depth ' + depth, type);
                }

                break;
            case 'row':
                if (state.moduleMove.type == 'column') {
                    break;
                }

                //console.log('reporting row ');

                /*//if it's in a 5 px range starting depth.row * 5 from the top
                if( 0 < coords.y && coords.y <=  ( depth * widthBand * 3 + widthBand * 3 ) ){ reporting = 'topNew' }
                 //if it's in a 5 px range starting depth.row * 5 from the bottom
                if( ( coords.height - depth * widthBand * 3 - widthBand * 3 ) < coords.y && coords.y <=  coords.height ){ reporting = 'bottomNew' }*/

                if (coords.height < 80) {
                    rowWidthBand = 10;
                }

                //if it's in a 5 px range starting depth.row * 5 from the top
                if (0 < coords.y && coords.y <= depth * rowWidthBand / 10 + rowWidthBand) {
                    reporting = 'top';
                }

                //if it's in a 5 px range starting depth.row * 5 from the bottom
                if (coords.height - depth * rowWidthBand / 10 - rowWidthBand < coords.y && coords.y <= coords.height) {
                    reporting = 'bottom';
                }

                break;
        }

        return reporting;
    },


    /**
     * Complements _getReporting
     * _getReporting is very specific and so will report a direction only in very narrow bands
     *   This makes it seem like you need too much dexterity to move something
     *   So we use this function to provide a backup if _getReporting isn't reporting
     *   to provide a greater surface area for moving
     *
     * @param type
     * @param depth
     * @param coords
     * @param currentEl
     * @returns {boolean}
     * @private
     */
    _getBackupReporting: function _getBackupReporting(state, _ref4) {
        var type = _ref4.type,
            depth = _ref4.depth,
            coords = _ref4.coords,
            currentEl = _ref4.currentEl;

        var reporting = false;
        var onlyRow = false; //state.moduleMove.template != undefined && state.moduleMove.type == 'row' && state.moduleMove.gettingAdded != undefined;

        switch (type) {
            case 'module':
                if (state.moduleMove == null || state.moduleMove.type == 'column' || onlyRow) {
                    break;
                }

                if (coords.yPercent < 50) {
                    reporting = 'top';
                }
                if (coords.yPercent >= 50) {
                    reporting = 'bottom';
                }

                if (state.moduleMove.type != 'row') {

                    if (coords.xPercent < 50) {
                        reporting = 'left';
                    }
                    if (coords.xPercent >= 50) {
                        reporting = 'right';
                    }
                }

                break;
            case 'column':
                if (state.moduleMove == null || state.columnMoveFrom == null || state.moduleMove.type == 'row') {
                    break;
                }
                if (onlyRow) break;

                if (coords.xPercent < 30) {
                    reporting = 'left';
                }
                if (coords.xPercent >= 70) {
                    reporting = 'right';
                }

                break;
            case 'row':
                if (state.moduleMove.type == 'column') {
                    break;
                }

                if (coords.yPercent < 50) {
                    if (depth == 0) {
                        if (coords.height < 80 || state.moduleMove.gettingAdded != undefined && state.moduleMove.gettingAdded && state.moduleMove.type == 'row') {
                            reporting = 'top';
                        } else {
                            reporting = 'topNew';
                        }
                    } else {
                        reporting = 'top';
                    }
                }
                if (coords.yPercent >= 50) {
                    if (depth == 0) {
                        if (coords.height < 80 || state.moduleMove.gettingAdded != undefined && state.moduleMove.gettingAdded && state.moduleMove.type == 'row') {
                            reporting = 'bottom';
                        } else {
                            reporting = 'bottomNew';
                        }
                    } else {
                        reporting = 'bottom';
                    }
                }

                break;
        }

        return reporting;
    },
    _getClosest: function _getClosest(el, className) {
        if (el != undefined) {
            el = el.parentNode;
            do {
                if (el.classList != undefined && el.classList.contains(className)) {
                    return el;
                }
            } while (el = el.parentNode);
        } else {
            console.log('_getClosest el is undefined');
        }
        return false;
    },
    _getClosestFromArray: function _getClosestFromArray(el, classArray) {
        if (el != undefined) {
            el = el.parentNode;
            do {
                for (var i = 0; i < classArray.length; i++) {
                    if (el.classList != undefined && el.classList.contains('ocb-' + classArray[i])) {
                        //jQuery('#reporting-debug-list').prepend('<li>classList: ' + el.classList + ', depth: ' + depth + ', objectDepth: ' + el.dataset.ocbDepthOverall + '</li>');
                        return {
                            el: el,
                            type: classArray[i]
                        };
                    }
                }
            } while (el = el.parentNode);
        } else {
            console.log('_getClosest el is undefined');
        }
        return false;
    },
    _getClosestByClass: function _getClosestByClass(el, className) {
        // Traverse the DOM up with a while loop
        while (el.className == undefined || el.className == false || el.className != undefined && el.className != false && typeof el.className == 'string' && el.className.indexOf(className) == -1) {
            // Increment the loop to the parent node
            el = el.parentNode;
            if (!el) {
                return null;
            }
        }
        // At this point, the while loop has stopped and `el` represents the element that has
        // the class you specified in the second parameter of the function `className`

        // Then return the matched element
        return el;
    },
    getParentTextElement: function getParentTextElement(currentEl) {
        var isTop = jQuery(currentEl).parent().hasClass('ocb-object');

        if (!isTop) {
            currentEl = jQuery(currentEl).parent().closest('p, h1, h2, h3, h4, h5, h6, ul, ol, table, blockquote, pre, code')[0];
            currentEl = MoveStateFunctions.getParentTextElement(currentEl);
        }

        return currentEl;
    },
    getFullHoverOld: function getFullHoverOld(state, e, treeState) {
        var setTheState = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;

        if (state.moving == false) {
            return state;
        }
        if (e === false) {
            MoveStateFunctions.resetDropClasses();
            return state;
        }
        e.persist();

        /*if( ! MoveStateFunctions.getWorkspaceIframe('#reporting-debug').length ){
            MoveStateFunctions.getWorkspaceIframe().append('<div id="reporting-debug" style="position: fixed; background: #eeeeee; left: 0; bottom: 0; height: 300px; width: 60%; padding: 20px; overflow-y: scroll; z-index: 99;">' +
                '<ul id="reporting-debug-list"></ul>' +
                '</div>');
        }*/

        var hoveredElements = [];
        var possibleParentTypes = [];
        //let closestObject = jQuery(e.target).closest('.ocb-object');
        var closestObject = MoveStateFunctions._getClosestByClass(e.target, 'ocb-object');

        //MoveStateFunctions.getWorkspaceIframe('#reporting-debug-list').prepend('<li>closestObject class: ' + closestObject.className + ', closestObject id: ' + closestObject.id + '</li>');
        //console.log('dataset', closestObject.dataset, closestObject.dataset.ocbId, closestObject);

        var currentEl = e.target;
        if (closestObject == null) return state;
        var depth = closestObject.dataset.ocbDepthOverall;
        var rowDepth = closestObject.dataset.ocbDepthRow;
        var columnDepth = closestObject.dataset.ocbDepthColumn;
        var currentType = closestObject.dataset.ocbType;
        var isInlineModule = closestObject.dataset.ocbInlineModule == undefined ? 0 : closestObject.dataset.ocbInlineModule;
        var startingType = closestObject.dataset.ocbType;
        var textParentTags = ['p', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'ul', 'ol', 'table', 'blockquote', 'pre', 'code'];
        var isParentType = textParentTags.includes(currentEl.tagName);

        //Make sure that we're getting a top-level element within the text module
        //NOTE: if there are nested tables, this may not work
        if (currentType == 'text') {
            if (!isParentType) {
                currentEl = jQuery(currentEl).closest('p, h1, h2, h3, h4, h5, h6, ul, ol, table, blockquote, pre, code')[0];

                //When we're in a text module but hovering over the margin of an HTML element, currentEl cannot be retrieved and results in maximum call stack error
                //In the case of such an error, we should just show in the UI that there is no dropzone and return the state
                try {
                    currentEl = MoveStateFunctions.getParentTextElement(currentEl);
                } catch (e) {
                    MoveStateFunctions.resetDropClasses();
                    return state;
                }
            }
        }

        //console.log('---------------------------------');

        //Find all of the possible places that we might be wanting to move a module to (reporting)
        //Then below, we set it at the module with the lowest depth (fullReport)
        //This means that we have to have a px-based reporting system based on depth
        //So the higher the depth, the greater the area for reporting
        do {
            //IMPORTANT: the order of the types in these possibleParentType arrays matters!!!
            switch (currentType) {
                case 'text':
                    possibleParentTypes = ['module'];
                    break;
                case 'module':
                    possibleParentTypes = ['module', 'column'];
                    break;
                case 'column':
                    possibleParentTypes = ['row'];
                    break;
                case 'row':
                    possibleParentTypes = ['container', 'module', 'column'];
                    break;
                case 'container':
                    possibleParentTypes = ['module'];
                    break;
            }

            var id = void 0,
                coordinates = void 0,
                reporting = void 0,
                backupReporting = void 0,
                index = void 0,
                templateUnique = null;

            //Don't allow adding to inline modules
            if (isInlineModule == 0) {

                if (currentType == 'text') {
                    //id = closestObject.data('ocb-module-id');
                    id = closestObject.dataset.ocbModuleId;
                    templateUnique = closestObject.dataset.ocbTemplateUnique;
                    index = jQuery(currentEl).index();
                    coordinates = MoveStateFunctions._getRelativeCoordinates(e, currentEl);
                    reporting = MoveStateFunctions._getReporting(state, { type: currentType, depth: depth, coords: coordinates, currentEl: currentEl });
                    backupReporting = MoveStateFunctions._getBackupReporting(state, { type: currentType, depth: depth, coords: coordinates, currentEl: currentEl });
                } else {
                    coordinates = MoveStateFunctions._getRelativeCoordinates(e, closestObject);
                    reporting = MoveStateFunctions._getReporting(state, { type: currentType, depth: depth, coords: coordinates, currentEl: closestObject });
                    backupReporting = MoveStateFunctions._getBackupReporting(state, { type: currentType, depth: depth, coords: coordinates, currentEl: closestObject });
                    id = closestObject.dataset.ocbId;
                    templateUnique = closestObject.dataset.ocbTemplateUnique;
                    //console.log('closestObject', closestObject.className, closestObject.dataset);
                }
            }

            //console.log('hovered push', id, currentType, closestObject.dataset, closestObject);

            //jQuery('#reporting-debug-list').prepend('<li>initial push id: ' + id + ', depth: ' + depth + ', index: ' + index + ', type: ' + currentType + ', direction: ' +  reporting + ' ' + backupReporting + '</li>');

            hoveredElements.push({
                depth: depth,
                currentType: currentType,
                coordinates: coordinates,
                reporting: reporting,
                backupReporting: backupReporting,
                id: id,
                index: index,
                templateUnique: templateUnique
            });
            if (currentType == 'row') {
                rowDepth -= 1;
            }
            if (currentType == 'column') {
                columnDepth -= 1;
            }
            depth -= 1;
            //Original
            /*for (let forType of possibleParentTypes) {
             let possibleParent = MoveStateFunctions._getClosest( currentEl, 'ocb-' + forType );
             if( possibleParent ){
             currentType = forType;
             currentEl = possibleParent;
             closestObject = jQuery( possibleParent );
             break;
             }
             }*/
            //This one works - it was important to remove the break and also to find the closest among an array of possibleParentTypes
            var theClosest = MoveStateFunctions._getClosestFromArray(closestObject, possibleParentTypes, depth);
            if (theClosest != false) {
                currentType = theClosest.type;
                currentEl = theClosest.el;
                //closestObject = jQuery( theClosest.el );
                closestObject = theClosest.el;
            }
        } while (depth > -1);

        //fullReport gets the object highest up the tree that's reporting a move dropzone
        //the fullReport is what ultimately determines where the module will be added
        var fullReport = false;

        var _iteratorNormalCompletion2 = true;
        var _didIteratorError2 = false;
        var _iteratorError2 = undefined;

        try {
            for (var _iterator2 = hoveredElements[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
                var hoveredElement = _step2.value;

                if (hoveredElement.reporting) {
                    fullReport = {
                        type: hoveredElement.currentType,
                        direction: hoveredElement.reporting,
                        coordinates: hoveredElement.coordinates,
                        id: hoveredElement.id,
                        index: hoveredElement.index,
                        templateUnique: hoveredElement.templateUnique
                    };
                }
                if (fullReport == false && hoveredElement.backupReporting) {
                    fullReport = {
                        type: hoveredElement.currentType,
                        direction: hoveredElement.backupReporting,
                        coordinates: hoveredElement.coordinates,
                        id: hoveredElement.id,
                        index: hoveredElement.index,
                        templateUnique: hoveredElement.templateUnique
                    };
                }

                //MoveStateFunctions.getWorkspaceIframe('#reporting-debug-list').prepend('<li>id: ' + hoveredElement.id + ', depth: ' + hoveredElement.depth + ', index: ' + hoveredElement.index + ', type: ' + hoveredElement.currentType + ', direction: ' +  hoveredElement.reporting + ' ' + hoveredElement.backupReporting + '</li>')
            }

            //console.log('hoveredElements', hoveredElements);
            //console.log('fullReport', fullReport);
        } catch (err) {
            _didIteratorError2 = true;
            _iteratorError2 = err;
        } finally {
            try {
                if (!_iteratorNormalCompletion2 && _iterator2.return) {
                    _iterator2.return();
                }
            } finally {
                if (_didIteratorError2) {
                    throw _iteratorError2;
                }
            }
        }

        if (fullReport == false || state.objectMoveTo == null || state.moveToDirection != fullReport.direction || fullReport.id != state.objectMoveTo.id) {

            MoveStateFunctions.resetDropClasses();
        }

        if (fullReport.id != false && (state.objectMoveTo == null || state.moveToDirection != fullReport.direction || fullReport.id != state.objectMoveTo.id)) {

            if (fullReport.type != 'text') {
                if (fullReport.templateUnique != undefined && fullReport.templateUnique) {
                    MoveStateFunctions.getWorkspaceIframe(".ocb-object[data-ocb-template-unique='" + fullReport.templateUnique + "']").addClass('ocb-drop-' + fullReport.direction); //.append('<i class="fa fa-arrow-circle-up ocb-move-direction-icon ' + fullReport.direction + '"></i>');
                } else {
                    MoveStateFunctions.getWorkspaceIframe(".ocb-object[data-ocb-id='" + fullReport.id + "']").addClass('ocb-drop-' + fullReport.direction); //.append('<i class="fa fa-arrow-circle-up ocb-move-direction-icon ' + fullReport.direction + '"></i>');
                }
            } else {
                MoveStateFunctions.getWorkspaceIframe(".ocb-object[data-ocb-module-id='" + fullReport.id + "']").children().eq(fullReport.index).addClass('ocb-drop-' + fullReport.direction);
            }

            var moveTo = null;

            //By only doing these calculations and updates onMouseUp (called by tree.js) the UI can be snappier while still getting the information we need at the time we need it
            if (setTheState) {

                if (fullReport.templateUnique != undefined && fullReport.templateUnique) {
                    moveTo = MoveStateFunctions.recursiveGet(fullReport.templateUnique, treeState, true);
                } else {
                    moveTo = MoveStateFunctions.recursiveGet(fullReport.id, treeState);
                }
                state = (0, _immutabilityHelper2.default)(state, {
                    objectMoveTo: { $set: moveTo },
                    moveToDirection: { $set: fullReport.direction }
                });
            }

            var splitString = { firstHalf: [], secondHalf: [] };

            //This means we're going to be splitting up a text module
            if (fullReport.index !== undefined && fullReport.index !== null) {

                if (moveTo == null) {
                    if (fullReport.templateUnique != undefined && fullReport.templateUnique) {
                        moveTo = MoveStateFunctions.recursiveGet(fullReport.templateUnique, treeState, true);
                    } else {
                        moveTo = MoveStateFunctions.recursiveGet(fullReport.id, treeState);
                    }
                }

                if (moveTo.settings != undefined) {

                    var children = jQuery(moveTo.settings.linked.text.text);
                    var trueIndex = 0;
                    children.each(function (index, child) {

                        //When adding content through the edit window and then trying to insert a module between paragraphs, there were child elements adding to index with values of undefined
                        if (jQuery(child)[0].outerHTML != undefined) {
                            if (trueIndex < fullReport.index || trueIndex == fullReport.index && fullReport.direction == 'bottom') {
                                splitString.firstHalf.push(jQuery(child)[0].outerHTML);
                            } else {
                                splitString.secondHalf.push(jQuery(child)[0].outerHTML);
                            }
                            trueIndex += 1;
                        }
                    });
                    splitString.firstHalf = splitString.firstHalf.join("");
                    splitString.secondHalf = splitString.secondHalf.join("");
                    state = (0, _immutabilityHelper2.default)(state, {
                        newObjectToValue: { $set: splitString.firstHalf },
                        newObjectToValue2: { $set: splitString.secondHalf }
                    });
                }
            } else {
                state = (0, _immutabilityHelper2.default)(state, {
                    newObjectToValue: { $set: null },
                    newObjectToValue2: { $set: null }
                });
            }

            return state;
        } else if (fullReport == false) {
            return (0, _immutabilityHelper2.default)(state, {
                objectMoveTo: { $set: null },
                moveToDirection: { $set: null },
                newObjectToValue: { $set: null },
                newObjectToValue2: { $set: null }
            });
        }

        return state;
        //console.log('starting type: ' + startingType);
        //console.log(hoveredElements);
        //console.log( 'type: ' + fullReport.type + ' direction: ' + fullReport.direction + ' id: ' + fullReport.id );
        //console.log( 'x: ' + fullReport.coordinates.x + ' y: ' + fullReport.coordinates.y + ' xPercent: ' + fullReport.coordinates.xPercent + ' yPercent: ' + fullReport.coordinates.yPercent + ' width: ' + fullReport.coordinates.width + ' height: ' + fullReport.coordinates.height );
    },
    getFullHover: function getFullHover(state, e, treeState) {
        var setTheState = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;

        if (state.moving == false) {
            return state;
        }
        if (e === false) {
            MoveStateFunctions.resetDropClasses();
            return state;
        }
        e.persist();

        /*if( ! MoveStateFunctions.getWorkspaceIframe('#reporting-debug').length ){
            MoveStateFunctions.getWorkspaceIframe().append('<div id="reporting-debug" style="position: fixed; background: #eeeeee; left: 0; bottom: 0; height: 300px; width: 60%; padding: 20px; overflow-y: scroll; z-index: 99;">' +
                '<ul id="reporting-debug-list"></ul>' +
                '</div>');
        }*/

        var hoveredElements = [];
        var possibleParentTypes = [];
        //let closestObject = jQuery(e.target).closest('.ocb-object');
        var closestObject = MoveStateFunctions._getClosestByClass(e.target, 'ocb-object');

        //MoveStateFunctions.getWorkspaceIframe('#reporting-debug-list').prepend('<li>closestObject class: ' + closestObject.className + ', closestObject id: ' + closestObject.id + '</li>');
        //console.log('dataset', closestObject.dataset, closestObject.dataset.ocbId, closestObject);

        var currentEl = e.target;
        if (closestObject == null) return state;
        var depth = closestObject.dataset.ocbDepthOverall;
        var rowDepth = closestObject.dataset.ocbDepthRow;
        var columnDepth = closestObject.dataset.ocbDepthColumn;
        var currentType = closestObject.dataset.ocbType;
        var isInlineModule = closestObject.dataset.ocbInlineModule == undefined ? 0 : closestObject.dataset.ocbInlineModule;
        var startingType = closestObject.dataset.ocbType;
        var textParentTags = ['p', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'ul', 'ol', 'table', 'blockquote', 'pre', 'code'];
        var isParentType = textParentTags.includes(currentEl.tagName.toLowerCase());

        //console.log('currentEl.tagName', currentEl.tagName, currentEl.className);

        //Make sure that we're getting a top-level element within the text module
        //NOTE: if there are nested tables, this may not work
        if (currentType == 'text') {
            if (!isParentType) {
                currentEl = jQuery(currentEl).closest('p, h1, h2, h3, h4, h5, h6, ul, ol, table, blockquote, pre, code')[0];

                //When we're in a text module but hovering over the margin of an HTML element, currentEl cannot be retrieved and results in maximum call stack error
                //In the case of such an error, we should just show in the UI that there is no dropzone and return the state
                try {
                    currentEl = MoveStateFunctions.getParentTextElement(currentEl);
                } catch (e) {
                    MoveStateFunctions.resetDropClasses();
                    return state;
                }
            }
        }

        //console.log('---------------------------------');

        //Find all of the possible places that we might be wanting to move a module to (reporting)
        //Then below, we set it at the module with the lowest depth (fullReport)
        //This means that we have to have a px-based reporting system based on depth
        //So the higher the depth, the greater the area for reporting
        do {
            //IMPORTANT: the order of the types in these possibleParentType arrays matters!!!
            switch (currentType) {
                case 'text':
                    possibleParentTypes = ['module'];
                    break;
                case 'module':
                    possibleParentTypes = ['module', 'column'];
                    break;
                case 'column':
                    possibleParentTypes = ['row'];
                    break;
                case 'row':
                    possibleParentTypes = ['container', 'module', 'column'];
                    break;
                case 'container':
                    possibleParentTypes = ['module'];
                    break;
            }

            var id = void 0,
                coordinates = void 0,
                reporting = void 0,
                backupReporting = void 0,
                index = void 0,
                templateUnique = null;

            //Don't allow adding to inline modules
            if (isInlineModule == 0) {

                if (currentType == 'text') {
                    //id = closestObject.data('ocb-module-id');
                    id = closestObject.dataset.ocbModuleId;
                    templateUnique = closestObject.dataset.ocbTemplateUnique;
                    index = jQuery(currentEl).index();
                    coordinates = MoveStateFunctions._getRelativeCoordinates(e, currentEl);
                    reporting = MoveStateFunctions._getReporting(state, { type: currentType, depth: depth, coords: coordinates, currentEl: currentEl });
                    backupReporting = MoveStateFunctions._getBackupReporting(state, { type: currentType, depth: depth, coords: coordinates, currentEl: currentEl });
                } else {
                    coordinates = MoveStateFunctions._getRelativeCoordinates(e, closestObject);
                    reporting = MoveStateFunctions._getReporting(state, { type: currentType, depth: depth, coords: coordinates, currentEl: closestObject });
                    backupReporting = MoveStateFunctions._getBackupReporting(state, { type: currentType, depth: depth, coords: coordinates, currentEl: closestObject });
                    id = closestObject.dataset.ocbId;
                    templateUnique = closestObject.dataset.ocbTemplateUnique;
                    //console.log('closestObject', closestObject.className, closestObject.dataset);
                }
            }

            //console.log('hovered push', id, currentType, closestObject.dataset, closestObject, 'initial push id: ' + id + ', depth: ' + depth + ', index: ' + index + ', type: ' + currentType + ', direction: ' +  reporting + ' ' + backupReporting);

            //jQuery('#reporting-debug-list').prepend('<li>initial push id: ' + id + ', depth: ' + depth + ', index: ' + index + ', type: ' + currentType + ', direction: ' +  reporting + ' ' + backupReporting + '</li>');

            hoveredElements.push({
                depth: depth,
                currentType: currentType,
                coordinates: coordinates,
                reporting: reporting,
                backupReporting: backupReporting,
                id: id,
                index: index,
                templateUnique: templateUnique
            });
            if (currentType == 'row') {
                rowDepth -= 1;
            }
            if (currentType == 'column') {
                columnDepth -= 1;
            }
            depth -= 1;
            //Original
            /*for (let forType of possibleParentTypes) {
             let possibleParent = MoveStateFunctions._getClosest( currentEl, 'ocb-' + forType );
             if( possibleParent ){
             currentType = forType;
             currentEl = possibleParent;
             closestObject = jQuery( possibleParent );
             break;
             }
             }*/
            //This one works - it was important to remove the break and also to find the closest among an array of possibleParentTypes
            var theClosest = MoveStateFunctions._getClosestFromArray(closestObject, possibleParentTypes, depth);
            if (theClosest != false) {
                currentType = theClosest.type;
                currentEl = theClosest.el;
                //closestObject = jQuery( theClosest.el );
                closestObject = theClosest.el;
            }
        } while (depth > -1);

        //fullReport gets the object highest up the tree that's reporting a move dropzone
        //the fullReport is what ultimately determines where the module will be added
        var fullReport = false;

        var _iteratorNormalCompletion3 = true;
        var _didIteratorError3 = false;
        var _iteratorError3 = undefined;

        try {
            for (var _iterator3 = hoveredElements[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
                var hoveredElement = _step3.value;

                if (hoveredElement.reporting) {
                    fullReport = {
                        type: hoveredElement.currentType,
                        direction: hoveredElement.reporting,
                        coordinates: hoveredElement.coordinates,
                        id: hoveredElement.id,
                        index: hoveredElement.index,
                        templateUnique: hoveredElement.templateUnique
                    };
                }
                if (fullReport == false && hoveredElement.backupReporting) {
                    fullReport = {
                        type: hoveredElement.currentType,
                        direction: hoveredElement.backupReporting,
                        coordinates: hoveredElement.coordinates,
                        id: hoveredElement.id,
                        index: hoveredElement.index,
                        templateUnique: hoveredElement.templateUnique
                    };
                }

                //MoveStateFunctions.getWorkspaceIframe('#reporting-debug-list').prepend('<li>id: ' + hoveredElement.id + ', depth: ' + hoveredElement.depth + ', index: ' + hoveredElement.index + ', type: ' + hoveredElement.currentType + ', direction: ' +  hoveredElement.reporting + ' ' + hoveredElement.backupReporting + '</li>')
            }

            //console.log('hoveredElements', hoveredElements);
            //console.log('fullReport', fullReport);
        } catch (err) {
            _didIteratorError3 = true;
            _iteratorError3 = err;
        } finally {
            try {
                if (!_iteratorNormalCompletion3 && _iterator3.return) {
                    _iterator3.return();
                }
            } finally {
                if (_didIteratorError3) {
                    throw _iteratorError3;
                }
            }
        }

        if (fullReport == false || state.objectMoveTo == null || state.moveToDirection != fullReport.direction || fullReport.id != state.objectMoveTo.id) {

            MoveStateFunctions.resetDropClasses();
        }

        if (fullReport.id != false && (state.objectMoveTo == null || state.moveToDirection != fullReport.direction || fullReport.id != state.objectMoveTo.id)) {

            if (fullReport.type != 'text') {
                if (fullReport.templateUnique != undefined && fullReport.templateUnique) {
                    MoveStateFunctions.getWorkspaceIframe(".ocb-object[data-ocb-template-unique='" + fullReport.templateUnique + "']").addClass('ocb-drop-' + fullReport.direction); //.append('<i class="fa fa-arrow-circle-up ocb-move-direction-icon ' + fullReport.direction + '"></i>');
                } else {
                    MoveStateFunctions.getWorkspaceIframe(".ocb-object[data-ocb-id='" + fullReport.id + "']").addClass('ocb-drop-' + fullReport.direction); //.append('<i class="fa fa-arrow-circle-up ocb-move-direction-icon ' + fullReport.direction + '"></i>');
                }
            } else {
                MoveStateFunctions.getWorkspaceIframe(".ocb-object[data-ocb-module-id='" + fullReport.id + "']").children().eq(fullReport.index).addClass('ocb-drop-' + fullReport.direction);
                //MoveStateFunctions.getWorkspaceIframe(".ocb-object[data-ocb-module-id='" + fullReport.id + "'] > div > .mce-content-body").children().eq(fullReport.index).addClass('ocb-drop-' + fullReport.direction);
            }

            var moveTo = null;

            //By only doing these calculations and updates onMouseUp (called by tree.js) the UI can be snappier while still getting the information we need at the time we need it
            if (setTheState) {

                if (fullReport.templateUnique != undefined && fullReport.templateUnique) {
                    moveTo = MoveStateFunctions.recursiveGet(fullReport.templateUnique, treeState, true);
                } else {
                    moveTo = MoveStateFunctions.recursiveGet(fullReport.id, treeState);
                }
                state = (0, _immutabilityHelper2.default)(state, {
                    objectMoveTo: { $set: moveTo },
                    moveToDirection: { $set: fullReport.direction }
                });
            }

            var splitString = { firstHalf: [], secondHalf: [] };

            //This means we're going to be splitting up a text module
            if (fullReport.index !== undefined && fullReport.index !== null) {

                if (moveTo == null) {
                    if (fullReport.templateUnique != undefined && fullReport.templateUnique) {
                        moveTo = MoveStateFunctions.recursiveGet(fullReport.templateUnique, treeState, true);
                    } else {
                        moveTo = MoveStateFunctions.recursiveGet(fullReport.id, treeState);
                    }
                }

                if (moveTo.settings != undefined) {

                    var children = jQuery(moveTo.settings.linked.text.text);
                    var trueIndex = 0;
                    children.each(function (index, child) {

                        //When adding content through the edit window and then trying to insert a module between paragraphs, there were child elements adding to index with values of undefined
                        if (jQuery(child)[0].outerHTML != undefined) {
                            if (trueIndex < fullReport.index || trueIndex == fullReport.index && fullReport.direction == 'bottom') {
                                splitString.firstHalf.push(jQuery(child)[0].outerHTML);
                            } else {
                                splitString.secondHalf.push(jQuery(child)[0].outerHTML);
                            }
                            trueIndex += 1;
                        }
                    });
                    splitString.firstHalf = splitString.firstHalf.join("");
                    splitString.secondHalf = splitString.secondHalf.join("");
                    state = (0, _immutabilityHelper2.default)(state, {
                        newObjectToValue: { $set: splitString.firstHalf },
                        newObjectToValue2: { $set: splitString.secondHalf }
                    });
                }
            } else {
                state = (0, _immutabilityHelper2.default)(state, {
                    newObjectToValue: { $set: null },
                    newObjectToValue2: { $set: null }
                });
            }

            return state;
        } else if (fullReport == false) {
            return (0, _immutabilityHelper2.default)(state, {
                objectMoveTo: { $set: null },
                moveToDirection: { $set: null },
                newObjectToValue: { $set: null },
                newObjectToValue2: { $set: null }
            });
        }

        return state;
        //console.log('starting type: ' + startingType);
        //console.log(hoveredElements);
        //console.log( 'type: ' + fullReport.type + ' direction: ' + fullReport.direction + ' id: ' + fullReport.id );
        //console.log( 'x: ' + fullReport.coordinates.x + ' y: ' + fullReport.coordinates.y + ' xPercent: ' + fullReport.coordinates.xPercent + ' yPercent: ' + fullReport.coordinates.yPercent + ' width: ' + fullReport.coordinates.width + ' height: ' + fullReport.coordinates.height );
    },
    doAction: function doAction(state, action) {
        switch (action.type) {
            case 'MOVE_START':
                return MoveStateFunctions.moveStart(state);
                break;
            case 'MOVE_STOP':
                return MoveStateFunctions.moveStop(state);
                break;
            case 'MOVE_FROM':
                return MoveStateFunctions.moveFrom(state, { moduleMove: action.moduleMove, columnMoveFrom: action.columnMoveFrom, rowMoveFrom: action.rowMoveFrom });
                break;
            case 'MOVE_TO':
                return MoveStateFunctions.moveTo(state, { objectMoveTo: action.objectMoveTo, columnMoveTo: action.columnMoveTo, rowMoveTo: action.rowMoveTo, moveToDirection: action.moveToDirection });
                break;
            case 'MOVE_GET_HOVER':
                return MoveStateFunctions.getFullHover(state, action.e, action.treeState, action.setTheState);
                break;
            case 'MOVE_TO_RESET':
                return MoveStateFunctions.resetMoveTo(state);
                break;
        }

        return state;
    }
};

exports.default = MoveStateFunctions;

/***/ }),

/***/ 900:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _immutabilityHelper = __webpack_require__(41);

var _immutabilityHelper2 = _interopRequireDefault(_immutabilityHelper);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var SettingsReducerFunctions = {
    updateSiteSetting: function updateSiteSetting(state, property, theUpdate) {
        return (0, _immutabilityHelper2.default)(state, _defineProperty({}, property, { $set: theUpdate }));
    },
    updateSiteSettings: function updateSiteSettings(state, theUpdate) {
        return (0, _immutabilityHelper2.default)(state, { $set: theUpdate });
    },
    doAction: function doAction(state, action) {
        switch (action.type) {
            case 'UPDATE_SITE_STATE_FROM_API':
                return _extends({}, state, action.newState, { defaultUsed: false });
                break;
            case 'UPDATE_SITE_SETTINGS':
                return SettingsReducerFunctions.updateSiteSettings(state, action.update);
                break;
            case 'UPDATE_SITE_SETTING':
                return SettingsReducerFunctions.updateSiteSetting(state, action.property, action.update);
                break;
        }

        return state;
    }
};

exports.default = SettingsReducerFunctions;

/***/ }),

/***/ 901:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _immutabilityHelper = __webpack_require__(41);

var _immutabilityHelper2 = _interopRequireDefault(_immutabilityHelper);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var SkinStateFunctions = {
    updateSkinState: function updateSkinState(state, id, theUpdate) {
        return _extends({}, state, _defineProperty({}, id, theUpdate));
    },
    deleteSkin: function deleteSkin(state, id) {
        var clone = Object.assign({}, state);
        delete clone[id];
        return clone;
    },
    importSkins: function importSkins(state, skins) {
        var skinsToImport = {};

        //Only import new skins, don't overwrite old skins
        Object.keys(skins).forEach(function (skinId) {
            if (state[skinId] == undefined) {
                skinsToImport[skinId] = skins[skinId];
            }
        });

        return _extends({}, state, skinsToImport);
    },
    replaceSkins: function replaceSkins(state, skins) {
        return _extends({}, skins);
    },
    doAction: function doAction(state, action) {
        switch (action.type) {
            case 'UPDATE_SKIN_STATE':
                return SkinStateFunctions.updateSkinState(state, action.id, action.update);
                break;
            case 'UPDATE_SKIN_STATE_FROM_API':
                return action.update;
                break;
            case 'DELETE_SKIN':
                return SkinStateFunctions.deleteSkin(state, action.id);
                break;
            case 'IMPORT_SKINS':
                return SkinStateFunctions.importSkins(state, action.skins);
                break;
            case 'REPLACE_SKINS':
                return SkinStateFunctions.replaceSkins(state, action.skins);
                break;
        }

        return state;
    }
};

exports.default = SkinStateFunctions;

/***/ }),

/***/ 902:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _tree_reducer_functions = __webpack_require__(28);

var _tree_reducer_functions2 = _interopRequireDefault(_tree_reducer_functions);

var _immutabilityHelper = __webpack_require__(41);

var _immutabilityHelper2 = _interopRequireDefault(_immutabilityHelper);

var _deepmerge = __webpack_require__(9);

var _deepmerge2 = _interopRequireDefault(_deepmerge);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var WorkspaceStateFunctions = {

    makeSettingsActive: function makeSettingsActive(state, object, which, parentRow, parentColumn) {
        var skin = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;

        var revertObject = JSON.parse(JSON.stringify(object));
        var newObject = JSON.parse(JSON.stringify(object));

        if (skin) {
            newObject.settings = (0, _deepmerge2.default)(object.settings, skin.settings);
            newObject.standard = (0, _deepmerge2.default)(object.standard, skin.standardSettings);
        }

        return {
            settingsActive: true,
            temporarilyRemoveSettingsPanel: false,
            editSettings: newObject,
            revertSettings: revertObject,
            settingsOrStandard: which,
            parentRow: parentRow,
            parentColumn: parentColumn,
            deviceLock: object.deviceLock != undefined ? object.deviceLock : true
        };
    },

    switchActiveSettings: function switchActiveSettings(state, which) {
        return _extends({}, state, { settingsOrStandard: which, temporarilyRemoveSettingsPanel: true });
    },

    _recursiveGet: function _recursiveGet(tree, objectID) {
        if (tree.id == objectID) {
            return tree;
        }

        if (tree.items != undefined && tree.items != false) {
            var _iteratorNormalCompletion = true;
            var _didIteratorError = false;
            var _iteratorError = undefined;

            try {
                for (var _iterator = tree.items[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                    var each = _step.value;

                    var found = WorkspaceStateFunctions._recursiveGet(each, objectID);
                    if (found) return found;
                }
            } catch (err) {
                _didIteratorError = true;
                _iteratorError = err;
            } finally {
                try {
                    if (!_iteratorNormalCompletion && _iterator.return) {
                        _iterator.return();
                    }
                } finally {
                    if (_didIteratorError) {
                        throw _iteratorError;
                    }
                }
            }
        }

        return false;
    },

    switchActiveObject: function switchActiveObject(state, settings, which) {
        var previousRevertSettings = [];

        //For switching the object to another within the same row
        // Specifically, this was created for containers in the side by side
        if (typeof settings == 'string') {
            settings = WorkspaceStateFunctions._recursiveGet(state.editSettings, settings);

            if (!settings) {
                settings = WorkspaceStateFunctions._recursiveGet(state.parentColumn, settings);
            }
            if (!settings) {
                settings = WorkspaceStateFunctions._recursiveGet(state.parentRow, settings);
            }
            if (!settings) {
                return state;
            }
        }

        if (state.previousRevertSettings != undefined && state.previousRevertSettings.length) {
            previousRevertSettings = JSON.parse(JSON.stringify(state.previousRevertSettings));
        }
        previousRevertSettings.push({
            editSettings: JSON.parse(JSON.stringify(state.editSettings)),
            revertSettings: JSON.parse(JSON.stringify(state.revertSettings))
        });
        var revertSettings = JSON.parse(JSON.stringify(settings));
        return _extends({}, state, {
            settingsActive: true,
            temporarilyRemoveSettingsPanel: true,
            editSettings: settings,
            revertSettings: revertSettings,
            previousRevertSettings: previousRevertSettings,
            settingsOrStandard: which,
            deviceLock: settings.deviceLock != undefined ? settings.deviceLock : true
        });
    },

    maybeSwitchActiveObjectGroup: function maybeSwitchActiveObjectGroup(state, _ref) {
        var actionType = _ref.actionType,
            settings = _ref.settings,
            which = _ref.which,
            parentColumn = _ref.parentColumn,
            parentRow = _ref.parentRow;

        switch (actionType) {
            case 'maybe':
                return _extends({}, state, {
                    maybeSwitchActiveObjectGroup: true,
                    maybeSwitchActiveObjectGroupSettings: settings,
                    maybeSwitchActiveObjectGroupWhich: which,
                    maybeSwitchActiveObjectGroupColumn: parentColumn,
                    maybeSwitchActiveObjectGroupRow: parentRow
                });
                break;
            case 'save':
            case 'revert':
                var editSettings = JSON.parse(JSON.stringify(state.maybeSwitchActiveObjectGroupSettings));
                var revertSettings = JSON.parse(JSON.stringify(state.maybeSwitchActiveObjectGroupSettings));
                var newParentColumn = JSON.parse(JSON.stringify(state.maybeSwitchActiveObjectGroupColumn));
                var newParentRow = JSON.parse(JSON.stringify(state.maybeSwitchActiveObjectGroupRow));
                var newWhich = state.maybeSwitchActiveObjectGroupWhich;

                return _extends({}, state, {
                    maybeSwitchActiveObjectGroup: false,
                    temporarilyRemoveSettingsPanel: true,
                    maybeSwitchActiveObjectGroupSettings: false,
                    maybeSwitchActiveObjectGroupWhich: false,
                    maybeSwitchActiveObjectGroupColumn: false,
                    maybeSwitchActiveObjectGroupRow: false,
                    editSettings: editSettings,
                    revertSettings: revertSettings,
                    settingsOrStandard: newWhich,
                    parentRow: newParentRow,
                    parentColumn: newParentColumn,
                    deviceLock: editSettings.deviceLock != undefined ? editSettings.deviceLock : true
                });
                break;
            case 'cancel':
                return _extends({}, state, {
                    maybeSwitchActiveObjectGroup: false,
                    maybeSwitchActiveObjectGroupSettings: false,
                    maybeSwitchActiveObjectGroupWhich: false,
                    maybeSwitchActiveObjectGroupColumn: false,
                    maybeSwitchActiveObjectGroupRow: false
                });
        }
    },

    addBackSettingsPanel: function addBackSettingsPanel(state) {
        return _extends({}, state, { temporarilyRemoveSettingsPanel: false });
    },

    makeSettingsInactive: function makeSettingsInactive() {
        jQuery('body').removeClass('ocb-device-laptop').removeClass('ocb-device-tablet').removeClass('ocb-device-phone');

        //Resets the laptop device hack from app.js
        var iframe = document.getElementById('ocb-workspace-iframe');
        jQuery(iframe).css('min-width', '');
        jQuery(iframe).contents().find('html').css('max-width', '');

        return { settingsActive: false, editSettings: null, revertSettings: null, settingsOrStandard: null, parentRow: null, parentColumn: null };
    },

    saveSettings: function saveSettings(state, object, closeSettingsPanel) {
        if (closeSettingsPanel) {
            return WorkspaceStateFunctions.makeSettingsInactive();
        } else {
            return state;
        }
    },

    /**
     * NOT CURRENTLY BEING USED
     * @param state
     * @returns {*|{settingsActive, editSettings, revertSettings, settingsOrStandard}}
     */
    revertSettings: function revertSettings(state) {
        _tree_reducer_functions2.default.doAction(state, 'UPDATE_OBJECT_STANDARD', { object: state.editSettings, update: state.revertSettings['standard'] });
        _tree_reducer_functions2.default.doAction(state, 'UPDATE_OBJECT_SETTINGS', { object: state.editSettings, update: state.revertSettings['settings'] });

        return WorkspaceStateFunctions.makeSettingsInactive();
    },

    updateObject: function updateObject(state, device, property, update) {
        var deviceShared = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;


        var newState = Object.assign({}, state.editSettings[state.settingsOrStandard]);
        if (newState[device] == undefined) {
            newState[device] = {};
        }

        newState[device][property] = update;
        if (state.settingsOrStandard == 'standard') {
            _tree_reducer_functions2.default.doAction(state, 'UPDATE_OBJECT_STANDARD', { object: state.editSettings, update: newState });
        } else if (state.settingsOrStandard == 'settings') {
            _tree_reducer_functions2.default.doAction(state, 'UPDATE_OBJECT_SETTINGS', { object: state.editSettings, update: newState });
        }
    },

    /**
     * Makes sure that the iframe width is wide enough to trigger the laptop media queries, but keeps the workspace the right width
     *
     * @param device
     */
    /*laptopViewHack: (device) => {
        let iframe = document.getElementById('ocb-workspace-iframe');
        console.log('laptopViewHack', device);
        if( device == 'laptop' ){
            let iframeWidth = window.innerWidth
                || document.documentElement.clientWidth
                || document.body.clientWidth;
            iframeWidth = iframeWidth * 0.75;
            console.log('laptopViewHack', iframeWidth);
            jQuery(iframe).css('min-width', '1200px');
            jQuery(iframe).find('html').css('max-width', `${iframeWidth}px`)
        } else if( device != false ){
            jQuery(iframe).find('html').css('max-width', '');
            jQuery(iframe).css('min-width', '');
        }
    },*/

    updateObjectProperty: function updateObjectProperty(state, object, update) {
        var device = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;


        if (update.deviceLock != undefined && update.deviceLock === false && device) {
            jQuery('body').removeClass('ocb-device-laptop').removeClass('ocb-device-tablet').removeClass('ocb-device-phone').addClass('ocb-device-' + device);
        } else if (update.deviceLock === true) {
            jQuery('body').removeClass('ocb-device-laptop').removeClass('ocb-device-tablet').removeClass('ocb-device-phone');
        }

        _tree_reducer_functions2.default.doAction(state, 'UPDATE_OBJECT_PROPERTY', { object: object, update: update });
    },

    updateObjectStandard: function updateObjectStandard(state, theUpdate) {
        return (0, _immutabilityHelper2.default)(state, {
            editSettings: {
                standard: {
                    $set: theUpdate
                }
            }
        });
    },

    updateObjectStandardProp: function updateObjectStandardProp(state, device, prop, theUpdate) {
        console.log('updateObjectStandardProp', device, prop, theUpdate);
        return (0, _immutabilityHelper2.default)(state, {
            editSettings: {
                standard: _defineProperty({}, device, _defineProperty({}, prop, {
                    $set: theUpdate
                }))
            }
        });
    },

    updateObjectSettings: function updateObjectSettings(state, theUpdate) {
        return (0, _immutabilityHelper2.default)(state, {
            editSettings: {
                settings: {
                    $set: theUpdate
                }
            }
        });
    },

    updateObjectSettingsProp: function updateObjectSettingsProp(state, device, prop, theUpdate) {
        return (0, _immutabilityHelper2.default)(state, {
            editSettings: {
                settings: _defineProperty({}, device, _defineProperty({}, prop, {
                    $set: theUpdate
                }))
            }
        });
    },

    updateObjectSite: function updateObjectSite(state, theUpdate) {
        return (0, _immutabilityHelper2.default)(state, {
            editSettings: {
                site: {
                    $set: theUpdate
                }
            }
        });
    },

    updateWorkspaceProp: function updateWorkspaceProp(state, property, theUpdate) {
        return (0, _immutabilityHelper2.default)(state, _defineProperty({}, property, {
            $set: theUpdate
        }));
    },

    doAction: function doAction(state, action) {
        switch (action.type) {
            case 'APP_UPDATE_WORKSPACE_PROP':
                return WorkspaceStateFunctions.updateWorkspaceProp(state, action.property, action.update);
                break;

            case 'APP_MAKE_SETTINGS_ACTIVE':
                return WorkspaceStateFunctions.makeSettingsActive(state, action.settings, action.which, action.parentRow, action.parentColumn, action.skin);
                break;

            case 'APP_SWITCH_ACTIVE_SETTINGS':
                return WorkspaceStateFunctions.switchActiveSettings(state, action.which);
                break;

            case 'APP_SWITCH_ACTIVE_OBJECT':
                return WorkspaceStateFunctions.switchActiveObject(state, action.settings, action.which);
                break;

            case 'APP_ADD_BACK_SETTINGS_PANEL':
                return WorkspaceStateFunctions.addBackSettingsPanel(state);
                break;

            case 'APP_MAKE_SETTINGS_INACTIVE':
                return WorkspaceStateFunctions.makeSettingsInactive();
                break;

            case 'APP_SAVE_SETTINGS':
                return WorkspaceStateFunctions.saveSettings(state, action.object, action.closeSettingsPanel);
                break;

            case 'APP_REVERT_SETTINGS':
                return WorkspaceStateFunctions.revertSettings(state);
                break;

            case 'APP_UPDATE_OBJECT':
                WorkspaceStateFunctions.updateObject(state, action.device, action.property, action.update, action.deviceShared);
                break;

            case 'APP_UPDATE_OBJECT_STANDARD':
                return WorkspaceStateFunctions.updateObjectStandard(state, action.update);
                break;

            case 'APP_UPDATE_OBJECT_STANDARD_PROP':
                return WorkspaceStateFunctions.updateObjectStandardProp(state, action.device, action.prop, action.update);
                break;

            case 'APP_UPDATE_OBJECT_SETTINGS':
                return WorkspaceStateFunctions.updateObjectSettings(state, action.update);
                break;

            case 'APP_UPDATE_OBJECT_SETTINGS_PROP':
                return WorkspaceStateFunctions.updateObjectSettingsProp(state, action.device, action.prop, action.update);
                break;

            case 'APP_UPDATE_OBJECT_SITE':
                return WorkspaceStateFunctions.updateObjectSite(state, action.update);
                break;

            case 'APP_UPDATE_OBJECT_PROPERTY':
                WorkspaceStateFunctions.updateObjectProperty(state, action.object, action.update, action.device);
                break;

            case 'APP_MAYBE_SWITCH_ACTIVE_OBJECT_GROUP':
                return WorkspaceStateFunctions.maybeSwitchActiveObjectGroup(state, action);
                break;

            case 'APP_REFRESH_FIELDS':
                return _extends({}, state, { unique: (Date.now().toString(36) + Math.random().toString(36).substr(2, 9)).toLowerCase() });
                break;
        }

        return state;
    }
};

exports.default = WorkspaceStateFunctions;

/***/ }),

/***/ 903:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _default_inline_edit_state = __webpack_require__(907);

var _default_inline_edit_state2 = _interopRequireDefault(_default_inline_edit_state);

var _inline_edit_state_functions = __webpack_require__(898);

var _inline_edit_state_functions2 = _interopRequireDefault(_inline_edit_state_functions);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var inlineEditState = function inlineEditState(state, action) {
    //First we load the default state
    if (state == undefined) return _default_inline_edit_state2.default;

    state = _inline_edit_state_functions2.default.doAction(state, action);

    return state;
};

exports.default = inlineEditState;

/***/ }),

/***/ 904:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _default_menu_state = __webpack_require__(908);

var _default_menu_state2 = _interopRequireDefault(_default_menu_state);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var menuState = function menuState(state, action) {
    //First we load the default state
    if (state == undefined) return _default_menu_state2.default;

    switch (action.type) {
        case 'MENU_OPEN':
            return _extends({}, state, { open: true, topSelected: action.topSelected, subSelected: action.subSelected });
        case 'MENU_CLOSE':
            return _extends({}, state, { open: false, topSelected: false, subSelected: false });
    }

    return state;
};

exports.default = menuState;

/***/ }),

/***/ 905:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _default_move_state = __webpack_require__(909);

var _default_move_state2 = _interopRequireDefault(_default_move_state);

var _move_state_functions = __webpack_require__(899);

var _move_state_functions2 = _interopRequireDefault(_move_state_functions);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var moveState = function moveState(state, action) {
    //First we load the default state
    if (state == undefined) return _default_move_state2.default;

    state = _move_state_functions2.default.doAction(state, action);

    return state;
};

exports.default = moveState;

/***/ }),

/***/ 906:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
var DefaultAppState = {
    overlay: null
};

exports.default = DefaultAppState;

/***/ }),

/***/ 907:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
var DefaultMoveState = {
    inlineEditing: false,
    editor: null, //tinyMCE
    inlineEditingObject: null
};

exports.default = DefaultMoveState;

/***/ }),

/***/ 908:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
var DefaultMenuState = {
    open: false,
    topSelected: false,
    subSelected: false
};

exports.default = DefaultMenuState;

/***/ }),

/***/ 909:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
var DefaultMoveState = {
    moving: false,
    moduleMove: null,
    columnMoveFrom: null,
    rowMoveFrom: null,
    objectMoveTo: null,
    newObjectToValue: null,
    newObjectToValue2: null,
    columnMoveTo: null,
    rowMoveTo: null,
    moveToDirection: null
};

exports.default = DefaultMoveState;

/***/ }),

/***/ 910:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
var DefaultSkinState = {};

exports.default = DefaultSkinState;

/***/ }),

/***/ 911:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
var DefaultWorkspaceState = {
    settingsActive: false,
    settingsOrStandard: null,
    revertSettings: null,
    editSettings: null,
    deviceLock: true,
    maybeSwitchActiveObjectGroup: false,
    maybeSwitchActiveObjectGroupSettings: false,
    maybeSwitchActiveObjectGroupWhich: false,
    maybeSwitchActiveObjectGroupColumn: false,
    maybeSwitchActiveObjectGroupRow: false,
    editingSkin: false,
    unique: ''
};

exports.default = DefaultWorkspaceState;

/***/ }),

/***/ 912:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var reduxGateways = function reduxGateways(state, action) {
    if (state == undefined) {
        state = {};
    }

    if (action.type == 'REDUX_GATEWAY_UPDATE') {

        return _extends({}, state, _defineProperty({}, action.gatewayName, _extends({}, [action.gatewayName], _defineProperty({}, action.gatewayId, {
            gatewayShow: action.gatewayShow,
            gateway: action.gateway
        }))));
    }

    return state;
};

exports.default = reduxGateways;

/***/ }),

/***/ 913:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _default_site_settings = __webpack_require__(355);

var _default_site_settings2 = _interopRequireDefault(_default_site_settings);

var _settings_reducer_functions = __webpack_require__(900);

var _settings_reducer_functions2 = _interopRequireDefault(_settings_reducer_functions);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var siteState = function siteState(state, action) {
    //First we load the default state
    if (state == undefined) {
        state = (0, _default_site_settings2.default)().default;
        state.defaultUsed = true;
    }

    //Simply overwrites the state with the state in undoRedo history
    if (action.type == 'UNDO_REDO_UNDO' || action.type == 'UNDO_REDO_REDO') {
        if (action.object != undefined && action.object.type == 'Site Settings') {
            return JSON.parse(JSON.stringify(action.theState));
        }
    }

    state = _settings_reducer_functions2.default.doAction(state, action);

    return state;
};

exports.default = siteState;

/***/ }),

/***/ 914:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _default_skin_state = __webpack_require__(910);

var _default_skin_state2 = _interopRequireDefault(_default_skin_state);

var _skin_state_functions = __webpack_require__(901);

var _skin_state_functions2 = _interopRequireDefault(_skin_state_functions);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var skinState = function skinState(state, action) {
    if (state == undefined) state = _default_skin_state2.default;

    if (state == undefined) {
        state = {};
    }

    state = _skin_state_functions2.default.doAction(state, action);

    return state;
};

exports.default = skinState;

/***/ }),

/***/ 915:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _tree_reducer_functions = __webpack_require__(28);

var _tree_reducer_functions2 = _interopRequireDefault(_tree_reducer_functions);

var _default_tree_content = __webpack_require__(83);

var _default_tree_content2 = _interopRequireDefault(_default_tree_content);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var templateGlobals = function templateGlobals(state, action) {
    if (state == undefined) state = {};

    switch (action.type) {
        case 'UPDATE_TEMPLATE_GLOBALS':
            return _extends({}, state, _defineProperty({}, action.id, action.update));
            break;
        case 'SAVE_TEMPLATE_GLOBAL_REVERT':
            return _extends({}, state, { currentRevert: action.update });
            break;
    }

    return state;
};

exports.default = templateGlobals;

/***/ }),

/***/ 916:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _tree_reducer_functions = __webpack_require__(28);

var _tree_reducer_functions2 = _interopRequireDefault(_tree_reducer_functions);

var _undo_redo_state_functions = __webpack_require__(382);

var _undo_redo_state_functions2 = _interopRequireDefault(_undo_redo_state_functions);

var _default_tree_content = __webpack_require__(83);

var _default_tree_content2 = _interopRequireDefault(_default_tree_content);

var _immutabilityHelper = __webpack_require__(41);

var _immutabilityHelper2 = _interopRequireDefault(_immutabilityHelper);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

var treeContent = function treeContent(state, action) {
    //First we load the default state
    if (state == undefined) {
        state = _default_tree_content2.default;
        state.defaultUsed = true;
    }

    if (action.type == 'RESET_TREE') {
        state = _default_tree_content2.default;
        state.defaultUsed = false;
        return state;
    }

    //We trigger the retrieval of the actual content from the API the tree.js component's constructor
    //which fires an action that is handled here with the new state from the meta value
    if (action.type == 'UPDATE_TREE_STATE_FROM_API') {
        if (action.area != 'treeContent') return state;

        if (action.newState == 1) {
            action.newState = _default_tree_content2.default;
        }

        return _extends({}, state, {
            items: [].concat(_toConsumableArray(action.newState.items)),
            defaultUsed: false,
            lastUpdated: action.newState.lastUpdated,
            lastUpdateType: action.type,
            lastUpdateObject: null
        });
    }

    //Make sure that this state doesn't have lastUpdateType and lastUpdateObject set after the state has been added to undoRedo
    if (action.type == 'UNDO_REDO_ADD') {
        state = (0, _immutabilityHelper2.default)(state, { lastUpdateType: { $set: '' } });
        state = (0, _immutabilityHelper2.default)(state, { lastUpdateObject: { $set: undefined } });
    }

    //Simply overwrites the state with the state in undoRedo history
    if (action.type == 'UNDO_REDO_UNDO' || action.type == 'UNDO_REDO_REDO') {
        if (action.object == undefined || action.object.type != 'Site Settings') {
            return JSON.parse(JSON.stringify(action.theState));
        }
    }

    //Some other actions that aren't used by this reducer are nevertheless used to add states to undoRedo
    if (action.type == 'APP_SAVE_SETTINGS' || action.type == 'OBJECT_UPDATED') {
        if (action.object != undefined && action.object.type == 'Site Settings') {
            state = (0, _immutabilityHelper2.default)(state, { lastUpdateType: { $set: 'SITE_SETTINGS_UPDATED' } });
            state = (0, _immutabilityHelper2.default)(state, { lastUpdateObject: { $set: action.object } });
        } else if (action.object != undefined) {
            state = (0, _immutabilityHelper2.default)(state, { lastUpdateType: { $set: 'OBJECT_UPDATED' } });
            state = (0, _immutabilityHelper2.default)(state, { lastUpdateObject: { $set: action.object } });
        }

        //We can return here because this reducer doesn't act on APP_SAVE_SETTINGS and we don't want to get to the bottom
        // and have the lastUpdateType overwritten
        return state;
    }

    //When we're editing a tree, this checks to make sure we're operating on the right tree
    if (!_tree_reducer_functions2.default.isThisTheRightTree(state, action)) return state;

    //Set the ID of the object in question to the templateUnique ID temporarily so that we're acting on the right instance of this global template
    //Record the original ID so that it can be reverted after the TreeReducer operation
    var originalObjectId = action.object.id;
    var originalObjectToId = false;
    var gettingAdded = action.object.gettingAdded;

    if ((action.type == 'DELETE_OBJECT' || action.type == 'MOVE_OBJECT' || action.type == 'DUPLICATE_OBJECT' || action.useTemplateId) && (action.object != undefined && action.object.templateUnique != undefined && action.object.templateUnique || action.objectTo != undefined && action.objectTo.templateUnique != undefined && action.objectTo.templateUnique)) {
        //Update the template in the tree with the templateUnique ID
        if (action.object.templateUnique != undefined && action.object.templateUnique) {
            state = _tree_reducer_functions2.default.doAction(state, 'APPLY_TEMPLATE_UNIQUE', { object: action.object });

            //State is updated, but also update the action.object to use the templateUnique ID
            action.object.id = action.object.templateUnique;
        }

        if (action.objectTo != undefined && action.objectTo.templateUnique != undefined && action.objectTo.templateUnique) {
            originalObjectToId = action.objectTo.id;
            state = _tree_reducer_functions2.default.doAction(state, 'APPLY_TEMPLATE_UNIQUE', { object: action.objectTo });

            //Update the action.objectTo to use the templateUnique ID
            action.objectTo.id = action.objectTo.templateUnique;
        }
    }

    //And finally, this operates on the tree
    state = _tree_reducer_functions2.default.doAction(state, action.type, action);

    //Revert the ID of the template global back to the original ID if necessary
    if ((action.type == 'DELETE_OBJECT' || action.type == 'MOVE_OBJECT' || action.type == 'DUPLICATE_OBJECT' || action.useTemplateId) && (action.object != undefined && action.object.templateUnique != undefined && action.object.templateUnique || action.objectTo != undefined && action.objectTo.templateUnique != undefined && action.objectTo.templateUnique)) {
        //Update the template in the tree with the templateUnique ID
        if (action.object.templateUnique != undefined && action.object.templateUnique) {
            state = _tree_reducer_functions2.default.doAction(state, 'UPDATE_OBJECT_PROPERTY', { object: action.object, update: { id: originalObjectId } });
        }

        if (action.objectTo != undefined && action.objectTo.templateUnique != undefined && action.objectTo.templateUnique) {
            state = _tree_reducer_functions2.default.doAction(state, 'UPDATE_OBJECT_PROPERTY', { object: action.objectTo, update: { id: originalObjectToId } });
        }
    }

    //we also load the default state if we've deleted all of the modules from an area
    if (state == false || state.items == undefined || state.items.length == 0) {
        state = _default_tree_content2.default;
        state.defaultUsed = false;
    }

    //if( action.type != 'UNDO_REDO_ADD' ){
    state.lastUpdateType = gettingAdded && action.type == 'MOVE_OBJECT' ? 'ADD_OBJECT' : action.type;
    state.lastUpdateObject = action.object;
    //} else {
    //    state.lastUpdateType = '';
    //    state.lastUpdateObject = undefined;
    //}

    //If we're saving a global as regular content (and breaking its "global-ness") we want to add it to the undoRedo state
    if (action.extra != undefined && action.extra.updateUndo) {
        state = (0, _immutabilityHelper2.default)(state, { lastUpdateType: { $set: action.extra.updateUndo } });
        state = (0, _immutabilityHelper2.default)(state, { lastUpdateObject: { $set: action.object } });
    }

    return state;
};

exports.default = treeContent;

/***/ }),

/***/ 917:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _tree_reducer_functions = __webpack_require__(28);

var _tree_reducer_functions2 = _interopRequireDefault(_tree_reducer_functions);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var DefaultTreeHeader = {
    type: 'tree',
    id: _tree_reducer_functions2.default.generateId('tree'),
    lastUpdated: new Date(),
    items: [{
        type: 'row',
        id: _tree_reducer_functions2.default.generateId('row'),
        standard: {
            linked: {}
        },
        settings: {},
        items: [{
            type: 'column',
            id: _tree_reducer_functions2.default.generateId('col'),
            width: '100',
            standard: {
                linked: {}
            },
            items: [{
                type: 'module',
                id: _tree_reducer_functions2.default.generateId('mod'),
                moduleType: 'text',
                standard: {
                    linked: {}
                },
                settings: {
                    linked: {
                        text: {
                            text: '<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vestibulum bibendum quis est ut facilisis. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vestibulum bibendum quis est ut facilisis.</p>'
                        }
                    }
                }
            }]
        }]
    }]
};

exports.default = DefaultTreeHeader;

/***/ }),

/***/ 918:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _tree_reducer_functions = __webpack_require__(28);

var _tree_reducer_functions2 = _interopRequireDefault(_tree_reducer_functions);

var _default_tree_header = __webpack_require__(917);

var _default_tree_header2 = _interopRequireDefault(_default_tree_header);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var treeHeader = function treeHeader(state, action) {
    if (state == undefined) state = _default_tree_header2.default;

    /*if( action != undefined ){
        if( action.object != undefined && action.object != false && ( action.object.gettingAdded == undefined || action.object.gettingAdded == false ) ){
            if( ! TreeReducerFunctions.isThisTheRightTree(state, action.object) ) {
                return state;
            }
        } else if ( action.objectTo != undefined && action.objectTo != false ){
            if( ! TreeReducerFunctions.isThisTheRightTree(state, action.objectTo) ) {
                return state;
            }
        }
    }*/

    if (!_tree_reducer_functions2.default.isThisTheRightTree(state, action)) return state;

    state = _tree_reducer_functions2.default.doAction(state, action.type, action);
    if (state == false || state.items == undefined || state.items.length == 0) state = _default_tree_header2.default;

    return state;
};

exports.default = treeHeader;

/***/ }),

/***/ 919:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _undo_redo_state_functions = __webpack_require__(382);

var _undo_redo_state_functions2 = _interopRequireDefault(_undo_redo_state_functions);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var undoRedoState = function undoRedoState(state, action) {
    if (state == undefined) state = {
        currentIndex: 0,
        states: []
    };

    state = _undo_redo_state_functions2.default.doAction(state, action);

    return state;
}; //import DefaultWorkspaceState from './other_default/default_workspace_state';
exports.default = undoRedoState;

/***/ }),

/***/ 920:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _default_workspace_state = __webpack_require__(911);

var _default_workspace_state2 = _interopRequireDefault(_default_workspace_state);

var _tree_reducer_functions = __webpack_require__(28);

var _tree_reducer_functions2 = _interopRequireDefault(_tree_reducer_functions);

var _workspace_state_functions = __webpack_require__(902);

var _workspace_state_functions2 = _interopRequireDefault(_workspace_state_functions);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var workspaceState = function workspaceState(state, action) {
    if (state == undefined) state = _default_workspace_state2.default;

    state = _workspace_state_functions2.default.doAction(state, action);

    return state;
};

exports.default = workspaceState;

/***/ })

},[1864]);